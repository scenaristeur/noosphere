{"version":3,"file":"js/graph.c0a9b466.js","mappings":"8JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,IAAI,QAAQC,MAAM,CAAC,GAAK,QAAQ,MAAQ,UAAU,CAACL,EAAIM,GAAG,sBAAsBJ,EAAG,MAAM,CAACF,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAIQ,OAAO,KAAKN,EAAG,MAAMF,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAIS,SAAS,KAAKP,EAAG,SAClQ,EACGQ,EAAkB,GCWtB,GACAC,KAAAA,YACAC,UACA,iBAAAC,WAAAA,KAAAA,MAAAA,OAEA,EACAC,QAAAA,CACAC,SACA,uBACA,oCACA,gCACA,sBAAAC,MAAAA,EAAAC,MAAAA,IACAC,QAAAA,IAAAA,KAAAA,MAAAA,YACA,CACA,EACAC,cAEA,6CACAD,QAAAA,IAAAA,SAAAA,EAAAA,GAEAE,EAAAA,GAAAA,EAAAA,SACAA,EAAAA,MAAAA,OACA,6CACAC,IAAAA,EAAAA,KAAAA,MAAAA,KAAAA,GAAAA,OAAAA,OAAAA,KAAAA,MAAAA,GAAAA,GACAH,QAAAA,IAAAA,KAAAA,OAEA,0CACAI,EAAAA,GAAAA,EACAA,EAAAA,KAAAA,EACA,6CACAC,IAAAA,EAAAA,KAAAA,MAAAA,KAAAA,GAAAA,OAAAA,OAAAA,KAAAA,MAAAA,GAAAA,GACAL,QAAAA,IAAAA,KAAAA,OACA,OAAAM,OAAAA,EAAAA,GAAAC,OAAAA,EAAAA,IACA,gBACAC,EAAAA,MAAAA,UACAA,EAAAA,MAAAA,UACAA,EAAAA,MAAAA,OAGAA,EAAAA,MAAAA,MAGA,CAKA,CACA,GAEAC,MAAAA,CACAX,QACA,aACA,EACAC,QACA,aACA,EACAW,QACA,aACA,EACApB,QACA,kBAEA,EACAqB,kBACAX,QAAAA,IAAAA,KAAAA,iBACA,mBACA,mBACA,GAEAY,SAAAA,CACAd,QACA,sCACA,EACAC,QACA,sCACA,EACAW,QACA,sCACA,EACApB,MAAAA,CACAuB,OAAAA,EACAC,MACA,mCACA,GAEAH,kBACA,6CACA,EACApB,UACA,qCACA,ICxGyP,I,UCQrPwB,GAAY,OACd,EACAlC,EACAW,GACA,EACA,KACA,WACA,MAIF,EAAeuB,EAAiB,O","sources":["webpack://noosphere/./src/views/GraphView.vue","webpack://noosphere/src/views/GraphView.vue","webpack://noosphere/./src/views/GraphView.vue?2e07","webpack://noosphere/./src/views/GraphView.vue?bd9c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{ref:\"graph\",attrs:{\"id\":\"graph\",\"width\":\"100px\"}},[_vm._v(\"Loading graph...\")]),_c('div',[_vm._v(\" \"+_vm._s(_vm.users)+\" \"),_c('hr'),_vm._v(\" \"+_vm._s(_vm.uploads)+\" \"),_c('hr')])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div id=\"graph\" width=\"100px\" ref=\"graph\">Loading graph...</div>\n    <div>\n      {{users}}\n      <hr>\n      {{uploads}}\n      <hr>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GraphView',\n  mounted(){\n    this.$graphInit({domElement: this.$refs.graph})\n    // this.users = this.$store.state.core.users\n  },\n  methods:{\n    update(){\n      if (this.graph != undefined){\n        let nodes = this.nodes.map(a => {return {...a}})\n        let links = this.links.map(a => {return {...a}})\n        this.graph.graphData({nodes: nodes, links: links})\n        console.log(this.graph.graphData())\n      }\n    },\n    updateUsers(){\n    //  this.links = []\n      for (const [clientID, user] of Object.entries(this.users)) {\n        console.log('[user]',clientID,user);\n        // user\n        user.id = user.clientID\n        user.group = \"user\"\n        var indexU = this.nodes.findIndex(x => x.id==user.id);\n        indexU === -1 ? this.nodes.push(user) : Object.assign(this.nodes[indexU], user)\n        console.log(this.nodes)\n        // rooms\n        for (const [id, room] of Object.entries(user.rooms)) {\n          room.id = id\n          room.name = id\n          var indexR = this.nodes.findIndex(x => x.id==room.id);\n          indexR === -1 ? this.nodes.push(room) : Object.assign(this.nodes[indexR], room)\n          console.log(this.nodes)\n          let link = {source: user.id, target: room.id}\n          if (room.id == user.roomId){\n            link.group = \"current\"\n            link.label = \"current\"\n            link.color = \"red\"\n            //  Object.assign(this.nodes[user.roomId], {color: 'red', group: 'occuped'})\n          }else{\n            link.label = \"room\"\n          }\n        //  this.links.push(link)\n        }\n\n\n\n\n      }\n    }\n  },\n  watch:{\n    nodes(){\n      this.update()\n    },\n    links(){\n      this.update()\n    },\n    graph(){\n      this.update()\n    },\n    users(){\n      this.updateUsers()\n\n    },\n    usersUpdateDate(){\n      console.log(this.usersUpdateDate)\n      this.updateUsers()\n      this.$forceUpdate()\n    }\n  },\n  computed: {\n    nodes() {\n      return this.$store.state.network.nodes\n    },\n    links() {\n      return this.$store.state.network.links\n    },\n    graph() {\n      return this.$store.state.network.graph\n    },\n    users: {\n      cache: false,\n      get() {\n        return this.$store.state.core.users;\n      },\n    },\n    usersUpdateDate() {\n      return this.$store.state.core.usersUpdateDate\n    },\n    uploads() {\n      return this.$store.state.core.uploads\n    }\n  },\n\n}\n</script>\n\n<style lang=\"css\" scoped>\n.graph-view {\n\n}\n.node-label {\n  font-size: 12px;\n  padding: 1px 4px;\n  border-radius: 4px;\n  background-color: rgba(0,0,0,0.5);\n  user-select: none;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GraphView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GraphView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GraphView.vue?vue&type=template&id=12aca8e4&scoped=true&\"\nimport script from \"./GraphView.vue?vue&type=script&lang=js&\"\nexport * from \"./GraphView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GraphView.vue?vue&type=style&index=0&id=12aca8e4&prod&lang=css&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"12aca8e4\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","attrs","_v","_s","users","uploads","staticRenderFns","name","mounted","domElement","methods","update","nodes","links","console","updateUsers","user","indexU","room","indexR","source","target","link","watch","graph","usersUpdateDate","computed","cache","get","component"],"sourceRoot":""}