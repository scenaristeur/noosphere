"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[786],{1249:function(e,s,t){t.r(s),t.d(s,{default:function(){return d}});var r=function(){var e=this,s=e._self._c;return s("div",[s("div",{ref:"graph",attrs:{id:"graph",width:"100px"}},[e._v("Loading graph...")]),s("div",[e._v(" "+e._s(e.users)+" "),s("hr"),e._v(" "+e._s(e.uploads)+" "),s("hr")])])},o=[],a={name:"GraphView",mounted(){this.$graphInit({domElement:this.$refs.graph})},methods:{update(){if(void 0!=this.graph){let e=this.nodes.map((e=>({...e}))),s=this.links.map((e=>({...e})));this.graph.graphData({nodes:e,links:s}),console.log(this.graph.graphData())}},updateUsers(){for(const[t,r]of Object.entries(this.users)){console.log("[user]",t,r),r.id=r.clientID,r.group="user";var e=this.nodes.findIndex((e=>e.id==r.id));-1===e?this.nodes.push(r):Object.assign(this.nodes[e],r),console.log(this.nodes);for(const[e,t]of Object.entries(r.rooms)){t.id=e,t.name=e;var s=this.nodes.findIndex((e=>e.id==t.id));-1===s?this.nodes.push(t):Object.assign(this.nodes[s],t),console.log(this.nodes);let o={source:r.id,target:t.id};t.id==r.roomId?(o.group="current",o.label="current",o.color="red"):o.label="room"}}}},watch:{nodes(){this.update()},links(){this.update()},graph(){this.update()},users(){this.updateUsers()},usersUpdateDate(){console.log(this.usersUpdateDate),this.updateUsers(),this.$forceUpdate()}},computed:{nodes(){return this.$store.state.network.nodes},links(){return this.$store.state.network.links},graph(){return this.$store.state.network.graph},users:{cache:!1,get(){return this.$store.state.core.users}},usersUpdateDate(){return this.$store.state.core.usersUpdateDate},uploads(){return this.$store.state.core.uploads}}},i=a,n=t(1001),h=(0,n.Z)(i,r,o,!1,null,"12aca8e4",null),d=h.exports}}]);
//# sourceMappingURL=graph.c0a9b466.js.map