{"version":3,"file":"js/editor.3c6c872f.js","mappings":"udAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,WAAW,CAACE,GAAG,CAAC,MAAQJ,EAAIK,UAAU,CAACL,EAAIM,GAAG,aAAaJ,EAAG,WAAW,CAACE,GAAG,CAAC,MAAQJ,EAAIO,aAAa,CAACP,EAAIM,GAAG,eAAeJ,EAAG,UAAU,CAACM,MAAM,CAAC,YAAc,QAAQC,MAAM,CAACC,MAAOV,EAAIW,KAAMC,SAAS,SAAUC,GAAMb,EAAIW,KAAKE,CAAI,EAACC,WAAW,UAAUZ,EAAG,WAAW,CAACE,GAAG,CAAC,MAAQJ,EAAIe,OAAO,CAACf,EAAIM,GAAG,UAAUN,EAAIM,GAAG,YAAYN,EAAIgB,GAAwB,MAArBhB,EAAIiB,eAAyBjB,EAAIiB,cAAcC,QAAQ,KAAKhB,EAAG,MAAM,CAACiB,IAAI,YAAY,EACpf,EACGC,EAAkB,GCDJ,G,gBAAA,KACCC,EAAAA,aAAAA,eACGA,EAAAA,gBAAAA,kBACFA,EAAAA,cAAAA,gBACIA,EAAAA,kBAAAA,oBACKA,EAAAA,uBAAAA,yBACTA,EAAAA,cAAAA,gBACGA,EAAAA,iBAAAA,mBACIA,EAAAA,qBAAAA,uBACCA,EAAAA,sBAAAA,wBACHA,EAAAA,mBAAAA,qBACSA,EAAAA,4BAAAA,8BACTA,EAAAA,mBAAAA,qBACAA,EAAAA,mBAAAA,qBACCA,EAAAA,oBAAAA,sBACAA,EAAAA,oBAAAA,sBAGRA,EAAAA,YAAAA,cAGcA,EAAAA,0BAAAA,4BAGfA,EAAAA,WAAAA,aACGA,EAAAA,cAAAA,gBAGeA,EAAAA,6BAAAA,+BACVA,EAAAA,mBAAAA,qBA7BPA,GAAA,CAAAA,GAAAA,CAAAA,ICGX,MAAMC,UAAsBC,MAE/BC,YAAYC,EAAiBC,GACzBC,MAAMD,GACNzB,KAAK2B,KAAO,gBACZ3B,KAAK4B,KAAOJ,CAChB,ECNJ,MAAMK,EAAmB,CAACT,EAAWI,IAAqC,mBAAVA,EAAuB,aAAeA,EAEhGM,EAAaV,GAAuBW,KAAKC,UAAUZ,EAAGS,GAE/CI,EAAgBb,GACzB,IAAIC,EAAca,EAAUC,aAAc,qCAAqCL,EAAUV,MAEhFgB,EAAmBhB,GAC5B,IAAIC,EAAca,EAAUG,gBAAiB,YAAYjB,6CAEhDkB,EAAiBlB,GAC1B,IAAIC,EAAca,EAAUK,cAAe,UAAUnB,6CAE5CoB,EAAoB,IAC7B,IAAInB,EAAca,EAAUO,kBAAmB,gDAEtCC,EAAyB,IAAItB,KACtC,MAAMI,EAAUJ,EAAKuB,QAAO,CAAClB,EAAKmB,KAC9B,IAAKA,EACM,SAEL,QAAaC,GACXC,MAAMC,QAAQF,GACNA,EAAgBG,KAAKC,GAAMC,EAAUD,KAAIE,KAAK,MAErDN,EAA4CO,OACtCtB,EAAWe,EAA4CO,UAG7DP,EAAuBQ,KACjBvB,EAAWe,EAAuBQ,MAGrCR,EAA6BS,WAElC,SAAG7B,MAAQyB,EAAUN,IAArB,GACR,wDAEH,OAAO,IAAIvB,EAAca,EAAUqB,uBAAwB/B,EAA3D,EAGSgC,EAAgB,IACzB,IAAInC,EAAca,EAAUuB,cAAe,kDAElCC,EAAoBtC,GAC7B,IAAIC,EAAca,EAAUyB,iBAAkB,wCAAwC7B,EAAUV,OAEvFwC,EAAwBxC,GACjC,IAAIC,EAAca,EAAU2B,qBAAsB,4CAA4C/B,EAAUV,OAE/F0C,EAAwB,CAAC1C,EAAuBI,IACzD,IAAIH,EAAca,EAAU6B,sBAAuB,cAAc3C,MAASI,kBAEjEwC,EAAsB5C,GAC/B,IAAIC,EAAca,EAAU+B,mBAAoB,gCAAgCnC,EAAUV,OAEjF8C,EAA8B,IACvC,IAAI7C,EACAa,EAAUiC,4BACV,mJAGKC,EAAqB,IAC9B,IAAI/C,EACAa,EAAUmC,mBACV,8KAIKC,EAAqB,IAC9B,IAAIjD,EACAa,EAAUqC,mBACV,0EAeKC,EAAepD,GACxB,IAAIC,EAAca,EAAUuC,YAAa,qDAAqDrD,gBAErFsD,EAAa,IACtB,IAAIrD,EAAca,EAAUyC,WAAY,uEAE/BC,EAAgB,IACzB,IAAIvD,EAAca,EAAU2C,cAAe,wDAKlCC,EAAqB,IAC9B,IAAIzD,EAAca,EAAU6C,mBAAoB,yD,+UC9F7C,MAAMT,EAAkB,KACrB,YAAoCU,IAanC,OAAEC,SAXuCpC,IACtC,QACe,iBAAVA,EAAqB,IAAIzB,EAAS8D,UAAUC,MAAMjD,GAAMA,EAAEP,OAASkB,IAASzB,EAASgE,IAAIvC,EAAMwC,IAE1G,IAAKhE,EAAS,CACV,MAAMa,EAAwB,iBAAVW,EAAqBA,EAAQA,EAAMyC,UACvD,MAAMC,EAAgBrD,EAC1B,CACO,UAGQsD,SAAAA,EAAZ,ECtBEC,EAAmBrE,GACxB0B,MAAMC,QAAQ3B,GACP,IAAKA,GAEC,iBAANA,EACA,IAAKA,GAETA,ECaEsE,EAAc,CAA+BtE,EAAUK,KAC1D,MAAAoB,EAAK8C,OAAO,WAEZtE,EAAU,CAACa,EAAqBI,EAAamD,EAAarE,MAC5D,IAAIU,EAAQQ,EAEZ,MAAMW,EAAqB,CACvBtB,KAAAA,EACA0D,GAAAA,EACAO,IAAM1C,IACMpB,EAAAA,CAAAA,EAEZsD,IAAK,IAAMtD,EACX+D,OAAS3C,IACLpB,EAAQoB,EAAQpB,EAAhB,GAGE,SAAA8D,IAAI/C,EAAII,GACXA,CADG,EAGd,SAAQqC,UAAY7D,EACpBJ,EAAQgE,GAAKxC,EACbxB,EAAQyE,UAAY,KAChB,MAAMlB,GAAN,EAGGvD,CANP,E,gBCnCG,MAAMmD,EAITjD,YAAYE,EAAsBoB,GAHlCL,EAAAA,KAAAA,OAAAA,GACAA,EAAAA,KAAAA,OAAAA,GAaA,KAASuD,IAAqC1E,GAC1CG,EAAAA,KAAKkB,GAAWuC,SAAS5D,GAQ7B,KAAS+D,IAA4B/D,GAAuBrB,KAAK+F,IAAI1E,GAAO+D,MASnE,KAAAQ,IAAM,CAAsBvE,EAAoBa,IAAalC,KAAK+F,IAAI1E,GAAOuE,IAAI1D,GAcjF,KAAA2D,OAAS,CAAsBxE,EAAoBa,IACxDlC,KAAK+F,IAAI1E,GAAOwE,OAAO3D,GAQ3B,KAAS8D,OAAU3E,GAAiBG,EAAAA,KAAKS,GAAOmD,IAAI/D,GAQpD,KAAS4E,KAAQ5E,GAAiBrB,KAAKgG,OAAO3E,EAAZrB,GAQlC,KAASkG,KAAQ7E,GAAiBrB,KAAKgG,OAAO3E,GAAO6E,OAQ5C,KAAAC,WAAaC,gBACZC,QAAQC,IAAItG,KAAKoF,IAAI/D,GAAO2B,KAAKd,GAAMlC,KAAKiG,KAAK/D,KAAvD,EA5EAU,EAAAA,KAAKF,EAAajB,GAClBmB,EAAAA,KAAKX,EAASY,EAClB,EANAH,EAAAA,IAAAA,QACAT,EAAAA,IAAAA,QCLG,MAAMsE,EAIThF,YAAYE,EAAsBoB,GAHlCL,EAAAA,KAAAA,OAAAA,GACAA,EAAAA,KAAAA,OAAAA,GAcS,KAAAgE,OAAS,CAAInF,EAAea,KAC7Bb,EAAAA,EAAAA,KAAKe,GAAWoD,SAAUtD,GACvBlC,MASF,KAAAyG,OAAUpF,IACTA,EAAAA,EAAAA,KAAKQ,GAAO6E,OACX1G,MASX,KAAS+F,IAAqC1E,GAC1CG,EAAAA,KAAKY,GAAW6C,SAAS5D,GAQ7B,KAAS+D,IAA4B/D,GAAuBrB,KAAK+F,IAAI1E,GAAO+D,MASnE,KAAAQ,IAAM,CAAsBvE,EAAoBa,IAAalC,KAAK+F,IAAI1E,GAAOuE,IAAI1D,GAcjF,KAAA2D,OAAS,CAAsBxE,EAAoBa,IACxDlC,KAAK+F,IAAI1E,GAAOwE,OAAO3D,GAQ3B,KAAS8D,OAAU3E,GAAiBG,EAAAA,KAAKK,GAAOuD,IAAI/D,GAQpD,KAAS4E,KAAQ5E,GAAiBrB,KAAKgG,OAAO3E,EAAZrB,GAQlC,KAASkG,KAAQ7E,GAAiBrB,KAAKgG,OAAO3E,GAAO6E,OAQ5C,KAAAC,WAAaC,gBACZC,QAAQC,IAAItG,KAAKoF,IAAI/D,GAAO2B,KAAKd,GAAMlC,KAAKiG,KAAK/D,KAAvD,EAnGAU,EAAAA,KAAKR,EAAaX,GAClBmB,EAAAA,KAAKf,EAASgB,EAClB,EANAT,EAAAA,IAAAA,QACAP,EAAAA,IAAAA,QCFG,MAAM8E,EAITpF,YAAYE,EAAsBoB,GAHlCL,EAAAA,KAAAA,OAAAA,GACAA,EAAAA,KAAAA,OAAAA,GAcS,KAAAgE,OAAS,CAAInF,EAAea,KAC7Bb,EAAAA,EAAAA,KAAKqC,GAAW8B,SAAUtD,GACvBlC,MASF,KAAAyG,OAAUpF,IACTA,EAAAA,EAAAA,KAAKmC,GAAOkD,OACX1G,MAxBP4C,EAAAA,KAAKc,EAAajC,GAClBmB,EAAAA,KAAKY,EAASX,EAClB,EANAa,EAAAA,IAAAA,QACAF,EAAAA,IAAAA,QCWG,MAAMU,EAAc,KACjB,YAAsBc,IAOrB,OACH0B,MAAAA,EACAtB,IARSvC,IACT,MAAMxB,EAAOD,EAAMgE,IAAIvC,EAAMwC,IAC7B,IAAKhE,EAAY,QAAcwB,EAAMlB,MAC9B,UAGJ,ECjBEyC,EAAc,CAAChD,EAAcK,EAAU,OAC1C,MAAAoB,EAAK8C,OAAO,SAEZtE,EAASa,IACX,IACIJ,EADAQ,EAAgC,KAG9B,QAAOqD,OAAOvE,GAEd8B,EAAiB,IAClBZ,MAAAA,EAAAA,EAAAA,EAAY,IAAI+D,SAAQ,CAACrC,EAAS4C,KAC/B9E,EAAY4C,IACJA,aAAemC,aAGfnC,EAAEoC,OAAOzB,KAAOpC,IAChB8D,oBAAoB3F,EAAMU,GAC1B4C,EAAEsC,2BACMhD,IANR,EASRiD,YAAW,KACPL,EAAO,UAAUxF,cACjB2F,oBAAoB3F,EAAMU,EAD1B,GAEDL,GACHyF,iBAAiB9F,EAAMU,EAdvB,IAgBR,SAAOoE,KAAO,KACJ,QAAQ,IAAIW,YAAYzF,EAAM,CAAE0F,OAAQ,CAAEzB,GAAIpC,KACpDkE,cAAcnD,EAAd,EAGE9B,EAAAA,IAAIW,EAAIK,GAEPA,CAPP,EASJ,OAAA7B,EAAMgE,GAAKxC,EAEJxB,CAFP,EC1CJ,SAAS+F,EAAWC,GAClBrH,KAAKqH,QAAUA,CAChB,CAEDD,EAAWE,UAAY,CACrB/F,YAAa6F,EAEbjC,KAAM,SAASoC,GACb,IAAK,IAAI1E,EAAI,EAAGA,EAAI7C,KAAKqH,QAAQG,OAAQ3E,GAAK,EAC5C,GAAI7C,KAAKqH,QAAQxE,KAAO0E,EAAK,OAAO1E,EACtC,OAAQ,CACT,EAKDuC,IAAK,SAASmC,GACZ,IAAIE,EAAQzH,KAAKmF,KAAKoC,GACtB,OAAiB,GAAVE,OAAcC,EAAY1H,KAAKqH,QAAQI,EAAQ,EACvD,EAMD5B,OAAQ,SAAS0B,EAAK9G,EAAOkH,GAC3B,IAAIC,EAAOD,GAAUA,GAAUJ,EAAMvH,KAAK6H,OAAOF,GAAU3H,KACvDyH,EAAQG,EAAKzC,KAAKoC,GAAMF,EAAUO,EAAKP,QAAQS,QAOnD,OANc,GAAVL,EACFJ,EAAQU,KAAKJ,GAAUJ,EAAK9G,IAE5B4G,EAAQI,EAAQ,GAAKhH,EACjBkH,IAAQN,EAAQI,GAASE,IAExB,IAAIP,EAAWC,EACvB,EAIDQ,OAAQ,SAASN,GACf,IAAIE,EAAQzH,KAAKmF,KAAKoC,GACtB,IAAc,GAAVE,EAAa,OAAOzH,KACxB,IAAIqH,EAAUrH,KAAKqH,QAAQS,QAE3B,OADAT,EAAQW,OAAOP,EAAO,GACf,IAAIL,EAAWC,EACvB,EAIDY,WAAY,SAASV,EAAK9G,GACxB,OAAO,IAAI2G,EAAW,CAACG,EAAK9G,GAAOyH,OAAOlI,KAAK6H,OAAON,GAAKF,SAC5D,EAIDc,SAAU,SAASZ,EAAK9G,GACtB,IAAI4G,EAAUrH,KAAK6H,OAAON,GAAKF,QAAQS,QAEvC,OADAT,EAAQU,KAAKR,EAAK9G,GACX,IAAI2G,EAAWC,EACvB,EAKDe,UAAW,SAASC,EAAOd,EAAK9G,GAC9B,IAAI6H,EAAUtI,KAAK6H,OAAON,GAAMF,EAAUiB,EAAQjB,QAAQS,QACtDL,EAAQa,EAAQnD,KAAKkD,GAEzB,OADAhB,EAAQW,QAAiB,GAAVP,EAAcJ,EAAQG,OAASC,EAAO,EAAGF,EAAK9G,GACtD,IAAI2G,EAAWC,EACvB,EAKDkB,QAAS,SAAS/E,GAChB,IAAK,IAAIX,EAAI,EAAGA,EAAI7C,KAAKqH,QAAQG,OAAQ3E,GAAK,EAC5CW,EAAExD,KAAKqH,QAAQxE,GAAI7C,KAAKqH,QAAQxE,EAAI,GACvC,EAKD2F,QAAS,SAASxF,GAEhB,OADAA,EAAMoE,EAAWqB,KAAKzF,GACjBA,EAAI0F,KACF,IAAItB,EAAWpE,EAAIqE,QAAQa,OAAOlI,KAAK2I,SAAS3F,GAAKqE,UADtCrH,IAEvB,EAKD4I,OAAQ,SAAS5F,GAEf,OADAA,EAAMoE,EAAWqB,KAAKzF,GACjBA,EAAI0F,KACF,IAAItB,EAAWpH,KAAK2I,SAAS3F,GAAKqE,QAAQa,OAAOlF,EAAIqE,UADtCrH,IAEvB,EAKD2I,SAAU,SAAS3F,GACjB,IAAI6F,EAAS7I,KACbgD,EAAMoE,EAAWqB,KAAKzF,GACtB,IAAK,IAAIH,EAAI,EAAGA,EAAIG,EAAIqE,QAAQG,OAAQ3E,GAAK,EAC3CgG,EAASA,EAAOhB,OAAO7E,EAAIqE,QAAQxE,IACrC,OAAOgG,CACR,EAIGH,WACF,OAAO1I,KAAKqH,QAAQG,QAAU,CAC/B,GAOHJ,EAAWqB,KAAO,SAAShI,GACzB,GAAIA,aAAiB2G,EAAY,OAAO3G,EACxC,IAAI4G,EAAU,GACd,GAAI5G,EAAO,IAAK,IAAIqI,KAAQrI,EAAO4G,EAAQU,KAAKe,EAAMrI,EAAMqI,IAC5D,OAAO,IAAI1B,EAAWC,EACvB,EAED,QC9HA,SAAS0B,EAAcnG,EAAGoG,EAAGC,GACzB,IAAK,IAAIpG,EAAI,GAAIA,IAAK,CAClB,GAAIA,GAAKD,EAAEsG,YAAcrG,GAAKmG,EAAEE,WAC5B,OAAOtG,EAAEsG,YAAcF,EAAEE,WAAa,KAAOD,EACjD,IAAIE,EAASvG,EAAEwG,MAAMvG,GAAIwG,EAASL,EAAEI,MAAMvG,GAC1C,GAAIsG,GAAUE,EAAd,CAIA,IAAKF,EAAOG,WAAWD,GACnB,OAAOJ,EACX,GAAIE,EAAOI,QAAUJ,EAAOK,MAAQH,EAAOG,KAAM,CAC7C,IAAK,IAAI9D,EAAI,EAAGyD,EAAOK,KAAK9D,IAAM2D,EAAOG,KAAK9D,GAAIA,IAC9CuD,IACJ,OAAOA,CACV,CACD,GAAIE,EAAO9B,QAAQqB,MAAQW,EAAOhC,QAAQqB,KAAM,CAC5C,IAAIe,EAAQV,EAAcI,EAAO9B,QAASgC,EAAOhC,QAAS4B,EAAM,GAChE,GAAa,MAATQ,EACA,OAAOA,CACd,CACDR,GAAOE,EAAOO,QAbb,MAFGT,GAAOE,EAAOO,QAgBrB,CACJ,CACD,SAASC,EAAY/G,EAAGoG,EAAGY,EAAMC,GAC7B,IAAK,IAAIC,EAAKlH,EAAEsG,WAAYa,EAAKf,EAAEE,aAAc,CAC7C,GAAU,GAANY,GAAiB,GAANC,EACX,OAAOD,GAAMC,EAAK,KAAO,CAAEnH,EAAGgH,EAAMZ,EAAGa,GAC3C,IAAIV,EAASvG,EAAEwG,QAAQU,GAAKT,EAASL,EAAEI,QAAQW,GAAKrB,EAAOS,EAAOO,SAClE,GAAIP,GAAUE,EAAd,CAKA,IAAKF,EAAOG,WAAWD,GACnB,MAAO,CAAEzG,EAAGgH,EAAMZ,EAAGa,GACzB,GAAIV,EAAOI,QAAUJ,EAAOK,MAAQH,EAAOG,KAAM,CAC7C,IAAIQ,EAAO,EAAGC,EAAUC,KAAKC,IAAIhB,EAAOK,KAAKhC,OAAQ6B,EAAOG,KAAKhC,QACjE,MAAOwC,EAAOC,GAAWd,EAAOK,KAAKL,EAAOK,KAAKhC,OAASwC,EAAO,IAAMX,EAAOG,KAAKH,EAAOG,KAAKhC,OAASwC,EAAO,GAC3GA,IACAJ,IACAC,IAEJ,MAAO,CAAEjH,EAAGgH,EAAMZ,EAAGa,EACxB,CACD,GAAIV,EAAO9B,QAAQqB,MAAQW,EAAOhC,QAAQqB,KAAM,CAC5C,IAAIe,EAAQE,EAAYR,EAAO9B,QAASgC,EAAOhC,QAASuC,EAAO,EAAGC,EAAO,GACzE,GAAIJ,EACA,OAAOA,CACd,CACDG,GAAQlB,EACRmB,GAAQnB,CAlBP,MAHGkB,GAAQlB,EACRmB,GAAQnB,CAqBf,CACJ,CASD,MAAM0B,EAIF7I,YAIA8F,EAASqB,GAGL,GAFA1I,KAAKqH,QAAUA,EACfrH,KAAK0I,KAAOA,GAAQ,EACR,MAARA,EACA,IAAK,IAAI7F,EAAI,EAAGA,EAAIwE,EAAQG,OAAQ3E,IAChC7C,KAAK0I,MAAQrB,EAAQxE,GAAG6G,QACnC,CAMDW,aAAa5B,EAAM6B,EAAI9G,EAAG+G,EAAY,EAAGC,GACrC,IAAK,IAAI3H,EAAI,EAAGoG,EAAM,EAAGA,EAAMqB,EAAIzH,IAAK,CACpC,IAAIuG,EAAQpJ,KAAKqH,QAAQxE,GAAI4H,EAAMxB,EAAMG,EAAMM,SAC/C,GAAIe,EAAMhC,IAAyD,IAAjDjF,EAAE4F,EAAOmB,EAAYtB,EAAKuB,GAAU,KAAM3H,IAAgBuG,EAAM/B,QAAQqB,KAAM,CAC5F,IAAIgC,EAAQzB,EAAM,EAClBG,EAAMiB,aAAaH,KAAKS,IAAI,EAAGlC,EAAOiC,GAAQR,KAAKC,IAAIf,EAAM/B,QAAQqB,KAAM4B,EAAKI,GAAQlH,EAAG+G,EAAYG,EAC1G,CACDzB,EAAMwB,CACT,CACJ,CAMDG,YAAYpH,GACRxD,KAAKqK,aAAa,EAAGrK,KAAK0I,KAAMlF,EACnC,CAKDqH,YAAYpC,EAAM6B,EAAIQ,EAAgBC,GAClC,IAAIvB,EAAO,GAAIwB,GAAY,EAoB3B,OAnBAhL,KAAKqK,aAAa5B,EAAM6B,GAAI,CAACW,EAAMhC,KAC3BgC,EAAK1B,QACLC,GAAQyB,EAAKzB,KAAK1B,MAAMoC,KAAKS,IAAIlC,EAAMQ,GAAOA,EAAKqB,EAAKrB,GACxD+B,GAAaF,GAERG,EAAKC,QACNH,EACAvB,GAA4B,oBAAbuB,EAA0BA,EAASE,GAAQF,EAErDE,EAAKE,KAAK9H,KAAK0H,WACpBvB,GAAQyB,EAAKE,KAAK9H,KAAK0H,SAASE,IAEpCD,GAAaF,IAEPE,GAAaC,EAAKG,UACxB5B,GAAQsB,EACRE,GAAY,EACf,GACF,GACIxB,CACV,CAKDZ,OAAOyC,GACH,IAAKA,EAAM3C,KACP,OAAO1I,KACX,IAAKA,KAAK0I,KACN,OAAO2C,EACX,IAAIC,EAAOtL,KAAKuL,UAAWC,EAAQH,EAAMI,WAAYpE,EAAUrH,KAAKqH,QAAQS,QAASjF,EAAI,EAKzF,IAJIyI,EAAK/B,QAAU+B,EAAKhC,WAAWkC,KAC/BnE,EAAQA,EAAQG,OAAS,GAAK8D,EAAKI,SAASJ,EAAK9B,KAAOgC,EAAMhC,MAC9D3G,EAAI,GAEDA,EAAIwI,EAAMhE,QAAQG,OAAQ3E,IAC7BwE,EAAQU,KAAKsD,EAAMhE,QAAQxE,IAC/B,OAAO,IAAIuH,EAAS/C,EAASrH,KAAK0I,KAAO2C,EAAM3C,KAClD,CAIDiD,IAAIlD,EAAM6B,EAAKtK,KAAK0I,MAChB,GAAY,GAARD,GAAa6B,GAAMtK,KAAK0I,KACxB,OAAO1I,KACX,IAAI6I,EAAS,GAAIH,EAAO,EACxB,GAAI4B,EAAK7B,EACL,IAAK,IAAI5F,EAAI,EAAGoG,EAAM,EAAGA,EAAMqB,EAAIzH,IAAK,CACpC,IAAIuG,EAAQpJ,KAAKqH,QAAQxE,GAAI4H,EAAMxB,EAAMG,EAAMM,SAC3Ce,EAAMhC,KACFQ,EAAMR,GAAQgC,EAAMH,KAEhBlB,EADAA,EAAMG,OACEH,EAAMuC,IAAIzB,KAAKS,IAAI,EAAGlC,EAAOQ,GAAMiB,KAAKC,IAAIf,EAAMI,KAAKhC,OAAQ8C,EAAKrB,IAEpEG,EAAMuC,IAAIzB,KAAKS,IAAI,EAAGlC,EAAOQ,EAAM,GAAIiB,KAAKC,IAAIf,EAAM/B,QAAQqB,KAAM4B,EAAKrB,EAAM,KAE/FJ,EAAOd,KAAKqB,GACZV,GAAQU,EAAMM,UAElBT,EAAMwB,CACT,CACL,OAAO,IAAIL,EAASvB,EAAQH,EAC/B,CAIDkD,WAAWnD,EAAM6B,GACb,OAAI7B,GAAQ6B,EACDF,EAASyB,MACR,GAARpD,GAAa6B,GAAMtK,KAAKqH,QAAQG,OACzBxH,KACJ,IAAIoK,EAASpK,KAAKqH,QAAQS,MAAMW,EAAM6B,GAChD,CAKDwB,aAAaC,EAAOd,GAChB,IAAIe,EAAUhM,KAAKqH,QAAQ0E,GAC3B,GAAIC,GAAWf,EACX,OAAOjL,KACX,IAAIiM,EAAOjM,KAAKqH,QAAQS,QACpBY,EAAO1I,KAAK0I,KAAOuC,EAAKvB,SAAWsC,EAAQtC,SAE/C,OADAuC,EAAKF,GAASd,EACP,IAAIb,EAAS6B,EAAMvD,EAC7B,CAKDT,WAAWgD,GACP,OAAO,IAAIb,EAAS,CAACa,GAAM/C,OAAOlI,KAAKqH,SAAUrH,KAAK0I,KAAOuC,EAAKvB,SACrE,CAKDvB,SAAS8C,GACL,OAAO,IAAIb,EAASpK,KAAKqH,QAAQa,OAAO+C,GAAOjL,KAAK0I,KAAOuC,EAAKvB,SACnE,CAIDwC,GAAGb,GACC,GAAIrL,KAAKqH,QAAQG,QAAU6D,EAAMhE,QAAQG,OACrC,OAAO,EACX,IAAK,IAAI3E,EAAI,EAAGA,EAAI7C,KAAKqH,QAAQG,OAAQ3E,IACrC,IAAK7C,KAAKqH,QAAQxE,GAAGqJ,GAAGb,EAAMhE,QAAQxE,IAClC,OAAO,EACf,OAAO,CACV,CAIG4I,iBAAe,OAAOzL,KAAKqH,QAAQG,OAASxH,KAAKqH,QAAQ,GAAK,IAAO,CAIrEkE,gBAAc,OAAOvL,KAAKqH,QAAQG,OAASxH,KAAKqH,QAAQrH,KAAKqH,QAAQG,OAAS,GAAK,IAAO,CAI1F0B,iBAAe,OAAOlJ,KAAKqH,QAAQG,MAAS,CAKhD4B,MAAM2C,GACF,IAAItE,EAAQzH,KAAKqH,QAAQ0E,GACzB,IAAKtE,EACD,MAAM,IAAI0E,WAAW,SAAWJ,EAAQ,qBAAuB/L,MACnE,OAAOyH,CACV,CAID2E,WAAWL,GACP,OAAO/L,KAAKqH,QAAQ0E,IAAU,IACjC,CAKDxD,QAAQ/E,GACJ,IAAK,IAAIX,EAAI,EAAGZ,EAAI,EAAGY,EAAI7C,KAAKqH,QAAQG,OAAQ3E,IAAK,CACjD,IAAIuG,EAAQpJ,KAAKqH,QAAQxE,GACzBW,EAAE4F,EAAOnH,EAAGY,GACZZ,GAAKmH,EAAMM,QACd,CACJ,CAKDX,cAAcsC,EAAOpC,EAAM,GACvB,OAAOF,EAAc/I,KAAMqL,EAAOpC,EACrC,CAODU,YAAY0B,EAAOpC,EAAMjJ,KAAK0I,KAAM2D,EAAWhB,EAAM3C,MACjD,OAAOiB,EAAY3J,KAAMqL,EAAOpC,EAAKoD,EACxC,CAMDC,UAAUrD,EAAKsD,GAAQ,GACnB,GAAW,GAAPtD,EACA,OAAOuD,EAAS,EAAGvD,GACvB,GAAIA,GAAOjJ,KAAK0I,KACZ,OAAO8D,EAASxM,KAAKqH,QAAQG,OAAQyB,GACzC,GAAIA,EAAMjJ,KAAK0I,MAAQO,EAAM,EACzB,MAAM,IAAIkD,WAAY,YAAWlD,0BAA4BjJ,SACjE,IAAK,IAAI6C,EAAI,EAAG4J,EAAS,GAAI5J,IAAK,CAC9B,IAAI6J,EAAM1M,KAAKoJ,MAAMvG,GAAI4H,EAAMgC,EAASC,EAAIhD,SAC5C,GAAIe,GAAOxB,EACP,OAAIwB,GAAOxB,GAAOsD,EAAQ,EACfC,EAAS3J,EAAI,EAAG4H,GACpB+B,EAAS3J,EAAG4J,GAEvBA,EAAShC,CACZ,CACJ,CAIDnH,WAAa,MAAO,IAAMtD,KAAK2M,gBAAkB,GAAM,CAIvDA,gBAAkB,OAAO3M,KAAKqH,QAAQlE,KAAK,KAAQ,CAInDC,SACI,OAAOpD,KAAKqH,QAAQG,OAASxH,KAAKqH,QAAQrE,KAAId,GAAKA,EAAEkB,WAAY,IACpE,CAIc,gBAACwJ,EAAQnM,GACpB,IAAKA,EACD,OAAO2J,EAASyB,MACpB,IAAK/I,MAAMC,QAAQtC,GACf,MAAM,IAAI0L,WAAW,uCACzB,OAAO,IAAI/B,EAAS3J,EAAMuC,IAAI4J,EAAOC,cACxC,CAKe,iBAACC,GACb,IAAKA,EAAMtF,OACP,OAAO4C,EAASyB,MACpB,IAAIkB,EAAQrE,EAAO,EACnB,IAAK,IAAI7F,EAAI,EAAGA,EAAIiK,EAAMtF,OAAQ3E,IAAK,CACnC,IAAIoI,EAAO6B,EAAMjK,GACjB6F,GAAQuC,EAAKvB,SACT7G,GAAKoI,EAAK1B,QAAUuD,EAAMjK,EAAI,GAAGyG,WAAW2B,IACvC8B,IACDA,EAASD,EAAMhF,MAAM,EAAGjF,IAC5BkK,EAAOA,EAAOvF,OAAS,GAAKyD,EACvBS,SAASqB,EAAOA,EAAOvF,OAAS,GAAGgC,KAAOyB,EAAKzB,OAE/CuD,GACLA,EAAOhF,KAAKkD,EAEnB,CACD,OAAO,IAAIb,EAAS2C,GAAUD,EAAOpE,EACxC,CAOU,YAACsE,GACR,IAAKA,EACD,OAAO5C,EAASyB,MACpB,GAAImB,aAAiB5C,EACjB,OAAO4C,EACX,GAAIlK,MAAMC,QAAQiK,GACd,OAAOhN,KAAKiN,UAAUD,GAC1B,GAAIA,EAAMzM,MACN,OAAO,IAAI6J,EAAS,CAAC4C,GAAQA,EAAMtD,UACvC,MAAM,IAAIyC,WAAW,mBAAqBa,EAAQ,kBAC7CA,EAAM3C,aAAe,mEAAqE,IAClG,EAOLD,EAASyB,MAAQ,IAAIzB,EAAS,GAAI,GAClC,MAAM3C,EAAQ,CAAEsE,MAAO,EAAGmB,OAAQ,GAClC,SAASV,EAAST,EAAOmB,GAGrB,OAFAzF,EAAMsE,MAAQA,EACdtE,EAAMyF,OAASA,EACRzF,CACV,CAED,SAAS0F,EAAYvK,EAAGoG,GACpB,GAAIpG,IAAMoG,EACN,OAAO,EACX,IAAMpG,GAAiB,iBAALA,IACZoG,GAAiB,iBAALA,EACd,OAAO,EACX,IAAI8D,EAAQhK,MAAMC,QAAQH,GAC1B,GAAIE,MAAMC,QAAQiG,IAAM8D,EACpB,OAAO,EACX,GAAIA,EAAO,CACP,GAAIlK,EAAE4E,QAAUwB,EAAExB,OACd,OAAO,EACX,IAAK,IAAI3E,EAAI,EAAGA,EAAID,EAAE4E,OAAQ3E,IAC1B,IAAKsK,EAAYvK,EAAEC,GAAImG,EAAEnG,IACrB,OAAO,CAClB,KACI,CACD,IAAK,IAAIZ,KAAKW,EACV,KAAMX,KAAK+G,KAAOmE,EAAYvK,EAAEX,GAAI+G,EAAE/G,IAClC,OAAO,EACf,IAAK,IAAIA,KAAK+G,EACV,KAAM/G,KAAKW,GACP,OAAO,CAClB,CACD,OAAO,CACV,CAUD,MAAMwK,EAIF7L,YAIA4J,EAIA5K,GACIP,KAAKmL,KAAOA,EACZnL,KAAKO,MAAQA,CAChB,CAQD8M,SAASzH,GACL,IAAIqG,EAAMqB,GAAS,EACnB,IAAK,IAAIzK,EAAI,EAAGA,EAAI+C,EAAI4B,OAAQ3E,IAAK,CACjC,IAAIwI,EAAQzF,EAAI/C,GAChB,GAAI7C,KAAKkM,GAAGb,GACR,OAAOzF,EACX,GAAI5F,KAAKmL,KAAKoC,SAASlC,EAAMF,MACpBc,IACDA,EAAOrG,EAAIkC,MAAM,EAAGjF,QAEvB,IAAIwI,EAAMF,KAAKoC,SAASvN,KAAKmL,MAC9B,OAAOvF,GAGF0H,GAAUjC,EAAMF,KAAKqC,KAAOxN,KAAKmL,KAAKqC,OAClCvB,IACDA,EAAOrG,EAAIkC,MAAM,EAAGjF,IACxBoJ,EAAKlE,KAAK/H,MACVsN,GAAS,GAETrB,GACAA,EAAKlE,KAAKsD,EACjB,CACJ,CAKD,OAJKY,IACDA,EAAOrG,EAAIkC,SACVwF,GACDrB,EAAKlE,KAAK/H,MACPiM,CACV,CAKDwB,cAAc7H,GACV,IAAK,IAAI/C,EAAI,EAAGA,EAAI+C,EAAI4B,OAAQ3E,IAC5B,GAAI7C,KAAKkM,GAAGtG,EAAI/C,IACZ,OAAO+C,EAAIkC,MAAM,EAAGjF,GAAGqF,OAAOtC,EAAIkC,MAAMjF,EAAI,IACpD,OAAO+C,CACV,CAID8H,QAAQ9H,GACJ,IAAK,IAAI/C,EAAI,EAAGA,EAAI+C,EAAI4B,OAAQ3E,IAC5B,GAAI7C,KAAKkM,GAAGtG,EAAI/C,IACZ,OAAO,EACf,OAAO,CACV,CAKDqJ,GAAGb,GACC,OAAOrL,MAAQqL,GACVrL,KAAKmL,MAAQE,EAAMF,MAAQgC,EAAYnN,KAAKO,MAAO8K,EAAM9K,MACjE,CAID6C,SACI,IAAIuK,EAAM,CAAExC,KAAMnL,KAAKmL,KAAKxJ,MAC5B,IAAK,IAAIiM,KAAK5N,KAAKO,MAAO,CACtBoN,EAAIpN,MAAQP,KAAKO,MACjB,KACH,CACD,OAAOoN,CACV,CAIc,gBAACf,EAAQiB,GACpB,IAAKA,EACD,MAAM,IAAI1B,WAAW,mCACzB,IAAIhB,EAAOyB,EAAOkB,MAAMD,EAAK1C,MAC7B,IAAKA,EACD,MAAM,IAAIgB,WAAY,yBAAwB0B,EAAK1C,uBACvD,OAAOA,EAAK4C,OAAOF,EAAKtN,MAC3B,CAIa,eAACqC,EAAGoG,GACd,GAAIpG,GAAKoG,EACL,OAAO,EACX,GAAIpG,EAAE4E,QAAUwB,EAAExB,OACd,OAAO,EACX,IAAK,IAAI3E,EAAI,EAAGA,EAAID,EAAE4E,OAAQ3E,IAC1B,IAAKD,EAAEC,GAAGqJ,GAAGlD,EAAEnG,IACX,OAAO,EACf,OAAO,CACV,CAKa,eAACiL,GACX,IAAKA,GAAShL,MAAMC,QAAQ+K,IAA0B,GAAhBA,EAAMtG,OACxC,OAAO4F,EAAKY,KAChB,GAAIF,aAAiBV,EACjB,MAAO,CAACU,GACZ,IAAI7B,EAAO6B,EAAMhG,QAEjB,OADAmE,EAAKgC,MAAK,CAACrL,EAAGoG,IAAMpG,EAAEuI,KAAKqC,KAAOxE,EAAEmC,KAAKqC,OAClCvB,CACV,EAKLmB,EAAKY,KAAO,GAMZ,MAAME,WAAqB5M,OAkB3B,MAAM6M,GAaF5M,YAIA8F,EAIA+G,EAIAC,GACIrO,KAAKqH,QAAUA,EACfrH,KAAKoO,UAAYA,EACjBpO,KAAKqO,QAAUA,CAClB,CAIG3F,WACA,OAAO1I,KAAKqH,QAAQqB,KAAO1I,KAAKoO,UAAYpO,KAAKqO,OACpD,CAIDC,SAASrF,EAAKsF,GACV,IAAIlH,EAAUmH,GAAWxO,KAAKqH,QAAS4B,EAAMjJ,KAAKoO,UAAWG,GAC7D,OAAOlH,GAAW,IAAI8G,GAAM9G,EAASrH,KAAKoO,UAAWpO,KAAKqO,QAC7D,CAIDI,cAAchG,EAAM6B,GAChB,OAAO,IAAI6D,GAAMO,GAAY1O,KAAKqH,QAASoB,EAAOzI,KAAKoO,UAAW9D,EAAKtK,KAAKoO,WAAYpO,KAAKoO,UAAWpO,KAAKqO,QAChH,CAIDnC,GAAGb,GACC,OAAOrL,KAAKqH,QAAQ6E,GAAGb,EAAMhE,UAAYrH,KAAKoO,WAAa/C,EAAM+C,WAAapO,KAAKqO,SAAWhD,EAAMgD,OACvG,CAID/K,WACI,OAAOtD,KAAKqH,QAAU,IAAMrH,KAAKoO,UAAY,IAAMpO,KAAKqO,QAAU,GACrE,CAIDjL,SACI,IAAKpD,KAAKqH,QAAQqB,KACd,OAAO,KACX,IAAImF,EAAO,CAAExG,QAASrH,KAAKqH,QAAQjE,UAKnC,OAJIpD,KAAKoO,UAAY,IACjBP,EAAKO,UAAYpO,KAAKoO,WACtBpO,KAAKqO,QAAU,IACfR,EAAKQ,QAAUrO,KAAKqO,SACjBR,CACV,CAIc,gBAACjB,EAAQiB,GACpB,IAAKA,EACD,OAAOM,GAAMtC,MACjB,IAAIuC,EAAYP,EAAKO,WAAa,EAAGC,EAAUR,EAAKQ,SAAW,EAC/D,GAAwB,iBAAbD,GAA2C,iBAAXC,EACvC,MAAM,IAAIlC,WAAW,oCACzB,OAAO,IAAIgC,GAAM/D,EAASuE,SAAS/B,EAAQiB,EAAKxG,SAAU+G,EAAWC,EACxE,CAKa,eAACE,EAAUK,GAAgB,GACrC,IAAIR,EAAY,EAAGC,EAAU,EAC7B,IAAK,IAAInM,EAAIqM,EAAS9C,WAAYvJ,IAAMA,EAAEgJ,SAAW0D,IAAkB1M,EAAEiJ,KAAK9H,KAAKwL,WAAY3M,EAAIA,EAAEuJ,WACjG2C,IACJ,IAAK,IAAIlM,EAAIqM,EAAShD,UAAWrJ,IAAMA,EAAEgJ,SAAW0D,IAAkB1M,EAAEiJ,KAAK9H,KAAKwL,WAAY3M,EAAIA,EAAEqJ,UAChG8C,IACJ,OAAO,IAAIF,GAAMI,EAAUH,EAAWC,EACzC,EAML,SAASK,GAAYrH,EAASoB,EAAM6B,GAChC,IAAI,MAAEyB,EAAF,OAASmB,GAAW7F,EAAQiF,UAAU7D,GAAOW,EAAQ/B,EAAQ+E,WAAWL,IACtEA,MAAO+C,EAAS5B,OAAQ6B,GAAa1H,EAAQiF,UAAUhC,GAC7D,GAAI4C,GAAUzE,GAAQW,EAAMG,OAAQ,CAChC,GAAIwF,GAAYzE,IAAOjD,EAAQ+B,MAAM0F,GAASvF,OAC1C,MAAM,IAAI4C,WAAW,2BACzB,OAAO9E,EAAQsE,IAAI,EAAGlD,GAAMG,OAAOvB,EAAQsE,IAAIrB,GAClD,CACD,GAAIyB,GAAS+C,EACT,MAAM,IAAI3C,WAAW,2BACzB,OAAO9E,EAAQyE,aAAaC,EAAO3C,EAAM6C,KAAKyC,GAAYtF,EAAM/B,QAASoB,EAAOyE,EAAS,EAAG5C,EAAK4C,EAAS,IAC7G,CACD,SAASsB,GAAWnH,EAAS2H,EAAMC,EAAQzE,GACvC,IAAI,MAAEuB,EAAF,OAASmB,GAAW7F,EAAQiF,UAAU0C,GAAO5F,EAAQ/B,EAAQ+E,WAAWL,GAC5E,GAAImB,GAAU8B,GAAQ5F,EAAMG,OACxB,OAAIiB,IAAWA,EAAO0E,WAAWnD,EAAOA,EAAOkD,GACpC,KACJ5H,EAAQsE,IAAI,EAAGqD,GAAMpG,OAAOqG,GAAQrG,OAAOvB,EAAQsE,IAAIqD,IAElE,IAAIvF,EAAQ+E,GAAWpF,EAAM/B,QAAS2H,EAAO9B,EAAS,EAAG+B,GACzD,OAAOxF,GAASpC,EAAQyE,aAAaC,EAAO3C,EAAM6C,KAAKxC,GAC1D,CACD,SAAS0F,GAAQC,EAAOC,EAAKvH,GACzB,GAAIA,EAAMsG,UAAYgB,EAAME,MACxB,MAAM,IAAIpB,GAAa,mDAC3B,GAAIkB,EAAME,MAAQxH,EAAMsG,WAAaiB,EAAIC,MAAQxH,EAAMuG,QACnD,MAAM,IAAIH,GAAa,4BAC3B,OAAOqB,GAAaH,EAAOC,EAAKvH,EAAO,EAC1C,CACD,SAASyH,GAAaH,EAAOC,EAAKvH,EAAOwH,GACrC,IAAIvD,EAAQqD,EAAMrD,MAAMuD,GAAQrE,EAAOmE,EAAMnE,KAAKqE,GAClD,GAAIvD,GAASsD,EAAItD,MAAMuD,IAAUA,EAAQF,EAAME,MAAQxH,EAAMsG,UAAW,CACpE,IAAI3E,EAAQ8F,GAAaH,EAAOC,EAAKvH,EAAOwH,EAAQ,GACpD,OAAOrE,EAAKgB,KAAKhB,EAAK5D,QAAQyE,aAAaC,EAAOtC,GACrD,CACI,GAAK3B,EAAMT,QAAQqB,KAGnB,IAAKZ,EAAMsG,WAActG,EAAMuG,SAAWe,EAAME,OAASA,GAASD,EAAIC,OAASA,EAI/E,CACD,IAAI,MAAE5E,EAAF,IAASD,GAAQ+E,GAAuB1H,EAAOsH,GACnD,OAAOK,GAAMxE,EAAMyE,GAAgBN,EAAO1E,EAAOD,EAAK4E,EAAKC,GAC9D,CAP0F,CACvF,IAAI9E,EAAS4E,EAAM5E,OAAQnD,EAAUmD,EAAOnD,QAC5C,OAAOoI,GAAMjF,EAAQnD,EAAQsE,IAAI,EAAGyD,EAAMO,cAAc/G,OAAOd,EAAMT,SAASuB,OAAOvB,EAAQsE,IAAI0D,EAAIM,eACxG,CAIA,CATG,OAAOF,GAAMxE,EAAM2E,GAAcR,EAAOC,EAAKC,GAUpD,CACD,SAASO,GAAUC,EAAMC,GACrB,IAAKA,EAAI5E,KAAK6E,kBAAkBF,EAAK3E,MACjC,MAAM,IAAI+C,GAAa,eAAiB6B,EAAI5E,KAAKxJ,KAAO,SAAWmO,EAAK3E,KAAKxJ,KACpF,CACD,SAASsO,GAASC,EAASC,EAAQb,GAC/B,IAAIrE,EAAOiF,EAAQjF,KAAKqE,GAExB,OADAO,GAAU5E,EAAMkF,EAAOlF,KAAKqE,IACrBrE,CACV,CACD,SAASmF,GAAQhH,EAAOiH,GACpB,IAAI/E,EAAO+E,EAAO7I,OAAS,EACvB8D,GAAQ,GAAKlC,EAAMG,QAAUH,EAAME,WAAW+G,EAAO/E,IACrD+E,EAAO/E,GAAQlC,EAAMsC,SAAS2E,EAAO/E,GAAM9B,KAAOJ,EAAMI,MAExD6G,EAAOtI,KAAKqB,EACnB,CACD,SAASkH,GAASC,EAAQC,EAAMlB,EAAOe,GACnC,IAAIpF,GAAQuF,GAAQD,GAAQtF,KAAKqE,GAC7BmB,EAAa,EAAGC,EAAWF,EAAOA,EAAKzE,MAAMuD,GAASrE,EAAK/B,WAC3DqH,IACAE,EAAaF,EAAOxE,MAAMuD,GACtBiB,EAAOjB,MAAQA,EACfmB,IAEKF,EAAOI,aACZP,GAAQG,EAAOK,UAAWP,GAC1BI,MAGR,IAAK,IAAI5N,EAAI4N,EAAY5N,EAAI6N,EAAU7N,IACnCuN,GAAQnF,EAAK7B,MAAMvG,GAAIwN,GACvBG,GAAQA,EAAKlB,OAASA,GAASkB,EAAKG,YACpCP,GAAQI,EAAKK,WAAYR,EAChC,CACD,SAASZ,GAAMxE,EAAM5D,GACjB,IAAK4D,EAAKE,KAAK2F,aAAazJ,GACxB,MAAM,IAAI6G,GAAa,4BAA8BjD,EAAKE,KAAKxJ,MACnE,OAAOsJ,EAAKgB,KAAK5E,EACpB,CACD,SAASqI,GAAgBN,EAAOmB,EAAQC,EAAMnB,EAAKC,GAC/C,IAAIlB,EAAYgB,EAAME,MAAQA,GAASW,GAASb,EAAOmB,EAAQjB,EAAQ,GACnEjB,EAAUgB,EAAIC,MAAQA,GAASW,GAASO,EAAMnB,EAAKC,EAAQ,GAC3DjI,EAAU,GAcd,OAbAiJ,GAAS,KAAMlB,EAAOE,EAAOjI,GACzB+G,GAAaC,GAAWkC,EAAOxE,MAAMuD,IAAUkB,EAAKzE,MAAMuD,IAC1DO,GAAUzB,EAAWC,GACrB+B,GAAQX,GAAMrB,EAAWsB,GAAgBN,EAAOmB,EAAQC,EAAMnB,EAAKC,EAAQ,IAAKjI,KAG5E+G,GACAgC,GAAQX,GAAMrB,EAAWwB,GAAcR,EAAOmB,EAAQjB,EAAQ,IAAKjI,GACvEiJ,GAASC,EAAQC,EAAMlB,EAAOjI,GAC1BgH,GACA+B,GAAQX,GAAMpB,EAASuB,GAAcY,EAAMnB,EAAKC,EAAQ,IAAKjI,IAErEiJ,GAASjB,EAAK,KAAMC,EAAOjI,GACpB,IAAI+C,EAAS/C,EACvB,CACD,SAASuI,GAAcR,EAAOC,EAAKC,GAC/B,IAAIjI,EAAU,GAEd,GADAiJ,GAAS,KAAMlB,EAAOE,EAAOjI,GACzB+H,EAAME,MAAQA,EAAO,CACrB,IAAInE,EAAO8E,GAASb,EAAOC,EAAKC,EAAQ,GACxCc,GAAQX,GAAMtE,EAAMyE,GAAcR,EAAOC,EAAKC,EAAQ,IAAKjI,EAC9D,CAED,OADAiJ,GAASjB,EAAK,KAAMC,EAAOjI,GACpB,IAAI+C,EAAS/C,EACvB,CACD,SAASmI,GAAuB1H,EAAOiJ,GACnC,IAAIC,EAAQD,EAAOzB,MAAQxH,EAAMsG,UAAW5D,EAASuG,EAAO9F,KAAK+F,GAC7D/F,EAAOT,EAAOyB,KAAKnE,EAAMT,SAC7B,IAAK,IAAIxE,EAAImO,EAAQ,EAAGnO,GAAK,EAAGA,IAC5BoI,EAAO8F,EAAO9F,KAAKpI,GAAGoJ,KAAK7B,EAAS3B,KAAKwC,IAC7C,MAAO,CAAEP,MAAOO,EAAKgG,eAAenJ,EAAMsG,UAAY4C,GAClDvG,IAAKQ,EAAKgG,eAAehG,EAAK5D,QAAQqB,KAAOZ,EAAMuG,QAAU2C,GACpE,CA3HD7C,GAAMtC,MAAQ,IAAIsC,GAAM/D,EAASyB,MAAO,EAAG,GAuI3C,MAAMqF,GAIF3P,YAIA0H,EAIAkI,EAIAxB,GACI3P,KAAKiJ,IAAMA,EACXjJ,KAAKmR,KAAOA,EACZnR,KAAK2P,aAAeA,EACpB3P,KAAKsP,MAAQ6B,EAAK3J,OAAS,EAAI,CAClC,CAID4J,aAAaC,GACT,OAAW,MAAPA,EACOrR,KAAKsP,MACZ+B,EAAM,EACCrR,KAAKsP,MAAQ+B,EACjBA,CACV,CAMG7G,aAAW,OAAOxK,KAAKiL,KAAKjL,KAAKsP,MAAS,CAI1CgC,UAAQ,OAAOtR,KAAKiL,KAAK,EAAK,CAKlCA,KAAKqE,GAAS,OAAOtP,KAAKmR,KAAgC,EAA3BnR,KAAKoR,aAAa9B,GAAc,CAM/DvD,MAAMuD,GAAS,OAAOtP,KAAKmR,KAAgC,EAA3BnR,KAAKoR,aAAa9B,GAAa,EAAK,CAKpEiC,WAAWjC,GAEP,OADAA,EAAQtP,KAAKoR,aAAa9B,GACnBtP,KAAK+L,MAAMuD,IAAUA,GAAStP,KAAKsP,OAAUtP,KAAK2Q,WAAiB,EAAJ,EACzE,CAKDjG,MAAM4E,GAEF,OADAA,EAAQtP,KAAKoR,aAAa9B,GACV,GAATA,EAAa,EAAItP,KAAKmR,KAAa,EAAR7B,EAAY,GAAK,CACtD,CAKD7E,IAAI6E,GAEA,OADAA,EAAQtP,KAAKoR,aAAa9B,GACnBtP,KAAK0K,MAAM4E,GAAStP,KAAKiL,KAAKqE,GAAOjI,QAAQqB,IACvD,CAMD8I,OAAOlC,GAEH,GADAA,EAAQtP,KAAKoR,aAAa9B,IACrBA,EACD,MAAM,IAAInD,WAAW,kDACzB,OAAOmD,GAAStP,KAAKsP,MAAQ,EAAItP,KAAKiJ,IAAMjJ,KAAKmR,KAAa,EAAR7B,EAAY,EACrE,CAKDmC,MAAMnC,GAEF,GADAA,EAAQtP,KAAKoR,aAAa9B,IACrBA,EACD,MAAM,IAAInD,WAAW,iDACzB,OAAOmD,GAAStP,KAAKsP,MAAQ,EAAItP,KAAKiJ,IAAMjJ,KAAKmR,KAAa,EAAR7B,EAAY,GAAKtP,KAAKmR,KAAa,EAAR7B,GAAW5F,QAC/F,CAMGiH,iBAAe,OAAO3Q,KAAKiJ,IAAMjJ,KAAKmR,KAAKnR,KAAKmR,KAAK3J,OAAS,EAAK,CAMnEoJ,gBACA,IAAIpG,EAASxK,KAAKwK,OAAQuB,EAAQ/L,KAAK+L,MAAM/L,KAAKsP,OAClD,GAAIvD,GAASvB,EAAOtB,WAChB,OAAO,KACX,IAAIwI,EAAO1R,KAAKiJ,IAAMjJ,KAAKmR,KAAKnR,KAAKmR,KAAK3J,OAAS,GAAI4B,EAAQoB,EAAOpB,MAAM2C,GAC5E,OAAO2F,EAAOlH,EAAOpB,MAAM2C,GAAOJ,IAAI+F,GAAQtI,CACjD,CAMGyH,iBACA,IAAI9E,EAAQ/L,KAAK+L,MAAM/L,KAAKsP,OACxBoC,EAAO1R,KAAKiJ,IAAMjJ,KAAKmR,KAAKnR,KAAKmR,KAAK3J,OAAS,GACnD,OAAIkK,EACO1R,KAAKwK,OAAOpB,MAAM2C,GAAOJ,IAAI,EAAG+F,GAC3B,GAAT3F,EAAa,KAAO/L,KAAKwK,OAAOpB,MAAM2C,EAAQ,EACxD,CAKD4F,WAAW5F,EAAOuD,GACdA,EAAQtP,KAAKoR,aAAa9B,GAC1B,IAAIrE,EAAOjL,KAAKmR,KAAa,EAAR7B,GAAYrG,EAAe,GAATqG,EAAa,EAAItP,KAAKmR,KAAa,EAAR7B,EAAY,GAAK,EACnF,IAAK,IAAIzM,EAAI,EAAGA,EAAIkJ,EAAOlJ,IACvBoG,GAAOgC,EAAK7B,MAAMvG,GAAG6G,SACzB,OAAOT,CACV,CAOD6E,QACI,IAAItD,EAASxK,KAAKwK,OAAQuB,EAAQ/L,KAAK+L,QAEvC,GAA2B,GAAvBvB,EAAOnD,QAAQqB,KACf,OAAO0E,EAAKY,KAEhB,GAAIhO,KAAK2Q,WACL,OAAOnG,EAAOpB,MAAM2C,GAAO+B,MAC/B,IAAIgC,EAAOtF,EAAO4B,WAAWL,EAAQ,GAAIV,EAAQb,EAAO4B,WAAWL,GAGnE,IAAK+D,EAAM,CACP,IAAI8B,EAAM9B,EACVA,EAAOzE,EACPA,EAAQuG,CACX,CAGD,IAAI9D,EAAQgC,EAAKhC,MACjB,IAAK,IAAIjL,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,KACO,IAAjCiL,EAAMjL,GAAGsI,KAAK9H,KAAKwO,WAAyBxG,GAAUyC,EAAMjL,GAAG6K,QAAQrC,EAAMyC,SAC7EA,EAAQA,EAAMjL,KAAK4K,cAAcK,IACzC,OAAOA,CACV,CASDgE,YAAYtB,GACR,IAAIiB,EAAQzR,KAAKwK,OAAO4B,WAAWpM,KAAK+L,SACxC,IAAK0F,IAAUA,EAAMM,SACjB,OAAO,KACX,IAAIjE,EAAQ2D,EAAM3D,MAAOkE,EAAOxB,EAAKhG,OAAO4B,WAAWoE,EAAKzE,SAC5D,IAAK,IAAIlJ,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,KACO,IAAjCiL,EAAMjL,GAAGsI,KAAK9H,KAAKwO,WAAyBG,GAASlE,EAAMjL,GAAG6K,QAAQsE,EAAKlE,SAC3EA,EAAQA,EAAMjL,KAAK4K,cAAcK,IACzC,OAAOA,CACV,CAKDmE,YAAYhJ,GACR,IAAK,IAAIqG,EAAQtP,KAAKsP,MAAOA,EAAQ,EAAGA,IACpC,GAAItP,KAAK0K,MAAM4E,IAAUrG,GAAOjJ,KAAKyK,IAAI6E,IAAUrG,EAC/C,OAAOqG,EACf,OAAO,CACV,CAUD4C,WAAW7G,EAAQrL,KAAMmS,GACrB,GAAI9G,EAAMpC,IAAMjJ,KAAKiJ,IACjB,OAAOoC,EAAM6G,WAAWlS,MAC5B,IAAK,IAAIsC,EAAItC,KAAKsP,OAAStP,KAAKwK,OAAO4H,eAAiBpS,KAAKiJ,KAAOoC,EAAMpC,IAAM,EAAI,GAAI3G,GAAK,EAAGA,IAC5F,GAAI+I,EAAMpC,KAAOjJ,KAAKyK,IAAInI,MAAQ6P,GAAQA,EAAKnS,KAAKiL,KAAK3I,KACrD,OAAO,IAAI+P,GAAUrS,KAAMqL,EAAO/I,GAC1C,OAAO,IACV,CAIDgQ,WAAWjH,GACP,OAAOrL,KAAKiJ,IAAMjJ,KAAK2P,cAAgBtE,EAAMpC,IAAMoC,EAAMsE,YAC5D,CAIDhF,IAAIU,GACA,OAAOA,EAAMpC,IAAMjJ,KAAKiJ,IAAMoC,EAAQrL,IACzC,CAIDmK,IAAIkB,GACA,OAAOA,EAAMpC,IAAMjJ,KAAKiJ,IAAMoC,EAAQrL,IACzC,CAIDsD,WACI,IAAIiP,EAAM,GACV,IAAK,IAAI1P,EAAI,EAAGA,GAAK7C,KAAKsP,MAAOzM,IAC7B0P,IAAQA,EAAM,IAAM,IAAMvS,KAAKiL,KAAKpI,GAAGsI,KAAKxJ,KAAO,IAAM3B,KAAK+L,MAAMlJ,EAAI,GAC5E,OAAO0P,EAAM,IAAMvS,KAAK2P,YAC3B,CAIa,eAAC2B,EAAKrI,GAChB,KAAMA,GAAO,GAAKA,GAAOqI,EAAIjK,QAAQqB,MACjC,MAAM,IAAIyD,WAAW,YAAclD,EAAM,iBAC7C,IAAIkI,EAAO,GACPzG,EAAQ,EAAGiF,EAAe1G,EAC9B,IAAK,IAAIgC,EAAOqG,IAAO,CACnB,IAAI,MAAEvF,EAAF,OAASmB,GAAWjC,EAAK5D,QAAQiF,UAAUqD,GAC3C6C,EAAM7C,EAAezC,EAEzB,GADAiE,EAAKpJ,KAAKkD,EAAMc,EAAOrB,EAAQwC,IAC1BsF,EACD,MAEJ,GADAvH,EAAOA,EAAK7B,MAAM2C,GACdd,EAAK1B,OACL,MACJoG,EAAe6C,EAAM,EACrB9H,GAASwC,EAAS,CACrB,CACD,OAAO,IAAIgE,GAAYjI,EAAKkI,EAAMxB,EACrC,CAImB,qBAAC2B,EAAKrI,GACtB,IAAK,IAAIpG,EAAI,EAAGA,EAAI4P,GAAajL,OAAQ3E,IAAK,CAC1C,IAAI6P,EAASD,GAAa5P,GAC1B,GAAI6P,EAAOzJ,KAAOA,GAAOyJ,EAAOpB,KAAOA,EACnC,OAAOoB,CACd,CACD,IAAI7J,EAAS4J,GAAaE,IAAmBzB,GAAY0B,QAAQtB,EAAKrI,GAEtE,OADA0J,IAAmBA,GAAkB,GAAKE,GACnChK,CACV,EAEL,IAAI4J,GAAe,GAAIE,GAAkB,EAAGE,GAAmB,GAK/D,MAAMR,GAMF9Q,YAOA6N,EAKAC,EAIAC,GACItP,KAAKoP,MAAQA,EACbpP,KAAKqP,IAAMA,EACXrP,KAAKsP,MAAQA,CAChB,CAIG5E,YAAU,OAAO1K,KAAKoP,MAAMoC,OAAOxR,KAAKsP,MAAQ,EAAK,CAIrD7E,UAAQ,OAAOzK,KAAKqP,IAAIoC,MAAMzR,KAAKsP,MAAQ,EAAK,CAIhD9E,aAAW,OAAOxK,KAAKoP,MAAMnE,KAAKjL,KAAKsP,MAAS,CAIhDmB,iBAAe,OAAOzQ,KAAKoP,MAAMrD,MAAM/L,KAAKsP,MAAS,CAIrDoB,eAAa,OAAO1Q,KAAKqP,IAAIkC,WAAWvR,KAAKsP,MAAS,EAG9D,MAAMwD,GAAaC,OAAOhF,OAAO,MAejC,MAAMiF,GAIFzR,YAIA4J,EAMA5K,EAEA8G,EAKAyG,EAAQV,EAAKY,MACThO,KAAKmL,KAAOA,EACZnL,KAAKO,MAAQA,EACbP,KAAK8N,MAAQA,EACb9N,KAAKqH,QAAUA,GAAW+C,EAASyB,KACtC,CAQGnC,eAAa,OAAO1J,KAAKkL,OAAS,EAAI,EAAIlL,KAAKqH,QAAQqB,IAAO,CAI9DQ,iBAAe,OAAOlJ,KAAKqH,QAAQ6B,UAAa,CAKpDE,MAAM2C,GAAS,OAAO/L,KAAKqH,QAAQ+B,MAAM2C,EAAS,CAIlDK,WAAWL,GAAS,OAAO/L,KAAKqH,QAAQ+E,WAAWL,EAAS,CAK5DxD,QAAQ/E,GAAKxD,KAAKqH,QAAQkB,QAAQ/E,EAAK,CAUvC6G,aAAa5B,EAAM6B,EAAI9G,EAAGyP,EAAW,GACjCjT,KAAKqH,QAAQgD,aAAa5B,EAAM6B,EAAI9G,EAAGyP,EAAUjT,KACpD,CAKD4K,YAAYpH,GACRxD,KAAKqK,aAAa,EAAGrK,KAAKqH,QAAQqB,KAAMlF,EAC3C,CAKG0P,kBACA,OAAQlT,KAAKkL,QAAUlL,KAAKmL,KAAK9H,KAAK0H,SAChC/K,KAAKmL,KAAK9H,KAAK0H,SAAS/K,MACxBA,KAAK6K,YAAY,EAAG7K,KAAKqH,QAAQqB,KAAM,GAChD,CAQDmC,YAAYpC,EAAM6B,EAAIQ,EAAgBC,GAClC,OAAO/K,KAAKqH,QAAQwD,YAAYpC,EAAM6B,EAAIQ,EAAgBC,EAC7D,CAKGU,iBAAe,OAAOzL,KAAKqH,QAAQoE,UAAa,CAKhDF,gBAAc,OAAOvL,KAAKqH,QAAQkE,SAAY,CAIlDW,GAAGb,GACC,OAAOrL,MAAQqL,GAAUrL,KAAKsJ,WAAW+B,IAAUrL,KAAKqH,QAAQ6E,GAAGb,EAAMhE,QAC5E,CAKDiC,WAAW+B,GACP,OAAOrL,KAAKmT,UAAU9H,EAAMF,KAAME,EAAM9K,MAAO8K,EAAMyC,MACxD,CAKDqF,UAAUhI,EAAM5K,EAAOuN,GACnB,OAAO9N,KAAKmL,MAAQA,GAChBgC,EAAYnN,KAAKO,MAAOA,GAAS4K,EAAKiI,cAAgBN,KACtD1F,EAAKiG,QAAQrT,KAAK8N,MAAOA,GAASV,EAAKY,KAC9C,CAKD/B,KAAK5E,EAAU,MACX,OAAIA,GAAWrH,KAAKqH,QACTrH,KACJ,IAAIgT,GAAKhT,KAAKmL,KAAMnL,KAAKO,MAAO8G,EAASrH,KAAK8N,MACxD,CAKDwF,KAAKxF,GACD,OAAOA,GAAS9N,KAAK8N,MAAQ9N,KAAO,IAAIgT,GAAKhT,KAAKmL,KAAMnL,KAAKO,MAAOP,KAAKqH,QAASyG,EACrF,CAMDnC,IAAIlD,EAAM6B,EAAKtK,KAAKqH,QAAQqB,MACxB,OAAY,GAARD,GAAa6B,GAAMtK,KAAKqH,QAAQqB,KACzB1I,KACJA,KAAKiM,KAAKjM,KAAKqH,QAAQsE,IAAIlD,EAAM6B,GAC3C,CAKDxC,MAAMW,EAAM6B,EAAKtK,KAAKqH,QAAQqB,KAAM6K,GAAiB,GACjD,GAAI9K,GAAQ6B,EACR,OAAO6D,GAAMtC,MACjB,IAAIuD,EAAQpP,KAAK4S,QAAQnK,GAAO4G,EAAMrP,KAAK4S,QAAQtI,GAC/CgF,EAAQiE,EAAiB,EAAInE,EAAM6C,YAAY3H,GAC/CI,EAAQ0E,EAAM1E,MAAM4E,GAAQrE,EAAOmE,EAAMnE,KAAKqE,GAC9CjI,EAAU4D,EAAK5D,QAAQsE,IAAIyD,EAAMnG,IAAMyB,EAAO2E,EAAIpG,IAAMyB,GAC5D,OAAO,IAAIyD,GAAM9G,EAAS+H,EAAME,MAAQA,EAAOD,EAAIC,MAAQA,EAC9D,CASDH,QAAQ1G,EAAM6B,EAAIxC,GACd,OAAOqH,GAAQnP,KAAK4S,QAAQnK,GAAOzI,KAAK4S,QAAQtI,GAAKxC,EACxD,CAID0L,OAAOvK,GACH,IAAK,IAAIgC,EAAOjL,OAAQ,CACpB,IAAI,MAAE+L,EAAF,OAASmB,GAAWjC,EAAK5D,QAAQiF,UAAUrD,GAE/C,GADAgC,EAAOA,EAAKmB,WAAWL,IAClBd,EACD,OAAO,KACX,GAAIiC,GAAUjE,GAAOgC,EAAK1B,OACtB,OAAO0B,EACXhC,GAAOiE,EAAS,CACnB,CACJ,CAMDuG,WAAWxK,GACP,IAAI,MAAE8C,EAAF,OAASmB,GAAWlN,KAAKqH,QAAQiF,UAAUrD,GAC/C,MAAO,CAAEgC,KAAMjL,KAAKqH,QAAQ+E,WAAWL,GAAQA,QAAOmB,SACzD,CAMDwG,YAAYzK,GACR,GAAW,GAAPA,EACA,MAAO,CAAEgC,KAAM,KAAMc,MAAO,EAAGmB,OAAQ,GAC3C,IAAI,MAAEnB,EAAF,OAASmB,GAAWlN,KAAKqH,QAAQiF,UAAUrD,GAC/C,GAAIiE,EAASjE,EACT,MAAO,CAAEgC,KAAMjL,KAAKqH,QAAQ+B,MAAM2C,GAAQA,QAAOmB,UACrD,IAAIjC,EAAOjL,KAAKqH,QAAQ+B,MAAM2C,EAAQ,GACtC,MAAO,CAAEd,OAAMc,MAAOA,EAAQ,EAAGmB,OAAQA,EAASjC,EAAKvB,SAC1D,CAKDkJ,QAAQ3J,GAAO,OAAOiI,GAAYyC,cAAc3T,KAAMiJ,EAAO,CAI7DgI,eAAehI,GAAO,OAAOiI,GAAY0B,QAAQ5S,KAAMiJ,EAAO,CAK9D2K,aAAanL,EAAM6B,EAAIa,GACnB,IAAI1D,GAAQ,EAOZ,OANI6C,EAAK7B,GACLzI,KAAKqK,aAAa5B,EAAM6B,GAAIW,IACpBE,EAAKuC,QAAQzC,EAAK6C,SAClBrG,GAAQ,IACJA,KAETA,CACV,CAIG2D,cAAY,OAAOpL,KAAKmL,KAAKC,OAAU,CAKvCyI,kBAAgB,OAAO7T,KAAKmL,KAAK0I,WAAc,CAI/CzB,oBAAkB,OAAOpS,KAAKmL,KAAKiH,aAAgB,CAKnDL,eAAa,OAAO/R,KAAKmL,KAAK4G,QAAW,CAIzCxI,aAAW,OAAOvJ,KAAKmL,KAAK5B,MAAS,CAIrC2B,aAAW,OAAOlL,KAAKmL,KAAKD,MAAS,CAQrC4I,aAAW,OAAO9T,KAAKmL,KAAK2I,MAAS,CAKzCxQ,WACI,GAAItD,KAAKmL,KAAK9H,KAAK0Q,cACf,OAAO/T,KAAKmL,KAAK9H,KAAK0Q,cAAc/T,MACxC,IAAI2B,EAAO3B,KAAKmL,KAAKxJ,KAGrB,OAFI3B,KAAKqH,QAAQqB,OACb/G,GAAQ,IAAM3B,KAAKqH,QAAQsF,gBAAkB,KAC1CqH,GAAUhU,KAAK8N,MAAOnM,EAChC,CAIDsS,eAAelI,GACX,IAAImI,EAAQlU,KAAKmL,KAAKgJ,aAAaC,cAAcpU,KAAKqH,QAAS,EAAG0E,GAClE,IAAKmI,EACD,MAAM,IAAI5S,MAAM,wDACpB,OAAO4S,CACV,CAQDhF,WAAWzG,EAAM6B,EAAI+J,EAAcjK,EAASyB,MAAOnB,EAAQ,EAAGD,EAAM4J,EAAYnL,YAC5E,IAAIoL,EAAMtU,KAAKiU,eAAexL,GAAM2L,cAAcC,EAAa3J,EAAOD,GAClE8J,EAAMD,GAAOA,EAAIF,cAAcpU,KAAKqH,QAASiD,GACjD,IAAKiK,IAAQA,EAAIC,SACb,OAAO,EACX,IAAK,IAAI3R,EAAI6H,EAAO7H,EAAI4H,EAAK5H,IACzB,IAAK7C,KAAKmL,KAAKsJ,YAAYJ,EAAYjL,MAAMvG,GAAGiL,OAC5C,OAAO,EACf,OAAO,CACV,CAKD4G,eAAejM,EAAM6B,EAAIa,EAAM2C,GAC3B,GAAIA,IAAU9N,KAAKmL,KAAKsJ,YAAY3G,GAChC,OAAO,EACX,IAAIpD,EAAQ1K,KAAKiU,eAAexL,GAAMkM,UAAUxJ,GAC5CV,EAAMC,GAASA,EAAM0J,cAAcpU,KAAKqH,QAASiD,GACrD,QAAOG,GAAMA,EAAI+J,QACpB,CAODI,UAAUvJ,GACN,OAAIA,EAAMhE,QAAQqB,KACP1I,KAAKkP,WAAWlP,KAAKkJ,WAAYlJ,KAAKkJ,WAAYmC,EAAMhE,SAExDrH,KAAKmL,KAAK6E,kBAAkB3E,EAAMF,KAChD,CAKD0J,QACI,IAAK7U,KAAKmL,KAAK2F,aAAa9Q,KAAKqH,SAC7B,MAAM,IAAI8E,WAAY,4BAA2BnM,KAAKmL,KAAKxJ,SAAS3B,KAAKqH,QAAQ/D,WAAWwE,MAAM,EAAG,OACzG,IAAImE,EAAOmB,EAAKY,KAChB,IAAK,IAAInL,EAAI,EAAGA,EAAI7C,KAAK8N,MAAMtG,OAAQ3E,IACnCoJ,EAAOjM,KAAK8N,MAAMjL,GAAGwK,SAASpB,GAClC,IAAKmB,EAAKiG,QAAQpH,EAAMjM,KAAK8N,OACzB,MAAM,IAAI3B,WAAY,wCAAuCnM,KAAKmL,KAAKxJ,SAAS3B,KAAK8N,MAAM9K,KAAIC,GAAKA,EAAEkI,KAAKxJ,UAC/G3B,KAAKqH,QAAQkB,SAAQ0C,GAAQA,EAAK4J,SACrC,CAIDzR,SACI,IAAIuK,EAAM,CAAExC,KAAMnL,KAAKmL,KAAKxJ,MAC5B,IAAK,IAAIiM,KAAK5N,KAAKO,MAAO,CACtBoN,EAAIpN,MAAQP,KAAKO,MACjB,KACH,CAKD,OAJIP,KAAKqH,QAAQqB,OACbiF,EAAItG,QAAUrH,KAAKqH,QAAQjE,UAC3BpD,KAAK8N,MAAMtG,SACXmG,EAAIG,MAAQ9N,KAAK8N,MAAM9K,KAAId,GAAKA,EAAEkB,YAC/BuK,CACV,CAIc,gBAACf,EAAQiB,GACpB,IAAKA,EACD,MAAM,IAAI1B,WAAW,mCACzB,IAAI2B,EAAQ,KACZ,GAAID,EAAKC,MAAO,CACZ,IAAKhL,MAAMC,QAAQ8K,EAAKC,OACpB,MAAM,IAAI3B,WAAW,uCACzB2B,EAAQD,EAAKC,MAAM9K,IAAI4J,EAAOkI,aACjC,CACD,GAAiB,QAAbjH,EAAK1C,KAAgB,CACrB,GAAwB,iBAAb0C,EAAKrE,KACZ,MAAM,IAAI2C,WAAW,6BACzB,OAAOS,EAAOpD,KAAKqE,EAAKrE,KAAMsE,EACjC,CACD,IAAIzG,EAAU+C,EAASuE,SAAS/B,EAAQiB,EAAKxG,SAC7C,OAAOuF,EAAOmI,SAASlH,EAAK1C,MAAM4C,OAAOF,EAAKtN,MAAO8G,EAASyG,EACjE,EAELkF,GAAK1L,UAAUkC,UAAO9B,EACtB,MAAMsN,WAAiBhC,GAInBzR,YAAY4J,EAAM5K,EAAO8G,EAASyG,GAE9B,GADApM,MAAMyJ,EAAM5K,EAAO,KAAMuN,IACpBzG,EACD,MAAM,IAAI8E,WAAW,oCACzBnM,KAAKwJ,KAAOnC,CACf,CACD/D,WACI,OAAItD,KAAKmL,KAAK9H,KAAK0Q,cACR/T,KAAKmL,KAAK9H,KAAK0Q,cAAc/T,MACjCgU,GAAUhU,KAAK8N,MAAO/L,KAAKC,UAAUhC,KAAKwJ,MACpD,CACG0J,kBAAgB,OAAOlT,KAAKwJ,IAAO,CACvCqB,YAAYpC,EAAM6B,GAAM,OAAOtK,KAAKwJ,KAAK1B,MAAMW,EAAM6B,EAAM,CACvDZ,eAAa,OAAO1J,KAAKwJ,KAAKhC,MAAS,CAC3C8L,KAAKxF,GACD,OAAOA,GAAS9N,KAAK8N,MAAQ9N,KAAO,IAAIgV,GAAShV,KAAKmL,KAAMnL,KAAKO,MAAOP,KAAKwJ,KAAMsE,EACtF,CACDpC,SAASlC,GACL,OAAIA,GAAQxJ,KAAKwJ,KACNxJ,KACJ,IAAIgV,GAAShV,KAAKmL,KAAMnL,KAAKO,MAAOiJ,EAAMxJ,KAAK8N,MACzD,CACDnC,IAAIlD,EAAO,EAAG6B,EAAKtK,KAAKwJ,KAAKhC,QACzB,OAAY,GAARiB,GAAa6B,GAAMtK,KAAKwJ,KAAKhC,OACtBxH,KACJA,KAAK0L,SAAS1L,KAAKwJ,KAAK1B,MAAMW,EAAM6B,GAC9C,CACD4B,GAAGb,GACC,OAAOrL,KAAKsJ,WAAW+B,IAAUrL,KAAKwJ,MAAQ6B,EAAM7B,IACvD,CACDpG,SACI,IAAI6R,EAAOvT,MAAM0B,SAEjB,OADA6R,EAAKzL,KAAOxJ,KAAKwJ,KACVyL,CACV,EAEL,SAASjB,GAAUlG,EAAOyE,GACtB,IAAK,IAAI1P,EAAIiL,EAAMtG,OAAS,EAAG3E,GAAK,EAAGA,IACnC0P,EAAMzE,EAAMjL,GAAGsI,KAAKxJ,KAAO,IAAM4Q,EAAM,IAC3C,OAAOA,CACV,CAQD,MAAM2C,GAIF3T,YAIAiT,GACIxU,KAAKwU,SAAWA,EAIhBxU,KAAKgS,KAAO,GAIZhS,KAAKmV,UAAY,EACpB,CAIW,aAACC,EAAQC,GACjB,IAAIC,EAAS,IAAIC,GAAYH,EAAQC,GACrC,GAAmB,MAAfC,EAAOtD,KACP,OAAOkD,GAAarJ,MACxB,IAAI2J,EAAOC,GAAUH,GACjBA,EAAOtD,MACPsD,EAAOI,IAAI,4BACf,IAAIxB,EAAQyB,GAAIC,GAAIJ,IAEpB,OADAK,GAAiB3B,EAAOoB,GACjBpB,CACV,CAKDS,UAAUxJ,GACN,IAAK,IAAItI,EAAI,EAAGA,EAAI7C,KAAKgS,KAAKxK,OAAQ3E,IAClC,GAAI7C,KAAKgS,KAAKnP,GAAGsI,MAAQA,EACrB,OAAOnL,KAAKgS,KAAKnP,GAAGmP,KAC5B,OAAO,IACV,CAKDoC,cAAc0B,EAAMpL,EAAQ,EAAGD,EAAMqL,EAAK5M,YACtC,IAAIwD,EAAM1M,KACV,IAAK,IAAI6C,EAAI6H,EAAOgC,GAAO7J,EAAI4H,EAAK5H,IAChC6J,EAAMA,EAAIiI,UAAUmB,EAAK1M,MAAMvG,GAAGsI,MACtC,OAAOuB,CACV,CAIG0F,oBACA,OAAOpS,KAAKgS,KAAKxK,QAAUxH,KAAKgS,KAAK,GAAG7G,KAAK4G,QAChD,CAKGgE,kBACA,IAAK,IAAIlT,EAAI,EAAGA,EAAI7C,KAAKgS,KAAKxK,OAAQ3E,IAAK,CACvC,IAAI,KAAEsI,GAASnL,KAAKgS,KAAKnP,GACzB,IAAMsI,EAAK5B,SAAU4B,EAAK6K,mBACtB,OAAO7K,CACd,CACD,OAAO,IACV,CAID8K,WAAW5K,GACP,IAAK,IAAIxI,EAAI,EAAGA,EAAI7C,KAAKgS,KAAKxK,OAAQ3E,IAClC,IAAK,IAAI6C,EAAI,EAAGA,EAAI2F,EAAM2G,KAAKxK,OAAQ9B,IACnC,GAAI1F,KAAKgS,KAAKnP,GAAGsI,MAAQE,EAAM2G,KAAKtM,GAAGyF,KACnC,OAAO,EACnB,OAAO,CACV,CASD+K,WAAWzE,EAAO0E,GAAQ,EAAO1F,EAAa,GAC1C,IAAI2F,EAAO,CAACpW,MACZ,SAASqW,EAAOnC,EAAOoC,GACnB,IAAIC,EAAWrC,EAAME,cAAc3C,EAAOhB,GAC1C,GAAI8F,KAAcJ,GAASI,EAAS/B,UAChC,OAAOpK,EAAS3B,KAAK6N,EAAMtT,KAAIwT,GAAMA,EAAGC,mBAC5C,IAAK,IAAI5T,EAAI,EAAGA,EAAIqR,EAAMlC,KAAKxK,OAAQ3E,IAAK,CACxC,IAAI,KAAEsI,EAAF,KAAQ6G,GAASkC,EAAMlC,KAAKnP,GAChC,IAAMsI,EAAK5B,SAAU4B,EAAK6K,qBAA8C,GAAvBI,EAAKM,QAAQ1E,GAAa,CACvEoE,EAAKrO,KAAKiK,GACV,IAAIvK,EAAQ4O,EAAOrE,EAAMsE,EAAMpO,OAAOiD,IACtC,GAAI1D,EACA,OAAOA,CACd,CACJ,CACD,OAAO,IACV,CACD,OAAO4O,EAAOrW,KAAM,GACvB,CAOD2W,aAAatG,GACT,IAAK,IAAIxN,EAAI,EAAGA,EAAI7C,KAAKmV,UAAU3N,OAAQ3E,GAAK,EAC5C,GAAI7C,KAAKmV,UAAUtS,IAAMwN,EACrB,OAAOrQ,KAAKmV,UAAUtS,EAAI,GAClC,IAAI+T,EAAW5W,KAAK6W,gBAAgBxG,GAEpC,OADArQ,KAAKmV,UAAUpN,KAAKsI,EAAQuG,GACrBA,CACV,CAIDC,gBAAgBxG,GACZ,IAAI+F,EAAOrD,OAAOhF,OAAO,MAAO+I,EAAS,CAAC,CAAE5C,MAAOlU,KAAMmL,KAAM,KAAM4L,IAAK,OAC1E,MAAOD,EAAOtP,OAAQ,CAClB,IAAIwE,EAAU8K,EAAOE,QAAS9C,EAAQlI,EAAQkI,MAC9C,GAAIA,EAAMS,UAAUtE,GAAS,CACzB,IAAIxH,EAAS,GACb,IAAK,IAAI8E,EAAM3B,EAAS2B,EAAIxC,KAAMwC,EAAMA,EAAIoJ,IACxClO,EAAOd,KAAK4F,EAAIxC,MACpB,OAAOtC,EAAOoO,SACjB,CACD,IAAK,IAAIpU,EAAI,EAAGA,EAAIqR,EAAMlC,KAAKxK,OAAQ3E,IAAK,CACxC,IAAI,KAAEsI,EAAF,KAAQ6G,GAASkC,EAAMlC,KAAKnP,GAC3BsI,EAAKD,QAAWC,EAAK6K,oBAAwB7K,EAAKxJ,QAAQyU,GAAWpK,EAAQb,OAAQ6G,EAAKwC,WAC3FsC,EAAO/O,KAAK,CAAEmM,MAAO/I,EAAKgJ,aAAchJ,OAAM4L,IAAK/K,IACnDoK,EAAKjL,EAAKxJ,OAAQ,EAEzB,CACJ,CACD,OAAO,IACV,CAKGuV,gBACA,OAAOlX,KAAKgS,KAAKxK,MACpB,CAKD2P,KAAKjV,GACD,GAAIA,GAAKlC,KAAKgS,KAAKxK,OACf,MAAM,IAAI2E,WAAY,cAAajK,kCACvC,OAAOlC,KAAKgS,KAAK9P,EACpB,CAIDoB,WACI,IAAI8S,EAAO,GACX,SAASgB,EAAKnU,GACVmT,EAAKrO,KAAK9E,GACV,IAAK,IAAIJ,EAAI,EAAGA,EAAII,EAAE+O,KAAKxK,OAAQ3E,KACM,GAAjCuT,EAAKM,QAAQzT,EAAE+O,KAAKnP,GAAGmP,OACvBoF,EAAKnU,EAAE+O,KAAKnP,GAAGmP,KAC1B,CAED,OADAoF,EAAKpX,MACEoW,EAAKpT,KAAI,CAACC,EAAGJ,KAChB,IAAIwU,EAAMxU,GAAKI,EAAEuR,SAAW,IAAM,KAAO,IACzC,IAAK,IAAI3R,EAAI,EAAGA,EAAII,EAAE+O,KAAKxK,OAAQ3E,IAC/BwU,IAAQxU,EAAI,KAAO,IAAMI,EAAE+O,KAAKnP,GAAGsI,KAAKxJ,KAAO,KAAOyU,EAAKM,QAAQzT,EAAE+O,KAAKnP,GAAGmP,MACjF,OAAOqF,CAAP,IACDlU,KAAK,KACX,EAKL+R,GAAarJ,MAAQ,IAAIqJ,IAAa,GACtC,MAAMK,GACFhU,YAAY6T,EAAQC,GAChBrV,KAAKoV,OAASA,EACdpV,KAAKqV,UAAYA,EACjBrV,KAAKsX,OAAS,KACdtX,KAAKiJ,IAAM,EACXjJ,KAAKuX,OAASnC,EAAOoC,MAAM,kBACgB,IAAvCxX,KAAKuX,OAAOvX,KAAKuX,OAAO/P,OAAS,IACjCxH,KAAKuX,OAAOE,MACM,IAAlBzX,KAAKuX,OAAO,IACZvX,KAAKuX,OAAOP,OACnB,CACGhF,WAAS,OAAOhS,KAAKuX,OAAOvX,KAAKiJ,IAAO,CAC5CyO,IAAIC,GAAO,OAAO3X,KAAKgS,MAAQ2F,IAAQ3X,KAAKiJ,QAAS,EAAQ,CAC7DyM,IAAInD,GAAO,MAAM,IAAIqF,YAAYrF,EAAM,4BAA8BvS,KAAKoV,OAAS,KAAQ,EAE/F,SAASK,GAAUH,GACf,IAAIuC,EAAQ,GACZ,GACIA,EAAM9P,KAAK+P,GAAaxC,UACnBA,EAAOoC,IAAI,MACpB,OAAuB,GAAhBG,EAAMrQ,OAAcqQ,EAAM,GAAK,CAAE1M,KAAM,SAAU0M,QAC3D,CACD,SAASC,GAAaxC,GAClB,IAAIuC,EAAQ,GACZ,GACIA,EAAM9P,KAAKgQ,GAAmBzC,UACzBA,EAAOtD,MAAuB,KAAfsD,EAAOtD,MAA8B,KAAfsD,EAAOtD,MACrD,OAAuB,GAAhB6F,EAAMrQ,OAAcqQ,EAAM,GAAK,CAAE1M,KAAM,MAAO0M,QACxD,CACD,SAASE,GAAmBzC,GACxB,IAAIE,EAAOwC,GAAc1C,GACzB,OACI,GAAIA,EAAOoC,IAAI,KACXlC,EAAO,CAAErK,KAAM,OAAQqK,aACtB,GAAIF,EAAOoC,IAAI,KAChBlC,EAAO,CAAErK,KAAM,OAAQqK,aACtB,GAAIF,EAAOoC,IAAI,KAChBlC,EAAO,CAAErK,KAAM,MAAOqK,YACrB,KAAIF,EAAOoC,IAAI,KAGhB,MAFAlC,EAAOyC,GAAe3C,EAAQE,EAEzB,CAEb,OAAOA,CACV,CACD,SAAS0C,GAAS5C,GACV,KAAK6C,KAAK7C,EAAOtD,OACjBsD,EAAOI,IAAI,yBAA2BJ,EAAOtD,KAAO,KACxD,IAAInJ,EAASuP,OAAO9C,EAAOtD,MAE3B,OADAsD,EAAOrM,MACAJ,CACV,CACD,SAASoP,GAAe3C,EAAQE,GAC5B,IAAIrL,EAAM+N,GAAS5C,GAAS3K,EAAMR,EASlC,OARImL,EAAOoC,IAAI,OAEP/M,EADe,KAAf2K,EAAOtD,KACDkG,GAAS5C,IAER,GAEVA,EAAOoC,IAAI,MACZpC,EAAOI,IAAI,yBACR,CAAEvK,KAAM,QAAShB,MAAKQ,MAAK6K,OACrC,CACD,SAAS6C,GAAY/C,EAAQ3T,GACzB,IAAI2U,EAAQhB,EAAOD,UAAWlK,EAAOmL,EAAM3U,GAC3C,GAAIwJ,EACA,MAAO,CAACA,GACZ,IAAItC,EAAS,GACb,IAAK,IAAIyP,KAAYhC,EAAO,CACxB,IAAInL,EAAOmL,EAAMgC,GACbnN,EAAKoN,OAAO7B,QAAQ/U,IAAS,GAC7BkH,EAAOd,KAAKoD,EACnB,CAGD,OAFqB,GAAjBtC,EAAOrB,QACP8N,EAAOI,IAAI,0BAA4B/T,EAAO,WAC3CkH,CACV,CACD,SAASmP,GAAc1C,GACnB,GAAIA,EAAOoC,IAAI,KAAM,CACjB,IAAIlC,EAAOC,GAAUH,GAGrB,OAFKA,EAAOoC,IAAI,MACZpC,EAAOI,IAAI,yBACRF,CACV,CACI,IAAK,KAAK2C,KAAK7C,EAAOtD,MAAO,CAC9B,IAAI6F,EAAQQ,GAAY/C,EAAQA,EAAOtD,MAAMhP,KAAImI,IACxB,MAAjBmK,EAAOgC,OACPhC,EAAOgC,OAASnM,EAAK4G,SAChBuD,EAAOgC,QAAUnM,EAAK4G,UAC3BuD,EAAOI,IAAI,mCACR,CAAEvK,KAAM,OAAQ1K,MAAO0K,MAGlC,OADAmK,EAAOrM,MACgB,GAAhB4O,EAAMrQ,OAAcqQ,EAAM,GAAK,CAAE1M,KAAM,SAAU0M,QAC3D,CAEGvC,EAAOI,IAAI,qBAAuBJ,EAAOtD,KAAO,IAEvD,CAWD,SAAS4D,GAAIJ,GACT,IAAII,EAAM,CAAC,IAEX,OADAxV,EAAQoY,EAAQhD,EAAM,GAAIvK,KACnB2K,EACP,SAAS3K,IAAS,OAAO2K,EAAI7N,KAAK,IAAM,CAAI,CAC5C,SAASoP,EAAK1O,EAAM6B,EAAImO,GACpB,IAAItB,EAAO,CAAEsB,OAAMnO,MAEnB,OADAsL,EAAInN,GAAMV,KAAKoP,GACRA,CACV,CACD,SAAS/W,EAAQsY,EAAOpO,GACpBoO,EAAMnQ,SAAQ4O,GAAQA,EAAK7M,GAAKA,GACnC,CACD,SAASkO,EAAQhD,EAAM/M,GACnB,GAAiB,UAAb+M,EAAKrK,KACL,OAAOqK,EAAKqC,MAAMlV,QAAO,CAAC0U,EAAK7B,IAAS6B,EAAInP,OAAOsQ,EAAQhD,EAAM/M,KAAQ,IAExE,GAAiB,OAAb+M,EAAKrK,KAQT,IAAiB,QAAbqK,EAAKrK,KAAgB,CAC1B,IAAIwN,EAAO1N,IAGX,OAFAkM,EAAK1O,EAAMkQ,GACXvY,EAAQoY,EAAQhD,EAAKA,KAAMmD,GAAOA,GAC3B,CAACxB,EAAKwB,GAChB,CACI,GAAiB,QAAbnD,EAAKrK,KAAgB,CAC1B,IAAIwN,EAAO1N,IAGX,OAFA7K,EAAQoY,EAAQhD,EAAKA,KAAM/M,GAAOkQ,GAClCvY,EAAQoY,EAAQhD,EAAKA,KAAMmD,GAAOA,GAC3B,CAACxB,EAAKwB,GAChB,CACI,GAAiB,OAAbnD,EAAKrK,KACV,MAAO,CAACgM,EAAK1O,IAAOP,OAAOsQ,EAAQhD,EAAKA,KAAM/M,IAE7C,GAAiB,SAAb+M,EAAKrK,KAAiB,CAC3B,IAAIuB,EAAMjE,EACV,IAAK,IAAI5F,EAAI,EAAGA,EAAI2S,EAAKrL,IAAKtH,IAAK,CAC/B,IAAImP,EAAO/G,IACX7K,EAAQoY,EAAQhD,EAAKA,KAAM9I,GAAMsF,GACjCtF,EAAMsF,CACT,CACD,IAAiB,GAAbwD,EAAK7K,IACLvK,EAAQoY,EAAQhD,EAAKA,KAAM9I,GAAMA,QAGjC,IAAK,IAAI7J,EAAI2S,EAAKrL,IAAKtH,EAAI2S,EAAK7K,IAAK9H,IAAK,CACtC,IAAImP,EAAO/G,IACXkM,EAAKzK,EAAKsF,GACV5R,EAAQoY,EAAQhD,EAAKA,KAAM9I,GAAMsF,GACjCtF,EAAMsF,CACT,CAEL,MAAO,CAACmF,EAAKzK,GAChB,CACI,GAAiB,QAAb8I,EAAKrK,KACV,MAAO,CAACgM,EAAK1O,OAAMf,EAAW8N,EAAK/U,QAGnC,MAAM,IAAIa,MAAM,oBACnB,CA/CG,IAAK,IAAIuB,EAAI,GAAIA,IAAK,CAClB,IAAImP,EAAOwG,EAAQhD,EAAKqC,MAAMhV,GAAI4F,GAClC,GAAI5F,GAAK2S,EAAKqC,MAAMrQ,OAAS,EACzB,OAAOwK,EACX5R,EAAQ4R,EAAMvJ,EAAOwC,IACxB,CA2CR,CACJ,CACD,SAAS2N,GAAIhW,EAAGoG,GAAK,OAAOA,EAAIpG,CAAI,CAIpC,SAASiW,GAASjD,EAAK3K,GACnB,IAAIpC,EAAS,GAEb,OADAuO,EAAKnM,GACEpC,EAAOoF,KAAK2K,IACnB,SAASxB,EAAKnM,GACV,IAAIyN,EAAQ9C,EAAI3K,GAChB,GAAoB,GAAhByN,EAAMlR,SAAgBkR,EAAM,GAAGD,KAC/B,OAAOrB,EAAKsB,EAAM,GAAGpO,IACzBzB,EAAOd,KAAKkD,GACZ,IAAK,IAAIpI,EAAI,EAAGA,EAAI6V,EAAMlR,OAAQ3E,IAAK,CACnC,IAAI,KAAE4V,EAAF,GAAQnO,GAAOoO,EAAM7V,GACpB4V,IAA+B,GAAvB5P,EAAO6N,QAAQpM,IACxB8M,EAAK9M,EACZ,CACJ,CACJ,CAID,SAASqL,GAAIC,GACT,IAAIkD,EAAU/F,OAAOhF,OAAO,MAC5B,OAAOgL,EAAQF,GAASjD,EAAK,IAC7B,SAASmD,EAAQC,GACb,IAAI3B,EAAM,GACV2B,EAAOzQ,SAAQ0C,IACX2K,EAAI3K,GAAM1C,SAAQ,EAAGkQ,OAAMnO,SACvB,IAAKmO,EACD,OACJ,IAAI7S,EACJ,IAAK,IAAI/C,EAAI,EAAGA,EAAIwU,EAAI7P,OAAQ3E,IACxBwU,EAAIxU,GAAG,IAAM4V,IACb7S,EAAMyR,EAAIxU,GAAG,IACrBgW,GAASjD,EAAKtL,GAAI/B,SAAQ0C,IACjBrF,GACDyR,EAAItP,KAAK,CAAC0Q,EAAM7S,EAAM,MACA,GAAtBA,EAAI8Q,QAAQzL,IACZrF,EAAImC,KAAKkD,EAAT,GAJR,GAPJ,IAeJ,IAAIgO,EAAQH,EAAQE,EAAO7V,KAAK,MAAQ,IAAI+R,GAAa8D,EAAOtC,QAAQd,EAAIpO,OAAS,IAAM,GAC3F,IAAK,IAAI3E,EAAI,EAAGA,EAAIwU,EAAI7P,OAAQ3E,IAAK,CACjC,IAAImW,EAAS3B,EAAIxU,GAAG,GAAGoL,KAAK2K,IAC5BK,EAAMjH,KAAKjK,KAAK,CAAEoD,KAAMkM,EAAIxU,GAAG,GAAImP,KAAM8G,EAAQE,EAAO7V,KAAK,OAAS4V,EAAQC,IACjF,CACD,OAAOC,CACV,CACJ,CACD,SAASpD,GAAiB3B,EAAOoB,GAC7B,IAAK,IAAIzS,EAAI,EAAGqW,EAAO,CAAChF,GAAQrR,EAAIqW,EAAK1R,OAAQ3E,IAAK,CAClD,IAAIoW,EAAQC,EAAKrW,GAAIsW,GAAQF,EAAMzE,SAAUxH,EAAQ,GACrD,IAAK,IAAItH,EAAI,EAAGA,EAAIuT,EAAMjH,KAAKxK,OAAQ9B,IAAK,CACxC,IAAI,KAAEyF,EAAF,KAAQ6G,GAASiH,EAAMjH,KAAKtM,GAChCsH,EAAMjF,KAAKoD,EAAKxJ,OACZwX,GAAUhO,EAAK5B,QAAU4B,EAAK6K,qBAC9BmD,GAAO,IACgB,GAAvBD,EAAKxC,QAAQ1E,IACbkH,EAAKnR,KAAKiK,EACjB,CACGmH,GACA7D,EAAOI,IAAI,+BAAiC1I,EAAM7J,KAAK,MAAQ,iFACtE,CACJ,CAMD,SAASiQ,GAAa7S,GAClB,IAAI6Y,EAAWrG,OAAOhF,OAAO,MAC7B,IAAK,IAAIsL,KAAY9Y,EAAO,CACxB,IAAI+Y,EAAO/Y,EAAM8Y,GACjB,IAAKC,EAAKC,WACN,OAAO,KACXH,EAASC,GAAYC,EAAKE,OAC7B,CACD,OAAOJ,CACV,CACD,SAASK,GAAalZ,EAAOE,GACzB,IAAIiZ,EAAQ3G,OAAOhF,OAAO,MAC1B,IAAK,IAAIpM,KAAQpB,EAAO,CACpB,IAAIoZ,EAAQlZ,GAASA,EAAMkB,GAC3B,QAAc+F,IAAViS,EAAqB,CACrB,IAAIL,EAAO/Y,EAAMoB,GACjB,IAAI2X,EAAKC,WAGL,MAAM,IAAIpN,WAAW,mCAAqCxK,GAF1DgY,EAAQL,EAAKE,OAGpB,CACDE,EAAM/X,GAAQgY,CACjB,CACD,OAAOD,CACV,CACD,SAASE,GAAUrZ,GACf,IAAIsI,EAASkK,OAAOhF,OAAO,MAC3B,GAAIxN,EACA,IAAK,IAAIoB,KAAQpB,EACbsI,EAAOlH,GAAQ,IAAIkY,GAAUtZ,EAAMoB,IAC3C,OAAOkH,CACV,CAOD,MAAMiR,GAIFvY,YAIAI,EAIAiL,EAIAvJ,GACIrD,KAAK2B,KAAOA,EACZ3B,KAAK4M,OAASA,EACd5M,KAAKqD,KAAOA,EAKZrD,KAAK+Z,QAAU,KACf/Z,KAAKuY,OAASlV,EAAK2W,MAAQ3W,EAAK2W,MAAMxC,MAAM,KAAO,GACnDxX,KAAKO,MAAQqZ,GAAUvW,EAAK9C,OAC5BP,KAAKoT,aAAeA,GAAapT,KAAKO,OACtCP,KAAKmU,aAAe,KACpBnU,KAAKoS,cAAgB,KACrBpS,KAAKoL,UAAY/H,EAAKiU,QAAkB,QAAR3V,GAChC3B,KAAKuJ,OAAiB,QAAR5H,CACjB,CAIGoQ,eAAa,OAAQ/R,KAAKoL,OAAU,CAKpCyI,kBAAgB,OAAO7T,KAAKoL,SAAWpL,KAAKoS,aAAgB,CAI5DlH,aAAW,OAAOlL,KAAKmU,cAAgBe,GAAarJ,KAAQ,CAK5DiI,aAAW,OAAO9T,KAAKkL,UAAYlL,KAAKqD,KAAK4W,IAAO,CAIpDC,iBACA,OAAOla,KAAKqD,KAAK6W,aAAela,KAAKqD,KAAKzB,KAAO,MAAQ,SAC5D,CAIDoU,mBACI,IAAK,IAAI9T,KAAKlC,KAAKO,MACf,GAAIP,KAAKO,MAAM2B,GAAGiY,WACd,OAAO,EACf,OAAO,CACV,CAKDnK,kBAAkB3E,GACd,OAAOrL,MAAQqL,GAASrL,KAAKmU,aAAa8B,WAAW5K,EAAM8I,aAC9D,CAIDsF,aAAalZ,GACT,OAAKA,GAASP,KAAKoT,aACRpT,KAAKoT,aAELqG,GAAazZ,KAAKO,MAAOA,EACvC,CASDwN,OAAOxN,EAAQ,KAAM8G,EAASyG,GAC1B,GAAI9N,KAAKuJ,OACL,MAAM,IAAIjI,MAAM,8CACpB,OAAO,IAAI0R,GAAKhT,KAAMA,KAAKyZ,aAAalZ,GAAQ6J,EAAS3B,KAAKpB,GAAU+F,EAAKgN,QAAQtM,GACxF,CAMDuM,cAAc9Z,EAAQ,KAAM8G,EAASyG,GAEjC,GADAzG,EAAU+C,EAAS3B,KAAKpB,IACnBrH,KAAK8Q,aAAazJ,GACnB,MAAM,IAAI8E,WAAW,4BAA8BnM,KAAK2B,MAC5D,OAAO,IAAIqR,GAAKhT,KAAMA,KAAKyZ,aAAalZ,GAAQ8G,EAAS+F,EAAKgN,QAAQtM,GACzE,CASD2I,cAAclW,EAAQ,KAAM8G,EAASyG,GAGjC,GAFAvN,EAAQP,KAAKyZ,aAAalZ,GAC1B8G,EAAU+C,EAAS3B,KAAKpB,GACpBA,EAAQqB,KAAM,CACd,IAAI8I,EAASxR,KAAKmU,aAAa+B,WAAW7O,GAC1C,IAAKmK,EACD,OAAO,KACXnK,EAAUmK,EAAO5I,OAAOvB,EAC3B,CACD,IAAIiT,EAAUta,KAAKmU,aAAaC,cAAc/M,GAC1CoK,EAAQ6I,GAAWA,EAAQpE,WAAW9L,EAASyB,OAAO,GAC1D,OAAK4F,EAEE,IAAIuB,GAAKhT,KAAMO,EAAO8G,EAAQuB,OAAO6I,GAAQrE,EAAKgN,QAAQtM,IADtD,IAEd,CAKDgD,aAAazJ,GACT,IAAIwB,EAAS7I,KAAKmU,aAAaC,cAAc/M,GAC7C,IAAKwB,IAAWA,EAAO2L,SACnB,OAAO,EACX,IAAK,IAAI3R,EAAI,EAAGA,EAAIwE,EAAQ6B,WAAYrG,IACpC,IAAK7C,KAAKyU,YAAYpN,EAAQ+B,MAAMvG,GAAGiL,OACnC,OAAO,EACf,OAAO,CACV,CAIDyM,eAAeC,GACX,OAAuB,MAAhBxa,KAAK+Z,SAAmB/Z,KAAK+Z,QAAQrD,QAAQ8D,IAAa,CACpE,CAID/F,YAAY3G,GACR,GAAoB,MAAhB9N,KAAK+Z,QACL,OAAO,EACX,IAAK,IAAIlX,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,IAC9B,IAAK7C,KAAKua,eAAezM,EAAMjL,GAAGsI,MAC9B,OAAO,EACf,OAAO,CACV,CAIDsP,aAAa3M,GACT,GAAoB,MAAhB9N,KAAK+Z,QACL,OAAOjM,EACX,IAAI7B,EACJ,IAAK,IAAIpJ,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,IACzB7C,KAAKua,eAAezM,EAAMjL,GAAGsI,MAIzBc,GACLA,EAAKlE,KAAK+F,EAAMjL,IAJXoJ,IACDA,EAAO6B,EAAMhG,MAAM,EAAGjF,IAMlC,OAAQoJ,EAAeA,EAAKzE,OAASyE,EAAOmB,EAAKY,KAAlCF,CAClB,CAIa,eAACd,EAAOJ,GAClB,IAAI/D,EAASkK,OAAOhF,OAAO,MAC3Bf,EAAMzE,SAAQ,CAAC5G,EAAM0B,IAASwF,EAAOlH,GAAQ,IAAImY,GAASnY,EAAMiL,EAAQvJ,KACxE,IAAIqX,EAAU9N,EAAOvJ,KAAKsX,SAAW,MACrC,IAAK9R,EAAO6R,GACR,MAAM,IAAIvO,WAAW,yCAA2CuO,EAAU,MAC9E,IAAK7R,EAAOW,KACR,MAAM,IAAI2C,WAAW,oCACzB,IAAK,IAAIyB,KAAK/E,EAAOW,KAAKjJ,MACtB,MAAM,IAAI4L,WAAW,iDACzB,OAAOtD,CACV,EAGL,MAAMgR,GACFtY,YAAYqZ,GACR5a,KAAKuZ,WAAaxG,OAAOzL,UAAUuT,eAAeC,KAAKF,EAAS,WAChE5a,KAAKwZ,QAAUoB,EAAQpB,OAC1B,CACGW,iBACA,OAAQna,KAAKuZ,UAChB,EASL,MAAMwB,GAIFxZ,YAIAI,EAIA6L,EAIAZ,EAIAvJ,GACIrD,KAAK2B,KAAOA,EACZ3B,KAAKwN,KAAOA,EACZxN,KAAK4M,OAASA,EACd5M,KAAKqD,KAAOA,EACZrD,KAAKO,MAAQqZ,GAAUvW,EAAK9C,OAC5BP,KAAKgb,SAAW,KAChB,IAAI5B,EAAWhG,GAAapT,KAAKO,OACjCP,KAAKib,SAAW7B,EAAW,IAAIhM,EAAKpN,KAAMoZ,GAAY,IACzD,CAMDrL,OAAOxN,EAAQ,MACX,OAAKA,GAASP,KAAKib,SACRjb,KAAKib,SACT,IAAI7N,EAAKpN,KAAMyZ,GAAazZ,KAAKO,MAAOA,GAClD,CAIa,eAACuN,EAAOlB,GAClB,IAAI/D,EAASkK,OAAOhF,OAAO,MAAOP,EAAO,EAEzC,OADAM,EAAMvF,SAAQ,CAAC5G,EAAM0B,IAASwF,EAAOlH,GAAQ,IAAIoZ,GAASpZ,EAAM6L,IAAQZ,EAAQvJ,KACzEwF,CACV,CAKD4E,cAAc7H,GACV,IAAK,IAAI/C,EAAI,EAAGA,EAAI+C,EAAI4B,OAAQ3E,IACxB+C,EAAI/C,GAAGsI,MAAQnL,OACf4F,EAAMA,EAAIkC,MAAM,EAAGjF,GAAGqF,OAAOtC,EAAIkC,MAAMjF,EAAI,IAC3CA,KAER,OAAO+C,CACV,CAID8H,QAAQ9H,GACJ,IAAK,IAAI/C,EAAI,EAAGA,EAAI+C,EAAI4B,OAAQ3E,IAC5B,GAAI+C,EAAI/C,GAAGsI,MAAQnL,KACf,OAAO4F,EAAI/C,EACtB,CAKD0K,SAASlC,GACL,OAAOrL,KAAKgb,SAAStE,QAAQrL,IAAU,CAC1C,EAWL,MAAM6P,GAIF3Z,YAAY8B,GAMRrD,KAAK0S,OAASK,OAAOhF,OAAO,MAC5B/N,KAAKqD,KAAO,CACR2J,MAAO5F,EAAAA,KAAgB/D,EAAK2J,OAC5Bc,MAAO1G,EAAAA,KAAgB/D,EAAKyK,OAAS,CAAC,GACtC6M,QAAStX,EAAKsX,SAElB3a,KAAKgN,MAAQ8M,GAAStB,QAAQxY,KAAKqD,KAAK2J,MAAOhN,MAC/CA,KAAK8N,MAAQiN,GAASvC,QAAQxY,KAAKqD,KAAKyK,MAAO9N,MAC/C,IAAImb,EAAmBpI,OAAOhF,OAAO,MACrC,IAAK,IAAIjF,KAAQ9I,KAAKgN,MAAO,CACzB,GAAIlE,KAAQ9I,KAAK8N,MACb,MAAM,IAAI3B,WAAWrD,EAAO,sCAChC,IAAIqC,EAAOnL,KAAKgN,MAAMlE,GAAOsS,EAAcjQ,EAAK9H,KAAKgE,SAAW,GAAIgU,EAAWlQ,EAAK9H,KAAKyK,MACzF3C,EAAKgJ,aAAegH,EAAiBC,KAChCD,EAAiBC,GAAelG,GAAaoG,MAAMF,EAAapb,KAAKgN,QAC1E7B,EAAKiH,cAAgBjH,EAAKgJ,aAAa/B,cACvCjH,EAAK4O,QAAsB,KAAZsB,EAAkB,KAC7BA,EAAWE,GAAYvb,KAAMqb,EAAS7D,MAAM,MAC5B,IAAZ6D,GAAmBlQ,EAAKiH,cAAqB,KAAL,EACnD,CACD,IAAK,IAAItJ,KAAQ9I,KAAK8N,MAAO,CACzB,IAAI3C,EAAOnL,KAAK8N,MAAMhF,GAAO0S,EAAOrQ,EAAK9H,KAAKkK,SAC9CpC,EAAK6P,SAAmB,MAARQ,EAAe,CAACrQ,GAAgB,IAARqQ,EAAa,GAAKD,GAAYvb,KAAMwb,EAAKhE,MAAM,KAC1F,CACDxX,KAAK6M,aAAe7M,KAAK6M,aAAa4O,KAAKzb,MAC3CA,KAAK8U,aAAe9U,KAAK8U,aAAa2G,KAAKzb,MAC3CA,KAAK0b,YAAc1b,KAAKgN,MAAMhN,KAAKqD,KAAKsX,SAAW,OACnD3a,KAAK0S,OAAOiJ,UAAY5I,OAAOhF,OAAO,KACzC,CAOD9C,KAAKE,EAAM5K,EAAQ,KAAM8G,EAASyG,GAC9B,GAAmB,iBAAR3C,EACPA,EAAOnL,KAAK+U,SAAS5J,OACpB,MAAMA,aAAgB2O,IACvB,MAAM,IAAI3N,WAAW,sBAAwBhB,GAC5C,GAAIA,EAAKyB,QAAU5M,KACpB,MAAM,IAAImM,WAAW,yCAA2ChB,EAAKxJ,KAAO,IAA5E,CACJ,OAAOwJ,EAAKkP,cAAc9Z,EAAO8G,EAASyG,EAC7C,CAKDtE,KAAKA,EAAMsE,GACP,IAAI3C,EAAOnL,KAAKgN,MAAMxD,KACtB,OAAO,IAAIwL,GAAS7J,EAAMA,EAAKiI,aAAc5J,EAAM4D,EAAKgN,QAAQtM,GACnE,CAIDwF,KAAKnI,EAAM5K,GAGP,MAFmB,iBAAR4K,IACPA,EAAOnL,KAAK8N,MAAM3C,IACfA,EAAK4C,OAAOxN,EACtB,CAKDsM,aAAagB,GACT,OAAOmF,GAAKrE,SAAS3O,KAAM6N,EAC9B,CAKDiH,aAAajH,GACT,OAAOT,EAAKuB,SAAS3O,KAAM6N,EAC9B,CAIDkH,SAASpT,GACL,IAAI8F,EAAQzH,KAAKgN,MAAMrL,GACvB,IAAK8F,EACD,MAAM,IAAI0E,WAAW,sBAAwBxK,GACjD,OAAO8F,CACV,EAEL,SAAS8T,GAAY3O,EAAQkB,GACzB,IAAIrG,EAAQ,GACZ,IAAK,IAAI5E,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,IAAK,CACnC,IAAIlB,EAAOmM,EAAMjL,GAAIyQ,EAAO1G,EAAOkB,MAAMnM,GAAOia,EAAKtI,EACrD,GAAIA,EACA7L,EAAMM,KAAKuL,QAGX,IAAK,IAAIxK,KAAQ8D,EAAOkB,MAAO,CAC3B,IAAIwF,EAAO1G,EAAOkB,MAAMhF,IACZ,KAARnH,GAAgB2R,EAAKjQ,KAAK2W,OAAS1G,EAAKjQ,KAAK2W,MAAMxC,MAAM,KAAKd,QAAQ/U,IAAS,IAC/E8F,EAAMM,KAAK6T,EAAKtI,EACvB,CAEL,IAAKsI,EACD,MAAM,IAAIhE,YAAY,uBAAyB9J,EAAMjL,GAAK,IACjE,CACD,OAAO4E,CACV,CAOD,MAAMoU,GAKFta,YAIAqL,EAKAkP,GACI9b,KAAK4M,OAASA,EACd5M,KAAK8b,MAAQA,EAIb9b,KAAK+b,KAAO,GAIZ/b,KAAKgc,OAAS,GACdF,EAAMvT,SAAQ0T,IACNA,EAAKC,IACLlc,KAAK+b,KAAKhU,KAAKkU,GACVA,EAAKE,OACVnc,KAAKgc,OAAOjU,KAAKkU,EAAjB,IAGRjc,KAAKoc,gBAAkBpc,KAAK+b,KAAKM,MAAKva,IAClC,IAAK,aAAaqW,KAAKrW,EAAEoa,OAASpa,EAAEmJ,KAChC,OAAO,EACX,IAAIA,EAAO2B,EAAOI,MAAMlL,EAAEmJ,MAC1B,OAAOA,EAAKkJ,aAAaQ,UAAU1J,EAAnC,GAEP,CAIDqQ,MAAMgB,EAAK1B,EAAU,CAAC,GAClB,IAAI2B,EAAU,IAAIC,GAAaxc,KAAM4a,GAAS,GAE9C,OADA2B,EAAQE,OAAOH,EAAK1B,EAAQnS,KAAMmS,EAAQtQ,IACnCiS,EAAQG,QAClB,CASDC,WAAWL,EAAK1B,EAAU,CAAC,GACvB,IAAI2B,EAAU,IAAIC,GAAaxc,KAAM4a,GAAS,GAE9C,OADA2B,EAAQE,OAAOH,EAAK1B,EAAQnS,KAAMmS,EAAQtQ,IACnC6D,GAAMyO,QAAQL,EAAQG,SAChC,CAIDG,SAASP,EAAKC,EAAS9K,GACnB,IAAK,IAAI5O,EAAI4O,EAAQzR,KAAK+b,KAAKrF,QAAQjF,GAAS,EAAI,EAAG5O,EAAI7C,KAAK+b,KAAKvU,OAAQ3E,IAAK,CAC9E,IAAIoZ,EAAOjc,KAAK+b,KAAKlZ,GACrB,GAAIia,GAAQR,EAAKL,EAAKC,YACExU,IAAnBuU,EAAKc,WAA2BT,EAAIU,cAAgBf,EAAKc,cACxDd,EAAKM,SAAWA,EAAQU,eAAehB,EAAKM,UAAW,CACzD,GAAIN,EAAKiB,SAAU,CACf,IAAIrU,EAASoT,EAAKiB,SAASZ,GAC3B,IAAe,IAAXzT,EACA,SACJoT,EAAK1b,MAAQsI,QAAUnB,CAC1B,CACD,OAAOuU,CACV,CACJ,CACJ,CAIDkB,WAAWrU,EAAMrI,EAAO8b,EAAS9K,GAC7B,IAAK,IAAI5O,EAAI4O,EAAQzR,KAAKgc,OAAOtF,QAAQjF,GAAS,EAAI,EAAG5O,EAAI7C,KAAKgc,OAAOxU,OAAQ3E,IAAK,CAClF,IAAIoZ,EAAOjc,KAAKgc,OAAOnZ,GAAIsZ,EAAQF,EAAKE,MACxC,KAA2B,GAAvBA,EAAMzF,QAAQ5N,IACdmT,EAAKM,UAAYA,EAAQU,eAAehB,EAAKM,UAI7CJ,EAAM3U,OAASsB,EAAKtB,SACkB,IAAjC2U,EAAMiB,WAAWtU,EAAKtB,SAAiB2U,EAAMrU,MAAMgB,EAAKtB,OAAS,IAAM/G,IANhF,CAQA,GAAIwb,EAAKiB,SAAU,CACf,IAAIrU,EAASoT,EAAKiB,SAASzc,GAC3B,IAAe,IAAXoI,EACA,SACJoT,EAAK1b,MAAQsI,QAAUnB,CAC1B,CACD,OAAOuU,CAPK,CAQf,CACJ,CAIiB,mBAACrP,GACf,IAAI/D,EAAS,GACb,SAASoG,EAAOgN,GACZ,IAAIoB,EAA4B,MAAjBpB,EAAKoB,SAAmB,GAAKpB,EAAKoB,SAAUxa,EAAI,EAC/D,KAAOA,EAAIgG,EAAOrB,OAAQ3E,IAAK,CAC3B,IAAImP,EAAOnJ,EAAOhG,GAAIya,EAAgC,MAAjBtL,EAAKqL,SAAmB,GAAKrL,EAAKqL,SACvE,GAAIC,EAAeD,EACf,KACP,CACDxU,EAAOb,OAAOnF,EAAG,EAAGoZ,EACvB,CACD,IAAK,IAAIta,KAAQiL,EAAOkB,MAAO,CAC3B,IAAIgO,EAAQlP,EAAOkB,MAAMnM,GAAM0B,KAAKka,SAChCzB,GACAA,EAAMvT,SAAQ0T,IACVhN,EAAOgN,EAAOhQ,GAAKgQ,IACnBA,EAAK3I,KAAO3R,CAAZ,GAEX,CACD,IAAK,IAAIA,KAAQiL,EAAOI,MAAO,CAC3B,IAAI8O,EAAQlP,EAAOI,MAAMrL,GAAM0B,KAAKka,SAChCzB,GACAA,EAAMvT,SAAQ0T,IACVhN,EAAOgN,EAAOhQ,GAAKgQ,IACnBA,EAAKhR,KAAOtJ,CAAZ,GAEX,CACD,OAAOkH,CACV,CAMgB,kBAAC+D,GACd,OAAOA,EAAO8F,OAAO8K,YAChB5Q,EAAO8F,OAAO8K,UAAY,IAAI3B,GAAUjP,EAAQiP,GAAU4B,YAAY7Q,IAC9E,EAEL,MAAM8Q,GAAY,CACdC,SAAS,EAAMC,SAAS,EAAMC,OAAO,EAAMC,YAAY,EAAMC,QAAQ,EACrEC,IAAI,EAAMC,KAAK,EAAMC,IAAI,EAAMC,UAAU,EAAMC,YAAY,EAAMC,QAAQ,EACzEC,QAAQ,EAAMC,MAAM,EAAMC,IAAI,EAAMC,IAAI,EAAMC,IAAI,EAAMC,IAAI,EAAMC,IAAI,EACtEC,IAAI,EAAMC,QAAQ,EAAMC,QAAQ,EAAMC,IAAI,EAAMC,IAAI,EAAMC,UAAU,EAAMC,IAAI,EAC9EC,QAAQ,EAAMnd,GAAG,EAAMod,KAAK,EAAMC,SAAS,EAAMC,OAAO,EAAMC,OAAO,EAAMC,IAAI,GAE7EC,GAAa,CACfC,MAAM,EAAMT,UAAU,EAAMU,QAAQ,EAAMC,QAAQ,EAAM1D,OAAO,EAAM2D,OAAO,GAE1EC,GAAW,CAAEZ,IAAI,EAAMM,IAAI,GAE3BO,GAAkB,EAAGC,GAAuB,EAAGC,GAAgB,EACrE,SAASC,GAAahV,EAAMiV,EAAoBnL,GAC5C,OAA0B,MAAtBmL,GACQA,EAAqBJ,GAAkB,IACnB,SAAvBI,EAAgCH,GAAuB,GACzD9U,GAA2B,OAAnBA,EAAK+O,WAAsB8F,GAAkBC,GAAuBhL,GAAQiL,EAC9F,CACD,MAAMG,GACF9e,YAAY4J,EAAM5K,EAElBuN,EAEAwS,EAAcC,EAAOrM,EAAO0G,GACxB5a,KAAKmL,KAAOA,EACZnL,KAAKO,MAAQA,EACbP,KAAK8N,MAAQA,EACb9N,KAAKsgB,aAAeA,EACpBtgB,KAAKugB,MAAQA,EACbvgB,KAAK4a,QAAUA,EACf5a,KAAKqH,QAAU,GAEfrH,KAAKwgB,YAAcpT,EAAKY,KAExBhO,KAAKygB,WAAa,GAClBzgB,KAAKkU,MAAQA,IAAU0G,EAAUsF,GAAgB,KAAO/U,EAAKgJ,aAChE,CACDwC,aAAa1L,GACT,IAAKjL,KAAKkU,MAAO,CACb,IAAKlU,KAAKmL,KACN,MAAO,GACX,IAAIuV,EAAO1gB,KAAKmL,KAAKgJ,aAAa+B,WAAW9L,EAAS3B,KAAKwC,IAC3D,IAAIyV,EAGC,CACD,IAAoCC,EAAhCjW,EAAQ1K,KAAKmL,KAAKgJ,aACtB,OAAIwM,EAAOjW,EAAMiM,aAAa1L,EAAKE,QAC/BnL,KAAKkU,MAAQxJ,EACNiW,GAGA,IAEd,CAXG3gB,KAAKkU,MAAQlU,KAAKmL,KAAKgJ,aAAaC,cAAcsM,EAYzD,CACD,OAAO1gB,KAAKkU,MAAMyC,aAAa1L,EAAKE,KACvC,CACDuR,OAAOrO,GACH,KAAMrO,KAAK4a,QAAUoF,IAAkB,CACnC,IAAkD/c,EAA9CqI,EAAOtL,KAAKqH,QAAQrH,KAAKqH,QAAQG,OAAS,GAC9C,GAAI8D,GAAQA,EAAK/B,SAAWtG,EAAI,oBAAoB2d,KAAKtV,EAAK9B,OAAQ,CAClE,IAAIA,EAAO8B,EACPA,EAAK9B,KAAKhC,QAAUvE,EAAE,GAAGuE,OACzBxH,KAAKqH,QAAQoQ,MAEbzX,KAAKqH,QAAQrH,KAAKqH,QAAQG,OAAS,GAAKgC,EAAKkC,SAASlC,EAAKA,KAAK1B,MAAM,EAAG0B,EAAKA,KAAKhC,OAASvE,EAAE,GAAGuE,QACxG,CACJ,CACD,IAAIH,EAAU+C,EAAS3B,KAAKzI,KAAKqH,SAGjC,OAFKgH,GAAWrO,KAAKkU,QACjB7M,EAAUA,EAAQuB,OAAO5I,KAAKkU,MAAMgC,WAAW9L,EAASyB,OAAO,KAC5D7L,KAAKmL,KAAOnL,KAAKmL,KAAK4C,OAAO/N,KAAKO,MAAO8G,EAASrH,KAAK8N,OAASzG,CAC1E,CACDwZ,iBAAiBvN,GACb,IAAK,IAAIzQ,EAAI7C,KAAKygB,WAAWjZ,OAAS,EAAG3E,GAAK,EAAGA,IAC7C,GAAIyQ,EAAKpH,GAAGlM,KAAKygB,WAAW5d,IACxB,OAAO7C,KAAKygB,WAAWzY,OAAOnF,EAAG,GAAG,EAC/C,CACDie,aAAaC,GACT,IAAK,IAAIle,EAAI,EAAGme,EAAUhhB,KAAKsgB,aAAczd,EAAIme,EAAQxZ,OAAQ3E,IAAK,CAClE,IAAIyQ,EAAO0N,EAAQne,IACd7C,KAAKmL,KAAOnL,KAAKmL,KAAKoP,eAAejH,EAAKnI,MAAQ8V,GAAa3N,EAAKnI,KAAM4V,MAC1EzN,EAAK5F,QAAQ1N,KAAKwgB,eACnBxgB,KAAKwgB,YAAclN,EAAKjG,SAASrN,KAAKwgB,aACtCxgB,KAAKsgB,aAAehN,EAAK7F,cAAczN,KAAKsgB,cAEnD,CACJ,CACDY,cAAcjW,GACV,OAAIjL,KAAKmL,KACEnL,KAAKmL,KAAKiH,cACjBpS,KAAKqH,QAAQG,OACNxH,KAAKqH,QAAQ,GAAG0K,SACpB9G,EAAKkW,aAAezD,GAAU7C,eAAe5P,EAAKkW,WAAWC,SAASC,cAChF,EAEL,MAAM7E,GACFjb,YAEA+f,EAEA1G,EAAS2G,GACLvhB,KAAKshB,OAASA,EACdthB,KAAK4a,QAAUA,EACf5a,KAAKuhB,OAASA,EACdvhB,KAAKc,KAAO,EACZ,IAA+B0gB,EAA3B7G,EAAUC,EAAQD,QAClB8G,EAAatB,GAAa,KAAMvF,EAAQwF,mBAAoB,IAAMmB,EAASrB,GAAgB,GAE3FsB,EADA7G,EACa,IAAI0F,GAAY1F,EAAQxP,KAAMwP,EAAQpa,MAAO6M,EAAKY,KAAMZ,EAAKY,MAAM,EAAM4M,EAAQ8G,UAAY/G,EAAQxP,KAAKgJ,aAAcsN,GAExH,IAAIpB,GADZkB,EACwB,KAEAD,EAAO1U,OAAO8O,YAFR,KAAMtO,EAAKY,KAAMZ,EAAKY,MAAM,EAAM,KAAMyT,GAG/EzhB,KAAKgN,MAAQ,CAACwU,GACdxhB,KAAKmF,KAAOyV,EAAQ+G,cACpB3hB,KAAK4hB,YAAa,CACrB,CACGC,UACA,OAAO7hB,KAAKgN,MAAMhN,KAAKc,KAC1B,CAIDghB,OAAOxF,GACH,GAAoB,GAAhBA,EAAIvH,SACJ/U,KAAK+hB,YAAYzF,QAEhB,GAAoB,GAAhBA,EAAIvH,SAAe,CACxB,IAAIoH,EAAQG,EAAI0F,aAAa,SACzBlU,EAAQqO,EAAQnc,KAAKiiB,WAAWC,GAAY/F,IAAU,KAAM0F,EAAM7hB,KAAK6hB,IAC3E,GAAa,MAAT/T,EACA,IAAK,IAAIjL,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,IAC9B7C,KAAKmiB,eAAerU,EAAMjL,IAElC,GADA7C,KAAKoiB,WAAW9F,GACH,MAATxO,EACA,IAAK,IAAIjL,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,IAC9B7C,KAAKqiB,kBAAkBvU,EAAMjL,GAAIgf,EAC5C,CACJ,CACDE,YAAYzF,GACR,IAAI7b,EAAQ6b,EAAIgG,UACZT,EAAM7hB,KAAK6hB,IACf,GAAIA,EAAIjH,QAAUqF,IACd4B,EAAIX,cAAc5E,IAClB,mBAAmBnE,KAAK1X,GAAQ,CAChC,GAAMohB,EAAIjH,QAAUoF,GAkBhBvf,EAJOohB,EAAIjH,QAAUqF,GAIbxf,EAAM0O,QAAQ,SAAU,MAHxB1O,EAAM0O,QAAQ,YAAa,UAVnC,GAJA1O,EAAQA,EAAM0O,QAAQ,oBAAqB,KAIvC,mBAAmBgJ,KAAK1X,IAAUT,KAAKc,MAAQd,KAAKgN,MAAMxF,OAAS,EAAG,CACtE,IAAIqJ,EAAagR,EAAIxa,QAAQwa,EAAIxa,QAAQG,OAAS,GAC9C+a,EAAgBjG,EAAIkG,kBACnB3R,GACA0R,GAA2C,MAA1BA,EAAcnB,UAC/BvQ,EAAWtH,QAAU,mBAAmB4O,KAAKtH,EAAWrH,SACzD/I,EAAQA,EAAMqH,MAAM,GAC3B,CAQDrH,GACAT,KAAKyiB,WAAWziB,KAAKshB,OAAO1U,OAAOpD,KAAK/I,IAC5CT,KAAK0iB,WAAWpG,EACnB,MAEGtc,KAAK2iB,WAAWrG,EAEvB,CAGD8F,WAAW9F,EAAKsG,GACZ,IAAuCC,EAAnClhB,EAAO2a,EAAI8E,SAASC,cACpBtB,GAASlF,eAAelZ,IAAS3B,KAAKshB,OAAOlF,gBAC7C0G,GAAcxG,GAClB,IAAIL,EAAQjc,KAAK4a,QAAQmI,cAAgB/iB,KAAK4a,QAAQmI,aAAazG,KAC9DuG,EAAS7iB,KAAKshB,OAAOzE,SAASP,EAAKtc,KAAM4iB,IAC9C,GAAI3G,EAAOA,EAAK+G,OAAStD,GAAW7E,eAAelZ,GAC/C3B,KAAK2iB,WAAWrG,GAChBtc,KAAKijB,eAAe3G,QAEnB,IAAKL,GAAQA,EAAKiH,MAAQjH,EAAKkH,YAAa,CACzClH,GAAQA,EAAKkH,YACbnjB,KAAKc,KAAOoJ,KAAKS,IAAI,EAAG3K,KAAKc,KAAO,GAC/Bmb,GAAQA,EAAKiH,KAAKnO,WACvBuH,EAAML,EAAKiH,MACf,IAAIE,EAAMvB,EAAM7hB,KAAK6hB,IAAKwB,EAAgBrjB,KAAK4hB,WAC/C,GAAIlE,GAAU7C,eAAelZ,GACzByhB,GAAO,EACFvB,EAAI1W,OACLnL,KAAK4hB,YAAa,QAErB,IAAKtF,EAAI7Q,WAEV,YADAzL,KAAKsjB,aAAahH,GAGtBtc,KAAKyc,OAAOH,GACR8G,GACApjB,KAAKojB,KAAKvB,GACd7hB,KAAK4hB,WAAayB,CACrB,MAEGrjB,KAAKujB,iBAAiBjH,EAAKL,GAAyB,IAAnBA,EAAKuH,UAAsBX,OAASnb,EAE5E,CAED4b,aAAahH,GACW,MAAhBA,EAAI8E,UAAoBphB,KAAK6hB,IAAI1W,MAAQnL,KAAK6hB,IAAI1W,KAAKiH,eACvDpS,KAAK+hB,YAAYzF,EAAImH,cAAcC,eAAe,MACzD,CAEDT,eAAe3G,GAES,MAAhBA,EAAI8E,UAAsBphB,KAAK6hB,IAAI1W,MAASnL,KAAK6hB,IAAI1W,KAAKiH,eAC1DpS,KAAK2jB,UAAU3jB,KAAKshB,OAAO1U,OAAOpD,KAAK,KAC9C,CAIDyY,WAAWjG,GACP,IAAIlO,EAAQV,EAAKY,KACjBmO,EAAO,IAAK,IAAItZ,EAAI,EAAGA,EAAImZ,EAAOxU,OAAQ3E,GAAK,EAC3C,IAAK,IAAI4O,IAAqB,CAC1B,IAAIwK,EAAOjc,KAAKshB,OAAOnE,WAAWnB,EAAOnZ,GAAImZ,EAAOnZ,EAAI,GAAI7C,KAAMyR,GAClE,IAAKwK,EACD,SAASE,EACb,GAAIF,EAAK+G,OACL,OAAO,KAEX,GADAlV,EAAQ9N,KAAKshB,OAAO1U,OAAOkB,MAAMmO,EAAK3I,MAAMvF,OAAOkO,EAAK1b,OAAO8M,SAASS,IACjD,IAAnBmO,EAAKuH,UAGL,MAFA/R,EAAQwK,CAGf,CAEL,OAAOnO,CACV,CAIDyV,iBAAiBjH,EAAKL,EAAM2H,GACxB,IAAIR,EAAMrO,EAAUzB,EACpB,GAAI2I,EAAKhR,KACL8J,EAAW/U,KAAKshB,OAAO1U,OAAOI,MAAMiP,EAAKhR,MACpC8J,EAAS7J,OAGJlL,KAAKyiB,WAAW1N,EAAShH,OAAOkO,EAAK1b,SAC3CP,KAAKsjB,aAAahH,GAHlB8G,EAAOpjB,KAAK6jB,MAAM9O,EAAUkH,EAAK1b,OAAS,KAAM0b,EAAKmE,wBAMxD,CACD,IAAI5F,EAAWxa,KAAKshB,OAAO1U,OAAOkB,MAAMmO,EAAK3I,MAC7CA,EAAOkH,EAASzM,OAAOkO,EAAK1b,OAC5BP,KAAKmiB,eAAe7O,EACvB,CACD,IAAIwQ,EAAU9jB,KAAK6hB,IACnB,GAAI9M,GAAYA,EAAS7J,OACrBlL,KAAK2iB,WAAWrG,QAEf,GAAIsH,EACL5jB,KAAKoiB,WAAW9F,EAAKsH,QAEpB,GAAI3H,EAAK8H,WACV/jB,KAAK2iB,WAAWrG,GAChBL,EAAK8H,WAAWzH,EAAKtc,KAAKshB,OAAO1U,QAAQrE,SAAQ0C,GAAQjL,KAAKyiB,WAAWxX,SAExE,CACD,IAAI+Y,EAAa1H,EACiB,iBAAvBL,EAAKgI,eACZD,EAAa1H,EAAI4H,cAAcjI,EAAKgI,gBACD,mBAAvBhI,EAAKgI,eACjBD,EAAa/H,EAAKgI,eAAe3H,GAC5BL,EAAKgI,iBACVD,EAAa/H,EAAKgI,gBACtBjkB,KAAKmkB,WAAW7H,EAAK0H,GAAY,GACjChkB,KAAKyc,OAAOuH,EACf,CACGZ,GAAQpjB,KAAKojB,KAAKU,IAClB9jB,KAAKc,OACLwS,GACAtT,KAAKqiB,kBAAkB/O,EAAMwQ,EACpC,CAIDrH,OAAOjS,EAAQiG,EAAYC,GACvB,IAAI3E,EAAQ0E,GAAc,EAC1B,IAAK,IAAI6L,EAAM7L,EAAajG,EAAO4Z,WAAW3T,GAAcjG,EAAOiB,WAAYhB,EAAkB,MAAZiG,EAAmB,KAAOlG,EAAO4Z,WAAW1T,GAAW4L,GAAO7R,EAAK6R,EAAMA,EAAI+H,cAAetY,EAC7K/L,KAAKskB,YAAY9Z,EAAQuB,GACzB/L,KAAK8hB,OAAOxF,GAEhBtc,KAAKskB,YAAY9Z,EAAQuB,EAC5B,CAID4X,UAAU1Y,GACN,IAAIsZ,EAAOnB,EACX,IAAK,IAAI9T,EAAQtP,KAAKc,KAAMwO,GAAS,EAAGA,IAAS,CAC7C,IAAIkV,EAAKxkB,KAAKgN,MAAMsC,GAChB7H,EAAQ+c,EAAG7N,aAAa1L,GAC5B,GAAIxD,KAAW8c,GAASA,EAAM/c,OAASC,EAAMD,UACzC+c,EAAQ9c,EACR2b,EAAOoB,GACF/c,EAAMD,QACP,MAER,GAAIgd,EAAGjE,MACH,KACP,CACD,IAAKgE,EACD,OAAO,EACXvkB,KAAKojB,KAAKA,GACV,IAAK,IAAIvgB,EAAI,EAAGA,EAAI0hB,EAAM/c,OAAQ3E,IAC9B7C,KAAKykB,WAAWF,EAAM1hB,GAAI,MAAM,GACpC,OAAO,CACV,CAED4f,WAAWxX,GACP,GAAIA,EAAK8G,UAAY/R,KAAK4hB,aAAe5hB,KAAK6hB,IAAI1W,KAAM,CACpD,IAAIuZ,EAAQ1kB,KAAK2kB,uBACbD,GACA1kB,KAAKykB,WAAWC,EACvB,CACD,GAAI1kB,KAAK2jB,UAAU1Y,GAAO,CACtBjL,KAAK4kB,aACL,IAAI/C,EAAM7hB,KAAK6hB,IACfA,EAAIf,aAAa7V,EAAKE,MAClB0W,EAAI3N,QACJ2N,EAAI3N,MAAQ2N,EAAI3N,MAAMS,UAAU1J,EAAKE,OACzC,IAAI2C,EAAQ+T,EAAIrB,YAChB,IAAK,IAAI3d,EAAI,EAAGA,EAAIoI,EAAK6C,MAAMtG,OAAQ3E,IAC9Bgf,EAAI1W,OAAQ0W,EAAI1W,KAAKoP,eAAetP,EAAK6C,MAAMjL,GAAGsI,QACnD2C,EAAQ7C,EAAK6C,MAAMjL,GAAGwK,SAASS,IAEvC,OADA+T,EAAIxa,QAAQU,KAAKkD,EAAKqI,KAAKxF,KACpB,CACV,CACD,OAAO,CACV,CAGD+V,MAAM1Y,EAAM5K,EAAOskB,GACf,IAAIjJ,EAAK5b,KAAK2jB,UAAUxY,EAAK4C,OAAOxN,IAGpC,OAFIqb,GACA5b,KAAKykB,WAAWtZ,EAAM5K,GAAO,EAAMskB,GAChCjJ,CACV,CAED6I,WAAWtZ,EAAM5K,EAAQ,KAAMggB,GAAQ,EAAOsE,GAC1C7kB,KAAK4kB,aACL,IAAI/C,EAAM7hB,KAAK6hB,IACfA,EAAIf,aAAa3V,GACjB0W,EAAI3N,MAAQ2N,EAAI3N,OAAS2N,EAAI3N,MAAMS,UAAUxJ,GAC7C,IAAIyP,EAAUuF,GAAahV,EAAM0Z,EAAYhD,EAAIjH,SAC5CiH,EAAIjH,QAAUsF,IAAwC,GAAtB2B,EAAIxa,QAAQG,SAC7CoT,GAAWsF,IACflgB,KAAKgN,MAAMjF,KAAK,IAAIsY,GAAYlV,EAAM5K,EAAOshB,EAAIrB,YAAaqB,EAAIvB,aAAcC,EAAO,KAAM3F,IAC7F5a,KAAKc,MACR,CAGD8jB,WAAWvW,GAAU,GACjB,IAAIxL,EAAI7C,KAAKgN,MAAMxF,OAAS,EAC5B,GAAI3E,EAAI7C,KAAKc,KAAM,CACf,KAAO+B,EAAI7C,KAAKc,KAAM+B,IAClB7C,KAAKgN,MAAMnK,EAAI,GAAGwE,QAAQU,KAAK/H,KAAKgN,MAAMnK,GAAG6Z,OAAOrO,IACxDrO,KAAKgN,MAAMxF,OAASxH,KAAKc,KAAO,CACnC,CACJ,CACD4b,SAGI,OAFA1c,KAAKc,KAAO,EACZd,KAAK4kB,WAAW5kB,KAAKuhB,QACdvhB,KAAKgN,MAAM,GAAG0P,OAAO1c,KAAKuhB,QAAUvhB,KAAK4a,QAAQkK,QAC3D,CACD1B,KAAK9Y,GACD,IAAK,IAAIzH,EAAI7C,KAAKc,KAAM+B,GAAK,EAAGA,IAC5B,GAAI7C,KAAKgN,MAAMnK,IAAMyH,EAEjB,OADAtK,KAAKc,KAAO+B,GACL,EAEf,OAAO,CACV,CACGkiB,iBACA/kB,KAAK4kB,aACL,IAAI3b,EAAM,EACV,IAAK,IAAIpG,EAAI7C,KAAKc,KAAM+B,GAAK,EAAGA,IAAK,CACjC,IAAIwE,EAAUrH,KAAKgN,MAAMnK,GAAGwE,QAC5B,IAAK,IAAI3B,EAAI2B,EAAQG,OAAS,EAAG9B,GAAK,EAAGA,IACrCuD,GAAO5B,EAAQ3B,GAAGgE,SAClB7G,GACAoG,GACP,CACD,OAAOA,CACV,CACDqb,YAAY9Z,EAAQ0C,GAChB,GAAIlN,KAAKmF,KACL,IAAK,IAAItC,EAAI,EAAGA,EAAI7C,KAAKmF,KAAKqC,OAAQ3E,IAC9B7C,KAAKmF,KAAKtC,GAAGoI,MAAQT,GAAUxK,KAAKmF,KAAKtC,GAAGqK,QAAUA,IACtDlN,KAAKmF,KAAKtC,GAAGoG,IAAMjJ,KAAK+kB,WAEvC,CACDpC,WAAWnY,GACP,GAAIxK,KAAKmF,KACL,IAAK,IAAItC,EAAI,EAAGA,EAAI7C,KAAKmF,KAAKqC,OAAQ3E,IACV,MAApB7C,KAAKmF,KAAKtC,GAAGoG,KAAkC,GAAnBuB,EAAOuK,UAAiBvK,EAAOwa,SAAShlB,KAAKmF,KAAKtC,GAAGoI,QACjFjL,KAAKmF,KAAKtC,GAAGoG,IAAMjJ,KAAK+kB,WAEvC,CACDZ,WAAW3Z,EAAQnD,EAASmK,GACxB,GAAIhH,GAAUnD,GAAWrH,KAAKmF,KAC1B,IAAK,IAAItC,EAAI,EAAGA,EAAI7C,KAAKmF,KAAKqC,OAAQ3E,IAClC,GAAwB,MAApB7C,KAAKmF,KAAKtC,GAAGoG,KAAkC,GAAnBuB,EAAOuK,UAAiBvK,EAAOwa,SAAShlB,KAAKmF,KAAKtC,GAAGoI,MAAO,CACxF,IAAIhC,EAAM5B,EAAQ4d,wBAAwBjlB,KAAKmF,KAAKtC,GAAGoI,MACnDhC,GAAOuI,EAAS,EAAI,KACpBxR,KAAKmF,KAAKtC,GAAGoG,IAAMjJ,KAAK+kB,WAC/B,CAEZ,CACDrC,WAAWwC,GACP,GAAIllB,KAAKmF,KACL,IAAK,IAAItC,EAAI,EAAGA,EAAI7C,KAAKmF,KAAKqC,OAAQ3E,IAC9B7C,KAAKmF,KAAKtC,GAAGoI,MAAQia,IACrBllB,KAAKmF,KAAKtC,GAAGoG,IAAMjJ,KAAK+kB,YAAcG,EAAS5C,UAAU9a,OAASxH,KAAKmF,KAAKtC,GAAGqK,QAE9F,CAED+P,eAAeV,GACX,GAAIA,EAAQ7F,QAAQ,MAAQ,EACxB,OAAO6F,EAAQ/E,MAAM,YAAY6E,KAAKrc,KAAKid,eAAgBjd,MAC/D,IAAImlB,EAAQ5I,EAAQ/E,MAAM,KACtB4N,EAASplB,KAAK4a,QAAQ2B,QACtB8I,GAAWrlB,KAAKuhB,UAAY6D,GAAUA,EAAO5a,OAAOW,MAAQnL,KAAKgN,MAAM,GAAG7B,MAC1Ema,IAAaF,EAASA,EAAO9V,MAAQ,EAAI,IAAM+V,EAAU,EAAI,GAC7DnR,EAAQ,CAACrR,EAAGyM,KACZ,KAAOzM,GAAK,EAAGA,IAAK,CAChB,IAAI0iB,EAAOJ,EAAMtiB,GACjB,GAAY,IAAR0iB,EAAY,CACZ,GAAI1iB,GAAKsiB,EAAM3d,OAAS,GAAU,GAAL3E,EACzB,SACJ,KAAOyM,GAASgW,EAAUhW,IACtB,GAAI4E,EAAMrR,EAAI,EAAGyM,GACb,OAAO,EACf,OAAO,CACV,CACI,CACD,IAAI0C,EAAO1C,EAAQ,GAAe,GAATA,GAAc+V,EAAWrlB,KAAKgN,MAAMsC,GAAOnE,KAC9Dia,GAAU9V,GAASgW,EAAWF,EAAOna,KAAKqE,EAAQgW,GAAUna,KACxD,KACV,IAAK6G,GAASA,EAAKrQ,MAAQ4jB,IAAsC,GAA9BvT,EAAKuG,OAAO7B,QAAQ6O,GACnD,OAAO,EACXjW,GACH,CACJ,CACD,OAAO,CAAP,EAEJ,OAAO4E,EAAMiR,EAAM3d,OAAS,EAAGxH,KAAKc,KACvC,CACD6jB,uBACI,IAAIa,EAAWxlB,KAAK4a,QAAQ2B,QAC5B,GAAIiJ,EACA,IAAK,IAAIljB,EAAIkjB,EAASlW,MAAOhN,GAAK,EAAGA,IAAK,CACtC,IAAImjB,EAAQD,EAASva,KAAK3I,GAAG2R,eAAeuR,EAASjU,WAAWjP,IAAIyT,YACpE,GAAI0P,GAASA,EAAM5R,aAAe4R,EAAMrS,aACpC,OAAOqS,CACd,CACL,IAAK,IAAI9jB,KAAQ3B,KAAKshB,OAAO1U,OAAOI,MAAO,CACvC,IAAI7B,EAAOnL,KAAKshB,OAAO1U,OAAOI,MAAMrL,GACpC,GAAIwJ,EAAK0I,aAAe1I,EAAKiI,aACzB,OAAOjI,CACd,CACJ,CACDgX,eAAe7O,GACX,IAAI7L,EAAQie,GAAkBpS,EAAMtT,KAAK6hB,IAAIvB,cACzC7Y,GACAzH,KAAK6hB,IAAIpB,WAAW1Y,KAAKN,GAC7BzH,KAAK6hB,IAAIvB,aAAehN,EAAKjG,SAASrN,KAAK6hB,IAAIvB,aAClD,CACD+B,kBAAkB/O,EAAMqS,GACpB,IAAK,IAAIrW,EAAQtP,KAAKc,KAAMwO,GAAS,EAAGA,IAAS,CAC7C,IAAIsW,EAAQ5lB,KAAKgN,MAAMsC,GACnB7H,EAAQme,EAAMtF,aAAauF,YAAYvS,GAC3C,GAAI7L,GAAS,EACTme,EAAMtF,aAAehN,EAAK7F,cAAcmY,EAAMtF,kBAE7C,CACDsF,EAAMpF,YAAclN,EAAK7F,cAAcmY,EAAMpF,aAC7C,IAAIsF,EAAYF,EAAM/E,iBAAiBvN,GACnCwS,GAAaF,EAAMza,MAAQya,EAAMza,KAAKoP,eAAeuL,EAAU3a,QAC/Dya,EAAMpF,YAAcsF,EAAUzY,SAASuY,EAAMpF,aACpD,CACD,GAAIoF,GAASD,EACT,KACP,CACJ,EAKL,SAAS7C,GAAcxG,GACnB,IAAK,IAAIlT,EAAQkT,EAAI7Q,WAAYsa,EAAW,KAAM3c,EAAOA,EAAQA,EAAMib,YAAa,CAChF,IAAI1iB,EAAyB,GAAlByH,EAAM2L,SAAgB3L,EAAMgY,SAASC,cAAgB,KAC5D1f,GAAQoe,GAASlF,eAAelZ,IAASokB,GACzCA,EAASC,YAAY5c,GACrBA,EAAQ2c,GAEK,MAARpkB,EACLokB,EAAW3c,EAENzH,IACLokB,EAAW,KAElB,CACJ,CAED,SAASjJ,GAAQR,EAAK2J,GAClB,OAAQ3J,EAAIQ,SAAWR,EAAI4J,mBAAqB5J,EAAI6J,uBAAyB7J,EAAI8J,oBAAoBtL,KAAKwB,EAAK2J,EAClH,CAED,SAAS/D,GAAY/F,GACjB,IAAuClZ,EAAnCojB,EAAK,6BAAiCxd,EAAS,GACnD,MAAO5F,EAAIojB,EAAGzF,KAAKzE,GACftT,EAAOd,KAAK9E,EAAE,GAAIA,EAAE,GAAGqjB,QAC3B,OAAOzd,CACV,CACD,SAASoD,GAAK0B,GACV,IAAI1B,EAAO,CAAC,EACZ,IAAK,IAAInD,KAAQ6E,EACb1B,EAAKnD,GAAQ6E,EAAI7E,GACrB,OAAOmD,CACV,CAID,SAASgV,GAAazG,EAAUzF,GAC5B,IAAI/H,EAAQ+H,EAASnI,OAAOI,MAC5B,IAAK,IAAIrL,KAAQqL,EAAO,CACpB,IAAIxC,EAASwC,EAAMrL,GACnB,IAAK6I,EAAO+P,eAAeC,GACvB,SACJ,IAAIpE,EAAO,GAAIgB,EAAQlD,IACnBkC,EAAKrO,KAAKmM,GACV,IAAK,IAAIrR,EAAI,EAAGA,EAAIqR,EAAMgD,UAAWrU,IAAK,CACtC,IAAI,KAAEsI,EAAF,KAAQ6G,GAASkC,EAAMiD,KAAKtU,GAChC,GAAIsI,GAAQ4J,EACR,OAAO,EACX,GAAIqB,EAAKM,QAAQ1E,GAAQ,GAAKoF,EAAKpF,GAC/B,OAAO,CACd,GAEL,GAAIoF,EAAK5M,EAAO2J,cACZ,OAAO,CACd,CACJ,CACD,SAASuR,GAAkBpS,EAAM1N,GAC7B,IAAK,IAAI/C,EAAI,EAAGA,EAAI+C,EAAI4B,OAAQ3E,IAC5B,GAAIyQ,EAAKpH,GAAGtG,EAAI/C,IACZ,OAAO+C,EAAI/C,EAEtB,CAMD,MAAM0jB,GAUFhlB,YAIAyL,EAIAc,GACI9N,KAAKgN,MAAQA,EACbhN,KAAK8N,MAAQA,CAChB,CAOD0Y,kBAAkBjY,EAAUqM,EAAU,CAAC,EAAGvK,GACjCA,IACDA,EAASiB,GAAIsJ,GAAS6L,0BAC1B,IAAI5E,EAAMxR,EAAQyG,EAAS,GA6B3B,OA5BAvI,EAAShG,SAAQ0C,IACb,GAAI6L,EAAOtP,QAAUyD,EAAK6C,MAAMtG,OAAQ,CACpC,IAAIkf,EAAO,EAAGC,EAAW,EACzB,MAAOD,EAAO5P,EAAOtP,QAAUmf,EAAW1b,EAAK6C,MAAMtG,OAAQ,CACzD,IAAIwK,EAAO/G,EAAK6C,MAAM6Y,GACtB,GAAK3mB,KAAK8N,MAAMkE,EAAK7G,KAAKxJ,MAA1B,CAIA,IAAKqQ,EAAK9F,GAAG4K,EAAO4P,GAAM,MAAmC,IAA5B1U,EAAK7G,KAAK9H,KAAKujB,SAC5C,MACJF,IACAC,GAJC,MAFGA,GAOP,CACD,MAAOD,EAAO5P,EAAOtP,OACjBqa,EAAM/K,EAAOW,MAAM,GACvB,MAAOkP,EAAW1b,EAAK6C,MAAMtG,OAAQ,CACjC,IAAIqf,EAAM5b,EAAK6C,MAAM6Y,KACjBG,EAAU9mB,KAAK+mB,cAAcF,EAAK5b,EAAK8G,SAAU6I,GACjDkM,IACAhQ,EAAO/O,KAAK,CAAC8e,EAAKhF,IAClBA,EAAImE,YAAYc,EAAQxK,KACxBuF,EAAMiF,EAAQ9C,YAAc8C,EAAQxK,IAE3C,CACJ,CACDuF,EAAImE,YAAYhmB,KAAKgnB,mBAAmB/b,EAAM2P,GAA9C,IAEGvK,CACV,CAID2W,mBAAmB/b,EAAM2P,GACrB,IAAI,IAAE0B,EAAF,WAAO0H,GAAeuC,GAAcU,WAAW3V,GAAIsJ,GAAU5a,KAAKgN,MAAM/B,EAAKE,KAAKxJ,MAAMsJ,IAC5F,GAAI+Y,EAAY,CACZ,GAAI/Y,EAAKC,OACL,MAAM,IAAIiB,WAAW,gDACzBnM,KAAKwmB,kBAAkBvb,EAAK5D,QAASuT,EAASoJ,EACjD,CACD,OAAO1H,CACV,CAQD4K,cAAcjc,EAAM2P,EAAU,CAAC,GAC3B,IAAI0B,EAAMtc,KAAKgnB,mBAAmB/b,EAAM2P,GACxC,IAAK,IAAI/X,EAAIoI,EAAK6C,MAAMtG,OAAS,EAAG3E,GAAK,EAAGA,IAAK,CAC7C,IAAI8d,EAAO3gB,KAAK+mB,cAAc9b,EAAK6C,MAAMjL,GAAIoI,EAAK8G,SAAU6I,GACxD+F,KACCA,EAAKqD,YAAcrD,EAAKrE,KAAK0J,YAAY1J,GAC1CA,EAAMqE,EAAKrE,IAElB,CACD,OAAOA,CACV,CAIDyK,cAAczT,EAAMgE,EAAQsD,EAAU,CAAC,GACnC,IAAIuM,EAAQnnB,KAAK8N,MAAMwF,EAAKnI,KAAKxJ,MACjC,OAAOwlB,GAASZ,GAAcU,WAAW3V,GAAIsJ,GAAUuM,EAAM7T,EAAMgE,GACtE,CAMgB,kBAAChG,EAAK8V,EAAWC,EAAQ,MACtC,GAAwB,iBAAbD,EACP,MAAO,CAAE9K,IAAKhL,EAAIoS,eAAe0D,IACrC,GAA0B,MAAtBA,EAAUrS,SACV,MAAO,CAAEuH,IAAK8K,GAClB,GAAIA,EAAU9K,KAAiC,MAA1B8K,EAAU9K,IAAIvH,SAC/B,OAAOqS,EACX,IAKIpD,EALAsD,EAAUF,EAAU,GAAIG,EAAQD,EAAQ5Q,QAAQ,KAChD6Q,EAAQ,IACRF,EAAQC,EAAQxf,MAAM,EAAGyf,GACzBD,EAAUA,EAAQxf,MAAMyf,EAAQ,IAGpC,IAAIjL,EAAO+K,EAAQ/V,EAAIkW,gBAAgBH,EAAOC,GAAWhW,EAAImW,cAAcH,GACvE/mB,EAAQ6mB,EAAU,GAAI1c,EAAQ,EAClC,GAAInK,GAAyB,iBAATA,GAAuC,MAAlBA,EAAMwU,WAAqBjS,MAAMC,QAAQxC,GAAQ,CACtFmK,EAAQ,EACR,IAAK,IAAI/I,KAAQpB,EACb,GAAmB,MAAfA,EAAMoB,GAAe,CACrB,IAAI4lB,EAAQ5lB,EAAK+U,QAAQ,KACrB6Q,EAAQ,EACRjL,EAAIoL,eAAe/lB,EAAKmG,MAAM,EAAGyf,GAAQ5lB,EAAKmG,MAAMyf,EAAQ,GAAIhnB,EAAMoB,IAEtE2a,EAAIqL,aAAahmB,EAAMpB,EAAMoB,GACpC,CACR,CACD,IAAK,IAAIkB,EAAI6H,EAAO7H,EAAIukB,EAAU5f,OAAQ3E,IAAK,CAC3C,IAAIuG,EAAQge,EAAUvkB,GACtB,GAAc,IAAVuG,EAAa,CACb,GAAIvG,EAAIukB,EAAU5f,OAAS,GAAK3E,EAAI6H,EAChC,MAAM,IAAIyB,WAAW,0DACzB,MAAO,CAAEmQ,MAAK0H,WAAY1H,EAC7B,CACI,CACD,IAAMA,IAAK7S,EAAOua,WAAY4D,GAAiBrB,GAAcU,WAAW3V,EAAKlI,EAAOie,GAEpF,GADA/K,EAAI0J,YAAYvc,GACZme,EAAc,CACd,GAAI5D,EACA,MAAM,IAAI7X,WAAW,0BACzB6X,EAAa4D,CAChB,CACJ,CACJ,CACD,MAAO,CAAEtL,MAAK0H,aACjB,CAKgB,kBAACpX,GACd,OAAOA,EAAO8F,OAAOmV,gBAChBjb,EAAO8F,OAAOmV,cAAgB,IAAItB,GAAcvmB,KAAK8nB,gBAAgBlb,GAAS5M,KAAK+nB,gBAAgBnb,IAC3G,CAKqB,uBAACA,GACnB,IAAI/D,EAASmf,GAAYpb,EAAOI,OAGhC,OAFKnE,EAAOW,OACRX,EAAOW,KAAOyB,GAAQA,EAAKzB,MACxBX,CACV,CAIqB,uBAAC+D,GACnB,OAAOob,GAAYpb,EAAOkB,MAC7B,EAEL,SAASka,GAAYra,GACjB,IAAI9E,EAAS,CAAC,EACd,IAAK,IAAIlH,KAAQgM,EAAK,CAClB,IAAIwZ,EAAQxZ,EAAIhM,GAAM0B,KAAK8jB,MACvBA,IACAte,EAAOlH,GAAQwlB,EACtB,CACD,OAAOte,CACV,CACD,SAASyI,GAAIsJ,GACT,OAAOA,EAAQqN,UAAYC,OAAOD,QACrC,C,OC7xGD,MAAME,GAAU,MACVC,GAAWle,KAAKme,IAAI,EAAG,IAC7B,SAASC,GAAYvc,EAAOmB,GAAU,OAAOnB,EAAQmB,EAASkb,EAAW,CACzE,SAASG,GAAa9nB,GAAS,OAAOA,EAAQ0nB,EAAU,CACxD,SAASK,GAAc/nB,GAAS,OAAQA,GAASA,EAAQ0nB,KAAYC,EAAW,CAChF,MAAMK,GAAa,EAAGC,GAAY,EAAGC,GAAa,EAAGC,GAAW,EAKhE,MAAMC,GAIFtnB,YAIA0H,EAIA6f,EAIAC,GACI/oB,KAAKiJ,IAAMA,EACXjJ,KAAK8oB,QAAUA,EACf9oB,KAAK+oB,QAAUA,CAClB,CAMGC,cAAY,OAAQhpB,KAAK8oB,QAAUF,IAAY,CAAI,CAInDK,oBAAkB,OAAQjpB,KAAK8oB,SAAWL,GAAaE,KAAe,CAAI,CAI1EO,mBAAiB,OAAQlpB,KAAK8oB,SAAWJ,GAAYC,KAAe,CAAI,CAMxEQ,oBAAkB,OAAQnpB,KAAK8oB,QAAUH,IAAc,CAAI,EAQnE,MAAMS,GAMF7nB,YAIA8nB,EAIAC,GAAW,GAGP,GAFAtpB,KAAKqpB,OAASA,EACdrpB,KAAKspB,SAAWA,GACXD,EAAO7hB,QAAU4hB,GAAQvd,MAC1B,OAAOud,GAAQvd,KACtB,CAIDkd,QAAQtoB,GACJ,IAAI8oB,EAAO,EAAGxd,EAAQwc,GAAa9nB,GACnC,IAAKT,KAAKspB,SACN,IAAK,IAAIzmB,EAAI,EAAGA,EAAIkJ,EAAOlJ,IACvB0mB,GAAQvpB,KAAKqpB,OAAW,EAAJxmB,EAAQ,GAAK7C,KAAKqpB,OAAW,EAAJxmB,EAAQ,GAC7D,OAAO7C,KAAKqpB,OAAe,EAARtd,GAAawd,EAAOf,GAAc/nB,EACxD,CACD+oB,UAAUvgB,EAAKwgB,EAAQ,GAAK,OAAOzpB,KAAK0pB,KAAKzgB,EAAKwgB,GAAO,EAAS,CAClEzmB,IAAIiG,EAAKwgB,EAAQ,GAAK,OAAOzpB,KAAK0pB,KAAKzgB,EAAKwgB,GAAO,EAAQ,CAI3DC,KAAKzgB,EAAKwgB,EAAOE,GACb,IAAIJ,EAAO,EAAGK,EAAW5pB,KAAKspB,SAAW,EAAI,EAAGO,EAAW7pB,KAAKspB,SAAW,EAAI,EAC/E,IAAK,IAAIzmB,EAAI,EAAGA,EAAI7C,KAAKqpB,OAAO7hB,OAAQ3E,GAAK,EAAG,CAC5C,IAAI6H,EAAQ1K,KAAKqpB,OAAOxmB,IAAM7C,KAAKspB,SAAWC,EAAO,GACrD,GAAI7e,EAAQzB,EACR,MACJ,IAAI6gB,EAAU9pB,KAAKqpB,OAAOxmB,EAAI+mB,GAAWG,EAAU/pB,KAAKqpB,OAAOxmB,EAAIgnB,GAAWpf,EAAMC,EAAQof,EAC5F,GAAI7gB,GAAOwB,EAAK,CACZ,IAAIuf,EAAQF,EAAkB7gB,GAAOyB,GAAS,EAAIzB,GAAOwB,EAAM,EAAIgf,EAA7CA,EAClB5gB,EAAS6B,EAAQ6e,GAAQS,EAAO,EAAI,EAAID,GAC5C,GAAIJ,EACA,OAAO9gB,EACX,IAAIkgB,EAAU9f,IAAQwgB,EAAQ,EAAI/e,EAAQD,GAAO,KAAO6d,GAAYzlB,EAAI,EAAGoG,EAAMyB,GAC7Euf,EAAMhhB,GAAOyB,EAAQge,GAAYzf,GAAOwB,EAAMge,GAAaE,GAG/D,OAFIc,EAAQ,EAAIxgB,GAAOyB,EAAQzB,GAAOwB,KAClCwf,GAAOrB,IACJ,IAAIC,GAAUhgB,EAAQohB,EAAKlB,EACrC,CACDQ,GAAQQ,EAAUD,CACrB,CACD,OAAOH,EAAS1gB,EAAMsgB,EAAO,IAAIV,GAAU5f,EAAMsgB,EAAM,EAAG,KAC7D,CAIDW,QAAQjhB,EAAK8f,GACT,IAAIQ,EAAO,EAAGxd,EAAQwc,GAAaQ,GAC/Ba,EAAW5pB,KAAKspB,SAAW,EAAI,EAAGO,EAAW7pB,KAAKspB,SAAW,EAAI,EACrE,IAAK,IAAIzmB,EAAI,EAAGA,EAAI7C,KAAKqpB,OAAO7hB,OAAQ3E,GAAK,EAAG,CAC5C,IAAI6H,EAAQ1K,KAAKqpB,OAAOxmB,IAAM7C,KAAKspB,SAAWC,EAAO,GACrD,GAAI7e,EAAQzB,EACR,MACJ,IAAI6gB,EAAU9pB,KAAKqpB,OAAOxmB,EAAI+mB,GAAWnf,EAAMC,EAAQof,EACvD,GAAI7gB,GAAOwB,GAAO5H,GAAa,EAARkJ,EACnB,OAAO,EACXwd,GAAQvpB,KAAKqpB,OAAOxmB,EAAIgnB,GAAYC,CACvC,CACD,OAAO,CACV,CAKDvhB,QAAQ/E,GACJ,IAAIomB,EAAW5pB,KAAKspB,SAAW,EAAI,EAAGO,EAAW7pB,KAAKspB,SAAW,EAAI,EACrE,IAAK,IAAIzmB,EAAI,EAAG0mB,EAAO,EAAG1mB,EAAI7C,KAAKqpB,OAAO7hB,OAAQ3E,GAAK,EAAG,CACtD,IAAI6H,EAAQ1K,KAAKqpB,OAAOxmB,GAAIsnB,EAAWzf,GAAS1K,KAAKspB,SAAWC,EAAO,GAAIa,EAAW1f,GAAS1K,KAAKspB,SAAW,EAAIC,GAC/GO,EAAU9pB,KAAKqpB,OAAOxmB,EAAI+mB,GAAWG,EAAU/pB,KAAKqpB,OAAOxmB,EAAIgnB,GACnErmB,EAAE2mB,EAAUA,EAAWL,EAASM,EAAUA,EAAWL,GACrDR,GAAQQ,EAAUD,CACrB,CACJ,CAKDO,SACI,OAAO,IAAIjB,GAAQppB,KAAKqpB,QAASrpB,KAAKspB,SACzC,CAIDhmB,WACI,OAAQtD,KAAKspB,SAAW,IAAM,IAAMvnB,KAAKC,UAAUhC,KAAKqpB,OAC3D,CAMY,cAACnnB,GACV,OAAY,GAALA,EAASknB,GAAQvd,MAAQ,IAAIud,GAAQlnB,EAAI,EAAI,CAAC,GAAIA,EAAG,GAAK,CAAC,EAAG,EAAGA,GAC3E,EAKLknB,GAAQvd,MAAQ,IAAIud,GAAQ,IAS5B,MAAMkB,GAIF/oB,YAIAgpB,EAAO,GAIPC,EAKA/hB,EAAO,EAIP6B,EAAKigB,EAAK/iB,QACNxH,KAAKuqB,KAAOA,EACZvqB,KAAKwqB,OAASA,EACdxqB,KAAKyI,KAAOA,EACZzI,KAAKsK,GAAKA,CACb,CAIDxC,MAAMW,EAAO,EAAG6B,EAAKtK,KAAKuqB,KAAK/iB,QAC3B,OAAO,IAAI8iB,GAAQtqB,KAAKuqB,KAAMvqB,KAAKwqB,OAAQ/hB,EAAM6B,EACpD,CAID2B,OACI,OAAO,IAAIqe,GAAQtqB,KAAKuqB,KAAKziB,QAAS9H,KAAKwqB,QAAUxqB,KAAKwqB,OAAO1iB,QAAS9H,KAAKyI,KAAMzI,KAAKsK,GAC7F,CAMDmgB,UAAUznB,EAAK0nB,GACX1qB,KAAKsK,GAAKtK,KAAKuqB,KAAKxiB,KAAK/E,GACV,MAAX0nB,GACA1qB,KAAK2qB,UAAU3qB,KAAKuqB,KAAK/iB,OAAS,EAAGkjB,EAC5C,CAKDE,cAAcC,GACV,IAAK,IAAIhoB,EAAI,EAAGioB,EAAY9qB,KAAKuqB,KAAK/iB,OAAQ3E,EAAIgoB,EAAQN,KAAK/iB,OAAQ3E,IAAK,CACxE,IAAIkoB,EAAOF,EAAQG,UAAUnoB,GAC7B7C,KAAKyqB,UAAUI,EAAQN,KAAK1nB,GAAY,MAARkoB,GAAgBA,EAAOloB,EAAIioB,EAAYC,OAAOrjB,EACjF,CACJ,CAMDsjB,UAAU9oB,GACN,GAAIlC,KAAKwqB,OACL,IAAK,IAAI3nB,EAAI,EAAGA,EAAI7C,KAAKwqB,OAAOhjB,OAAQ3E,IACpC,GAAI7C,KAAKwqB,OAAO3nB,IAAMX,EAClB,OAAOlC,KAAKwqB,OAAO3nB,GAAKA,EAAI,GAAK,EAAI,GACpD,CAID8nB,UAAUzoB,EAAGe,GACJjD,KAAKwqB,SACNxqB,KAAKwqB,OAAS,IAClBxqB,KAAKwqB,OAAOziB,KAAK7F,EAAGe,EACvB,CAIDgoB,sBAAsBJ,GAClB,IAAK,IAAIhoB,EAAIgoB,EAAQN,KAAK/iB,OAAS,EAAG0jB,EAAYlrB,KAAKuqB,KAAK/iB,OAASqjB,EAAQN,KAAK/iB,OAAQ3E,GAAK,EAAGA,IAAK,CACnG,IAAIkoB,EAAOF,EAAQG,UAAUnoB,GAC7B7C,KAAKyqB,UAAUI,EAAQN,KAAK1nB,GAAGwnB,SAAkB,MAARU,GAAgBA,EAAOloB,EAAIqoB,EAAYH,EAAO,OAAIrjB,EAC9F,CACJ,CAID2iB,SACI,IAAIc,EAAU,IAAIb,GAElB,OADAa,EAAQF,sBAAsBjrB,MACvBmrB,CACV,CAIDnoB,IAAIiG,EAAKwgB,EAAQ,GACb,GAAIzpB,KAAKwqB,OACL,OAAOxqB,KAAK0pB,KAAKzgB,EAAKwgB,GAAO,GACjC,IAAK,IAAI5mB,EAAI7C,KAAKyI,KAAM5F,EAAI7C,KAAKsK,GAAIzH,IACjCoG,EAAMjJ,KAAKuqB,KAAK1nB,GAAGG,IAAIiG,EAAKwgB,GAChC,OAAOxgB,CACV,CAKDugB,UAAUvgB,EAAKwgB,EAAQ,GAAK,OAAOzpB,KAAK0pB,KAAKzgB,EAAKwgB,GAAO,EAAS,CAIlEC,KAAKzgB,EAAKwgB,EAAOE,GACb,IAAIb,EAAU,EACd,IAAK,IAAIjmB,EAAI7C,KAAKyI,KAAM5F,EAAI7C,KAAKsK,GAAIzH,IAAK,CACtC,IAAIG,EAAMhD,KAAKuqB,KAAK1nB,GAAIgG,EAAS7F,EAAIwmB,UAAUvgB,EAAKwgB,GACpD,GAAsB,MAAlB5gB,EAAOkgB,QAAiB,CACxB,IAAIqC,EAAOprB,KAAKgrB,UAAUnoB,GAC1B,GAAY,MAARuoB,GAAgBA,EAAOvoB,GAAKuoB,EAAOprB,KAAKsK,GAAI,CAC5CzH,EAAIuoB,EACJniB,EAAMjJ,KAAKuqB,KAAKa,GAAMrC,QAAQlgB,EAAOkgB,SACrC,QACH,CACJ,CACDD,GAAWjgB,EAAOigB,QAClB7f,EAAMJ,EAAOI,GAChB,CACD,OAAO0gB,EAAS1gB,EAAM,IAAI4f,GAAU5f,EAAK6f,EAAS,KACrD,EAGL,MAAMuC,GAAYtY,OAAOhF,OAAO,MAYhC,MAAMud,GAMFC,SAAW,OAAOnC,GAAQvd,KAAQ,CAMlC2f,MAAMngB,GAAS,OAAO,IAAO,CAKd,gBAACuB,EAAQiB,GACpB,IAAKA,IAASA,EAAK4d,SACf,MAAM,IAAItf,WAAW,mCACzB,IAAIhB,EAAOkgB,GAAUxd,EAAK4d,UAC1B,IAAKtgB,EACD,MAAM,IAAIgB,WAAY,gBAAe0B,EAAK4d,oBAC9C,OAAOtgB,EAAKwD,SAAS/B,EAAQiB,EAChC,CAOY,cAACxI,EAAIqmB,GACd,GAAIrmB,KAAMgmB,GACN,MAAM,IAAIlf,WAAW,iCAAmC9G,GAG5D,OAFAgmB,GAAUhmB,GAAMqmB,EAChBA,EAAUpkB,UAAUqkB,OAAStmB,EACtBqmB,CACV,EAML,MAAME,GAIFrqB,YAIA+P,EAIAua,GACI7rB,KAAKsR,IAAMA,EACXtR,KAAK6rB,OAASA,CACjB,CAIQ,UAACva,GAAO,OAAO,IAAIsa,GAAWta,EAAK,KAAQ,CAIzC,YAACwa,GAAW,OAAO,IAAIF,GAAW,KAAME,EAAW,CAM5C,mBAACxa,EAAK7I,EAAM6B,EAAIxC,GAC9B,IACI,OAAO8jB,GAAWhQ,GAAGtK,EAAInC,QAAQ1G,EAAM6B,EAAIxC,GAM9C,CAJD,MAAO1G,IACH,GAAIA,cAAa8M,GACb,OAAO0d,GAAWG,KAAK3qB,GAAE0qB,SAC7B,MAAM1qB,EACT,CACJ,EAGL,SAAS4qB,GAAYzd,EAAU/K,EAAGgH,GAC9B,IAAIyhB,EAAS,GACb,IAAK,IAAIppB,EAAI,EAAGA,EAAI0L,EAASrF,WAAYrG,IAAK,CAC1C,IAAIuG,EAAQmF,EAASnF,MAAMvG,GACvBuG,EAAM/B,QAAQqB,OACdU,EAAQA,EAAM6C,KAAK+f,GAAY5iB,EAAM/B,QAAS7D,EAAG4F,KACjDA,EAAM2I,WACN3I,EAAQ5F,EAAE4F,EAAOoB,EAAQ3H,IAC7BopB,EAAOlkB,KAAKqB,EACf,CACD,OAAOgB,EAAAA,UAAmB6hB,EAC7B,CAID,MAAMC,WAAoBZ,GAItB/pB,YAIAkH,EAIA6B,EAIAgJ,GACI5R,QACA1B,KAAKyI,KAAOA,EACZzI,KAAKsK,GAAKA,EACVtK,KAAKsT,KAAOA,CACf,CACD6Y,MAAM7a,GACF,IAAI8a,EAAW9a,EAAIxJ,MAAM9H,KAAKyI,KAAMzI,KAAKsK,IAAK8E,EAAQkC,EAAIsB,QAAQ5S,KAAKyI,MACnE+B,EAAS4E,EAAMnE,KAAKmE,EAAM6C,YAAYjS,KAAKsK,KAC3CxC,EAAQ,IAAIqG,GAAM6d,GAAYI,EAAS/kB,SAAS,CAAC4D,EAAMT,IAClDS,EAAK6I,QAAWtJ,EAAOW,KAAKoP,eAAeva,KAAKsT,KAAKnI,MAEnDF,EAAKqI,KAAKtT,KAAKsT,KAAKjG,SAASpC,EAAK6C,QAD9B7C,GAEZT,GAAS4hB,EAAShe,UAAWge,EAAS/d,SACzC,OAAOud,GAAWS,YAAY/a,EAAKtR,KAAKyI,KAAMzI,KAAKsK,GAAIxC,EAC1D,CACDuiB,SACI,OAAO,IAAIiC,GAAetsB,KAAKyI,KAAMzI,KAAKsK,GAAItK,KAAKsT,KACtD,CACDtQ,IAAI6nB,GACA,IAAIpiB,EAAOoiB,EAAQrB,UAAUxpB,KAAKyI,KAAM,GAAI6B,EAAKugB,EAAQrB,UAAUxpB,KAAKsK,IAAK,GAC7E,OAAI7B,EAAKugB,SAAW1e,EAAG0e,SAAWvgB,EAAKQ,KAAOqB,EAAGrB,IACtC,KACJ,IAAIijB,GAAYzjB,EAAKQ,IAAKqB,EAAGrB,IAAKjJ,KAAKsT,KACjD,CACDkY,MAAMngB,GACF,OAAIA,aAAiB6gB,IACjB7gB,EAAMiI,KAAKpH,GAAGlM,KAAKsT,OACnBtT,KAAKyI,MAAQ4C,EAAMf,IAAMtK,KAAKsK,IAAMe,EAAM5C,KACnC,IAAIyjB,GAAYhiB,KAAKC,IAAInK,KAAKyI,KAAM4C,EAAM5C,MAAOyB,KAAKS,IAAI3K,KAAKsK,GAAIe,EAAMf,IAAKtK,KAAKsT,MACvF,IACV,CACDlQ,SACI,MAAO,CAAEqoB,SAAU,UAAWnY,KAAMtT,KAAKsT,KAAKlQ,SAC1CqF,KAAMzI,KAAKyI,KAAM6B,GAAItK,KAAKsK,GACjC,CAIc,gBAACsC,EAAQiB,GACpB,GAAwB,iBAAbA,EAAKpF,MAAsC,iBAAXoF,EAAKvD,GAC5C,MAAM,IAAI6B,WAAW,0CACzB,OAAO,IAAI+f,GAAYre,EAAKpF,KAAMoF,EAAKvD,GAAIsC,EAAOkI,aAAajH,EAAKyF,MACvE,EAELgY,GAAKK,OAAO,UAAWO,IAIvB,MAAMI,WAAuBhB,GAIzB/pB,YAIAkH,EAIA6B,EAIAgJ,GACI5R,QACA1B,KAAKyI,KAAOA,EACZzI,KAAKsK,GAAKA,EACVtK,KAAKsT,KAAOA,CACf,CACD6Y,MAAM7a,GACF,IAAI8a,EAAW9a,EAAIxJ,MAAM9H,KAAKyI,KAAMzI,KAAKsK,IACrCxC,EAAQ,IAAIqG,GAAM6d,GAAYI,EAAS/kB,SAAS4D,GACzCA,EAAKqI,KAAKtT,KAAKsT,KAAK7F,cAAcxC,EAAK6C,SAC/CwD,GAAM8a,EAAShe,UAAWge,EAAS/d,SACtC,OAAOud,GAAWS,YAAY/a,EAAKtR,KAAKyI,KAAMzI,KAAKsK,GAAIxC,EAC1D,CACDuiB,SACI,OAAO,IAAI6B,GAAYlsB,KAAKyI,KAAMzI,KAAKsK,GAAItK,KAAKsT,KACnD,CACDtQ,IAAI6nB,GACA,IAAIpiB,EAAOoiB,EAAQrB,UAAUxpB,KAAKyI,KAAM,GAAI6B,EAAKugB,EAAQrB,UAAUxpB,KAAKsK,IAAK,GAC7E,OAAI7B,EAAKugB,SAAW1e,EAAG0e,SAAWvgB,EAAKQ,KAAOqB,EAAGrB,IACtC,KACJ,IAAIqjB,GAAe7jB,EAAKQ,IAAKqB,EAAGrB,IAAKjJ,KAAKsT,KACpD,CACDkY,MAAMngB,GACF,OAAIA,aAAiBihB,IACjBjhB,EAAMiI,KAAKpH,GAAGlM,KAAKsT,OACnBtT,KAAKyI,MAAQ4C,EAAMf,IAAMtK,KAAKsK,IAAMe,EAAM5C,KACnC,IAAI6jB,GAAepiB,KAAKC,IAAInK,KAAKyI,KAAM4C,EAAM5C,MAAOyB,KAAKS,IAAI3K,KAAKsK,GAAIe,EAAMf,IAAKtK,KAAKsT,MAC1F,IACV,CACDlQ,SACI,MAAO,CAAEqoB,SAAU,aAAcnY,KAAMtT,KAAKsT,KAAKlQ,SAC7CqF,KAAMzI,KAAKyI,KAAM6B,GAAItK,KAAKsK,GACjC,CAIc,gBAACsC,EAAQiB,GACpB,GAAwB,iBAAbA,EAAKpF,MAAsC,iBAAXoF,EAAKvD,GAC5C,MAAM,IAAI6B,WAAW,6CACzB,OAAO,IAAImgB,GAAeze,EAAKpF,KAAMoF,EAAKvD,GAAIsC,EAAOkI,aAAajH,EAAKyF,MAC1E,EAELgY,GAAKK,OAAO,aAAcW,IAI1B,MAAMC,WAAwBjB,GAI1B/pB,YAIA0H,EAIAqK,GACI5R,QACA1B,KAAKiJ,IAAMA,EACXjJ,KAAKsT,KAAOA,CACf,CACD6Y,MAAM7a,GACF,IAAIrG,EAAOqG,EAAIkC,OAAOxT,KAAKiJ,KAC3B,IAAKgC,EACD,OAAO2gB,GAAWG,KAAK,mCAC3B,IAAIS,EAAUvhB,EAAKE,KAAK4C,OAAO9C,EAAK1K,MAAO,KAAMP,KAAKsT,KAAKjG,SAASpC,EAAK6C,QACzE,OAAO8d,GAAWS,YAAY/a,EAAKtR,KAAKiJ,IAAKjJ,KAAKiJ,IAAM,EAAG,IAAIkF,GAAM/D,EAAAA,KAAcoiB,GAAU,EAAGvhB,EAAKC,OAAS,EAAI,GACrH,CACDmf,OAAO/Y,GACH,IAAIrG,EAAOqG,EAAIkC,OAAOxT,KAAKiJ,KAC3B,GAAIgC,EAAM,CACN,IAAIwhB,EAASzsB,KAAKsT,KAAKjG,SAASpC,EAAK6C,OACrC,GAAI2e,EAAOjlB,QAAUyD,EAAK6C,MAAMtG,OAAQ,CACpC,IAAK,IAAI3E,EAAI,EAAGA,EAAIoI,EAAK6C,MAAMtG,OAAQ3E,IACnC,IAAKoI,EAAK6C,MAAMjL,GAAG6K,QAAQ+e,GACvB,OAAO,IAAIF,GAAgBvsB,KAAKiJ,IAAKgC,EAAK6C,MAAMjL,IACxD,OAAO,IAAI0pB,GAAgBvsB,KAAKiJ,IAAKjJ,KAAKsT,KAC7C,CACJ,CACD,OAAO,IAAIoZ,GAAmB1sB,KAAKiJ,IAAKjJ,KAAKsT,KAChD,CACDtQ,IAAI6nB,GACA,IAAI5hB,EAAM4hB,EAAQrB,UAAUxpB,KAAKiJ,IAAK,GACtC,OAAOA,EAAIigB,aAAe,KAAO,IAAIqD,GAAgBtjB,EAAIA,IAAKjJ,KAAKsT,KACtE,CACDlQ,SACI,MAAO,CAAEqoB,SAAU,cAAexiB,IAAKjJ,KAAKiJ,IAAKqK,KAAMtT,KAAKsT,KAAKlQ,SACpE,CAIc,gBAACwJ,EAAQiB,GACpB,GAAuB,iBAAZA,EAAK5E,IACZ,MAAM,IAAIkD,WAAW,8CACzB,OAAO,IAAIogB,GAAgB1e,EAAK5E,IAAK2D,EAAOkI,aAAajH,EAAKyF,MACjE,EAELgY,GAAKK,OAAO,cAAeY,IAI3B,MAAMG,WAA2BpB,GAI7B/pB,YAIA0H,EAIAqK,GACI5R,QACA1B,KAAKiJ,IAAMA,EACXjJ,KAAKsT,KAAOA,CACf,CACD6Y,MAAM7a,GACF,IAAIrG,EAAOqG,EAAIkC,OAAOxT,KAAKiJ,KAC3B,IAAKgC,EACD,OAAO2gB,GAAWG,KAAK,mCAC3B,IAAIS,EAAUvhB,EAAKE,KAAK4C,OAAO9C,EAAK1K,MAAO,KAAMP,KAAKsT,KAAK7F,cAAcxC,EAAK6C,QAC9E,OAAO8d,GAAWS,YAAY/a,EAAKtR,KAAKiJ,IAAKjJ,KAAKiJ,IAAM,EAAG,IAAIkF,GAAM/D,EAAAA,KAAcoiB,GAAU,EAAGvhB,EAAKC,OAAS,EAAI,GACrH,CACDmf,OAAO/Y,GACH,IAAIrG,EAAOqG,EAAIkC,OAAOxT,KAAKiJ,KAC3B,OAAKgC,GAASjL,KAAKsT,KAAK5F,QAAQzC,EAAK6C,OAE9B,IAAIye,GAAgBvsB,KAAKiJ,IAAKjJ,KAAKsT,MAD/BtT,IAEd,CACDgD,IAAI6nB,GACA,IAAI5hB,EAAM4hB,EAAQrB,UAAUxpB,KAAKiJ,IAAK,GACtC,OAAOA,EAAIigB,aAAe,KAAO,IAAIwD,GAAmBzjB,EAAIA,IAAKjJ,KAAKsT,KACzE,CACDlQ,SACI,MAAO,CAAEqoB,SAAU,iBAAkBxiB,IAAKjJ,KAAKiJ,IAAKqK,KAAMtT,KAAKsT,KAAKlQ,SACvE,CAIc,gBAACwJ,EAAQiB,GACpB,GAAuB,iBAAZA,EAAK5E,IACZ,MAAM,IAAIkD,WAAW,iDACzB,OAAO,IAAIugB,GAAmB7e,EAAK5E,IAAK2D,EAAOkI,aAAajH,EAAKyF,MACpE,EAELgY,GAAKK,OAAO,iBAAkBe,IAK9B,MAAMC,WAAoBrB,GAUtB/pB,YAIAkH,EAIA6B,EAIAxC,EAIAsf,GAAY,GACR1lB,QACA1B,KAAKyI,KAAOA,EACZzI,KAAKsK,GAAKA,EACVtK,KAAK8H,MAAQA,EACb9H,KAAKonB,UAAYA,CACpB,CACD+E,MAAM7a,GACF,OAAItR,KAAKonB,WAAawF,GAAetb,EAAKtR,KAAKyI,KAAMzI,KAAKsK,IAC/CshB,GAAWG,KAAK,6CACpBH,GAAWS,YAAY/a,EAAKtR,KAAKyI,KAAMzI,KAAKsK,GAAItK,KAAK8H,MAC/D,CACDyjB,SACI,OAAO,IAAInC,GAAQ,CAACppB,KAAKyI,KAAMzI,KAAKsK,GAAKtK,KAAKyI,KAAMzI,KAAK8H,MAAMY,MAClE,CACD2hB,OAAO/Y,GACH,OAAO,IAAIqb,GAAY3sB,KAAKyI,KAAMzI,KAAKyI,KAAOzI,KAAK8H,MAAMY,KAAM4I,EAAIxJ,MAAM9H,KAAKyI,KAAMzI,KAAKsK,IAC5F,CACDtH,IAAI6nB,GACA,IAAIpiB,EAAOoiB,EAAQrB,UAAUxpB,KAAKyI,KAAM,GAAI6B,EAAKugB,EAAQrB,UAAUxpB,KAAKsK,IAAK,GAC7E,OAAI7B,EAAK0gB,eAAiB7e,EAAG6e,cAClB,KACJ,IAAIwD,GAAYlkB,EAAKQ,IAAKiB,KAAKS,IAAIlC,EAAKQ,IAAKqB,EAAGrB,KAAMjJ,KAAK8H,MACrE,CACD0jB,MAAMngB,GACF,KAAMA,aAAiBshB,KAAgBthB,EAAM+b,WAAapnB,KAAKonB,UAC3D,OAAO,KACX,GAAIpnB,KAAKyI,KAAOzI,KAAK8H,MAAMY,MAAQ2C,EAAM5C,MAASzI,KAAK8H,MAAMuG,SAAYhD,EAAMvD,MAAMsG,UAKhF,IAAI/C,EAAMf,IAAMtK,KAAKyI,MAASzI,KAAK8H,MAAMsG,WAAc/C,EAAMvD,MAAMuG,QAMpE,OAAO,KANsE,CAC7E,IAAIvG,EAAQ9H,KAAK8H,MAAMY,KAAO2C,EAAMvD,MAAMY,MAAQ,EAAIyF,GAAAA,MAChD,IAAIA,GAAM9C,EAAMvD,MAAMT,QAAQuB,OAAO5I,KAAK8H,MAAMT,SAAUgE,EAAMvD,MAAMsG,UAAWpO,KAAK8H,MAAMuG,SAClG,OAAO,IAAIse,GAAYthB,EAAM5C,KAAMzI,KAAKsK,GAAIxC,EAAO9H,KAAKonB,UAC3D,CAGA,CAZ+F,CAC5F,IAAItf,EAAQ9H,KAAK8H,MAAMY,KAAO2C,EAAMvD,MAAMY,MAAQ,EAAIyF,GAAAA,MAChD,IAAIA,GAAMnO,KAAK8H,MAAMT,QAAQuB,OAAOyC,EAAMvD,MAAMT,SAAUrH,KAAK8H,MAAMsG,UAAW/C,EAAMvD,MAAMuG,SAClG,OAAO,IAAIse,GAAY3sB,KAAKyI,KAAMzI,KAAKsK,IAAMe,EAAMf,GAAKe,EAAM5C,MAAOX,EAAO9H,KAAKonB,UACpF,CASJ,CACDhkB,SACI,IAAIyK,EAAO,CAAE4d,SAAU,UAAWhjB,KAAMzI,KAAKyI,KAAM6B,GAAItK,KAAKsK,IAK5D,OAJItK,KAAK8H,MAAMY,OACXmF,EAAK/F,MAAQ9H,KAAK8H,MAAM1E,UACxBpD,KAAKonB,YACLvZ,EAAKuZ,WAAY,GACdvZ,CACV,CAIc,gBAACjB,EAAQiB,GACpB,GAAwB,iBAAbA,EAAKpF,MAAsC,iBAAXoF,EAAKvD,GAC5C,MAAM,IAAI6B,WAAW,0CACzB,OAAO,IAAIwgB,GAAY9e,EAAKpF,KAAMoF,EAAKvD,GAAI6D,GAAAA,SAAevB,EAAQiB,EAAK/F,SAAU+F,EAAKuZ,UACzF,EAELkE,GAAKK,OAAO,UAAWgB,IAMvB,MAAME,WAA0BvB,GAO5B/pB,YAIAkH,EAIA6B,EAIAwiB,EAIAC,EAIAjlB,EAKAmH,EAIAmY,GAAY,GACR1lB,QACA1B,KAAKyI,KAAOA,EACZzI,KAAKsK,GAAKA,EACVtK,KAAK8sB,QAAUA,EACf9sB,KAAK+sB,MAAQA,EACb/sB,KAAK8H,MAAQA,EACb9H,KAAKiP,OAASA,EACdjP,KAAKonB,UAAYA,CACpB,CACD+E,MAAM7a,GACF,GAAItR,KAAKonB,YAAcwF,GAAetb,EAAKtR,KAAKyI,KAAMzI,KAAK8sB,UACvDF,GAAetb,EAAKtR,KAAK+sB,MAAO/sB,KAAKsK,KACrC,OAAOshB,GAAWG,KAAK,iDAC3B,IAAIiB,EAAM1b,EAAIxJ,MAAM9H,KAAK8sB,QAAS9sB,KAAK+sB,OACvC,GAAIC,EAAI5e,WAAa4e,EAAI3e,QACrB,OAAOud,GAAWG,KAAK,2BAC3B,IAAIkB,EAAWjtB,KAAK8H,MAAMwG,SAAStO,KAAKiP,OAAQ+d,EAAI3lB,SACpD,OAAK4lB,EAEErB,GAAWS,YAAY/a,EAAKtR,KAAKyI,KAAMzI,KAAKsK,GAAI2iB,GAD5CrB,GAAWG,KAAK,8BAE9B,CACDR,SACI,OAAO,IAAInC,GAAQ,CAACppB,KAAKyI,KAAMzI,KAAK8sB,QAAU9sB,KAAKyI,KAAMzI,KAAKiP,OAC1DjP,KAAK+sB,MAAO/sB,KAAKsK,GAAKtK,KAAK+sB,MAAO/sB,KAAK8H,MAAMY,KAAO1I,KAAKiP,QAChE,CACDob,OAAO/Y,GACH,IAAI0b,EAAMhtB,KAAK+sB,MAAQ/sB,KAAK8sB,QAC5B,OAAO,IAAID,GAAkB7sB,KAAKyI,KAAMzI,KAAKyI,KAAOzI,KAAK8H,MAAMY,KAAOskB,EAAKhtB,KAAKyI,KAAOzI,KAAKiP,OAAQjP,KAAKyI,KAAOzI,KAAKiP,OAAS+d,EAAK1b,EAAIxJ,MAAM9H,KAAKyI,KAAMzI,KAAKsK,IAAImE,cAAczO,KAAK8sB,QAAU9sB,KAAKyI,KAAMzI,KAAK+sB,MAAQ/sB,KAAKyI,MAAOzI,KAAK8sB,QAAU9sB,KAAKyI,KAAMzI,KAAKonB,UACpQ,CACDpkB,IAAI6nB,GACA,IAAIpiB,EAAOoiB,EAAQrB,UAAUxpB,KAAKyI,KAAM,GAAI6B,EAAKugB,EAAQrB,UAAUxpB,KAAKsK,IAAK,GACzEwiB,EAAUjC,EAAQ7nB,IAAIhD,KAAK8sB,SAAU,GAAIC,EAAQlC,EAAQ7nB,IAAIhD,KAAK+sB,MAAO,GAC7E,OAAKtkB,EAAK0gB,eAAiB7e,EAAG6e,eAAkB2D,EAAUrkB,EAAKQ,KAAO8jB,EAAQziB,EAAGrB,IACtE,KACJ,IAAI4jB,GAAkBpkB,EAAKQ,IAAKqB,EAAGrB,IAAK6jB,EAASC,EAAO/sB,KAAK8H,MAAO9H,KAAKiP,OAAQjP,KAAKonB,UAChG,CACDhkB,SACI,IAAIyK,EAAO,CAAE4d,SAAU,gBAAiBhjB,KAAMzI,KAAKyI,KAAM6B,GAAItK,KAAKsK,GAC9DwiB,QAAS9sB,KAAK8sB,QAASC,MAAO/sB,KAAK+sB,MAAO9d,OAAQjP,KAAKiP,QAK3D,OAJIjP,KAAK8H,MAAMY,OACXmF,EAAK/F,MAAQ9H,KAAK8H,MAAM1E,UACxBpD,KAAKonB,YACLvZ,EAAKuZ,WAAY,GACdvZ,CACV,CAIc,gBAACjB,EAAQiB,GACpB,GAAwB,iBAAbA,EAAKpF,MAAsC,iBAAXoF,EAAKvD,IACrB,iBAAhBuD,EAAKif,SAA4C,iBAAdjf,EAAKkf,OAA2C,iBAAflf,EAAKoB,OAChF,MAAM,IAAI9C,WAAW,gDACzB,OAAO,IAAI0gB,GAAkBhf,EAAKpF,KAAMoF,EAAKvD,GAAIuD,EAAKif,QAASjf,EAAKkf,MAAO5e,GAAAA,SAAevB,EAAQiB,EAAK/F,OAAQ+F,EAAKoB,SAAUpB,EAAKuZ,UACtI,EAGL,SAASwF,GAAetb,EAAK7I,EAAM6B,GAC/B,IAAI8E,EAAQkC,EAAIsB,QAAQnK,GAAOuG,EAAO1E,EAAK7B,EAAM6G,EAAQF,EAAME,MAC/D,MAAON,EAAO,GAAKM,EAAQ,GAAKF,EAAMmC,WAAWjC,IAAUF,EAAMnE,KAAKqE,GAAOpG,WACzEoG,IACAN,IAEJ,GAAIA,EAAO,EAAG,CACV,IAAIgD,EAAO5C,EAAMnE,KAAKqE,GAAOlD,WAAWgD,EAAMmC,WAAWjC,IACzD,MAAON,EAAO,EAAG,CACb,IAAKgD,GAAQA,EAAK9G,OACd,OAAO,EACX8G,EAAOA,EAAKvG,WACZuD,GACH,CACJ,CACD,OAAO,CACV,CAED,SAASke,GAAQC,EAAI1kB,EAAM6B,EAAIgJ,GAC3B,IACI8Z,EAAUC,EADVC,EAAU,GAAIC,EAAQ,GAE1BJ,EAAG7b,IAAIjH,aAAa5B,EAAM6B,GAAI,CAACW,EAAMhC,EAAKuB,KACtC,IAAKS,EAAK8G,SACN,OACJ,IAAIjE,EAAQ7C,EAAK6C,MACjB,IAAKwF,EAAK5F,QAAQI,IAAUtD,EAAOW,KAAKoP,eAAejH,EAAKnI,MAAO,CAC/D,IAAIT,EAAQR,KAAKS,IAAI1B,EAAKR,GAAOgC,EAAMP,KAAKC,IAAIlB,EAAMgC,EAAKvB,SAAUY,GACjEmiB,EAASnZ,EAAKjG,SAASS,GAC3B,IAAK,IAAIjL,EAAI,EAAGA,EAAIiL,EAAMtG,OAAQ3E,IACzBiL,EAAMjL,GAAG6K,QAAQ+e,KACdW,GAAYA,EAAS9iB,IAAMI,GAAS0iB,EAAS9Z,KAAKpH,GAAG4B,EAAMjL,IAC3DuqB,EAAS9iB,GAAKG,EAEd6iB,EAAQvlB,KAAKqlB,EAAW,IAAId,GAAe5hB,EAAOD,EAAKqD,EAAMjL,MAGrEwqB,GAAUA,EAAO/iB,IAAMI,EACvB2iB,EAAO/iB,GAAKG,EAEZ8iB,EAAMxlB,KAAKslB,EAAS,IAAInB,GAAYxhB,EAAOD,EAAK6I,GACvD,KAELga,EAAQ/kB,SAAQ9G,GAAK0rB,EAAGK,KAAK/rB,KAC7B8rB,EAAMhlB,SAAQ9G,GAAK0rB,EAAGK,KAAK/rB,IAC9B,CACD,SAASgsB,GAAWN,EAAI1kB,EAAM6B,EAAIgJ,GAC9B,IAAIgH,EAAU,GAAIkT,EAAO,EACzBL,EAAG7b,IAAIjH,aAAa5B,EAAM6B,GAAI,CAACW,EAAMhC,KACjC,IAAKgC,EAAK8G,SACN,OACJyb,IACA,IAAIE,EAAW,KACf,GAAIpa,aAAgByH,GAAU,CAC1B,IAAsBtT,EAAlB7B,EAAMqF,EAAK6C,MACf,MAAOrG,EAAQ6L,EAAK5F,QAAQ9H,IACvB8nB,IAAaA,EAAW,KAAK3lB,KAAKN,GACnC7B,EAAM6B,EAAMgG,cAAc7H,EAEjC,MACQ0N,EACDA,EAAK5F,QAAQzC,EAAK6C,SAClB4f,EAAW,CAACpa,IAGhBoa,EAAWziB,EAAK6C,MAEpB,GAAI4f,GAAYA,EAASlmB,OAAQ,CAC7B,IAAIiD,EAAMP,KAAKC,IAAIlB,EAAMgC,EAAKvB,SAAUY,GACxC,IAAK,IAAIzH,EAAI,EAAGA,EAAI6qB,EAASlmB,OAAQ3E,IAAK,CACtC,IAAyB4E,EAArB0U,EAAQuR,EAAS7qB,GACrB,IAAK,IAAI6C,EAAI,EAAGA,EAAI4U,EAAQ9S,OAAQ9B,IAAK,CACrC,IAAIzC,EAAIqX,EAAQ5U,GACZzC,EAAEuqB,MAAQA,EAAO,GAAKrR,EAAMjQ,GAAGoO,EAAQ5U,GAAGyW,SAC1C1U,EAAQxE,EACf,CACGwE,GACAA,EAAM6C,GAAKG,EACXhD,EAAM+lB,KAAOA,GAGblT,EAAQvS,KAAK,CAAEoU,QAAO1T,KAAMyB,KAAKS,IAAI1B,EAAKR,GAAO6B,GAAIG,EAAK+iB,QAEjE,CACJ,KAELlT,EAAQ/R,SAAQtF,GAAKkqB,EAAGK,KAAK,IAAIlB,GAAerpB,EAAEwF,KAAMxF,EAAEqH,GAAIrH,EAAEkZ,SACnE,CACD,SAASwR,GAAkBR,EAAIlkB,EAAK2kB,EAAY1Z,EAAQ0Z,EAAWzZ,cAC/D,IAAIlJ,EAAOkiB,EAAG7b,IAAIkC,OAAOvK,GACrB4kB,EAAW,GAAInhB,EAAMzD,EAAM,EAC/B,IAAK,IAAIpG,EAAI,EAAGA,EAAIoI,EAAK/B,WAAYrG,IAAK,CACtC,IAAIuG,EAAQ6B,EAAK7B,MAAMvG,GAAI4H,EAAMiC,EAAMtD,EAAMM,SACzCokB,EAAU5Z,EAAMS,UAAUvL,EAAM+B,MACpC,GAAK2iB,EAGA,CACD5Z,EAAQ4Z,EACR,IAAK,IAAIpoB,EAAI,EAAGA,EAAI0D,EAAM0E,MAAMtG,OAAQ9B,IAC/BkoB,EAAWrT,eAAenR,EAAM0E,MAAMpI,GAAGyF,OAC1CgiB,EAAGK,KAAK,IAAIlB,GAAe5f,EAAKjC,EAAKrB,EAAM0E,MAAMpI,IAC5D,MAPGmoB,EAAS9lB,KAAK,IAAI4kB,GAAYjgB,EAAKjC,EAAK0D,GAAAA,QAQ5CzB,EAAMjC,CACT,CACD,IAAKyJ,EAAMM,SAAU,CACjB,IAAIkM,EAAOxM,EAAMgC,WAAW9L,EAAAA,OAAgB,GAC5C+iB,EAAGhe,QAAQzC,EAAKA,EAAK,IAAIyB,GAAMuS,EAAM,EAAG,GAC3C,CACD,IAAK,IAAI7d,EAAIgrB,EAASrmB,OAAS,EAAG3E,GAAK,EAAGA,IACtCsqB,EAAGK,KAAKK,EAAShrB,GACxB,CAED,SAASkrB,GAAO9iB,EAAMP,EAAOD,GACzB,OAAiB,GAATC,GAAcO,EAAKiE,WAAWxE,EAAOO,EAAK/B,eAC7CuB,GAAOQ,EAAK/B,YAAc+B,EAAKiE,WAAW,EAAGzE,GACrD,CAMD,SAASujB,GAAWC,GAChB,IAAIzjB,EAASyjB,EAAMzjB,OACfnD,EAAUmD,EAAOnD,QAAQuE,WAAWqiB,EAAMxd,WAAYwd,EAAMvd,UAChE,IAAK,IAAIpB,EAAQ2e,EAAM3e,SAAUA,EAAO,CACpC,IAAIrE,EAAOgjB,EAAM7e,MAAMnE,KAAKqE,GACxBvD,EAAQkiB,EAAM7e,MAAMrD,MAAMuD,GAAQoB,EAAWud,EAAM5e,IAAIkC,WAAWjC,GACtE,GAAIA,EAAQ2e,EAAM3e,OAASrE,EAAKiE,WAAWnD,EAAO2E,EAAUrJ,GACxD,OAAOiI,EACX,GAAa,GAATA,GAAcrE,EAAKE,KAAK9H,KAAKwL,YAAckf,GAAO9iB,EAAMc,EAAO2E,GAC/D,KACP,CACD,OAAO,IACV,CACD,SAASwd,GAAKf,EAAIc,EAAO5d,GACrB,IAAI,MAAEjB,EAAF,IAASC,EAAT,MAAcC,GAAU2e,EACxBE,EAAW/e,EAAMoC,OAAOlC,EAAQ,GAAI8e,EAAS/e,EAAIoC,MAAMnC,EAAQ,GAC/D5E,EAAQyjB,EAAU1jB,EAAM2jB,EACxB5c,EAASpH,EAAAA,MAAgBgE,EAAY,EACzC,IAAK,IAAI9L,EAAIgN,EAAO+e,GAAY,EAAO/rB,EAAI+N,EAAQ/N,IAC3C+rB,GAAajf,EAAMrD,MAAMzJ,GAAK,GAC9B+rB,GAAY,EACZ7c,EAASpH,EAAAA,KAAcgF,EAAMnE,KAAK3I,GAAG2J,KAAKuF,IAC1CpD,KAGA1D,IAER,IAAI+G,EAAQrH,EAAAA,MAAgBiE,EAAU,EACtC,IAAK,IAAI/L,EAAIgN,EAAO+e,GAAY,EAAO/rB,EAAI+N,EAAQ/N,IAC3C+rB,GAAahf,EAAIoC,MAAMnP,EAAI,GAAK+M,EAAI5E,IAAInI,IACxC+rB,GAAY,EACZ5c,EAAQrH,EAAAA,KAAciF,EAAIpE,KAAK3I,GAAG2J,KAAKwF,IACvCpD,KAGA5D,IAER0iB,EAAGK,KAAK,IAAIX,GAAkBniB,EAAOD,EAAK0jB,EAAUC,EAAQ,IAAIjgB,GAAMqD,EAAO5I,OAAO6I,GAAQrD,EAAWC,GAAUmD,EAAO9I,KAAO0F,GAAW,GAC7I,CASD,SAASuI,GAAasX,EAAOlZ,EAAUxU,EAAQ,KAAM+tB,EAAaL,GAC9D,IAAIM,EAASC,GAAoBP,EAAOlZ,GACpCtL,EAAQ8kB,GAAUE,GAAmBH,EAAYvZ,GACrD,OAAKtL,EAEE8kB,EAAOvrB,IAAI0rB,IACbxmB,OAAO,CAAEiD,KAAM4J,EAAUxU,UAAS2H,OAAOuB,EAAMzG,IAAI0rB,KAF7C,IAGd,CACD,SAASA,GAAUvjB,GAAQ,MAAO,CAAEA,OAAM5K,MAAO,KAAS,CAC1D,SAASiuB,GAAoBP,EAAO9iB,GAChC,IAAI,OAAEX,EAAF,WAAUiG,EAAV,SAAsBC,GAAaud,EACnCM,EAAS/jB,EAAOyJ,eAAexD,GAAYkG,aAAaxL,GAC5D,IAAKojB,EACD,OAAO,KACX,IAAII,EAAQJ,EAAO/mB,OAAS+mB,EAAO,GAAKpjB,EACxC,OAAOX,EAAOkK,eAAejE,EAAYC,EAAUie,GAASJ,EAAS,IACxE,CACD,SAASE,GAAmBR,EAAO9iB,GAC/B,IAAI,OAAEX,EAAF,WAAUiG,EAAV,SAAsBC,GAAaud,EACnCxkB,EAAQe,EAAOpB,MAAMqH,GACrBme,EAASzjB,EAAKgJ,aAAawC,aAAalN,EAAM0B,MAClD,IAAKyjB,EACD,OAAO,KACX,IAAIC,EAAWD,EAAOpnB,OAASonB,EAAOA,EAAOpnB,OAAS,GAAK2D,EACvD2jB,EAAaD,EAAS1a,aAC1B,IAAK,IAAItR,EAAI4N,EAAYqe,GAAcjsB,EAAI6N,EAAU7N,IACjDisB,EAAaA,EAAWna,UAAUnK,EAAOpB,MAAMvG,GAAGsI,MACtD,OAAK2jB,GAAeA,EAAWta,SAExBoa,EADI,IAEd,CACD,SAASjO,GAAKwM,EAAIc,EAAOc,GACrB,IAAI1nB,EAAU+C,EAAAA,MACd,IAAK,IAAIvH,EAAIksB,EAASvnB,OAAS,EAAG3E,GAAK,EAAGA,IAAK,CAC3C,GAAIwE,EAAQqB,KAAM,CACd,IAAIwL,EAAQ6a,EAASlsB,GAAGsI,KAAKgJ,aAAaC,cAAc/M,GACxD,IAAK6M,IAAUA,EAAMM,SACjB,MAAM,IAAIrI,WAAW,yFAC5B,CACD9E,EAAU+C,EAAAA,KAAc2kB,EAASlsB,GAAGsI,KAAK4C,OAAOghB,EAASlsB,GAAGtC,MAAO8G,GACtE,CACD,IAAIqD,EAAQujB,EAAMvjB,MAAOD,EAAMwjB,EAAMxjB,IACrC0iB,EAAGK,KAAK,IAAIX,GAAkBniB,EAAOD,EAAKC,EAAOD,EAAK,IAAI0D,GAAM9G,EAAS,EAAG,GAAI0nB,EAASvnB,QAAQ,GACpG,CACD,SAASwnB,GAAa7B,EAAI1kB,EAAM6B,EAAIa,EAAM5K,GACtC,IAAK4K,EAAK0I,YACN,MAAM,IAAI1H,WAAW,oDACzB,IAAI8iB,EAAU9B,EAAG+B,MAAM1nB,OACvB2lB,EAAG7b,IAAIjH,aAAa5B,EAAM6B,GAAI,CAACW,EAAMhC,KACjC,GAAIgC,EAAK4I,cAAgB5I,EAAKkI,UAAUhI,EAAM5K,IAAU4uB,GAAchC,EAAG7b,IAAK6b,EAAGtC,QAAQ/iB,MAAMmnB,GAASjsB,IAAIiG,GAAMkC,GAAO,CAErHgiB,EAAGQ,kBAAkBR,EAAGtC,QAAQ/iB,MAAMmnB,GAASjsB,IAAIiG,EAAK,GAAIkC,GAC5D,IAAI0f,EAAUsC,EAAGtC,QAAQ/iB,MAAMmnB,GAC3BG,EAASvE,EAAQ7nB,IAAIiG,EAAK,GAAIomB,EAAOxE,EAAQ7nB,IAAIiG,EAAMgC,EAAKvB,SAAU,GAE1E,OADAyjB,EAAGK,KAAK,IAAIX,GAAkBuC,EAAQC,EAAMD,EAAS,EAAGC,EAAO,EAAG,IAAIlhB,GAAM/D,EAAAA,KAAce,EAAK4C,OAAOxN,EAAO,KAAM0K,EAAK6C,QAAS,EAAG,GAAI,GAAG,KACpI,CACV,IAER,CACD,SAASqhB,GAAc7d,EAAKrI,EAAKkC,GAC7B,IAAImkB,EAAOhe,EAAIsB,QAAQ3J,GAAM8C,EAAQujB,EAAKvjB,QAC1C,OAAOujB,EAAK9kB,OAAOkK,eAAe3I,EAAOA,EAAQ,EAAGZ,EACvD,CAKD,SAASokB,GAAcpC,EAAIlkB,EAAKkC,EAAM5K,EAAOuN,GACzC,IAAI7C,EAAOkiB,EAAG7b,IAAIkC,OAAOvK,GACzB,IAAKgC,EACD,MAAM,IAAIkB,WAAW,6BACpBhB,IACDA,EAAOF,EAAKE,MAChB,IAAIqkB,EAAUrkB,EAAK4C,OAAOxN,EAAO,KAAMuN,GAAS7C,EAAK6C,OACrD,GAAI7C,EAAKC,OACL,OAAOiiB,EAAGsC,YAAYxmB,EAAKA,EAAMgC,EAAKvB,SAAU8lB,GACpD,IAAKrkB,EAAK2F,aAAa7F,EAAK5D,SACxB,MAAM,IAAI8E,WAAW,iCAAmChB,EAAKxJ,MACjEwrB,EAAGK,KAAK,IAAIX,GAAkB5jB,EAAKA,EAAMgC,EAAKvB,SAAUT,EAAM,EAAGA,EAAMgC,EAAKvB,SAAW,EAAG,IAAIyE,GAAM/D,EAAAA,KAAcolB,GAAU,EAAG,GAAI,GAAG,GACzI,CAID,SAASE,GAASpe,EAAKrI,EAAKqG,EAAQ,EAAGqgB,GACnC,IAAIL,EAAOhe,EAAIsB,QAAQ3J,GAAMgM,EAAOqa,EAAKhgB,MAAQA,EAC7CsgB,EAAaD,GAAcA,EAAWA,EAAWnoB,OAAS,IAAO8nB,EAAK9kB,OAC1E,GAAIyK,EAAO,GAAKqa,EAAK9kB,OAAOW,KAAK9H,KAAKwL,YACjCygB,EAAK9kB,OAAO0E,WAAWogB,EAAKvjB,QAASujB,EAAK9kB,OAAOtB,cACjD0mB,EAAUzkB,KAAK2F,aAAawe,EAAK9kB,OAAOnD,QAAQuE,WAAW0jB,EAAKvjB,QAASujB,EAAK9kB,OAAOtB,aACtF,OAAO,EACX,IAAK,IAAI5G,EAAIgtB,EAAKhgB,MAAQ,EAAGzM,EAAIyM,EAAQ,EAAGhN,EAAI2S,EAAM3S,IAAKO,IAAK,CAC5D,IAAIoI,EAAOqkB,EAAKrkB,KAAK3I,GAAIyJ,EAAQujB,EAAKvjB,MAAMzJ,GAC5C,GAAI2I,EAAKE,KAAK9H,KAAKwL,UACf,OAAO,EACX,IAAIghB,EAAO5kB,EAAK5D,QAAQuE,WAAWG,EAAOd,EAAK/B,YAC3CuI,EAASke,GAAcA,EAAW9sB,IAAOoI,EAG7C,GAFIwG,GAASxG,IACT4kB,EAAOA,EAAK/jB,aAAa,EAAG2F,EAAMtG,KAAK4C,OAAO0D,EAAMlR,UACnD0K,EAAKiE,WAAWnD,EAAQ,EAAGd,EAAK/B,cAAgBuI,EAAMtG,KAAK2F,aAAa+e,GACzE,OAAO,CACd,CACD,IAAI9jB,EAAQujB,EAAK/d,WAAW0D,GACxB6a,EAAWH,GAAcA,EAAW,GACxC,OAAOL,EAAKrkB,KAAKgK,GAAMP,eAAe3I,EAAOA,EAAO+jB,EAAWA,EAAS3kB,KAAOmkB,EAAKrkB,KAAKgK,EAAO,GAAG9J,KACtG,CACD,SAASqM,GAAM2V,EAAIlkB,EAAKqG,EAAQ,EAAGqgB,GAC/B,IAAIL,EAAOnC,EAAG7b,IAAIsB,QAAQ3J,GAAMuI,EAASpH,EAAAA,MAAgBqH,EAAQrH,EAAAA,MACjE,IAAK,IAAI9H,EAAIgtB,EAAKhgB,MAAOlO,EAAIkuB,EAAKhgB,MAAQA,EAAOzM,EAAIyM,EAAQ,EAAGhN,EAAIlB,EAAGkB,IAAKO,IAAK,CAC7E2O,EAASpH,EAAAA,KAAcklB,EAAKrkB,KAAK3I,GAAG2J,KAAKuF,IACzC,IAAIue,EAAYJ,GAAcA,EAAW9sB,GACzC4O,EAAQrH,EAAAA,KAAc2lB,EAAYA,EAAU5kB,KAAK4C,OAAOgiB,EAAUxvB,MAAOkR,GAAS6d,EAAKrkB,KAAK3I,GAAG2J,KAAKwF,GACvG,CACD0b,EAAGK,KAAK,IAAIb,GAAY1jB,EAAKA,EAAK,IAAIkF,GAAMqD,EAAO5I,OAAO6I,GAAQnC,EAAOA,IAAQ,GACpF,CAKD,SAAS0gB,GAAQ1e,EAAKrI,GAClB,IAAIqmB,EAAOhe,EAAIsB,QAAQ3J,GAAM8C,EAAQujB,EAAKvjB,QAC1C,OAAOkE,GAASqf,EAAKze,WAAYye,EAAK1e,YAClC0e,EAAK9kB,OAAO0E,WAAWnD,EAAOA,EAAQ,EAC7C,CACD,SAASkE,GAASrN,EAAGoG,GACjB,SAAUpG,IAAKoG,GAAMpG,EAAEsI,SAAUtI,EAAEgS,UAAU5L,GAChD,CA+BD,SAAS7F,GAAKgqB,EAAIlkB,EAAKqG,GACnB,IAAIke,EAAO,IAAIb,GAAY1jB,EAAMqG,EAAOrG,EAAMqG,EAAOnB,GAAAA,OAAa,GAClEgf,EAAGK,KAAKA,EACX,CAOD,SAASyC,GAAY3e,EAAKrI,EAAK8L,GAC3B,IAAIua,EAAOhe,EAAIsB,QAAQ3J,GACvB,GAAIqmB,EAAK9kB,OAAOkK,eAAe4a,EAAKvjB,QAASujB,EAAKvjB,QAASgJ,GACvD,OAAO9L,EACX,GAAyB,GAArBqmB,EAAK3f,aACL,IAAK,IAAIrN,EAAIgtB,EAAKhgB,MAAQ,EAAGhN,GAAK,EAAGA,IAAK,CACtC,IAAIyJ,EAAQujB,EAAKvjB,MAAMzJ,GACvB,GAAIgtB,EAAKrkB,KAAK3I,GAAGoS,eAAe3I,EAAOA,EAAOgJ,GAC1C,OAAOua,EAAK9d,OAAOlP,EAAI,GAC3B,GAAIyJ,EAAQ,EACR,OAAO,IACd,CACL,GAAIujB,EAAK3f,cAAgB2f,EAAK9kB,OAAOnD,QAAQqB,KACzC,IAAK,IAAIpG,EAAIgtB,EAAKhgB,MAAQ,EAAGhN,GAAK,EAAGA,IAAK,CACtC,IAAIyJ,EAAQujB,EAAK/d,WAAWjP,GAC5B,GAAIgtB,EAAKrkB,KAAK3I,GAAGoS,eAAe3I,EAAOA,EAAOgJ,GAC1C,OAAOua,EAAK7d,MAAMnP,EAAI,GAC1B,GAAIyJ,EAAQujB,EAAKrkB,KAAK3I,GAAG4G,WACrB,OAAO,IACd,CACL,OAAO,IACV,CAOD,SAASgnB,GAAU5e,EAAKrI,EAAKnB,GACzB,IAAIwnB,EAAOhe,EAAIsB,QAAQ3J,GACvB,IAAKnB,EAAMT,QAAQqB,KACf,OAAOO,EACX,IAAI5B,EAAUS,EAAMT,QACpB,IAAK,IAAIxE,EAAI,EAAGA,EAAIiF,EAAMsG,UAAWvL,IACjCwE,EAAUA,EAAQoE,WAAWpE,QACjC,IAAK,IAAI8oB,EAAO,EAAGA,IAA4B,GAAnBroB,EAAMsG,WAAkBtG,EAAMY,KAAO,EAAI,GAAIynB,IACrE,IAAK,IAAI7tB,EAAIgtB,EAAKhgB,MAAOhN,GAAK,EAAGA,IAAK,CAClC,IAAI8tB,EAAO9tB,GAAKgtB,EAAKhgB,MAAQ,EAAIggB,EAAKrmB,MAAQqmB,EAAK5kB,MAAMpI,EAAI,GAAKgtB,EAAK7kB,IAAInI,EAAI,IAAM,GAAK,EAAI,EAC1F+tB,EAAYf,EAAKvjB,MAAMzJ,IAAM8tB,EAAO,EAAI,EAAI,GAC5C5lB,EAAS8kB,EAAKrkB,KAAK3I,GAAIguB,GAAO,EAClC,GAAY,GAARH,EACAG,EAAO9lB,EAAO0E,WAAWmhB,EAAWA,EAAWhpB,OAE9C,CACD,IAAIkpB,EAAW/lB,EAAOyJ,eAAeoc,GAAW1Z,aAAatP,EAAQoE,WAAWN,MAChFmlB,EAAOC,GAAY/lB,EAAOkK,eAAe2b,EAAWA,EAAWE,EAAS,GAC3E,CACD,GAAID,EACA,OAAe,GAARF,EAAYd,EAAKrmB,IAAMmnB,EAAO,EAAId,EAAK9d,OAAOlP,EAAI,GAAKgtB,EAAK7d,MAAMnP,EAAI,EACpF,CAEL,OAAO,IACV,CAQD,SAASkuB,GAAYlf,EAAK7I,EAAM6B,EAAK7B,EAAMX,EAAQqG,GAAAA,OAC/C,GAAI1F,GAAQ6B,IAAOxC,EAAMY,KACrB,OAAO,KACX,IAAI0G,EAAQkC,EAAIsB,QAAQnK,GAAO4G,EAAMiC,EAAIsB,QAAQtI,GAEjD,OAAImmB,GAAcrhB,EAAOC,EAAKvH,GACnB,IAAI6kB,GAAYlkB,EAAM6B,EAAIxC,GAC9B,IAAI4oB,GAAOthB,EAAOC,EAAKvH,GAAO6oB,KACxC,CACD,SAASF,GAAcrhB,EAAOC,EAAKvH,GAC/B,OAAQA,EAAMsG,YAActG,EAAMuG,SAAWe,EAAM1E,SAAW2E,EAAI3E,SAC9D0E,EAAM5E,OAAO0E,WAAWE,EAAMrD,QAASsD,EAAItD,QAASjE,EAAMT,QACjE,CAvZDikB,GAAKK,OAAO,gBAAiBkB,IA4a7B,MAAM6D,GACFnvB,YAAY6N,EAAOC,EAAKuhB,GACpB5wB,KAAKoP,MAAQA,EACbpP,KAAKqP,IAAMA,EACXrP,KAAK4wB,SAAWA,EAChB5wB,KAAK6wB,SAAW,GAChB7wB,KAAKsN,OAASlD,EAAAA,MACd,IAAK,IAAIvH,EAAI,EAAGA,GAAKuM,EAAME,MAAOzM,IAAK,CACnC,IAAIoI,EAAOmE,EAAMnE,KAAKpI,GACtB7C,KAAK6wB,SAAS9oB,KAAK,CACfoD,KAAMF,EAAKE,KACX+I,MAAOjJ,EAAKgJ,eAAe7E,EAAMmC,WAAW1O,KAEnD,CACD,IAAK,IAAIA,EAAIuM,EAAME,MAAOzM,EAAI,EAAGA,IAC7B7C,KAAKsN,OAASlD,EAAAA,KAAcgF,EAAMnE,KAAKpI,GAAGoJ,KAAKjM,KAAKsN,QAC3D,CACGgC,YAAU,OAAOtP,KAAK6wB,SAASrpB,OAAS,CAAI,CAChDmpB,MAII,MAAO3wB,KAAK4wB,SAASloB,KAAM,CACvB,IAAIioB,EAAM3wB,KAAK8wB,eACXH,EACA3wB,KAAK+wB,WAAWJ,GAEhB3wB,KAAKgxB,YAAchxB,KAAKixB,UAC/B,CAMD,IAAIC,EAAalxB,KAAKmxB,iBAAkBC,EAAapxB,KAAKsN,OAAO5E,KAAO1I,KAAKsP,MAAQtP,KAAKoP,MAAME,MAC5FF,EAAQpP,KAAKoP,MAAOC,EAAMrP,KAAKyP,MAAMyhB,EAAa,EAAIlxB,KAAKqP,IAAMD,EAAMkC,IAAIsB,QAAQse,IACvF,IAAK7hB,EACD,OAAO,KAEX,IAAIhI,EAAUrH,KAAKsN,OAAQc,EAAYgB,EAAME,MAAOjB,EAAUgB,EAAIC,MAClE,MAAOlB,GAAaC,GAAiC,GAAtBhH,EAAQ6B,WACnC7B,EAAUA,EAAQoE,WAAWpE,QAC7B+G,IACAC,IAEJ,IAAIvG,EAAQ,IAAIqG,GAAM9G,EAAS+G,EAAWC,GAC1C,OAAI6iB,GAAc,EACP,IAAIrE,GAAkBzd,EAAMnG,IAAKioB,EAAYlxB,KAAKqP,IAAIpG,IAAKjJ,KAAKqP,IAAI5E,MAAO3C,EAAOspB,GACzFtpB,EAAMY,MAAQ0G,EAAMnG,KAAOjJ,KAAKqP,IAAIpG,IAC7B,IAAI0jB,GAAYvd,EAAMnG,IAAKoG,EAAIpG,IAAKnB,GACxC,IACV,CAIDgpB,eAGI,IAAK,IAAIX,EAAO,EAAGA,GAAQ,EAAGA,IAC1B,IAAK,IAAIkB,EAAarxB,KAAK4wB,SAASxiB,UAAWijB,GAAc,EAAGA,IAAc,CAC1E,IAAI9iB,EAAU/D,EAAS,KACnB6mB,GACA7mB,EAAS8mB,GAAUtxB,KAAK4wB,SAASvpB,QAASgqB,EAAa,GAAG5lB,WAC1D8C,EAAW/D,EAAOnD,SAGlBkH,EAAWvO,KAAK4wB,SAASvpB,QAE7B,IAAImE,EAAQ+C,EAAS9C,WACrB,IAAK,IAAI8lB,EAAgBvxB,KAAKsP,MAAOiiB,GAAiB,EAAGA,IAAiB,CACtE,IAAoD5Q,GAAhD,KAAExV,EAAF,MAAQ+I,GAAUlU,KAAK6wB,SAASU,GAAsB/qB,EAAS,KAInE,GAAY,GAAR2pB,IAAc3kB,EAAQ0I,EAAMS,UAAUnJ,EAAML,QAAU3E,EAAS0N,EAAMgC,WAAW9L,EAAAA,KAAcoB,IAAQ,IACpGhB,GAAUW,EAAK6E,kBAAkBxF,EAAOW,OAC1C,MAAO,CAAEkmB,aAAYE,gBAAe/mB,SAAQhE,UAG3C,GAAY,GAAR2pB,GAAa3kB,IAAUmV,EAAOzM,EAAMyC,aAAanL,EAAML,OAC5D,MAAO,CAAEkmB,aAAYE,gBAAe/mB,SAAQmW,QAGhD,GAAInW,GAAU0J,EAAMS,UAAUnK,EAAOW,MACjC,KACP,CACJ,CAER,CACD6lB,WACI,IAAI,QAAE3pB,EAAF,UAAW+G,EAAX,QAAsBC,GAAYrO,KAAK4wB,SACvCnnB,EAAQ6nB,GAAUjqB,EAAS+G,GAC/B,SAAK3E,EAAMP,YAAcO,EAAMgC,WAAWP,UAE1ClL,KAAK4wB,SAAW,IAAIziB,GAAM9G,EAAS+G,EAAY,EAAGlE,KAAKS,IAAI0D,EAAS5E,EAAMf,KAAO0F,GAAa/G,EAAQqB,KAAO2F,EAAUD,EAAY,EAAI,KAChI,EACV,CACD6iB,WACI,IAAI,QAAE5pB,EAAF,UAAW+G,EAAX,QAAsBC,GAAYrO,KAAK4wB,SACvCnnB,EAAQ6nB,GAAUjqB,EAAS+G,GAC/B,GAAI3E,EAAMP,YAAc,GAAKkF,EAAY,EAAG,CACxC,IAAIojB,EAAYnqB,EAAQqB,KAAO0F,GAAaA,EAAY3E,EAAMf,KAC9D1I,KAAK4wB,SAAW,IAAIziB,GAAMsjB,GAAiBpqB,EAAS+G,EAAY,EAAG,GAAIA,EAAY,EAAGojB,EAAYpjB,EAAY,EAAIC,EACrH,MAEGrO,KAAK4wB,SAAW,IAAIziB,GAAMsjB,GAAiBpqB,EAAS+G,EAAW,GAAIA,EAAWC,EAErF,CAID0iB,YAAW,WAAEM,EAAF,cAAcE,EAAd,OAA6B/mB,EAA7B,OAAqChE,EAArC,KAA6Cma,IACpD,MAAO3gB,KAAKsP,MAAQiiB,EAChBvxB,KAAK0xB,oBACT,GAAI/Q,EACA,IAAK,IAAI9d,EAAI,EAAGA,EAAI8d,EAAKnZ,OAAQ3E,IAC7B7C,KAAK2xB,iBAAiBhR,EAAK9d,IACnC,IAAIiF,EAAQ9H,KAAK4wB,SAAUriB,EAAW/D,EAASA,EAAOnD,QAAUS,EAAMT,QAClE+G,EAAYtG,EAAMsG,UAAYijB,EAC9BO,EAAQ,EAAG/K,EAAM,IACjB,MAAE3S,EAAF,KAAS/I,GAASnL,KAAK6wB,SAASU,GACpC,GAAI/qB,EAAQ,CACR,IAAK,IAAI3D,EAAI,EAAGA,EAAI2D,EAAO0C,WAAYrG,IACnCgkB,EAAI9e,KAAKvB,EAAO4C,MAAMvG,IAC1BqR,EAAQA,EAAME,cAAc5N,EAC/B,CAID,IAAIqrB,EAAgBtjB,EAAS7F,KAAO2oB,GAAevpB,EAAMT,QAAQqB,KAAOZ,EAAMuG,SAG9E,MAAOujB,EAAQrjB,EAASrF,WAAY,CAChC,IAAI8I,EAAOzD,EAASnF,MAAMwoB,GAAQ9U,EAAU5I,EAAMS,UAAU3C,EAAK7G,MACjE,IAAK2R,EACD,MACJ8U,KACIA,EAAQ,GAAkB,GAAbxjB,GAAkB4D,EAAK3K,QAAQqB,QAC5CwL,EAAQ4I,EACR+J,EAAI9e,KAAK+pB,GAAe9f,EAAKsB,KAAKnI,EAAKsP,aAAazI,EAAKlE,QAAkB,GAAT8jB,EAAaxjB,EAAY,EAAGwjB,GAASrjB,EAASrF,WAAa2oB,GAAgB,IAEpJ,CACD,IAAI1b,EAAQyb,GAASrjB,EAASrF,WACzBiN,IACD0b,GAAgB,GACpB7xB,KAAKsN,OAASykB,GAAc/xB,KAAKsN,OAAQikB,EAAennB,EAAAA,KAAcyc,IACtE7mB,KAAK6wB,SAASU,GAAerd,MAAQA,EAGjCiC,GAAS0b,EAAe,GAAKrnB,GAAUA,EAAOW,MAAQnL,KAAK6wB,SAAS7wB,KAAKsP,OAAOnE,MAAQnL,KAAK6wB,SAASrpB,OAAS,GAC/GxH,KAAK0xB,oBAET,IAAK,IAAI7uB,EAAI,EAAG6J,EAAM6B,EAAU1L,EAAIgvB,EAAchvB,IAAK,CACnD,IAAIoI,EAAOyB,EAAInB,UACfvL,KAAK6wB,SAAS9oB,KAAK,CAAEoD,KAAMF,EAAKE,KAAM+I,MAAOjJ,EAAKgJ,eAAehJ,EAAK/B,cACtEwD,EAAMzB,EAAK5D,OACd,CAIDrH,KAAK4wB,SAAYza,EACG,GAAdkb,EAAkBljB,GAAAA,MACd,IAAIA,GAAMsjB,GAAiB3pB,EAAMT,QAASgqB,EAAa,EAAG,GAAIA,EAAa,EAAGQ,EAAe,EAAI/pB,EAAMuG,QAAUgjB,EAAa,GAF/G,IAAIljB,GAAMsjB,GAAiB3pB,EAAMT,QAASgqB,EAAYO,GAAQ9pB,EAAMsG,UAAWtG,EAAMuG,QAGjH,CACD8iB,iBACI,IAAKnxB,KAAKqP,IAAI7E,OAAOqJ,YACjB,OAAQ,EACZ,IAAqC+R,EAAjC/D,EAAM7hB,KAAK6wB,SAAS7wB,KAAKsP,OAC7B,IAAKuS,EAAI1W,KAAK0I,cAAgBme,GAAiBhyB,KAAKqP,IAAKrP,KAAKqP,IAAIC,MAAOuS,EAAI1W,KAAM0W,EAAI3N,OAAO,IACzFlU,KAAKqP,IAAIC,OAAStP,KAAKsP,QAAUsW,EAAQ5lB,KAAKiyB,eAAejyB,KAAKqP,OAASuW,EAAMtW,OAAStP,KAAKsP,MAChG,OAAQ,EACZ,IAAI,MAAEA,GAAUtP,KAAKqP,IAAKoC,EAAQzR,KAAKqP,IAAIoC,MAAMnC,GACjD,MAAOA,EAAQ,GAAKmC,GAASzR,KAAKqP,IAAI5E,MAAM6E,KACtCmC,EACN,OAAOA,CACV,CACDwgB,eAAe5iB,GACX+H,EAAM,IAAK,IAAIvU,EAAIqH,KAAKC,IAAInK,KAAKsP,MAAOD,EAAIC,OAAQzM,GAAK,EAAGA,IAAK,CAC7D,IAAI,MAAEqR,EAAF,KAAS/I,GAASnL,KAAK6wB,SAAShuB,GAChCqvB,EAAYrvB,EAAIwM,EAAIC,OAASD,EAAI5E,IAAI5H,EAAI,IAAMwM,EAAIpG,KAAOoG,EAAIC,OAASzM,EAAI,IAC3E8tB,EAAMqB,GAAiB3iB,EAAKxM,EAAGsI,EAAM+I,EAAOge,GAChD,GAAKvB,EAAL,CAEA,IAAK,IAAIruB,EAAIO,EAAI,EAAGP,GAAK,EAAGA,IAAK,CAC7B,IAAI,MAAE4R,EAAF,KAAS/I,GAASnL,KAAK6wB,SAASvuB,GAChCwa,EAAUkV,GAAiB3iB,EAAK/M,EAAG6I,EAAM+I,GAAO,GACpD,IAAK4I,GAAWA,EAAQ5T,WACpB,SAASkO,CAChB,CACD,MAAO,CAAE9H,MAAOzM,EAAG8tB,MAAKwB,KAAMD,EAAY7iB,EAAIiC,IAAIsB,QAAQvD,EAAIoC,MAAM5O,EAAI,IAAMwM,EAPlE,CAQf,CACJ,CACDI,MAAMJ,GACF,IAAII,EAAQzP,KAAKiyB,eAAe5iB,GAChC,IAAKI,EACD,OAAO,KACX,MAAOzP,KAAKsP,MAAQG,EAAMH,MACtBtP,KAAK0xB,oBACLjiB,EAAMkhB,IAAIznB,aACVlJ,KAAKsN,OAASykB,GAAc/xB,KAAKsN,OAAQmC,EAAMH,MAAOG,EAAMkhB,MAChEthB,EAAMI,EAAM0iB,KACZ,IAAK,IAAI7vB,EAAImN,EAAMH,MAAQ,EAAGhN,GAAK+M,EAAIC,MAAOhN,IAAK,CAC/C,IAAI2I,EAAOoE,EAAIpE,KAAK3I,GAAIukB,EAAM5b,EAAKE,KAAKgJ,aAAa+B,WAAWjL,EAAK5D,SAAS,EAAMgI,EAAItD,MAAMzJ,IAC9FtC,KAAK2xB,iBAAiB1mB,EAAKE,KAAMF,EAAK1K,MAAOsmB,EAChD,CACD,OAAOxX,CACV,CACDsiB,iBAAiBxmB,EAAM5K,EAAQ,KAAM8G,GACjC,IAAIwa,EAAM7hB,KAAK6wB,SAAS7wB,KAAKsP,OAC7BuS,EAAI3N,MAAQ2N,EAAI3N,MAAMS,UAAUxJ,GAChCnL,KAAKsN,OAASykB,GAAc/xB,KAAKsN,OAAQtN,KAAKsP,MAAOlF,EAAAA,KAAce,EAAK4C,OAAOxN,EAAO8G,KACtFrH,KAAK6wB,SAAS9oB,KAAK,CAAEoD,OAAM+I,MAAO/I,EAAKgJ,cAC1C,CACDud,oBACI,IAAI5wB,EAAOd,KAAK6wB,SAASpZ,MACrBoP,EAAM/lB,EAAKoT,MAAMgC,WAAW9L,EAAAA,OAAgB,GAC5Cyc,EAAI3d,aACJlJ,KAAKsN,OAASykB,GAAc/xB,KAAKsN,OAAQtN,KAAK6wB,SAASrpB,OAAQqf,GACtE,EAEL,SAAS4K,GAAiBljB,EAAUe,EAAO8iB,GACvC,OAAa,GAAT9iB,EACOf,EAAS3C,WAAWwmB,EAAO7jB,EAASrF,YACxCqF,EAASzC,aAAa,EAAGyC,EAAS9C,WAAWQ,KAAKwlB,GAAiBljB,EAAS9C,WAAWpE,QAASiI,EAAQ,EAAG8iB,IACrH,CACD,SAASL,GAAcxjB,EAAUe,EAAOjI,GACpC,OAAa,GAATiI,EACOf,EAAS3F,OAAOvB,GACpBkH,EAASzC,aAAayC,EAASrF,WAAa,EAAGqF,EAAShD,UAAUU,KAAK8lB,GAAcxjB,EAAShD,UAAUlE,QAASiI,EAAQ,EAAGjI,IACtI,CACD,SAASiqB,GAAU/iB,EAAUe,GACzB,IAAK,IAAIzM,EAAI,EAAGA,EAAIyM,EAAOzM,IACvB0L,EAAWA,EAAS9C,WAAWpE,QACnC,OAAOkH,CACV,CACD,SAASujB,GAAe7mB,EAAMmD,EAAWC,GACrC,GAAID,GAAa,EACb,OAAOnD,EACX,IAAI6K,EAAO7K,EAAK5D,QAQhB,OAPI+G,EAAY,IACZ0H,EAAOA,EAAKhK,aAAa,EAAGgmB,GAAehc,EAAKrK,WAAY2C,EAAY,EAAsB,GAAnB0H,EAAK5M,WAAkBmF,EAAU,EAAI,KAChHD,EAAY,IACZ0H,EAAO7K,EAAKE,KAAKgJ,aAAa+B,WAAWJ,GAAMlN,OAAOkN,GAClDzH,GAAW,IACXyH,EAAOA,EAAKlN,OAAOqC,EAAKE,KAAKgJ,aAAaC,cAAc0B,GAAMI,WAAW9L,EAAAA,OAAgB,MAE1Fa,EAAKgB,KAAK6J,EACpB,CACD,SAASkc,GAAiB3iB,EAAKC,EAAOnE,EAAM+I,EAAOpT,GAC/C,IAAImK,EAAOoE,EAAIpE,KAAKqE,GAAQvD,EAAQjL,EAAOuO,EAAIkC,WAAWjC,GAASD,EAAItD,MAAMuD,GAC7E,GAAIvD,GAASd,EAAK/B,aAAeiC,EAAK6E,kBAAkB/E,EAAKE,MACzD,OAAO,KACX,IAAIwlB,EAAMzc,EAAMgC,WAAWjL,EAAK5D,SAAS,EAAM0E,GAC/C,OAAO4kB,IAAQ0B,GAAalnB,EAAMF,EAAK5D,QAAS0E,GAAS4kB,EAAM,IAClE,CACD,SAAS0B,GAAalnB,EAAMoD,EAAU7D,GAClC,IAAK,IAAI7H,EAAI6H,EAAO7H,EAAI0L,EAASrF,WAAYrG,IACzC,IAAKsI,EAAKsJ,YAAYlG,EAASnF,MAAMvG,GAAGiL,OACpC,OAAO,EACf,OAAO,CACV,CACD,SAASwkB,GAAennB,GACpB,OAAOA,EAAK9H,KAAKkvB,UAAYpnB,EAAK9H,KAAKmvB,kBAC1C,CACD,SAASC,GAAatF,EAAI1kB,EAAM6B,EAAIxC,GAChC,IAAKA,EAAMY,KACP,OAAOykB,EAAGuF,YAAYjqB,EAAM6B,GAChC,IAAI8E,EAAQ+d,EAAG7b,IAAIsB,QAAQnK,GAAO4G,EAAM8d,EAAG7b,IAAIsB,QAAQtI,GACvD,GAAImmB,GAAcrhB,EAAOC,EAAKvH,GAC1B,OAAOqlB,EAAGK,KAAK,IAAIb,GAAYlkB,EAAM6B,EAAIxC,IAC7C,IAAI6qB,EAAeC,GAAcxjB,EAAO+d,EAAG7b,IAAIsB,QAAQtI,IAEV,GAAzCqoB,EAAaA,EAAanrB,OAAS,IACnCmrB,EAAalb,MAGjB,IAAIob,IAAoBzjB,EAAME,MAAQ,GACtCqjB,EAAaG,QAAQD,GAKrB,IAAK,IAAIvwB,EAAI8M,EAAME,MAAOrG,EAAMmG,EAAMnG,IAAM,EAAG3G,EAAI,EAAGA,IAAK2G,IAAO,CAC9D,IAAI5F,EAAO+L,EAAMnE,KAAK3I,GAAG6I,KAAK9H,KAC9B,GAAIA,EAAKkvB,UAAYlvB,EAAK0vB,mBAAqB1vB,EAAKwL,UAChD,MACA8jB,EAAajc,QAAQpU,IAAM,EAC3BuwB,EAAkBvwB,EACb8M,EAAMoC,OAAOlP,IAAM2G,GACxB0pB,EAAa3qB,OAAO,EAAG,GAAI1F,EAClC,CAGD,IAAI0wB,EAAuBL,EAAajc,QAAQmc,GAC5CI,EAAY,GAAIC,EAAiBprB,EAAMsG,UAC3C,IAAK,IAAI/G,EAAUS,EAAMT,QAASxE,EAAI,GAAIA,IAAK,CAC3C,IAAIoI,EAAO5D,EAAQoE,WAEnB,GADAwnB,EAAUlrB,KAAKkD,GACXpI,GAAKiF,EAAMsG,UACX,MACJ/G,EAAU4D,EAAK5D,OAClB,CAGD,IAAK,IAAI/E,EAAI4wB,EAAiB,EAAG5wB,GAAK,EAAGA,IAAK,CAC1C,IAAI6I,EAAO8nB,EAAU3wB,GAAG6I,KAAMgoB,EAAMb,GAAennB,GACnD,GAAIgoB,GAAO/jB,EAAMnE,KAAK+nB,GAAsB7nB,MAAQA,EAChD+nB,EAAiB5wB,OAChB,GAAI6wB,IAAQhoB,EAAK0I,YAClB,KACP,CACD,IAAK,IAAInO,EAAIoC,EAAMsG,UAAW1I,GAAK,EAAGA,IAAK,CACvC,IAAI0tB,GAAa1tB,EAAIwtB,EAAiB,IAAMprB,EAAMsG,UAAY,GAC1Da,EAASgkB,EAAUG,GACvB,GAAKnkB,EAEL,IAAK,IAAIpM,EAAI,EAAGA,EAAI8vB,EAAanrB,OAAQ3E,IAAK,CAG1C,IAAIwwB,EAAcV,GAAc9vB,EAAImwB,GAAwBL,EAAanrB,QAAS8rB,GAAS,EACvFD,EAAc,IACdC,GAAS,EACTD,GAAeA,GAEnB,IAAI7oB,EAAS4E,EAAMnE,KAAKooB,EAAc,GAAItnB,EAAQqD,EAAMrD,MAAMsnB,EAAc,GAC5E,GAAI7oB,EAAOkK,eAAe3I,EAAOA,EAAOkD,EAAO9D,KAAM8D,EAAOnB,OACxD,OAAOqf,EAAGhe,QAAQC,EAAMoC,OAAO6hB,GAAcC,EAASjkB,EAAIoC,MAAM4hB,GAAe/oB,EAAI,IAAI6D,GAAMolB,GAAczrB,EAAMT,QAAS,EAAGS,EAAMsG,UAAWglB,GAAYA,EAAWtrB,EAAMuG,SAClL,CACJ,CACD,IAAImlB,EAAarG,EAAG+B,MAAM1nB,OAC1B,IAAK,IAAI3E,EAAI8vB,EAAanrB,OAAS,EAAG3E,GAAK,EAAGA,IAAK,CAE/C,GADAsqB,EAAGhe,QAAQ1G,EAAM6B,EAAIxC,GACjBqlB,EAAG+B,MAAM1nB,OAASgsB,EAClB,MACJ,IAAIlkB,EAAQqjB,EAAa9vB,GACrByM,EAAQ,IAEZ7G,EAAO2G,EAAMoC,OAAOlC,GACpBhF,EAAK+E,EAAIoC,MAAMnC,GAClB,CACJ,CACD,SAASikB,GAAchlB,EAAUe,EAAOmkB,EAASC,EAASlpB,GACtD,GAAI8E,EAAQmkB,EAAS,CACjB,IAAIjoB,EAAQ+C,EAAS9C,WACrB8C,EAAWA,EAASzC,aAAa,EAAGN,EAAMS,KAAKsnB,GAAc/nB,EAAMnE,QAASiI,EAAQ,EAAGmkB,EAASC,EAASloB,IAC5G,CACD,GAAI8D,EAAQokB,EAAS,CACjB,IAAIxf,EAAQ1J,EAAOyJ,eAAe,GAC9BvJ,EAAQwJ,EAAMgC,WAAW3H,GAAU3F,OAAO2F,GAC9CA,EAAW7D,EAAM9B,OAAOsL,EAAME,cAAc1J,GAAOwL,WAAW9L,EAAAA,OAAgB,GACjF,CACD,OAAOmE,CACV,CACD,SAASolB,GAAiBxG,EAAI1kB,EAAM6B,EAAIW,GACpC,IAAKA,EAAK8G,UAAYtJ,GAAQ6B,GAAM6iB,EAAG7b,IAAIsB,QAAQnK,GAAM+B,OAAOnD,QAAQqB,KAAM,CAC1E,IAAIkrB,EAAQ3D,GAAY9C,EAAG7b,IAAK7I,EAAMwC,EAAKE,MAC9B,MAATyoB,IACAnrB,EAAO6B,EAAKspB,EACnB,CACDzG,EAAGsF,aAAahqB,EAAM6B,EAAI,IAAI6D,GAAM/D,EAAAA,KAAca,GAAO,EAAG,GAC/D,CACD,SAASynB,GAAYvF,EAAI1kB,EAAM6B,GAC3B,IAAI8E,EAAQ+d,EAAG7b,IAAIsB,QAAQnK,GAAO4G,EAAM8d,EAAG7b,IAAIsB,QAAQtI,GACnDupB,EAAUjB,GAAcxjB,EAAOC,GACnC,IAAK,IAAIxM,EAAI,EAAGA,EAAIgxB,EAAQrsB,OAAQ3E,IAAK,CACrC,IAAIyM,EAAQukB,EAAQhxB,GAAIyI,EAAOzI,GAAKgxB,EAAQrsB,OAAS,EACrD,GAAK8D,GAAiB,GAATgE,GAAeF,EAAMnE,KAAKqE,GAAOnE,KAAKgJ,aAAaK,SAC5D,OAAO2Y,EAAG2G,OAAO1kB,EAAM1E,MAAM4E,GAAQD,EAAI5E,IAAI6E,IACjD,GAAIA,EAAQ,IAAMhE,GAAQ8D,EAAMnE,KAAKqE,EAAQ,GAAGJ,WAAWE,EAAMrD,MAAMuD,EAAQ,GAAID,EAAIkC,WAAWjC,EAAQ,KACtG,OAAO6d,EAAG2G,OAAO1kB,EAAMoC,OAAOlC,GAAQD,EAAIoC,MAAMnC,GACvD,CACD,IAAK,IAAIhN,EAAI,EAAGA,GAAK8M,EAAME,OAAShN,GAAK+M,EAAIC,MAAOhN,IAChD,GAAImG,EAAO2G,EAAM1E,MAAMpI,IAAM8M,EAAME,MAAQhN,GAAKgI,EAAK8E,EAAM3E,IAAInI,IAAM+M,EAAI5E,IAAInI,GAAKgI,GAAM+E,EAAIC,MAAQhN,EAChG,OAAO6qB,EAAG2G,OAAO1kB,EAAMoC,OAAOlP,GAAIgI,GAE1C6iB,EAAG2G,OAAOrrB,EAAM6B,EACnB,CAGD,SAASsoB,GAAcxjB,EAAOC,GAC1B,IAAIxG,EAAS,GAAIyc,EAAWpb,KAAKC,IAAIiF,EAAME,MAAOD,EAAIC,OACtD,IAAK,IAAIhN,EAAIgjB,EAAUhjB,GAAK,EAAGA,IAAK,CAChC,IAAIoI,EAAQ0E,EAAM1E,MAAMpI,GACxB,GAAIoI,EAAQ0E,EAAMnG,KAAOmG,EAAME,MAAQhN,IACnC+M,EAAI5E,IAAInI,GAAK+M,EAAIpG,KAAOoG,EAAIC,MAAQhN,IACpC8M,EAAMnE,KAAK3I,GAAG6I,KAAK9H,KAAKwL,WACxBQ,EAAIpE,KAAK3I,GAAG6I,KAAK9H,KAAKwL,UACtB,OACAnE,GAAS2E,EAAI3E,MAAMpI,IAClBA,GAAK8M,EAAME,OAAShN,GAAK+M,EAAIC,OAASF,EAAM5E,OAAO4H,eAAiB/C,EAAI7E,OAAO4H,eAC5E9P,GAAK+M,EAAI3E,MAAMpI,EAAI,IAAMoI,EAAQ,IACrC7B,EAAOd,KAAKzF,EACnB,CACD,OAAOuG,CACV,CAKD,MAAMkrB,WAAiBzI,GAInB/pB,YAIA0H,EAIAqQ,EAEA7Y,GACIiB,QACA1B,KAAKiJ,IAAMA,EACXjJ,KAAKsZ,KAAOA,EACZtZ,KAAKS,MAAQA,CAChB,CACD0rB,MAAM7a,GACF,IAAIrG,EAAOqG,EAAIkC,OAAOxT,KAAKiJ,KAC3B,IAAKgC,EACD,OAAO2gB,GAAWG,KAAK,wCAC3B,IAAIxrB,EAAQwS,OAAOhF,OAAO,MAC1B,IAAK,IAAIpM,KAAQsJ,EAAK1K,MAClBA,EAAMoB,GAAQsJ,EAAK1K,MAAMoB,GAC7BpB,EAAMP,KAAKsZ,MAAQtZ,KAAKS,MACxB,IAAI+rB,EAAUvhB,EAAKE,KAAK4C,OAAOxN,EAAO,KAAM0K,EAAK6C,OACjD,OAAO8d,GAAWS,YAAY/a,EAAKtR,KAAKiJ,IAAKjJ,KAAKiJ,IAAM,EAAG,IAAIkF,GAAM/D,EAAAA,KAAcoiB,GAAU,EAAGvhB,EAAKC,OAAS,EAAI,GACrH,CACDqgB,SACI,OAAOnC,GAAQvd,KAClB,CACDwe,OAAO/Y,GACH,OAAO,IAAIyiB,GAAS/zB,KAAKiJ,IAAKjJ,KAAKsZ,KAAMhI,EAAIkC,OAAOxT,KAAKiJ,KAAK1I,MAAMP,KAAKsZ,MAC5E,CACDtW,IAAI6nB,GACA,IAAI5hB,EAAM4hB,EAAQrB,UAAUxpB,KAAKiJ,IAAK,GACtC,OAAOA,EAAIigB,aAAe,KAAO,IAAI6K,GAAS9qB,EAAIA,IAAKjJ,KAAKsZ,KAAMtZ,KAAKS,MAC1E,CACD2C,SACI,MAAO,CAAEqoB,SAAU,OAAQxiB,IAAKjJ,KAAKiJ,IAAKqQ,KAAMtZ,KAAKsZ,KAAM7Y,MAAOT,KAAKS,MAC1E,CACc,gBAACmM,EAAQiB,GACpB,GAAuB,iBAAZA,EAAK5E,KAAuC,iBAAb4E,EAAKyL,KAC3C,MAAM,IAAInN,WAAW,uCACzB,OAAO,IAAI4nB,GAASlmB,EAAK5E,IAAK4E,EAAKyL,KAAMzL,EAAKpN,MACjD,EAEL6qB,GAAKK,OAAO,OAAQoI,IAKpB,IAAIC,GAAiB,cAAc1yB,QAEnC0yB,GAAiB,SAASA,EAAelI,GACrC,IAAIpW,EAAMpU,MAAMwZ,KAAK9a,KAAM8rB,GAE3B,OADApW,EAAIue,UAAYD,EAAe1sB,UACxBoO,CACV,EACDse,GAAe1sB,UAAYyL,OAAOhF,OAAOzM,MAAMgG,WAC/C0sB,GAAe1sB,UAAU/F,YAAcyyB,GACvCA,GAAe1sB,UAAU3F,KAAO,iBAQhC,MAAMuyB,GAIF3yB,YAKA+P,GACItR,KAAKsR,IAAMA,EAIXtR,KAAKkvB,MAAQ,GAIblvB,KAAKm0B,KAAO,GAIZn0B,KAAK6qB,QAAU,IAAIP,EACtB,CAIG9Y,aAAW,OAAOxR,KAAKm0B,KAAK3sB,OAASxH,KAAKm0B,KAAK,GAAKn0B,KAAKsR,GAAM,CAKnEkc,KAAKA,GACD,IAAI3kB,EAAS7I,KAAKo0B,UAAU5G,GAC5B,GAAI3kB,EAAOgjB,OACP,MAAM,IAAImI,GAAenrB,EAAOgjB,QACpC,OAAO7rB,IACV,CAKDo0B,UAAU5G,GACN,IAAI3kB,EAAS2kB,EAAKrB,MAAMnsB,KAAKsR,KAG7B,OAFKzI,EAAOgjB,QACR7rB,KAAKq0B,QAAQ7G,EAAM3kB,EAAOyI,KACvBzI,CACV,CAKGyrB,iBACA,OAAOt0B,KAAKkvB,MAAM1nB,OAAS,CAC9B,CAID6sB,QAAQ7G,EAAMlc,GACVtR,KAAKm0B,KAAKpsB,KAAK/H,KAAKsR,KACpBtR,KAAKkvB,MAAMnnB,KAAKylB,GAChBxtB,KAAK6qB,QAAQJ,UAAU+C,EAAKjC,UAC5BvrB,KAAKsR,IAAMA,CACd,CAKDnC,QAAQ1G,EAAM6B,EAAK7B,EAAMX,EAAQqG,GAAAA,OAC7B,IAAIqf,EAAOgD,GAAYxwB,KAAKsR,IAAK7I,EAAM6B,EAAIxC,GAG3C,OAFI0lB,GACAxtB,KAAKwtB,KAAKA,GACPxtB,IACV,CAKDyvB,YAAYhnB,EAAM6B,EAAIjD,GAClB,OAAOrH,KAAKmP,QAAQ1G,EAAM6B,EAAI,IAAI6D,GAAM/D,EAAAA,KAAc/C,GAAU,EAAG,GACtE,CAIDysB,OAAOrrB,EAAM6B,GACT,OAAOtK,KAAKmP,QAAQ1G,EAAM6B,EAAI6D,GAAAA,MACjC,CAIDc,OAAOhG,EAAK5B,GACR,OAAOrH,KAAKyvB,YAAYxmB,EAAKA,EAAK5B,EACrC,CAoBDorB,aAAahqB,EAAM6B,EAAIxC,GAEnB,OADA2qB,GAAazyB,KAAMyI,EAAM6B,EAAIxC,GACtB9H,IACV,CAUD2zB,iBAAiBlrB,EAAM6B,EAAIW,GAEvB,OADA0oB,GAAiB3zB,KAAMyI,EAAM6B,EAAIW,GAC1BjL,IACV,CAKD0yB,YAAYjqB,EAAM6B,GAEd,OADAooB,GAAY1yB,KAAMyI,EAAM6B,GACjBtK,IACV,CAQDkuB,KAAKD,EAAO5d,GAER,OADA6d,GAAKluB,KAAMiuB,EAAO5d,GACXrQ,IACV,CAKDmD,KAAK8F,EAAKqG,EAAQ,GAEd,OADAnM,GAAKnD,KAAMiJ,EAAKqG,GACTtP,IACV,CAMD2gB,KAAKsN,EAAOc,GAER,OADApO,GAAK3gB,KAAMiuB,EAAOc,GACX/uB,IACV,CAKDgvB,aAAavmB,EAAM6B,EAAK7B,EAAM0C,EAAM5K,EAAQ,MAExC,OADAyuB,GAAahvB,KAAMyI,EAAM6B,EAAIa,EAAM5K,GAC5BP,IACV,CAKDuvB,cAActmB,EAAKkC,EAAM5K,EAAQ,KAAMuN,EAAQ,IAE3C,OADAyhB,GAAcvvB,KAAMiJ,EAAKkC,EAAM5K,EAAOuN,GAC/B9N,IACV,CAIDu0B,iBAAiBtrB,EAAKqQ,EAAM7Y,GAExB,OADAT,KAAKwtB,KAAK,IAAIuG,GAAS9qB,EAAKqQ,EAAM7Y,IAC3BT,IACV,CAIDw0B,YAAYvrB,EAAKqK,GAEb,OADAtT,KAAKwtB,KAAK,IAAIjB,GAAgBtjB,EAAKqK,IAC5BtT,IACV,CAKDy0B,eAAexrB,EAAKqK,GAChB,KAAMA,aAAgBlG,GAAO,CACzB,IAAInC,EAAOjL,KAAKsR,IAAIkC,OAAOvK,GAC3B,IAAKgC,EACD,MAAM,IAAIkB,WAAW,uBAAyBlD,GAElD,GADAqK,EAAOA,EAAK5F,QAAQzC,EAAK6C,QACpBwF,EACD,OAAOtT,IACd,CAED,OADAA,KAAKwtB,KAAK,IAAId,GAAmBzjB,EAAKqK,IAC/BtT,IACV,CAQDwX,MAAMvO,EAAKqG,EAAQ,EAAGqgB,GAElB,OADAnY,GAAMxX,KAAMiJ,EAAKqG,EAAOqgB,GACjB3vB,IACV,CAIDktB,QAAQzkB,EAAM6B,EAAIgJ,GAEd,OADA4Z,GAAQltB,KAAMyI,EAAM6B,EAAIgJ,GACjBtT,IACV,CAODytB,WAAWhlB,EAAM6B,EAAIgJ,GAEjB,OADAma,GAAWztB,KAAMyI,EAAM6B,EAAIgJ,GACpBtT,IACV,CAOD2tB,kBAAkB1kB,EAAK2kB,EAAY1Z,GAE/B,OADAyZ,GAAkB3tB,KAAMiJ,EAAK2kB,EAAY1Z,GAClClU,IACV,EC18DL,MAAM00B,GAAc3hB,OAAOhF,OAAO,MAKlC,MAAM4mB,GAMFpzB,YAKAqzB,EAKAC,EAAOxL,GACHrpB,KAAK40B,QAAUA,EACf50B,KAAK60B,MAAQA,EACb70B,KAAKqpB,OAASA,GAAU,CAAC,IAAIyL,GAAeF,EAAQzqB,IAAI0qB,GAAQD,EAAQjqB,IAAIkqB,IAC/E,CAIGE,aAAW,OAAO/0B,KAAK40B,QAAQ3rB,GAAM,CAIrC0W,WAAS,OAAO3f,KAAK60B,MAAM5rB,GAAM,CAIjCR,WAAS,OAAOzI,KAAKoP,MAAMnG,GAAM,CAIjCqB,SAAO,OAAOtK,KAAKqP,IAAIpG,GAAM,CAI7BmG,YACA,OAAOpP,KAAKqpB,OAAO,GAAGja,KACzB,CAIGC,UACA,OAAOrP,KAAKqpB,OAAO,GAAGha,GACzB,CAIGxD,YACA,IAAIwd,EAASrpB,KAAKqpB,OAClB,IAAK,IAAIxmB,EAAI,EAAGA,EAAIwmB,EAAO7hB,OAAQ3E,IAC/B,GAAIwmB,EAAOxmB,GAAGuM,MAAMnG,KAAOogB,EAAOxmB,GAAGwM,IAAIpG,IACrC,OAAO,EACf,OAAO,CACV,CAID5B,UACI,OAAOrH,KAAKoP,MAAMkC,IAAIxJ,MAAM9H,KAAKyI,KAAMzI,KAAKsK,IAAI,EACnD,CAKD6E,QAAQge,EAAI9lB,EAAU8G,GAAAA,OAIlB,IAAI6mB,EAAW3tB,EAAQA,QAAQkE,UAAW0pB,EAAa,KACvD,IAAK,IAAIpyB,EAAI,EAAGA,EAAIwE,EAAQgH,QAASxL,IACjCoyB,EAAaD,EACbA,EAAWA,EAASzpB,UAExB,IAAI0jB,EAAU9B,EAAG+B,MAAM1nB,OAAQ6hB,EAASrpB,KAAKqpB,OAC7C,IAAK,IAAIxmB,EAAI,EAAGA,EAAIwmB,EAAO7hB,OAAQ3E,IAAK,CACpC,IAAI,MAAEuM,EAAF,IAASC,GAAQga,EAAOxmB,GAAIgoB,EAAUsC,EAAGtC,QAAQ/iB,MAAMmnB,GAC3D9B,EAAGsF,aAAa5H,EAAQ7nB,IAAIoM,EAAMnG,KAAM4hB,EAAQ7nB,IAAIqM,EAAIpG,KAAMpG,EAAIsL,GAAAA,MAAc9G,GACvE,GAALxE,GACAqyB,GAAwB/H,EAAI8B,GAAU+F,EAAWA,EAASjjB,SAAWkjB,GAAcA,EAAWphB,cAAgB,EAAI,EACzH,CACJ,CAKD4b,YAAYtC,EAAIliB,GACZ,IAAIgkB,EAAU9B,EAAG+B,MAAM1nB,OAAQ6hB,EAASrpB,KAAKqpB,OAC7C,IAAK,IAAIxmB,EAAI,EAAGA,EAAIwmB,EAAO7hB,OAAQ3E,IAAK,CACpC,IAAI,MAAEuM,EAAF,IAASC,GAAQga,EAAOxmB,GAAIgoB,EAAUsC,EAAGtC,QAAQ/iB,MAAMmnB,GACvDxmB,EAAOoiB,EAAQ7nB,IAAIoM,EAAMnG,KAAMqB,EAAKugB,EAAQ7nB,IAAIqM,EAAIpG,KACpDpG,EACAsqB,EAAGuF,YAAYjqB,EAAM6B,IAGrB6iB,EAAGwG,iBAAiBlrB,EAAM6B,EAAIW,GAC9BiqB,GAAwB/H,EAAI8B,EAAShkB,EAAK8G,UAAY,EAAI,GAEjE,CACJ,CAQc,gBAACud,EAAM6F,EAAKC,GAAW,GAClC,IAAI3rB,EAAQ6lB,EAAK9kB,OAAO4H,cAAgB,IAAIijB,GAAc/F,GACpDgG,GAAgBhG,EAAKrkB,KAAK,GAAIqkB,EAAK9kB,OAAQ8kB,EAAKrmB,IAAKqmB,EAAKvjB,QAASopB,EAAKC,GAC9E,GAAI3rB,EACA,OAAOA,EACX,IAAK,IAAI6F,EAAQggB,EAAKhgB,MAAQ,EAAGA,GAAS,EAAGA,IAAS,CAClD,IAAI7H,EAAQ0tB,EAAM,EACZG,GAAgBhG,EAAKrkB,KAAK,GAAIqkB,EAAKrkB,KAAKqE,GAAQggB,EAAK9d,OAAOlC,EAAQ,GAAIggB,EAAKvjB,MAAMuD,GAAQ6lB,EAAKC,GAChGE,GAAgBhG,EAAKrkB,KAAK,GAAIqkB,EAAKrkB,KAAKqE,GAAQggB,EAAK7d,MAAMnC,EAAQ,GAAIggB,EAAKvjB,MAAMuD,GAAS,EAAG6lB,EAAKC,GACzG,GAAI3tB,EACA,OAAOA,CACd,CACD,OAAO,IACV,CAMU,YAAC6nB,EAAMc,EAAO,GACrB,OAAOpwB,KAAKu1B,SAASjG,EAAMc,IAASpwB,KAAKu1B,SAASjG,GAAOc,IAAS,IAAIoF,GAAalG,EAAKrkB,KAAK,GAChG,CAOa,eAACqG,GACX,OAAOgkB,GAAgBhkB,EAAKA,EAAK,EAAG,EAAG,IAAM,IAAIkkB,GAAalkB,EACjE,CAKW,aAACA,GACT,OAAOgkB,GAAgBhkB,EAAKA,EAAKA,EAAIjK,QAAQqB,KAAM4I,EAAIpI,YAAa,IAAM,IAAIssB,GAAalkB,EAC9F,CAKc,gBAACA,EAAKzD,GACjB,IAAKA,IAASA,EAAK1C,KACf,MAAM,IAAIgB,WAAW,wCACzB,IAAIspB,EAAMf,GAAY7mB,EAAK1C,MAC3B,IAAKsqB,EACD,MAAM,IAAItpB,WAAY,qBAAoB0B,EAAK1C,gBACnD,OAAOsqB,EAAI9mB,SAAS2C,EAAKzD,EAC5B,CAOY,cAACxI,EAAIqwB,GACd,GAAIrwB,KAAMqvB,GACN,MAAM,IAAIvoB,WAAW,sCAAwC9G,GAGjE,OAFAqvB,GAAYrvB,GAAMqwB,EAClBA,EAAepuB,UAAUqkB,OAAStmB,EAC3BqwB,CACV,CAUDC,cACI,OAAON,GAAcO,QAAQ51B,KAAK40B,QAAS50B,KAAK60B,OAAOc,aAC1D,EAELhB,GAAUrtB,UAAUuuB,SAAU,EAI9B,MAAMf,GAIFvzB,YAIA6N,EAIAC,GACIrP,KAAKoP,MAAQA,EACbpP,KAAKqP,IAAMA,CACd,EAEL,IAAIymB,IAA2B,EAC/B,SAASC,GAAmBzG,GACnBwG,IAA6BxG,EAAK9kB,OAAO4H,gBAC1C0jB,IAA2B,EAC3BE,QAAQ,QAAQ,wEAA0E1G,EAAK9kB,OAAOW,KAAKxJ,KAAO,KAEzH,CAOD,MAAM0zB,WAAsBV,GAIxBpzB,YAAYqzB,EAASC,EAAQD,GACzBmB,GAAmBnB,GACnBmB,GAAmBlB,GACnBnzB,MAAMkzB,EAASC,EAClB,CAKGoB,cAAY,OAAOj2B,KAAK40B,QAAQ3rB,KAAOjJ,KAAK60B,MAAM5rB,IAAMjJ,KAAK60B,MAAQ,IAAO,CAChF7xB,IAAIsO,EAAKuZ,GACL,IAAIgK,EAAQvjB,EAAIsB,QAAQiY,EAAQ7nB,IAAIhD,KAAK2f,OACzC,IAAKkV,EAAMrqB,OAAO4H,cACd,OAAOuiB,GAAUuB,KAAKrB,GAC1B,IAAID,EAAUtjB,EAAIsB,QAAQiY,EAAQ7nB,IAAIhD,KAAK+0B,SAC3C,OAAO,IAAIM,GAAcT,EAAQpqB,OAAO4H,cAAgBwiB,EAAUC,EAAOA,EAC5E,CACD1lB,QAAQge,EAAI9lB,EAAU8G,GAAAA,OAElB,GADAzM,MAAMyN,QAAQge,EAAI9lB,GACdA,GAAW8G,GAAAA,MAAa,CACxB,IAAIL,EAAQ9N,KAAKoP,MAAM0C,YAAY9R,KAAKqP,KACpCvB,GACAqf,EAAGgJ,YAAYroB,EACtB,CACJ,CACD5B,GAAGb,GACC,OAAOA,aAAiBgqB,IAAiBhqB,EAAM0pB,QAAU/0B,KAAK+0B,QAAU1pB,EAAMsU,MAAQ3f,KAAK2f,IAC9F,CACDgW,cACI,OAAO,IAAIS,GAAap2B,KAAK+0B,OAAQ/0B,KAAK2f,KAC7C,CACDvc,SACI,MAAO,CAAE+H,KAAM,OAAQ4pB,OAAQ/0B,KAAK+0B,OAAQpV,KAAM3f,KAAK2f,KAC1D,CAIc,gBAACrO,EAAKzD,GACjB,GAA0B,iBAAfA,EAAKknB,QAA0C,iBAAblnB,EAAK8R,KAC9C,MAAM,IAAIxT,WAAW,4CACzB,OAAO,IAAIkpB,GAAc/jB,EAAIsB,QAAQ/E,EAAKknB,QAASzjB,EAAIsB,QAAQ/E,EAAK8R,MACvE,CAIY,cAACrO,EAAKyjB,EAAQpV,EAAOoV,GAC9B,IAAIH,EAAUtjB,EAAIsB,QAAQmiB,GAC1B,OAAO,IAAI/0B,KAAK40B,EAASjV,GAAQoV,EAASH,EAAUtjB,EAAIsB,QAAQ+M,GACnE,CASa,eAACiV,EAASC,EAAOzE,GAC3B,IAAIiG,EAAOzB,EAAQ3rB,IAAM4rB,EAAM5rB,IAG/B,GAFKmnB,IAAQiG,IACTjG,EAAOiG,GAAQ,EAAI,GAAK,IACvBxB,EAAMrqB,OAAO4H,cAAe,CAC7B,IAAI3K,EAAQktB,GAAUY,SAASV,EAAOzE,GAAM,IAASuE,GAAUY,SAASV,GAAQzE,GAAM,GACtF,IAAI3oB,EAGA,OAAOktB,GAAUuB,KAAKrB,EAAOzE,GAF7ByE,EAAQptB,EAAMotB,KAGrB,CAWD,OAVKD,EAAQpqB,OAAO4H,gBACJ,GAARikB,EACAzB,EAAUC,GAGVD,GAAWD,GAAUY,SAASX,GAAUxE,GAAM,IAASuE,GAAUY,SAASX,EAASxE,GAAM,IAAOwE,QAC3FA,EAAQ3rB,IAAM4rB,EAAM5rB,KAASotB,EAAO,IACrCzB,EAAUC,KAGf,IAAIQ,GAAcT,EAASC,EACrC,EAELF,GAAUhJ,OAAO,OAAQ0J,IACzB,MAAMe,GACF70B,YAAYwzB,EAAQpV,GAChB3f,KAAK+0B,OAASA,EACd/0B,KAAK2f,KAAOA,CACf,CACD3c,IAAI6nB,GACA,OAAO,IAAIuL,GAAavL,EAAQ7nB,IAAIhD,KAAK+0B,QAASlK,EAAQ7nB,IAAIhD,KAAK2f,MACtE,CACD/M,QAAQtB,GACJ,OAAO+jB,GAAcO,QAAQtkB,EAAIsB,QAAQ5S,KAAK+0B,QAASzjB,EAAIsB,QAAQ5S,KAAK2f,MAC3E,EASL,MAAM2W,WAAsB3B,GAKxBpzB,YAAY+tB,GACR,IAAIrkB,EAAOqkB,EAAK1e,UACZJ,EAAO8e,EAAKrkB,KAAK,GAAG2H,QAAQ0c,EAAKrmB,IAAMgC,EAAKvB,UAChDhI,MAAM4tB,EAAM9e,GACZxQ,KAAKiL,KAAOA,CACf,CACDjI,IAAIsO,EAAKuZ,GACL,IAAI,QAAE7B,EAAF,IAAW/f,GAAQ4hB,EAAQrB,UAAUxpB,KAAK+0B,QAC1CzF,EAAOhe,EAAIsB,QAAQ3J,GACvB,OAAI+f,EACO2L,GAAUuB,KAAK5G,GACnB,IAAIgH,GAAchH,EAC5B,CACDjoB,UACI,OAAO,IAAI8G,GAAM/D,EAAAA,KAAcpK,KAAKiL,MAAO,EAAG,EACjD,CACDiB,GAAGb,GACC,OAAOA,aAAiBirB,IAAiBjrB,EAAM0pB,QAAU/0B,KAAK+0B,MACjE,CACD3xB,SACI,MAAO,CAAE+H,KAAM,OAAQ4pB,OAAQ/0B,KAAK+0B,OACvC,CACDY,cAAgB,OAAO,IAAIY,GAAav2B,KAAK+0B,OAAU,CAIxC,gBAACzjB,EAAKzD,GACjB,GAA0B,iBAAfA,EAAKknB,OACZ,MAAM,IAAI5oB,WAAW,4CACzB,OAAO,IAAImqB,GAAchlB,EAAIsB,QAAQ/E,EAAKknB,QAC7C,CAIY,cAACzjB,EAAK7I,GACf,OAAO,IAAI6tB,GAAchlB,EAAIsB,QAAQnK,GACxC,CAKkB,oBAACwC,GAChB,OAAQA,EAAK1B,SAAwC,IAA9B0B,EAAKE,KAAK9H,KAAKmzB,UACzC,EAELF,GAAchvB,UAAUuuB,SAAU,EAClClB,GAAUhJ,OAAO,OAAQ2K,IACzB,MAAMC,GACFh1B,YAAYwzB,GACR/0B,KAAK+0B,OAASA,CACjB,CACD/xB,IAAI6nB,GACA,IAAI,QAAE7B,EAAF,IAAW/f,GAAQ4hB,EAAQrB,UAAUxpB,KAAK+0B,QAC9C,OAAO/L,EAAU,IAAIoN,GAAantB,EAAKA,GAAO,IAAIstB,GAAattB,EAClE,CACD2J,QAAQtB,GACJ,IAAIge,EAAOhe,EAAIsB,QAAQ5S,KAAK+0B,QAAS9pB,EAAOqkB,EAAK1e,UACjD,OAAI3F,GAAQqrB,GAAcG,aAAaxrB,GAC5B,IAAIqrB,GAAchH,GACtBqF,GAAUuB,KAAK5G,EACzB,EAQL,MAAMkG,WAAqBb,GAIvBpzB,YAAY+P,GACR5P,MAAM4P,EAAIsB,QAAQ,GAAItB,EAAIsB,QAAQtB,EAAIjK,QAAQqB,MACjD,CACDyG,QAAQge,EAAI9lB,EAAU8G,GAAAA,OAClB,GAAI9G,GAAW8G,GAAAA,MAAa,CACxBgf,EAAG2G,OAAO,EAAG3G,EAAG7b,IAAIjK,QAAQqB,MAC5B,IAAIguB,EAAM/B,GAAUgC,QAAQxJ,EAAG7b,KAC1BolB,EAAIxqB,GAAGihB,EAAGyJ,YACXzJ,EAAG0J,aAAaH,EACvB,MAEGh1B,MAAMyN,QAAQge,EAAI9lB,EAEzB,CACDjE,SAAW,MAAO,CAAE+H,KAAM,MAAU,CAIrB,gBAACmG,GAAO,OAAO,IAAIkkB,GAAalkB,EAAO,CACtDtO,IAAIsO,GAAO,OAAO,IAAIkkB,GAAalkB,EAAO,CAC1CpF,GAAGb,GAAS,OAAOA,aAAiBmqB,EAAe,CACnDG,cAAgB,OAAOmB,EAAc,EAEzCnC,GAAUhJ,OAAO,MAAO6J,IACxB,MAAMsB,GAAc,CAChB9zB,MAAQ,OAAOhD,IAAO,EACtB4S,QAAQtB,GAAO,OAAO,IAAIkkB,GAAalkB,EAAO,GAMlD,SAASgkB,GAAgBhkB,EAAKrG,EAAMhC,EAAK8C,EAAOopB,EAAK3rB,GAAO,GACxD,GAAIyB,EAAKmH,cACL,OAAOijB,GAActnB,OAAOuD,EAAKrI,GACrC,IAAK,IAAIpG,EAAIkJ,GAASopB,EAAM,EAAI,EAAI,GAAIA,EAAM,EAAItyB,EAAIoI,EAAK/B,WAAarG,GAAK,EAAGA,GAAKsyB,EAAK,CACtF,IAAI/rB,EAAQ6B,EAAK7B,MAAMvG,GACvB,GAAKuG,EAAM0K,QAKN,IAAKtK,GAAQ8sB,GAAcG,aAAartB,GACzC,OAAOktB,GAAcvoB,OAAOuD,EAAKrI,GAAOksB,EAAM,EAAI/rB,EAAMM,SAAW,QANpD,CACf,IAAID,EAAQ6rB,GAAgBhkB,EAAKlI,EAAOH,EAAMksB,EAAKA,EAAM,EAAI/rB,EAAMF,WAAa,EAAGisB,EAAK3rB,GACxF,GAAIC,EACA,OAAOA,CACd,CAIDR,GAAOG,EAAMM,SAAWyrB,CAC3B,CACD,OAAO,IACV,CACD,SAASD,GAAwB/H,EAAI4J,EAAU3G,GAC3C,IAAI9kB,EAAO6hB,EAAG+B,MAAM1nB,OAAS,EAC7B,GAAI8D,EAAOyrB,EACP,OACJ,IAAIvJ,EAAOL,EAAG+B,MAAM5jB,GACpB,KAAMkiB,aAAgBb,IAAea,aAAgBX,IACjD,OACJ,IAAiCpiB,EAA7BzH,EAAMmqB,EAAGtC,QAAQN,KAAKjf,GAC1BtI,EAAIuF,SAAQ,CAACyuB,EAAOC,EAAKC,EAAUC,KAAuB,MAAP1sB,IAC/CA,EAAM0sB,EAAN,IACJhK,EAAG0J,aAAalC,GAAUuB,KAAK/I,EAAG7b,IAAIsB,QAAQnI,GAAM2lB,GACvD,CAED,MAAMgH,GAAc,EAAGC,GAAgB,EAAGC,GAAiB,EAoB3D,MAAMC,WAAoBrD,GAItB3yB,YAAY0X,GACRvX,MAAMuX,EAAM3H,KAEZtR,KAAKw3B,gBAAkB,EAGvBx3B,KAAKwsB,QAAU,EAEfxsB,KAAKy3B,KAAO1kB,OAAOhF,OAAO,MAC1B/N,KAAK03B,KAAOC,KAAKC,MACjB53B,KAAK63B,aAAe5e,EAAM2d,UAC1B52B,KAAK83B,YAAc7e,EAAM6e,WAC5B,CAOGlB,gBAKA,OAJI52B,KAAKw3B,gBAAkBx3B,KAAKkvB,MAAM1nB,SAClCxH,KAAK63B,aAAe73B,KAAK63B,aAAa70B,IAAIhD,KAAKsR,IAAKtR,KAAK6qB,QAAQ/iB,MAAM9H,KAAKw3B,kBAC5Ex3B,KAAKw3B,gBAAkBx3B,KAAKkvB,MAAM1nB,QAE/BxH,KAAK63B,YACf,CAKDhB,aAAaD,GACT,GAAIA,EAAUxnB,MAAMkC,KAAOtR,KAAKsR,IAC5B,MAAM,IAAInF,WAAW,uEAKzB,OAJAnM,KAAK63B,aAAejB,EACpB52B,KAAKw3B,gBAAkBx3B,KAAKkvB,MAAM1nB,OAClCxH,KAAKwsB,SAAWxsB,KAAKwsB,QAAU4K,KAAgBC,GAC/Cr3B,KAAK83B,YAAc,KACZ93B,IACV,CAIG+3B,mBACA,OAAQ/3B,KAAKwsB,QAAU4K,IAAe,CACzC,CAIDY,eAAelqB,GAGX,OAFA9N,KAAK83B,YAAchqB,EACnB9N,KAAKwsB,SAAW6K,GACTr3B,IACV,CAMDm2B,YAAYroB,GAGR,OAFKV,EAAKiG,QAAQrT,KAAK83B,aAAe93B,KAAK42B,UAAUxnB,MAAMtB,QAASA,IAChE9N,KAAKg4B,eAAelqB,GACjB9N,IACV,CAIDi4B,cAAc3kB,GACV,OAAOtT,KAAKm2B,YAAY7iB,EAAKjG,SAASrN,KAAK83B,aAAe93B,KAAK42B,UAAU/B,MAAM/mB,SAClF,CAIDoqB,iBAAiB5kB,GACb,OAAOtT,KAAKm2B,YAAY7iB,EAAK7F,cAAczN,KAAK83B,aAAe93B,KAAK42B,UAAU/B,MAAM/mB,SACvF,CAIGqqB,qBACA,OAAQn4B,KAAKwsB,QAAU6K,IAAiB,CAC3C,CAIDhD,QAAQ7G,EAAMlc,GACV5P,MAAM2yB,QAAQ7G,EAAMlc,GACpBtR,KAAKwsB,QAAUxsB,KAAKwsB,SAAW6K,GAC/Br3B,KAAK83B,YAAc,IACtB,CAIDM,QAAQV,GAEJ,OADA13B,KAAK03B,KAAOA,EACL13B,IACV,CAIDq4B,iBAAiBvwB,GAEb,OADA9H,KAAK42B,UAAUznB,QAAQnP,KAAM8H,GACtB9H,IACV,CAMDs4B,qBAAqBrtB,EAAMstB,GAAe,GACtC,IAAI3B,EAAY52B,KAAK42B,UAIrB,OAHI2B,IACAttB,EAAOA,EAAKqI,KAAKtT,KAAK83B,cAAgBlB,EAAU/qB,MAAQ+qB,EAAUxnB,MAAMtB,QAAW8oB,EAAUxnB,MAAM0C,YAAY8kB,EAAUvnB,MAAQjC,EAAKY,QAC1I4oB,EAAUnH,YAAYzvB,KAAMiL,GACrBjL,IACV,CAIDw4B,kBAEI,OADAx4B,KAAK42B,UAAUznB,QAAQnP,MAChBA,IACV,CAKDy4B,WAAWjvB,EAAMf,EAAM6B,GACnB,IAAIsC,EAAS5M,KAAKsR,IAAInG,KAAKyB,OAC3B,GAAY,MAARnE,EACA,OAAKe,EAEExJ,KAAKs4B,qBAAqB1rB,EAAOpD,KAAKA,IAAO,GADzCxJ,KAAKw4B,kBAGf,CAID,GAHU,MAANluB,IACAA,EAAK7B,GACT6B,EAAW,MAANA,EAAa7B,EAAO6B,GACpBd,EACD,OAAOxJ,KAAK0yB,YAAYjqB,EAAM6B,GAClC,IAAIwD,EAAQ9N,KAAK83B,YACjB,IAAKhqB,EAAO,CACR,IAAIsB,EAAQpP,KAAKsR,IAAIsB,QAAQnK,GAC7BqF,EAAQxD,GAAM7B,EAAO2G,EAAMtB,QAAUsB,EAAM0C,YAAY9R,KAAKsR,IAAIsB,QAAQtI,GAC3E,CAID,OAHAtK,KAAK2zB,iBAAiBlrB,EAAM6B,EAAIsC,EAAOpD,KAAKA,EAAMsE,IAC7C9N,KAAK42B,UAAU/qB,OAChB7L,KAAK62B,aAAalC,GAAUuB,KAAKl2B,KAAK42B,UAAUvnB,MAC7CrP,IACV,CACJ,CAKD04B,QAAQnxB,EAAK9G,GAET,OADAT,KAAKy3B,KAAmB,iBAAPlwB,EAAkBA,EAAMA,EAAIA,KAAO9G,EAC7CT,IACV,CAID24B,QAAQpxB,GACJ,OAAOvH,KAAKy3B,KAAmB,iBAAPlwB,EAAkBA,EAAMA,EAAIA,IACvD,CAKGqxB,gBACA,IAAK,IAAIhrB,KAAK5N,KAAKy3B,KACf,OAAO,EACX,OAAO,CACV,CAKDoB,iBAEI,OADA74B,KAAKwsB,SAAW8K,GACTt3B,IACV,CAIG84B,uBACA,OAAQ94B,KAAKwsB,QAAU8K,IAAkB,CAC5C,EAGL,SAAS7b,GAAKjY,EAAGoE,GACb,OAAQA,GAASpE,EAAQA,EAAEiY,KAAK7T,GAAXpE,CACxB,CACD,MAAMu1B,GACFx3B,YAAYI,EAAMq3B,EAAMpxB,GACpB5H,KAAK2B,KAAOA,EACZ3B,KAAKi5B,KAAOxd,GAAKud,EAAKC,KAAMrxB,GAC5B5H,KAAKmsB,MAAQ1Q,GAAKud,EAAK7M,MAAOvkB,EACjC,EAEL,MAAMsxB,GAAa,CACf,IAAIH,GAAU,MAAO,CACjBE,KAAKE,GAAU,OAAOA,EAAO7nB,KAAO6nB,EAAOvsB,OAAO8O,YAAYjF,eAAkB,EAChF0V,MAAMgB,GAAM,OAAOA,EAAG7b,GAAM,IAEhC,IAAIynB,GAAU,YAAa,CACvBE,KAAKE,EAAQle,GAAY,OAAOke,EAAOvC,WAAajC,GAAUgC,QAAQ1b,EAAS3J,IAAO,EACtF6a,MAAMgB,GAAM,OAAOA,EAAGyJ,SAAY,IAEtC,IAAImC,GAAU,cAAe,CACzBE,KAAKE,GAAU,OAAOA,EAAOrB,aAAe,IAAO,EACnD3L,MAAMgB,EAAIiM,EAAQC,EAAMpgB,GAAS,OAAOA,EAAM2d,UAAUX,QAAU9I,EAAG2K,YAAc,IAAO,IAE9F,IAAIiB,GAAU,oBAAqB,CAC/BE,OAAS,OAAO,CAAI,EACpB9M,MAAMgB,EAAImM,GAAQ,OAAOnM,EAAG2L,iBAAmBQ,EAAO,EAAIA,CAAO,KAKzE,MAAMC,GACFh4B,YAAYqL,EAAQ4sB,GAChBx5B,KAAK4M,OAASA,EACd5M,KAAKw5B,QAAU,GACfx5B,KAAKy5B,aAAe1mB,OAAOhF,OAAO,MAClC/N,KAAK05B,OAASR,GAAWpxB,QACrB0xB,GACAA,EAAQjxB,SAAQoxB,IACZ,GAAI35B,KAAKy5B,aAAaE,EAAOpyB,KACzB,MAAM,IAAI4E,WAAW,iDAAmDwtB,EAAOpyB,IAAM,KACzFvH,KAAKw5B,QAAQzxB,KAAK4xB,GAClB35B,KAAKy5B,aAAaE,EAAOpyB,KAAOoyB,EAC5BA,EAAOt2B,KAAK4V,OACZjZ,KAAK05B,OAAO3xB,KAAK,IAAIgxB,GAAUY,EAAOpyB,IAAKoyB,EAAOt2B,KAAK4V,MAAO0gB,GAA9D,GAEf,EAWL,MAAMC,GAIFr4B,YAIA43B,GACIn5B,KAAKm5B,OAASA,CACjB,CAIGvsB,aACA,OAAO5M,KAAKm5B,OAAOvsB,MACtB,CAIG4sB,cACA,OAAOx5B,KAAKm5B,OAAOK,OACtB,CAIDrN,MAAMgB,GACF,OAAOntB,KAAK65B,iBAAiB1M,GAAIlU,KACpC,CAID6gB,kBAAkB3M,EAAInK,GAAS,GAC3B,IAAK,IAAIngB,EAAI,EAAGA,EAAI7C,KAAKm5B,OAAOK,QAAQhyB,OAAQ3E,IAC5C,GAAIA,GAAKmgB,EAAQ,CACb,IAAI2W,EAAS35B,KAAKm5B,OAAOK,QAAQ32B,GACjC,GAAI82B,EAAOt2B,KAAKy2B,oBAAsBH,EAAOt2B,KAAKy2B,kBAAkBhf,KAAK6e,EAAQxM,EAAIntB,MACjF,OAAO,CACd,CACL,OAAO,CACV,CAQD65B,iBAAiBE,GACb,IAAK/5B,KAAK85B,kBAAkBC,GACxB,MAAO,CAAE9gB,MAAOjZ,KAAMg6B,aAAc,IACxC,IAAIC,EAAM,CAACF,GAASG,EAAWl6B,KAAKm6B,WAAWJ,GAAS3jB,EAAO,KAI/D,OAAS,CACL,IAAIgkB,GAAU,EACd,IAAK,IAAIv3B,EAAI,EAAGA,EAAI7C,KAAKm5B,OAAOK,QAAQhyB,OAAQ3E,IAAK,CACjD,IAAI82B,EAAS35B,KAAKm5B,OAAOK,QAAQ32B,GACjC,GAAI82B,EAAOt2B,KAAKg3B,kBAAmB,CAC/B,IAAIn4B,EAAIkU,EAAOA,EAAKvT,GAAGX,EAAI,EAAGo4B,EAAWlkB,EAAOA,EAAKvT,GAAGoW,MAAQjZ,KAC5DmtB,EAAKjrB,EAAI+3B,EAAIzyB,QACbmyB,EAAOt2B,KAAKg3B,kBAAkBvf,KAAK6e,EAAQz3B,EAAI+3B,EAAInyB,MAAM5F,GAAK+3B,EAAKK,EAAUJ,GACjF,GAAI/M,GAAM+M,EAASJ,kBAAkB3M,EAAItqB,GAAI,CAEzC,GADAsqB,EAAGuL,QAAQ,sBAAuBqB,IAC7B3jB,EAAM,CACPA,EAAO,GACP,IAAK,IAAI1Q,EAAI,EAAGA,EAAI1F,KAAKm5B,OAAOK,QAAQhyB,OAAQ9B,IAC5C0Q,EAAKrO,KAAKrC,EAAI7C,EAAI,CAAEoW,MAAOihB,EAAUh4B,EAAG+3B,EAAIzyB,QAAW,CAAEyR,MAAOjZ,KAAMkC,EAAG,GAChF,CACD+3B,EAAIlyB,KAAKolB,GACT+M,EAAWA,EAASC,WAAWhN,GAC/BiN,GAAU,CACb,CACGhkB,IACAA,EAAKvT,GAAK,CAAEoW,MAAOihB,EAAUh4B,EAAG+3B,EAAIzyB,QAC3C,CACJ,CACD,IAAK4yB,EACD,MAAO,CAAEnhB,MAAOihB,EAAUF,aAAcC,EAC/C,CACJ,CAIDE,WAAWhN,GACP,IAAKA,EAAG3b,OAAOtF,GAAGlM,KAAKsR,KACnB,MAAM,IAAInF,WAAW,qCACzB,IAAIouB,EAAc,IAAIX,GAAY55B,KAAKm5B,QAASO,EAAS15B,KAAKm5B,OAAOO,OACrE,IAAK,IAAI72B,EAAI,EAAGA,EAAI62B,EAAOlyB,OAAQ3E,IAAK,CACpC,IAAI23B,EAAQd,EAAO72B,GACnB03B,EAAYC,EAAM74B,MAAQ64B,EAAMrO,MAAMgB,EAAIntB,KAAKw6B,EAAM74B,MAAO3B,KAAMu6B,EACrE,CACD,OAAOA,CACV,CAIGpN,SAAO,OAAO,IAAIoK,GAAYv3B,KAAQ,CAI7B,cAACm5B,GACV,IAAIsB,EAAU,IAAIlB,GAAcJ,EAAO7nB,IAAM6nB,EAAO7nB,IAAInG,KAAKyB,OAASusB,EAAOvsB,OAAQusB,EAAOK,SACxFve,EAAW,IAAI2e,GAAYa,GAC/B,IAAK,IAAI53B,EAAI,EAAGA,EAAI43B,EAAQf,OAAOlyB,OAAQ3E,IACvCoY,EAASwf,EAAQf,OAAO72B,GAAGlB,MAAQ84B,EAAQf,OAAO72B,GAAGo2B,KAAKE,EAAQle,GACtE,OAAOA,CACV,CASDyf,YAAYvB,GACR,IAAIsB,EAAU,IAAIlB,GAAcv5B,KAAK4M,OAAQusB,EAAOK,SAChDE,EAASe,EAAQf,OAAQze,EAAW,IAAI2e,GAAYa,GACxD,IAAK,IAAI53B,EAAI,EAAGA,EAAI62B,EAAOlyB,OAAQ3E,IAAK,CACpC,IAAIlB,EAAO+3B,EAAO72B,GAAGlB,KACrBsZ,EAAStZ,GAAQ3B,KAAK6a,eAAelZ,GAAQ3B,KAAK2B,GAAQ+3B,EAAO72B,GAAGo2B,KAAKE,EAAQle,EACpF,CACD,OAAOA,CACV,CAQD7X,OAAOu3B,GACH,IAAI9xB,EAAS,CAAEyI,IAAKtR,KAAKsR,IAAIlO,SAAUwzB,UAAW52B,KAAK42B,UAAUxzB,UAGjE,GAFIpD,KAAK83B,cACLjvB,EAAOivB,YAAc93B,KAAK83B,YAAY90B,KAAIC,GAAKA,EAAEG,YACjDu3B,GAAuC,iBAAhBA,EACvB,IAAK,IAAI7xB,KAAQ6xB,EAAc,CAC3B,GAAY,OAAR7xB,GAAyB,aAARA,EACjB,MAAM,IAAIqD,WAAW,sDACzB,IAAIwtB,EAASgB,EAAa7xB,GAAOmQ,EAAQ0gB,EAAOt2B,KAAK4V,MACjDA,GAASA,EAAM7V,SACfyF,EAAOC,GAAQmQ,EAAM7V,OAAO0X,KAAK6e,EAAQ35B,KAAK25B,EAAOpyB,MAC5D,CACL,OAAOsB,CACV,CAQc,gBAACswB,EAAQtrB,EAAM8sB,GAC1B,IAAK9sB,EACD,MAAM,IAAI1B,WAAW,0CACzB,IAAKgtB,EAAOvsB,OACR,MAAM,IAAIT,WAAW,0CACzB,IAAIsuB,EAAU,IAAIlB,GAAcJ,EAAOvsB,OAAQusB,EAAOK,SAClDve,EAAW,IAAI2e,GAAYa,GAyB/B,OAxBAA,EAAQf,OAAOnxB,SAAQiyB,IACnB,GAAkB,OAAdA,EAAM74B,KACNsZ,EAAS3J,IAAM0B,GAAAA,SAAcmmB,EAAOvsB,OAAQiB,EAAKyD,UAEhD,GAAkB,aAAdkpB,EAAM74B,KACXsZ,EAAS2b,UAAYjC,GAAUhmB,SAASsM,EAAS3J,IAAKzD,EAAK+oB,gBAE1D,GAAkB,eAAd4D,EAAM74B,KACPkM,EAAKiqB,cACL7c,EAAS6c,YAAcjqB,EAAKiqB,YAAY90B,IAAIm2B,EAAOvsB,OAAOkI,mBAE7D,CACD,GAAI6lB,EACA,IAAK,IAAI7xB,KAAQ6xB,EAAc,CAC3B,IAAIhB,EAASgB,EAAa7xB,GAAOmQ,EAAQ0gB,EAAOt2B,KAAK4V,MACrD,GAAI0gB,EAAOpyB,KAAOizB,EAAM74B,MAAQsX,GAASA,EAAMtK,UAC3CoE,OAAOzL,UAAUuT,eAAeC,KAAKjN,EAAM/E,GAE3C,YADAmS,EAASuf,EAAM74B,MAAQsX,EAAMtK,SAASmM,KAAK6e,EAAQR,EAAQtrB,EAAK/E,GAAOmS,GAG9E,CACLA,EAASuf,EAAM74B,MAAQ64B,EAAMvB,KAAKE,EAAQle,EAC7C,KAEEA,CACV,EAGL,SAAS2f,GAAUjtB,EAAK/F,EAAMyI,GAC1B,IAAK,IAAIvH,KAAQ6E,EAAK,CAClB,IAAI0D,EAAM1D,EAAI7E,GACVuI,aAAewpB,SACfxpB,EAAMA,EAAIoK,KAAK7T,GACF,mBAARkB,IACLuI,EAAMupB,GAAUvpB,EAAKzJ,EAAM,CAAC,IAChCyI,EAAOvH,GAAQuI,CAClB,CACD,OAAOhB,CACV,CAMD,MAAMyqB,GAIFv5B,YAIA8B,GACIrD,KAAKqD,KAAOA,EAIZrD,KAAK+6B,MAAQ,CAAC,EACV13B,EAAK03B,OACLH,GAAUv3B,EAAK03B,MAAO/6B,KAAMA,KAAK+6B,OACrC/6B,KAAKuH,IAAMlE,EAAKkE,IAAMlE,EAAKkE,IAAIA,IAAMyzB,GAAU,SAClD,CAIDC,SAAShiB,GAAS,OAAOA,EAAMjZ,KAAKuH,IAAO,EAE/C,MAAM2zB,GAAOnoB,OAAOhF,OAAO,MAC3B,SAASitB,GAAUr5B,GACf,OAAIA,KAAQu5B,GACDv5B,EAAO,OAAQu5B,GAAKv5B,IAC/Bu5B,GAAKv5B,GAAQ,EACNA,EAAO,IACjB,CAOD,MAAMw5B,GAIF55B,YAAYI,EAAO,OAAS3B,KAAKuH,IAAMyzB,GAAUr5B,EAAQ,CAKzDyD,IAAI6T,GAAS,OAAOA,EAAMkgB,OAAOM,aAAaz5B,KAAKuH,IAAO,CAI1D0zB,SAAShiB,GAAS,OAAOA,EAAMjZ,KAAKuH,IAAO,E,QCh+B/C,MAAM6zB,GAA0B,oBAAbC,UAA2BA,UAAY,KACpD/pB,GAAyB,oBAAZ2W,SAA0BA,SAAW,KAClDqT,GAASF,IAAOA,GAAIG,WAAc,GAClCC,GAAU,cAAc5a,KAAK0a,IAC7BG,GAAY,UAAU7a,KAAK0a,IAC3BI,GAAU,wCAAwC9a,KAAK0a,IACvDK,MAAQF,IAAaC,IAAWF,IAChCI,GAAaH,GAAYxT,SAAS4T,aAAeH,IAAWA,GAAQ,GAAKF,IAAWA,GAAQ,GAAK,EACjGM,IAASH,IAAM,gBAAgBxjB,KAAKmjB,IAC1CQ,KAAW,iBAAiBlb,KAAK0a,KAAU,CAAC,EAAG,IAAI,GACnD,MAAMS,IAAWJ,IAAM,gBAAgB/a,KAAK0a,IACtCU,KAAWD,GACXE,GAAiBF,IAAWA,GAAQ,GAAK,EACzCG,IAAUP,MAAQP,IAAO,iBAAiBjjB,KAAKijB,GAAIe,QAEnDC,GAAMF,KAAW,cAAc/jB,KAAKmjB,OAAYF,IAAOA,GAAIiB,eAAiB,GAC5EC,GAAMF,MAAQhB,IAAM,MAAMjjB,KAAKijB,GAAImB,UACnCC,GAAU,aAAarkB,KAAKmjB,IAC5BmB,KAAWnrB,IAAO,wBAAyBA,GAAIorB,gBAAgBvgB,MAC/DwgB,GAAiBF,KAAW,uBAAuB7b,KAAKya,UAAUE,YAAc,CAAC,EAAG,IAAI,GAAK,EAE7FqB,GAAW,SAAU3xB,GACvB,IAAK,IAAIc,EAAQ,GAAIA,IAEjB,GADAd,EAAOA,EAAKuX,iBACPvX,EACD,OAAOc,CAElB,EACKoV,GAAa,SAAUlW,GACzB,IAAIT,EAASS,EAAK4xB,cAAgB5xB,EAAKkW,WACvC,OAAO3W,GAA6B,IAAnBA,EAAOuK,SAAiBvK,EAAOsyB,KAAOtyB,CAC1D,EACD,IAAIuyB,GAAc,KAIlB,MAAMC,GAAY,SAAU/xB,EAAMxC,EAAM6B,GACpC,IAAI2jB,EAAQ8O,KAAgBA,GAAc9U,SAASgV,eAGnD,OAFAhP,EAAMiP,OAAOjyB,EAAY,MAANX,EAAaW,EAAKqX,UAAU9a,OAAS8C,GACxD2jB,EAAMkP,SAASlyB,EAAMxC,GAAQ,GACtBwlB,CACV,EAIKmP,GAAuB,SAAUnyB,EAAMoyB,EAAKC,EAAYC,GAC1D,OAAOD,IAAeE,GAAQvyB,EAAMoyB,EAAKC,EAAYC,GAAY,IAC7DC,GAAQvyB,EAAMoyB,EAAKC,EAAYC,EAAW,GACjD,EACKE,GAAe,gCACrB,SAASD,GAAQvyB,EAAMoyB,EAAKC,EAAYC,EAAWpI,GAC/C,OAAS,CACL,GAAIlqB,GAAQqyB,GAAcD,GAAOE,EAC7B,OAAO,EACX,GAAIF,IAAQlI,EAAM,EAAI,EAAIzrB,GAASuB,IAAQ,CACvC,IAAIT,EAASS,EAAKkW,WAClB,IAAK3W,GAA6B,GAAnBA,EAAOuK,UAAiB2oB,GAAazyB,IAASwyB,GAAatlB,KAAKlN,EAAKmW,WACxD,SAAxBnW,EAAK0yB,gBACL,OAAO,EACXN,EAAMT,GAAS3xB,IAASkqB,EAAM,EAAI,EAAI,GACtClqB,EAAOT,CACV,KACI,IAAqB,GAAjBS,EAAK8J,SAOV,OAAO,EALP,GADA9J,EAAOA,EAAKmZ,WAAWiZ,GAAOlI,EAAM,GAAK,EAAI,IACjB,SAAxBlqB,EAAK0yB,gBACL,OAAO,EACXN,EAAMlI,EAAM,EAAIzrB,GAASuB,GAAQ,CAIpC,CACJ,CACJ,CACD,SAASvB,GAASuB,GACd,OAAwB,GAAjBA,EAAK8J,SAAgB9J,EAAKqX,UAAU9a,OAASyD,EAAKmZ,WAAW5c,MACvE,CACD,SAASo2B,GAAS3yB,EAAMiC,EAAQ1C,GAC5B,IAAK,IAAImsB,EAAoB,GAAVzpB,EAAa2wB,EAAQ3wB,GAAUxD,GAASuB,GAAO0rB,GAAWkH,GAAQ,CACjF,GAAI5yB,GAAQT,EACR,OAAO,EACX,IAAIuB,EAAQ6wB,GAAS3xB,GAErB,GADAA,EAAOA,EAAKkW,YACPlW,EACD,OAAO,EACX0rB,EAAUA,GAAoB,GAAT5qB,EACrB8xB,EAAQA,GAAS9xB,GAASrC,GAASuB,EACtC,CACJ,CACD,SAASyyB,GAAaphB,GAClB,IAAI0c,EACJ,IAAK,IAAItsB,EAAM4P,EAAK5P,EAAKA,EAAMA,EAAIyU,WAC/B,GAAI6X,EAAOtsB,EAAIoxB,WACX,MACR,OAAO9E,GAAQA,EAAK/tB,MAAQ+tB,EAAK/tB,KAAKG,UAAY4tB,EAAK1c,KAAOA,GAAO0c,EAAKhV,YAAc1H,EAC3F,CAGD,MAAMyhB,GAAqB,SAAUC,GACjC,IAAIC,EAAYD,EAAOE,YAGvB,OAFID,GAAajC,IAAUgC,EAAOG,aAAeH,EAAOI,WAAW,GAAGH,YAClEA,GAAY,GACTA,CACV,EACD,SAASI,GAASC,EAAS/2B,GACvB,IAAIg3B,EAAQtW,SAASuW,YAAY,SAIjC,OAHAD,EAAME,UAAU,WAAW,GAAM,GACjCF,EAAMD,QAAUA,EAChBC,EAAMh3B,IAAMg3B,EAAM38B,KAAO2F,EAClBg3B,CACV,CAED,SAASG,GAAWptB,GAChB,MAAO,CAAEqtB,KAAM,EAAGC,MAAOttB,EAAIorB,gBAAgBmC,YACzChd,IAAK,EAAGid,OAAQxtB,EAAIorB,gBAAgBqC,aAC3C,CACD,SAASC,GAAQv+B,EAAOupB,GACpB,MAAuB,iBAATvpB,EAAoBA,EAAQA,EAAMupB,EACnD,CACD,SAASiV,GAAWh0B,GAChB,IAAIi0B,EAAOj0B,EAAKk0B,wBAEZC,EAAUF,EAAKG,MAAQp0B,EAAKq0B,aAAgB,EAC5CC,EAAUL,EAAKM,OAASv0B,EAAKw0B,cAAiB,EAElD,MAAO,CAAEd,KAAMO,EAAKP,KAAMC,MAAOM,EAAKP,KAAO1zB,EAAK4zB,YAAcO,EAC5Dvd,IAAKqd,EAAKrd,IAAKid,OAAQI,EAAKrd,IAAM5W,EAAK8zB,aAAeQ,EAC7D,CACD,SAASG,GAAmBC,EAAMT,EAAMU,GACpC,IAAIC,EAAkBF,EAAKG,SAAS,oBAAsB,EAAGC,EAAeJ,EAAKG,SAAS,iBAAmB,EACzGxuB,EAAMquB,EAAKrjB,IAAImH,cACnB,IAAK,IAAIjZ,EAASo1B,GAAYD,EAAKrjB,KAAM9R,EAAS2W,GAAW3W,GAAS,CAClE,IAAKA,EACD,MACJ,GAAuB,GAAnBA,EAAOuK,SACP,SACJ,IAAIirB,EAAMx1B,EACNy1B,EAAQD,GAAO1uB,EAAI4uB,KACnBC,EAAWF,EAAQvB,GAAWptB,GAAO2tB,GAAWe,GAChDI,EAAQ,EAAGC,EAAQ,EASvB,GARInB,EAAKrd,IAAMse,EAASte,IAAMmd,GAAQa,EAAiB,OACnDQ,IAAUF,EAASte,IAAMqd,EAAKrd,IAAMmd,GAAQe,EAAc,QACrDb,EAAKJ,OAASqB,EAASrB,OAASE,GAAQa,EAAiB,YAC9DQ,EAAQnB,EAAKJ,OAASqB,EAASrB,OAASE,GAAQe,EAAc,WAC9Db,EAAKP,KAAOwB,EAASxB,KAAOK,GAAQa,EAAiB,QACrDO,IAAUD,EAASxB,KAAOO,EAAKP,KAAOK,GAAQe,EAAc,SACvDb,EAAKN,MAAQuB,EAASvB,MAAQI,GAAQa,EAAiB,WAC5DO,EAAQlB,EAAKN,MAAQuB,EAASvB,MAAQI,GAAQe,EAAc,UAC5DK,GAASC,EACT,GAAIJ,EACA3uB,EAAIgvB,YAAYC,SAASH,EAAOC,OAE/B,CACD,IAAIG,EAASR,EAAIS,WAAYC,EAASV,EAAIW,UACtCN,IACAL,EAAIW,WAAaN,GACjBD,IACAJ,EAAIS,YAAcL,GACtB,IAAIQ,EAAKZ,EAAIS,WAAaD,EAAQK,EAAKb,EAAIW,UAAYD,EACvDxB,EAAO,CAAEP,KAAMO,EAAKP,KAAOiC,EAAI/e,IAAKqd,EAAKrd,IAAMgf,EAAIjC,MAAOM,EAAKN,MAAQgC,EAAI9B,OAAQI,EAAKJ,OAAS+B,EACpG,CAEL,GAAIZ,EACA,KACP,CACJ,CAKD,SAASa,GAAenB,GACpB,IACIoB,EAAQC,EADR9B,EAAOS,EAAKrjB,IAAI6iB,wBAAyBuB,EAASx2B,KAAKS,IAAI,EAAGu0B,EAAKrd,KAEvE,IAAK,IAAIrd,GAAK06B,EAAKP,KAAOO,EAAKN,OAAS,EAAG56B,EAAI08B,EAAS,EAAG18B,EAAIkG,KAAKC,IAAI82B,YAAa/B,EAAKJ,QAAS96B,GAAK,EAAG,CACvG,IAAIsY,EAAMqjB,EAAKuB,KAAKC,iBAAiB38B,EAAGR,GACxC,IAAKsY,GAAOA,GAAOqjB,EAAKrjB,MAAQqjB,EAAKrjB,IAAI0I,SAAS1I,GAC9C,SACJ,IAAI8kB,EAAY9kB,EAAI6iB,wBACpB,GAAIiC,EAAUvf,KAAO6e,EAAS,GAAI,CAC9BK,EAASzkB,EACT0kB,EAASI,EAAUvf,IACnB,KACH,CACJ,CACD,MAAO,CAAEkf,OAAQA,EAAQC,OAAQA,EAAQK,MAAOC,GAAY3B,EAAKrjB,KACpE,CACD,SAASglB,GAAYhlB,GACjB,IAAI+kB,EAAQ,GAAI/vB,EAAMgL,EAAImH,cAC1B,IAAK,IAAI/W,EAAM4P,EAAK5P,EAAKA,EAAMyU,GAAWzU,GAEtC,GADA20B,EAAMt5B,KAAK,CAAEuU,IAAK5P,EAAKmV,IAAKnV,EAAIi0B,UAAWhC,KAAMjyB,EAAI+zB,aACjDnkB,GAAOhL,EACP,MAER,OAAO+vB,CACV,CAGD,SAASE,IAAe,OAAER,EAAF,OAAUC,EAAV,MAAkBK,IACtC,IAAIG,EAAYT,EAASA,EAAO5B,wBAAwBtd,IAAM,EAC9D4f,GAAmBJ,EAAoB,GAAbG,EAAiB,EAAIA,EAAYR,EAC9D,CACD,SAASS,GAAmBJ,EAAOK,GAC/B,IAAK,IAAI7+B,EAAI,EAAGA,EAAIw+B,EAAM75B,OAAQ3E,IAAK,CACnC,IAAI,IAAEyZ,EAAF,IAAOuF,EAAP,KAAY8c,GAAS0C,EAAMx+B,GAC3ByZ,EAAIqkB,WAAa9e,EAAM6f,IACvBplB,EAAIqkB,UAAY9e,EAAM6f,GACtBplB,EAAImkB,YAAc9B,IAClBriB,EAAImkB,WAAa9B,EACxB,CACJ,CACD,IAAIgD,GAAyB,KAG7B,SAASC,GAAmBtlB,GACxB,GAAIA,EAAIulB,UACJ,OAAOvlB,EAAIulB,YACf,GAAIF,GACA,OAAOrlB,EAAIwlB,MAAMH,IACrB,IAAII,EAAST,GAAYhlB,GACzBA,EAAIwlB,MAAgC,MAA1BH,GAAiC,CACnCK,oBAEA,OADAL,GAAyB,CAAEK,eAAe,IACnC,CACV,QACDt6B,GACCi6B,KACDA,IAAyB,EACzBF,GAAmBM,EAAQ,GAElC,CACD,SAASE,GAAiBh3B,EAAMi3B,GAC5B,IAAIC,EAA0BC,EAAjBC,EAAY,IAAoBn1B,EAAS,EAClDo1B,EAASJ,EAAOrgB,IAAK0gB,EAASL,EAAOrgB,IACzC,IAAK,IAAIzY,EAAQ6B,EAAKQ,WAAY+2B,EAAa,EAAGp5B,EAAOA,EAAQA,EAAMib,YAAame,IAAc,CAC9F,IAAIC,EACJ,GAAsB,GAAlBr5B,EAAM2L,SACN0tB,EAAQr5B,EAAMs5B,qBACb,IAAsB,GAAlBt5B,EAAM2L,SAGX,SAFA0tB,EAAQzF,GAAU5zB,GAAOs5B,gBAEjB,CACZ,IAAK,IAAI7/B,EAAI,EAAGA,EAAI4/B,EAAMj7B,OAAQ3E,IAAK,CACnC,IAAIq8B,EAAOuD,EAAM5/B,GACjB,GAAIq8B,EAAKrd,KAAOygB,GAAUpD,EAAKJ,QAAUyD,EAAQ,CAC7CD,EAASp4B,KAAKS,IAAIu0B,EAAKJ,OAAQwD,GAC/BC,EAASr4B,KAAKC,IAAI+0B,EAAKrd,IAAK0gB,GAC5B,IAAII,EAAKzD,EAAKP,KAAOuD,EAAOvD,KAAOO,EAAKP,KAAOuD,EAAOvD,KAChDO,EAAKN,MAAQsD,EAAOvD,KAAOuD,EAAOvD,KAAOO,EAAKN,MAAQ,EAC5D,GAAI+D,EAAKN,EAAW,CAChBF,EAAU/4B,EACVi5B,EAAYM,EACZP,EAAgBO,GAA0B,GAApBR,EAAQptB,SAAgB,CAC1C4pB,KAAMO,EAAKN,MAAQsD,EAAOvD,KAAOO,EAAKN,MAAQM,EAAKP,KACnD9c,IAAKqgB,EAAOrgB,KACZqgB,EACkB,GAAlB94B,EAAM2L,UAAiB4tB,IACvBz1B,EAASs1B,GAAcN,EAAOvD,OAASO,EAAKP,KAAOO,EAAKN,OAAS,EAAI,EAAI,IAC7E,QACH,CACJ,EACIuD,IAAYD,EAAOvD,MAAQO,EAAKN,OAASsD,EAAOrgB,KAAOqd,EAAKrd,KAC7DqgB,EAAOvD,MAAQO,EAAKP,MAAQuD,EAAOrgB,KAAOqd,EAAKJ,UAC/C5xB,EAASs1B,EAAa,EAC7B,CACJ,CACD,OAAIL,GAA+B,GAApBA,EAAQptB,SACZ6tB,GAAiBT,EAASC,IAChCD,GAAYE,GAAiC,GAApBF,EAAQptB,SAC3B,CAAE9J,OAAMiC,UACZ+0B,GAAiBE,EAASC,EACpC,CACD,SAASQ,GAAiB33B,EAAMi3B,GAC5B,IAAIW,EAAM53B,EAAKqX,UAAU9a,OACrBymB,EAAQhG,SAASgV,cACrB,IAAK,IAAIp6B,EAAI,EAAGA,EAAIggC,EAAKhgC,IAAK,CAC1BorB,EAAMiP,OAAOjyB,EAAMpI,EAAI,GACvBorB,EAAMkP,SAASlyB,EAAMpI,GACrB,IAAIq8B,EAAO4D,GAAW7U,EAAO,GAC7B,GAAIiR,EAAKrd,KAAOqd,EAAKJ,QAEjBiE,GAAOb,EAAQhD,GACf,MAAO,CAAEj0B,OAAMiC,OAAQrK,GAAKq/B,EAAOvD,OAASO,EAAKP,KAAOO,EAAKN,OAAS,EAAI,EAAI,GACrF,CACD,MAAO,CAAE3zB,OAAMiC,OAAQ,EAC1B,CACD,SAAS61B,GAAOb,EAAQhD,GACpB,OAAOgD,EAAOvD,MAAQO,EAAKP,KAAO,GAAKuD,EAAOvD,MAAQO,EAAKN,MAAQ,GAC/DsD,EAAOrgB,KAAOqd,EAAKrd,IAAM,GAAKqgB,EAAOrgB,KAAOqd,EAAKJ,OAAS,CACjE,CACD,SAASkE,GAAa1mB,EAAK4lB,GACvB,IAAI13B,EAAS8R,EAAI6E,WACjB,OAAI3W,GAAU,QAAQ2N,KAAK3N,EAAO4W,WAAa8gB,EAAOvD,KAAOriB,EAAI6iB,wBAAwBR,KAC9En0B,EACJ8R,CACV,CACD,SAAS2mB,GAAetD,EAAMK,EAAKkC,GAC/B,IAAI,KAAEj3B,EAAF,OAAQiC,GAAW+0B,GAAiBjC,EAAKkC,GAAS9R,GAAQ,EAC9D,GAAqB,GAAjBnlB,EAAK8J,WAAkB9J,EAAKQ,WAAY,CACxC,IAAIyzB,EAAOj0B,EAAKk0B,wBAChB/O,EAAO8O,EAAKP,MAAQO,EAAKN,OAASsD,EAAOvD,MAAQO,EAAKP,KAAOO,EAAKN,OAAS,EAAI,GAAK,CACvF,CACD,OAAOe,EAAKuD,QAAQC,WAAWl4B,EAAMiC,EAAQkjB,EAChD,CACD,SAASgT,GAAazD,EAAM10B,EAAMiC,EAAQg1B,GAOtC,IAAImB,GAAW,EACf,IAAK,IAAI32B,EAAMzB,IAAQ,CACnB,GAAIyB,GAAOizB,EAAKrjB,IACZ,MACJ,IAAI0c,EAAO2G,EAAKuD,QAAQI,YAAY52B,GAAK,GACzC,IAAKssB,EACD,OAAO,KACX,GAAIA,EAAK/tB,KAAKG,SAAW4tB,EAAKxuB,OAAQ,CAClC,IAAI00B,EAAOlG,EAAK1c,IAAI6iB,wBACpB,GAAID,EAAKP,KAAOuD,EAAOvD,MAAQO,EAAKrd,IAAMqgB,EAAOrgB,IAC7CwhB,EAAUrK,EAAKuK,cACd,MAAIrE,EAAKN,MAAQsD,EAAOvD,MAAQO,EAAKJ,OAASoD,EAAOrgB,KAGtD,MAFAwhB,EAAUrK,EAAKwK,QAEV,CACZ,CACD92B,EAAMssB,EAAK1c,IAAI6E,UAClB,CACD,OAAOkiB,GAAW,EAAIA,EAAU1D,EAAKuD,QAAQC,WAAWl4B,EAAMiC,EAAQ,EACzE,CACD,SAASi0B,GAAiBsC,EAASvB,EAAQwB,GACvC,IAAIb,EAAMY,EAAQrf,WAAW5c,OAC7B,GAAIq7B,GAAOa,EAAI7hB,IAAM6hB,EAAI5E,OACrB,IAAK,IAAI6E,EAASz5B,KAAKS,IAAI,EAAGT,KAAKC,IAAI04B,EAAM,EAAG34B,KAAK05B,MAAMf,GAAOX,EAAOrgB,IAAM6hB,EAAI7hB,MAAQ6hB,EAAI5E,OAAS4E,EAAI7hB,MAAQ,IAAKhf,EAAI8gC,IAAU,CACnI,IAAIv6B,EAAQq6B,EAAQrf,WAAWvhB,GAC/B,GAAsB,GAAlBuG,EAAM2L,SAAe,CACrB,IAAI0tB,EAAQr5B,EAAMs5B,iBAClB,IAAK,IAAIh9B,EAAI,EAAGA,EAAI+8B,EAAMj7B,OAAQ9B,IAAK,CACnC,IAAIw5B,EAAOuD,EAAM/8B,GACjB,GAAIq9B,GAAOb,EAAQhD,GACf,OAAOiC,GAAiB/3B,EAAO84B,EAAQhD,EAC9C,CACJ,CACD,IAAKr8B,GAAKA,EAAI,GAAKggC,IAAQc,EACvB,KACP,CAEL,OAAOF,CACV,CAED,SAASI,GAAYlE,EAAMuC,GACvB,IAAkCj3B,EAA9BqG,EAAMquB,EAAKrjB,IAAImH,cAAqBvW,EAAS,EACjD,GAAIoE,EAAIwyB,uBACJ,IACI,IAAI76B,EAAMqI,EAAIwyB,uBAAuB5B,EAAOvD,KAAMuD,EAAOrgB,KACrD5Y,KACG86B,WAAY94B,EAAMiC,UAAWjE,EAE3B,CAAb,MAAO2E,IAAM,CAEjB,IAAK3C,GAAQqG,EAAI0yB,oBAAqB,CAClC,IAAI/V,EAAQ3c,EAAI0yB,oBAAoB9B,EAAOvD,KAAMuD,EAAOrgB,KACpDoM,KACGgW,eAAgBh5B,EAAMi5B,YAAah3B,GAAW+gB,EACxD,CACD,IAEIhlB,EAFA+2B,GAAOL,EAAKuB,KAAKC,iBAAmBxB,EAAKuB,KAAO5vB,GAC/C6vB,iBAAiBe,EAAOvD,KAAMuD,EAAOrgB,KAE1C,IAAKme,IAAQL,EAAKrjB,IAAI0I,SAAyB,GAAhBgb,EAAIjrB,SAAgBirB,EAAI7e,WAAa6e,GAAM,CACtE,IAAI0D,EAAM/D,EAAKrjB,IAAI6iB,wBACnB,IAAK4D,GAAOb,EAAQwB,GAChB,OAAO,KAEX,GADA1D,EAAMmB,GAAiBxB,EAAKrjB,IAAK4lB,EAAQwB,IACpC1D,EACD,OAAO,IACd,CAED,GAAI9D,GACA,IAAK,IAAIj6B,EAAI+9B,EAAK/0B,GAAQhJ,EAAGA,EAAIkf,GAAWlf,GACpCA,EAAEkiC,YACFl5B,OAAOvD,GAGnB,GADAs4B,EAAMgD,GAAahD,EAAKkC,GACpBj3B,EAAM,CACN,GAAI6wB,IAA0B,GAAjB7wB,EAAK8J,WAGd7H,EAAShD,KAAKC,IAAI+C,EAAQjC,EAAKmZ,WAAW5c,QAGtC0F,EAASjC,EAAKmZ,WAAW5c,QAAQ,CACjC,IAAoCk8B,EAAhC1xB,EAAO/G,EAAKmZ,WAAWlX,GACN,OAAjB8E,EAAKoP,WAAsBsiB,EAAM1xB,EAAKmtB,yBAAyBP,OAASsD,EAAOvD,MAC/E+E,EAAI5E,OAASoD,EAAOrgB,KACpB3U,GACP,CAIDjC,GAAQ00B,EAAKrjB,KAAOpP,GAAUjC,EAAKmZ,WAAW5c,OAAS,GAAgC,GAA3ByD,EAAKM,UAAUwJ,UAC3EmtB,EAAOrgB,IAAM5W,EAAKM,UAAU4zB,wBAAwBL,OACpD71B,EAAM02B,EAAK1mB,MAAM3H,IAAIjK,QAAQqB,KAId,GAAVwE,GAAgC,GAAjBjC,EAAK8J,UAAyD,MAAxC9J,EAAKmZ,WAAWlX,EAAS,GAAGkU,WACtEnY,EAAMm6B,GAAazD,EAAM10B,EAAMiC,EAAQg1B,GAC9C,CACU,MAAPj5B,IACAA,EAAMg6B,GAAetD,EAAMK,EAAKkC,IACpC,IAAIlJ,EAAO2G,EAAKuD,QAAQI,YAAYtD,GAAK,GACzC,MAAO,CAAE/2B,MAAK2lB,OAAQoK,EAAOA,EAAKoL,WAAapL,EAAKqL,QAAU,EACjE,CACD,SAASvB,GAAWzyB,EAAQ+f,GACxB,IAAIqS,EAAQpyB,EAAOqyB,iBACnB,OAAQD,EAAMj7B,OAA0Ci7B,EAAMrS,EAAO,EAAI,EAAIqS,EAAMj7B,OAAS,GAArE6I,EAAO8uB,uBACjC,CACD,MAAMmF,GAAO,4CAGb,SAASC,GAAY5E,EAAM12B,EAAK+gB,GAC5B,IAAI,KAAE/e,EAAF,OAAQiC,EAAR,KAAgB+M,GAAS0lB,EAAKuD,QAAQsB,WAAWv7B,EAAK+gB,EAAO,GAAK,EAAI,GACtEya,EAAoBhI,IAAUX,GAClC,GAAqB,GAAjB7wB,EAAK8J,SAAe,CAGpB,IAAI0vB,IAAsBH,GAAKnsB,KAAKlN,EAAKqX,aAAe0H,EAAO,EAAK9c,EAASA,GAAUjC,EAAKqX,UAAU9a,QAejG,CACD,IAAIiB,EAAOyE,EAAQ5C,EAAK4C,EAAQw3B,EAAW1a,EAAO,EAAI,GAAK,EAe3D,OAdIA,EAAO,IAAM9c,GACb5C,IACAo6B,GAAY,GAEP1a,GAAQ,GAAK9c,GAAUjC,EAAKqX,UAAU9a,QAC3CiB,IACAi8B,EAAW,GAEN1a,EAAO,EACZvhB,IAGA6B,IAEGq6B,GAAS7B,GAAW9F,GAAU/xB,EAAMxC,EAAM6B,GAAK,GAAIo6B,EAAW,EACxE,CAhC+G,CAC5G,IAAIxF,EAAO4D,GAAW9F,GAAU/xB,EAAMiC,EAAQA,GAAS8c,GAIvD,GAAI8R,IAAS5uB,GAAU,KAAKiL,KAAKlN,EAAKqX,UAAUpV,EAAS,KAAOA,EAASjC,EAAKqX,UAAU9a,OAAQ,CAC5F,IAAIo9B,EAAa9B,GAAW9F,GAAU/xB,EAAMiC,EAAS,EAAGA,EAAS,IAAK,GACtE,GAAI03B,EAAW/iB,KAAOqd,EAAKrd,IAAK,CAC5B,IAAIgjB,EAAY/B,GAAW9F,GAAU/xB,EAAMiC,EAAQA,EAAS,IAAK,GACjE,GAAI23B,EAAUhjB,KAAOqd,EAAKrd,IACtB,OAAO8iB,GAASE,EAAWA,EAAUlG,KAAOiG,EAAWjG,KAC9D,CACJ,CACD,OAAOO,CACV,CAmBJ,CACD,IAAI4F,EAAOnF,EAAK1mB,MAAM3H,IAAIsB,QAAQ3J,GAAOgR,GAAQ,IAEjD,IAAK6qB,EAAKt6B,OAAO4H,cAAe,CAC5B,GAAY,MAAR6H,GAAgB/M,IAAW8c,EAAO,GAAK9c,GAAUxD,GAASuB,IAAQ,CAClE,IAAIuG,EAASvG,EAAKmZ,WAAWlX,EAAS,GACtC,GAAuB,GAAnBsE,EAAOuD,SACP,OAAOgwB,GAASvzB,EAAO2tB,yBAAyB,EACvD,CACD,GAAY,MAARllB,GAAgB/M,EAASxD,GAASuB,GAAO,CACzC,IAAIwG,EAAQxG,EAAKmZ,WAAWlX,GAC5B,GAAsB,GAAlBuE,EAAMsD,SACN,OAAOgwB,GAAStzB,EAAM0tB,yBAAyB,EACtD,CACD,OAAO4F,GAAS95B,EAAKk0B,wBAAyBnV,GAAQ,EACzD,CAED,GAAY,MAAR/P,GAAgB/M,IAAW8c,EAAO,GAAK9c,GAAUxD,GAASuB,IAAQ,CAClE,IAAIuG,EAASvG,EAAKmZ,WAAWlX,EAAS,GAClCmD,EAA4B,GAAnBmB,EAAOuD,SAAgBioB,GAAUxrB,EAAQ9H,GAAS8H,IAAWizB,EAAoB,EAAI,IAGzE,GAAnBjzB,EAAOuD,UAAqC,MAAnBvD,EAAO4P,UAAqB5P,EAAO6S,YAAwB,KAAT7S,EACjF,GAAInB,EACA,OAAOs0B,GAAS7B,GAAWzyB,EAAQ,IAAI,EAC9C,CACD,GAAY,MAAR4J,GAAgB/M,EAASxD,GAASuB,GAAO,CACzC,IAAIwG,EAAQxG,EAAKmZ,WAAWlX,GAC5B,MAAOuE,EAAMqsB,YAAcrsB,EAAMqsB,WAAWkH,gBACxCvzB,EAAQA,EAAM4S,YAClB,IAAIhU,EAAUoB,EAAiC,GAAlBA,EAAMsD,SAAgBioB,GAAUvrB,EAAO,EAAIgzB,EAAoB,EAAI,GACxE,GAAlBhzB,EAAMsD,SAAgBtD,EAAQ,KADd,KAEtB,GAAIpB,EACA,OAAOs0B,GAAS7B,GAAWzyB,GAAS,IAAI,EAC/C,CAED,OAAOs0B,GAAS7B,GAA4B,GAAjB73B,EAAK8J,SAAgBioB,GAAU/xB,GAAQA,GAAO+e,GAAOA,GAAQ,EAC3F,CACD,SAAS2a,GAASzF,EAAMP,GACpB,GAAkB,GAAdO,EAAKG,MACL,OAAOH,EACX,IAAI16B,EAAIm6B,EAAOO,EAAKP,KAAOO,EAAKN,MAChC,MAAO,CAAE/c,IAAKqd,EAAKrd,IAAKid,OAAQI,EAAKJ,OAAQH,KAAMn6B,EAAGo6B,MAAOp6B,EAChE,CACD,SAASugC,GAAS7F,EAAMrd,GACpB,GAAmB,GAAfqd,EAAKM,OACL,OAAON,EACX,IAAIl7B,EAAI6d,EAAMqd,EAAKrd,IAAMqd,EAAKJ,OAC9B,MAAO,CAAEjd,IAAK7d,EAAG86B,OAAQ96B,EAAG26B,KAAMO,EAAKP,KAAMC,MAAOM,EAAKN,MAC5D,CACD,SAASqG,GAAiBtF,EAAM1mB,EAAOzV,GACnC,IAAI0hC,EAAYvF,EAAK1mB,MAAOnC,EAAS6oB,EAAKuB,KAAKiE,cAC3CD,GAAajsB,GACb0mB,EAAKyF,YAAYnsB,GACjBnC,GAAU6oB,EAAKrjB,KACfqjB,EAAKmC,QACT,IACI,OAAOt+B,GAOV,CARD,QAIQ0hC,GAAajsB,GACb0mB,EAAKyF,YAAYF,GACjBpuB,GAAU6oB,EAAKrjB,KAAOxF,GACtBA,EAAOgrB,OACd,CACJ,CAGD,SAASuD,GAAuB1F,EAAM1mB,EAAOkc,GACzC,IAAIuB,EAAMzd,EAAM2d,UACZtH,EAAc,MAAP6F,EAAcuB,EAAItnB,MAAQsnB,EAAIrnB,IACzC,OAAO41B,GAAiBtF,EAAM1mB,GAAO,KACjC,IAAMhO,KAAMqR,GAAQqjB,EAAKuD,QAAQsB,WAAWlV,EAAKrmB,IAAY,MAAPksB,GAAe,EAAI,GACzE,OAAS,CACL,IAAImQ,EAAU3F,EAAKuD,QAAQI,YAAYhnB,GAAK,GAC5C,IAAKgpB,EACD,MACJ,GAAIA,EAAQr6B,KAAKG,QAAS,CACtBkR,EAAMgpB,EAAQhpB,IACd,KACH,CACDA,EAAMgpB,EAAQhpB,IAAI6E,UACrB,CACD,IAAI+gB,EAASqC,GAAY5E,EAAMrQ,EAAKrmB,IAAK,GACzC,IAAK,IAAIG,EAAQkT,EAAI7Q,WAAYrC,EAAOA,EAAQA,EAAMib,YAAa,CAC/D,IAAIkhB,EACJ,GAAsB,GAAlBn8B,EAAM2L,SACNwwB,EAAQn8B,EAAMs5B,qBACb,IAAsB,GAAlBt5B,EAAM2L,SAGX,SAFAwwB,EAAQvI,GAAU5zB,EAAO,EAAGA,EAAMkZ,UAAU9a,QAAQk7B,gBAE5C,CACZ,IAAK,IAAI7/B,EAAI,EAAGA,EAAI0iC,EAAM/9B,OAAQ3E,IAAK,CACnC,IAAI6gC,EAAM6B,EAAM1iC,GAChB,GAAI6gC,EAAI5E,OAAS4E,EAAI7hB,IAAM,IACf,MAAPsT,EAAc+M,EAAOrgB,IAAM6hB,EAAI7hB,IAAkC,GAA3B6hB,EAAI5E,OAASoD,EAAOrgB,KACrD6hB,EAAI5E,OAASoD,EAAOpD,OAAqC,GAA3BoD,EAAOpD,OAAS4E,EAAI7hB,MACxD,OAAO,CACd,CACJ,CACD,OAAO,CAAP,GAEP,CACD,MAAM2jB,GAAW,kBACjB,SAASC,GAAyB9F,EAAM1mB,EAAOkc,GAC3C,IAAI,MAAEN,GAAU5b,EAAM2d,UACtB,IAAK/B,EAAMrqB,OAAOqJ,YACd,OAAO,EACX,IAAI3G,EAAS2nB,EAAMllB,aAAcgnB,GAAWzpB,EAAQ2wB,EAAQ3wB,GAAU2nB,EAAMrqB,OAAOnD,QAAQqB,KACvFguB,EAAMiJ,EAAK+F,eAGf,OAAKF,GAASrtB,KAAK0c,EAAMrqB,OAAO0I,cAAiBwjB,EAAIiP,OAE9CV,GAAiBtF,EAAM1mB,GAAO,KAMjC,IAAI2sB,EAAWlP,EAAI0H,WAAW,GAAIyH,EAAUnP,EAAIoP,UAAWC,EAASrP,EAAIsP,YACpEC,EAAevP,EAAIwP,eAEvBxP,EAAIiP,OAAO,OAAQxQ,EAAK,aACxB,IAAIgR,EAAYtR,EAAMvlB,MAAQqwB,EAAKuD,QAAQkD,YAAYvR,EAAMrjB,UAAYmuB,EAAKrjB,IAC1EzT,GAAUs9B,EAAUnhB,SAAmC,GAA1B0R,EAAIoP,UAAU/wB,SAAgB2hB,EAAIoP,UAAYpP,EAAIoP,UAAU3kB,aACxF0kB,GAAWnP,EAAIoP,WAAaC,GAAUrP,EAAIsP,YAM/C,OAJAtP,EAAI2P,kBACJ3P,EAAIpmB,SAASs1B,GACO,MAAhBK,IACAvP,EAAIwP,eAAiBD,GAClBp9B,CAAP,IAnBc,QAAPssB,GAAwB,YAAPA,EAAoBwB,EAAUkH,CAqB7D,CACD,IAAIyI,GAAc,KACdC,GAAY,KACZC,IAAe,EACnB,SAASC,GAAe9G,EAAM1mB,EAAOkc,GACjC,OAAImR,IAAertB,GAASstB,IAAapR,EAC9BqR,IACXF,GAAcrtB,EACdstB,GAAYpR,EACLqR,GAAsB,MAAPrR,GAAsB,QAAPA,EAC/BkQ,GAAuB1F,EAAM1mB,EAAOkc,GACpCsQ,GAAyB9F,EAAM1mB,EAAOkc,GAC/C,CAcD,MAAMuR,GAAY,EAAGC,GAAc,EAAGC,GAAgB,EAAGC,GAAa,EAGtE,MAAMC,GACFvlC,YAAYiJ,EAAQu8B,EAAUzqB,EAG9B0H,GACIhkB,KAAKwK,OAASA,EACdxK,KAAK+mC,SAAWA,EAChB/mC,KAAKsc,IAAMA,EACXtc,KAAKgkB,WAAaA,EAClBhkB,KAAKgnC,MAAQN,GAGbpqB,EAAIwhB,WAAa99B,IACpB,CAGDinC,cAAcC,GAAU,OAAO,CAAQ,CACvCC,YAAY7zB,GAAQ,OAAO,CAAQ,CACnC8zB,YAAYn8B,EAAMo8B,EAAWC,GAAa,OAAO,CAAQ,CACzDC,YAAYnmB,GAAY,OAAO,CAAQ,CAIvComB,YAAc,OAAO,IAAO,CAG5BC,UAAUlJ,GAAS,OAAO,CAAQ,CAE9B71B,WACA,IAAIA,EAAO,EACX,IAAK,IAAI7F,EAAI,EAAGA,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,IACtC6F,GAAQ1I,KAAK+mC,SAASlkC,GAAG6F,KAC7B,OAAOA,CACV,CAGG27B,aAAW,OAAO,CAAI,CAC1BqD,UACI1nC,KAAKwK,YAAS9C,EACV1H,KAAKsc,IAAIwhB,YAAc99B,OACvBA,KAAKsc,IAAIwhB,gBAAap2B,GAC1B,IAAK,IAAI7E,EAAI,EAAGA,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,IACtC7C,KAAK+mC,SAASlkC,GAAG6kC,SACxB,CACDC,eAAev+B,GACX,IAAK,IAAIvG,EAAI,EAAGoG,EAAMjJ,KAAKokC,YAAavhC,IAAK,CACzC,IAAI6J,EAAM1M,KAAK+mC,SAASlkC,GACxB,GAAI6J,GAAOtD,EACP,OAAOH,EACXA,GAAOyD,EAAIhE,IACd,CACJ,CACG66B,gBACA,OAAOvjC,KAAKwK,OAAOm9B,eAAe3nC,KACrC,CACGokC,iBACA,OAAOpkC,KAAKwK,OAASxK,KAAKwK,OAAOm9B,eAAe3nC,MAAQA,KAAKqkC,OAAS,CACzE,CACGb,eACA,OAAOxjC,KAAKujC,UAAYvjC,KAAK0I,IAChC,CACGk/B,eACA,OAAO5nC,KAAKokC,WAAapkC,KAAK0I,KAAO,EAAI1I,KAAKqkC,MACjD,CACDwD,gBAAgBvrB,EAAKpP,EAAQkjB,GAGzB,GAAIpwB,KAAKgkB,YAAchkB,KAAKgkB,WAAWgB,SAAyB,GAAhB1I,EAAIvH,SAAgBuH,EAAMA,EAAI6E,YAAa,CACvF,GAAIiP,EAAO,EAAG,CACV,IAAI0X,EAAW9O,EACf,GAAI1c,GAAOtc,KAAKgkB,WACZ8jB,EAAYxrB,EAAI8H,WAAWlX,EAAS,OAEnC,CACD,MAAOoP,EAAI6E,YAAcnhB,KAAKgkB,WAC1B1H,EAAMA,EAAI6E,WACd2mB,EAAYxrB,EAAIkG,eACnB,CACD,MAAOslB,MAAgB9O,EAAO8O,EAAUhK,aAAe9E,EAAKxuB,QAAUxK,MAClE8nC,EAAYA,EAAUtlB,gBAC1B,OAAOslB,EAAY9nC,KAAK2nC,eAAe3O,GAAQA,EAAKtwB,KAAO1I,KAAKokC,UACnE,CACI,CACD,IAAI2D,EAAU/O,EACd,GAAI1c,GAAOtc,KAAKgkB,WACZ+jB,EAAWzrB,EAAI8H,WAAWlX,OAEzB,CACD,MAAOoP,EAAI6E,YAAcnhB,KAAKgkB,WAC1B1H,EAAMA,EAAI6E,WACd4mB,EAAWzrB,EAAI+H,WAClB,CACD,MAAO0jB,MAAe/O,EAAO+O,EAASjK,aAAe9E,EAAKxuB,QAAUxK,MAChE+nC,EAAWA,EAAS1jB,YACxB,OAAO0jB,EAAW/nC,KAAK2nC,eAAe3O,GAAQh5B,KAAK4nC,QACtD,CACJ,CAID,IAAI/J,EACJ,GAAIvhB,GAAOtc,KAAKsc,KAAOtc,KAAKgkB,WACxB6Z,EAAQ3wB,EAAS0vB,GAAS58B,KAAKgkB,iBAE9B,GAAIhkB,KAAKgkB,YAAchkB,KAAKgkB,YAAchkB,KAAKsc,KAAOtc,KAAKsc,IAAI0I,SAAShlB,KAAKgkB,YAC9E6Z,EAAuD,EAA/CvhB,EAAI2I,wBAAwBjlB,KAAKgkB,iBAExC,GAAIhkB,KAAKsc,IAAI7Q,WAAY,CAC1B,GAAc,GAAVyB,EACA,IAAK,IAAImJ,EAASiG,GAAMjG,EAASA,EAAO8K,WAAY,CAChD,GAAI9K,GAAUrW,KAAKsc,IAAK,CACpBuhB,GAAQ,EACR,KACH,CACD,GAAIxnB,EAAOmM,gBACP,KACP,CACL,GAAa,MAATqb,GAAiB3wB,GAAUoP,EAAI8H,WAAW5c,OAC1C,IAAK,IAAI6O,EAASiG,GAAMjG,EAASA,EAAO8K,WAAY,CAChD,GAAI9K,GAAUrW,KAAKsc,IAAK,CACpBuhB,GAAQ,EACR,KACH,CACD,GAAIxnB,EAAOgO,YACP,KACP,CACR,CACD,OAAiB,MAATwZ,EAAgBzN,EAAO,EAAIyN,GAAS79B,KAAK4nC,SAAW5nC,KAAKokC,UACpE,CAGDd,YAAYhnB,EAAK0rB,GAAY,GACzB,IAAK,IAAIx8B,GAAQ,EAAMkB,EAAM4P,EAAK5P,EAAKA,EAAMA,EAAIyU,WAAY,CACzD,IAA8B8mB,EAA1BjP,EAAOh5B,KAAKkoC,QAAQx7B,GACxB,GAAIssB,KAAUgP,GAAahP,EAAK/tB,MAAO,CAEnC,IAAIO,KAAUy8B,EAAUjP,EAAKiP,WACH,GAApBA,EAAQlzB,SAAgBkzB,EAAQjjB,SAAyB,GAAhB1I,EAAIvH,SAAgBuH,EAAMA,EAAI6E,YAAc8mB,GAAW3rB,GAGlG,OAAO0c,EAFPxtB,GAAQ,CAGf,CACJ,CACJ,CACD08B,QAAQ5rB,GACJ,IAAI0c,EAAO1c,EAAIwhB,WACf,IAAK,IAAIpxB,EAAMssB,EAAMtsB,EAAKA,EAAMA,EAAIlC,OAChC,GAAIkC,GAAO1M,KACP,OAAOg5B,CAClB,CACDmK,WAAW7mB,EAAKpP,EAAQkjB,GACpB,IAAK,IAAIhZ,EAAOkF,EAAKlF,EAAMA,EAAOA,EAAK+J,WAAY,CAC/C,IAAI6X,EAAOh5B,KAAKkoC,QAAQ9wB,GACxB,GAAI4hB,EACA,OAAOA,EAAK6O,gBAAgBvrB,EAAKpP,EAAQkjB,EAChD,CACD,OAAQ,CACX,CAGD+X,OAAOl/B,GACH,IAAK,IAAIpG,EAAI,EAAGqK,EAAS,EAAGrK,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,IAAK,CACvD,IAAIuG,EAAQpJ,KAAK+mC,SAASlkC,GAAI4H,EAAMyC,EAAS9D,EAAMV,KACnD,GAAIwE,GAAUjE,GAAOwB,GAAOyC,EAAQ,CAChC,OAAQ9D,EAAMi7B,QAAUj7B,EAAM29B,SAASv/B,OACnC4B,EAAQA,EAAM29B,SAAS,GAC3B,OAAO39B,CACV,CACD,GAAIH,EAAMwB,EACN,OAAOrB,EAAM++B,OAAOl/B,EAAMiE,EAAS9D,EAAMi7B,QAC7Cn3B,EAASzC,CACZ,CACJ,CACD+5B,WAAWv7B,EAAK+gB,GACZ,IAAKhqB,KAAKgkB,WACN,MAAO,CAAE/Y,KAAMjL,KAAKsc,IAAKpP,OAAQ,EAAG+M,KAAMhR,EAAM,GAEpD,IAaSqwB,EAbLz2B,EAAI,EAAGqK,EAAS,EACpB,IAAK,IAAIT,EAAS,EAAG5J,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,IAAK,CAChD,IAAIuG,EAAQpJ,KAAK+mC,SAASlkC,GAAI4H,EAAMgC,EAASrD,EAAMV,KACnD,GAAI+B,EAAMxB,GAAOG,aAAiBg/B,GAAsB,CACpDl7B,EAASjE,EAAMwD,EACf,KACH,CACDA,EAAShC,CACZ,CAED,GAAIyC,EACA,OAAOlN,KAAK+mC,SAASlkC,GAAG2hC,WAAWt3B,EAASlN,KAAK+mC,SAASlkC,GAAGwhC,OAAQra,GAEzE,KAAennB,KAAOy2B,EAAOt5B,KAAK+mC,SAASlkC,EAAI,IAAI6F,MAAQ4wB,aAAgB+O,IAAkB/O,EAAKtP,MAAQ,EAAGnnB,KAE7G,GAAImnB,GAAQ,EAAG,CACX,IAAIsP,EAAMzV,GAAQ,EAClB,MAAQhhB,IAAKghB,GAAQ,EAEjB,GADAyV,EAAOz2B,EAAI7C,KAAK+mC,SAASlkC,EAAI,GAAK,MAC7By2B,GAAQA,EAAKhd,IAAI6E,YAAcnhB,KAAKgkB,WACrC,MAER,OAAIsV,GAAQtP,GAAQnG,IAAUyV,EAAK+K,SAAW/K,EAAKgP,QACxChP,EAAKkL,WAAWlL,EAAK5wB,KAAMshB,GAC/B,CAAE/e,KAAMjL,KAAKgkB,WAAY9W,OAAQosB,EAAOsD,GAAStD,EAAKhd,KAAO,EAAI,EAC3E,CACI,CACD,IAAItK,EAAM6R,GAAQ,EAClB,MAAQhhB,IAAKghB,GAAQ,EAEjB,GADA7R,EAAOnP,EAAI7C,KAAK+mC,SAASv/B,OAASxH,KAAK+mC,SAASlkC,GAAK,MAChDmP,GAAQA,EAAKsK,IAAI6E,YAAcnhB,KAAKgkB,WACrC,MAER,OAAIhS,GAAQ6R,IAAU7R,EAAKqyB,SAAWryB,EAAKs2B,QAChCt2B,EAAKwyB,WAAW,EAAGxa,GACvB,CAAE/e,KAAMjL,KAAKgkB,WAAY9W,OAAQ8E,EAAO4qB,GAAS5qB,EAAKsK,KAAOtc,KAAKgkB,WAAWI,WAAW5c,OAClG,CACJ,CAGD+gC,WAAW9/B,EAAM6B,EAAI2K,EAAO,GACxB,GAA4B,GAAxBjV,KAAK+mC,SAASv/B,OACd,MAAO,CAAEyD,KAAMjL,KAAKgkB,WAAYvb,OAAM6B,KAAIk+B,WAAY,EAAGC,SAAUzoC,KAAKgkB,WAAWI,WAAW5c,QAClG,IAAIghC,GAAc,EAAGC,GAAY,EACjC,IAAK,IAAIv7B,EAAS+H,EAAMpS,EAAI,GAAIA,IAAK,CACjC,IAAIuG,EAAQpJ,KAAK+mC,SAASlkC,GAAI4H,EAAMyC,EAAS9D,EAAMV,KACnD,IAAmB,GAAf8/B,GAAoB//B,GAAQgC,EAAK,CACjC,IAAIi+B,EAAYx7B,EAAS9D,EAAMi7B,OAE/B,GAAI57B,GAAQigC,GAAap+B,GAAMG,EAAMrB,EAAMi7B,QAAUj7B,EAAM6B,MACvD7B,EAAM4a,YAAchkB,KAAKgkB,WAAWgB,SAAS5b,EAAM4a,YACnD,OAAO5a,EAAMm/B,WAAW9/B,EAAM6B,EAAIo+B,GACtCjgC,EAAOyE,EACP,IAAK,IAAIxH,EAAI7C,EAAG6C,EAAI,EAAGA,IAAK,CACxB,IAAI4zB,EAAOt5B,KAAK+mC,SAASrhC,EAAI,GAC7B,GAAI4zB,EAAK5wB,MAAQ4wB,EAAKhd,IAAI6E,YAAcnhB,KAAKgkB,aAAesV,EAAKqP,aAAa,GAAI,CAC9EH,EAAa5L,GAAStD,EAAKhd,KAAO,EAClC,KACH,CACD7T,GAAQ6wB,EAAK5wB,IAChB,EACkB,GAAf8/B,IACAA,EAAa,EACpB,CACD,GAAIA,GAAc,IAAM/9B,EAAMH,GAAMzH,GAAK7C,KAAK+mC,SAASv/B,OAAS,GAAI,CAChE8C,EAAKG,EACL,IAAK,IAAI/E,EAAI7C,EAAI,EAAG6C,EAAI1F,KAAK+mC,SAASv/B,OAAQ9B,IAAK,CAC/C,IAAIsM,EAAOhS,KAAK+mC,SAASrhC,GACzB,GAAIsM,EAAKtJ,MAAQsJ,EAAKsK,IAAI6E,YAAcnhB,KAAKgkB,aAAehS,EAAK22B,cAAc,GAAI,CAC/EF,EAAW7L,GAAS5qB,EAAKsK,KACzB,KACH,CACDhS,GAAM0H,EAAKtJ,IACd,EACgB,GAAb+/B,IACAA,EAAWzoC,KAAKgkB,WAAWI,WAAW5c,QAC1C,KACH,CACD0F,EAASzC,CACZ,CACD,MAAO,CAAEQ,KAAMjL,KAAKgkB,WAAYvb,OAAM6B,KAAIk+B,aAAYC,WACzD,CACDE,aAAa3e,GACT,GAAIhqB,KAAKqkC,SAAWrkC,KAAKgkB,aAAehkB,KAAK+mC,SAASv/B,OAClD,OAAO,EACX,IAAI4B,EAAQpJ,KAAK+mC,SAAS/c,EAAO,EAAI,EAAIhqB,KAAK+mC,SAASv/B,OAAS,GAChE,OAAqB,GAAd4B,EAAMV,MAAaU,EAAMu/B,aAAa3e,EAChD,CACDoc,YAAYn9B,GACR,IAAI,KAAEgC,EAAF,OAAQiC,GAAWlN,KAAKwkC,WAAWv7B,EAAK,GAC5C,GAAqB,GAAjBgC,EAAK8J,UAAiB7H,GAAUjC,EAAKmZ,WAAW5c,OAChD,MAAM,IAAI2E,WAAW,qBAAuBlD,GAChD,OAAOgC,EAAKmZ,WAAWlX,EAC1B,CAMD2pB,aAAa9B,EAAQpV,EAAMuhB,EAAM0H,GAAQ,GAErC,IAAIngC,EAAOyB,KAAKC,IAAI4qB,EAAQpV,GAAOrV,EAAKJ,KAAKS,IAAIoqB,EAAQpV,GACzD,IAAK,IAAI9c,EAAI,EAAGqK,EAAS,EAAGrK,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,IAAK,CACvD,IAAIuG,EAAQpJ,KAAK+mC,SAASlkC,GAAI4H,EAAMyC,EAAS9D,EAAMV,KACnD,GAAID,EAAOyE,GAAU5C,EAAKG,EACtB,OAAOrB,EAAMytB,aAAa9B,EAAS7nB,EAAS9D,EAAMi7B,OAAQ1kB,EAAOzS,EAAS9D,EAAMi7B,OAAQnD,EAAM0H,GAClG17B,EAASzC,CACZ,CACD,IAAIo+B,EAAY7oC,KAAKwkC,WAAWzP,EAAQA,GAAU,EAAI,GAClD+T,EAAUnpB,GAAQoV,EAAS8T,EAAY7oC,KAAKwkC,WAAW7kB,EAAMA,GAAQ,EAAI,GACzEqe,EAASkD,EAAK6H,eACdC,GAAW,EAKf,IAAKlN,IAASI,KAAWnH,GAAUpV,EAAM,CACrC,IAAI,KAAE1U,EAAF,OAAQiC,GAAW27B,EACvB,GAAqB,GAAjB59B,EAAK8J,UAGL,GAFAi0B,KAAc97B,GAAwC,MAA9BjC,EAAKqX,UAAUpV,EAAS,IAE5C87B,GAAY97B,GAAUjC,EAAKqX,UAAU9a,OACrC,IAAK,IAAiBiK,EAAb2F,EAAOnM,EAAamM,EAAMA,EAAOA,EAAK+J,WAAY,CACvD,GAAI1P,EAAQ2F,EAAKiN,YAAa,CACJ,MAAlB5S,EAAM2P,WACNynB,EAAYC,EAAU,CAAE79B,KAAMwG,EAAM0P,WAAYjU,OAAQ0vB,GAASnrB,GAAS,IAC9E,KACH,CACD,IAAIunB,EAAO5hB,EAAK0mB,WAChB,GAAI9E,GAAQA,EAAK/tB,MAAQ+tB,EAAK/tB,KAAKG,QAC/B,KACP,MAGJ,CACD,IAAIkuB,EAAOruB,EAAKmZ,WAAWlX,EAAS,GACpC87B,EAAW1P,IAA0B,MAAjBA,EAAKlY,UAA4C,SAAxBkY,EAAKqE,gBACrD,CACJ,CAGD,GAAI7B,IAASkC,EAAO8H,WAAa9H,EAAO8H,WAAagD,EAAQ79B,MAAqC,GAA7B+yB,EAAO8H,UAAU/wB,SAAe,CACjG,IAAItD,EAAQusB,EAAO8H,UAAU1hB,WAAW4Z,EAAOgI,aAC3Cv0B,GAAkC,SAAzBA,EAAMksB,kBACfiL,GAAQ,EACf,CACD,KAAMA,GAASI,GAAY9M,KACvBkB,GAAqByL,EAAU59B,KAAM49B,EAAU37B,OAAQ8wB,EAAOiL,WAAYjL,EAAOkL,eACjF9L,GAAqB0L,EAAQ79B,KAAM69B,EAAQ57B,OAAQ8wB,EAAO8H,UAAW9H,EAAOgI,aAC5E,OAIJ,IAAImD,GAAiB,EACrB,IAAKnL,EAAOoL,QAAUrU,GAAUpV,KAAUqpB,EAAU,CAChDhL,EAAOqL,SAASR,EAAU59B,KAAM49B,EAAU37B,QAC1C,IACI,GAAI6nB,GAAUpV,EAGV,IACIqe,EAAOoL,OAAON,EAAQ79B,KAAM69B,EAAQ57B,OAE3B,CAAb,MAAOU,IAAM,CAEjBu7B,GAAiB,CAUpB,CARD,MAAOzzB,GAKH,KAAMA,aAAe4zB,cACjB,MAAM5zB,CAEb,CACJ,CACD,IAAKyzB,EAAgB,CACjB,GAAIpU,EAASpV,EAAM,CACf,IAAI/N,EAAMi3B,EACVA,EAAYC,EACZA,EAAUl3B,CACb,CACD,IAAIqc,EAAQhG,SAASgV,cACrBhP,EAAMiP,OAAO4L,EAAQ79B,KAAM69B,EAAQ57B,QACnC+gB,EAAMkP,SAAS0L,EAAU59B,KAAM49B,EAAU37B,QACzC8wB,EAAOqI,kBACPrI,EAAO1tB,SAAS2d,EACnB,CACJ,CACDsb,eAAeC,GACX,OAAQxpC,KAAKgkB,YAA+B,aAAjBwlB,EAASr+B,IACvC,CACGs+B,kBACA,OAAOzpC,KAAKgkB,YAAchkB,KAAKgkB,YAAchkB,KAAKsc,MAAQtc,KAAKsc,IAAI0I,SAAShlB,KAAKgkB,WACpF,CAGD0lB,UAAUjhC,EAAM6B,GACZ,IAAK,IAAI4C,EAAS,EAAGrK,EAAI,EAAGA,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,IAAK,CACvD,IAAIuG,EAAQpJ,KAAK+mC,SAASlkC,GAAI4H,EAAMyC,EAAS9D,EAAMV,KACnD,GAAIwE,GAAUzC,EAAMhC,GAAQgC,GAAOH,GAAM4C,EAASzE,EAAOgC,GAAOH,EAAK4C,EAAQ,CACzE,IAAIy8B,EAAcz8B,EAAS9D,EAAMi7B,OAAQuF,EAAYn/B,EAAMrB,EAAMi7B,OACjE,GAAI57B,GAAQkhC,GAAer/B,GAAMs/B,EAO7B,OANA5pC,KAAKgnC,MAAQv+B,GAAQyE,GAAU5C,GAAMG,EAAMm8B,GAAgBD,QACvDl+B,GAAQkhC,GAAer/B,GAAMs/B,IAC5BxgC,EAAMqgC,aAAergC,EAAMkT,IAAI6E,YAAcnhB,KAAKgkB,WAGnD5a,EAAMsgC,UAAUjhC,EAAOkhC,EAAar/B,EAAKq/B,GAFzCvgC,EAAM49B,MAAQH,IAMlBz9B,EAAM49B,MAAQ59B,EAAMkT,KAAOlT,EAAM4a,YAAc5a,EAAMkT,IAAI6E,YAAcnhB,KAAKgkB,YAAe5a,EAAM29B,SAASv/B,OACpFq/B,GAAhBD,EAEb,CACD15B,EAASzC,CACZ,CACDzK,KAAKgnC,MAAQJ,EAChB,CACDiD,mBACI,IAAIjkB,EAAQ,EACZ,IAAK,IAAI3a,EAAOjL,KAAKwK,OAAQS,EAAMA,EAAOA,EAAKT,OAAQob,IAAS,CAC5D,IAAIohB,EAAiB,GAATphB,EAAaghB,GAAgBD,GACrC17B,EAAK+7B,MAAQA,IACb/7B,EAAK+7B,MAAQA,EACpB,CACJ,CACGsB,cAAY,OAAO,CAAQ,CAC3BtD,sBAAoB,OAAO,CAAQ,EAI3C,MAAMqD,WAAuBvB,GACzBvlC,YAAYiJ,EAAQ08B,EAAQvH,EAAM12B,GAC9B,IAAIrB,EAAM0U,EAAM4qB,EAAO/7B,KAAKgc,MAQ5B,GAPkB,mBAAP7K,IACPA,EAAMA,EAAIqjB,GAAM,IACP/3B,EAEDA,EAAK4C,OACE5C,EAAK4C,OAAOm9B,eAAe//B,QADtC,EADWqB,MAIdi+B,EAAO/7B,KAAK9H,KAAKymC,IAAK,CACvB,GAAoB,GAAhBxtB,EAAIvH,SAAe,CACnB,IAAI4L,EAAOsH,SAASR,cAAc,QAClC9G,EAAKqF,YAAY1J,GACjBA,EAAMqE,CACT,CACDrE,EAAIqhB,gBAAkB,QACtBrhB,EAAIytB,UAAUljB,IAAI,qBACrB,CACDnlB,MAAM8I,EAAQ,GAAI8R,EAAK,MACvBtc,KAAKknC,OAASA,EACdlnC,KAAKknC,OAASA,EACdt/B,EAAO5H,IACV,CACDinC,cAAcC,GACV,OAAOlnC,KAAKgnC,OAASN,IAAaQ,EAAO/7B,KAAKe,GAAGlM,KAAKknC,OAAO/7B,KAChE,CACDq8B,YAAc,MAAO,CAAExkB,QAAQ,EAAS,CACxCykB,UAAUlJ,GACN,IAAIyL,EAAOhqC,KAAKknC,OAAO7jC,KAAKokC,UAC5B,QAAOuC,GAAOA,EAAKzL,EACtB,CACDgL,eAAeC,GACX,MAAwB,aAAjBA,EAASr+B,MAAuBnL,KAAKknC,OAAO7jC,KAAK4mC,eAC3D,CACDvC,UACI1nC,KAAKknC,OAAO/7B,KAAKu8B,QAAQ1nC,KAAKsc,KAC9B5a,MAAMgmC,SACT,CACGY,cAAY,OAAO,CAAO,CAC1Bte,WAAS,OAAOhqB,KAAKknC,OAAO/7B,KAAK6e,IAAO,EAEhD,MAAMkgB,WAA4BpD,GAC9BvlC,YAAYiJ,EAAQ8R,EAAK6tB,EAAS3gC,GAC9B9H,MAAM8I,EAAQ,GAAI8R,EAAK,MACvBtc,KAAKmqC,QAAUA,EACfnqC,KAAKwJ,KAAOA,CACf,CACGd,WAAS,OAAO1I,KAAKwJ,KAAKhC,MAAS,CACvCqgC,gBAAgBvrB,EAAKpP,GACjB,OAAIoP,GAAOtc,KAAKmqC,QACLnqC,KAAKokC,YAAcl3B,EAASlN,KAAK0I,KAAO,GAC5C1I,KAAKokC,WAAal3B,CAC5B,CACDs3B,WAAWv7B,GACP,MAAO,CAAEgC,KAAMjL,KAAKmqC,QAASj9B,OAAQjE,EACxC,CACDsgC,eAAea,GACX,MAAoB,kBAAbA,EAAIj/B,MAA4Bi/B,EAAI/5B,OAAOiS,WAAa8nB,EAAIC,QACtE,EAOL,MAAMC,WAAqBxD,GACvBvlC,YAAYiJ,EAAQ8I,EAAMgJ,EAAK0H,GAC3BtiB,MAAM8I,EAAQ,GAAI8R,EAAK0H,GACvBhkB,KAAKsT,KAAOA,CACf,CACY,cAAC9I,EAAQ8I,EAAMgE,EAAQqoB,GAChC,IAAI4K,EAAS5K,EAAK6K,UAAUl3B,EAAKnI,KAAKxJ,MAClC0B,EAAOknC,GAAUA,EAAOj3B,EAAMqsB,EAAMroB,GAGxC,OAFKjU,GAASA,EAAKiZ,MACfjZ,EAAOkjB,GAAcU,WAAWgB,SAAU3U,EAAKnI,KAAK9H,KAAK8jB,MAAM7T,EAAMgE,KAClE,IAAIgzB,GAAa9/B,EAAQ8I,EAAMjQ,EAAKiZ,IAAKjZ,EAAK2gB,YAAc3gB,EAAKiZ,IAC3E,CACDkrB,YACI,OAAKxnC,KAAKgnC,MAAQH,IAAe7mC,KAAKsT,KAAKnI,KAAK9H,KAAKonC,cAC1C,KACJ,CAAEn3B,KAAMtT,KAAKsT,KAAKnI,KAAKxJ,KAAMpB,MAAOP,KAAKsT,KAAK/S,MAAO0jB,eAAgBjkB,KAAKgkB,iBAActc,EAClG,CACDy/B,YAAY7zB,GAAQ,OAAOtT,KAAKgnC,OAASH,IAAc7mC,KAAKsT,KAAKpH,GAAGoH,EAAQ,CAC5Eo2B,UAAUjhC,EAAM6B,GAGZ,GAFA5I,MAAMgoC,UAAUjhC,EAAM6B,GAElBtK,KAAKgnC,OAASN,GAAW,CACzB,IAAIl8B,EAASxK,KAAKwK,OAClB,OAAQA,EAAOS,KACXT,EAASA,EAAOA,OAChBA,EAAOw8B,MAAQhnC,KAAKgnC,QACpBx8B,EAAOw8B,MAAQhnC,KAAKgnC,OACxBhnC,KAAKgnC,MAAQN,EAChB,CACJ,CACD5+B,MAAMW,EAAM6B,EAAIq1B,GACZ,IAAI1zB,EAAOq+B,GAAav8B,OAAO/N,KAAKwK,OAAQxK,KAAKsT,MAAM,EAAMqsB,GACzD3yB,EAAQhN,KAAK+mC,SAAUr+B,EAAO1I,KAAK0I,KACnC4B,EAAK5B,IACLsE,EAAQ09B,GAAa19B,EAAO1C,EAAI5B,EAAMi3B,IACtCl3B,EAAO,IACPuE,EAAQ09B,GAAa19B,EAAO,EAAGvE,EAAMk3B,IACzC,IAAK,IAAI98B,EAAI,EAAGA,EAAImK,EAAMxF,OAAQ3E,IAC9BmK,EAAMnK,GAAG2H,OAASyB,EAEtB,OADAA,EAAK86B,SAAW/5B,EACTf,CACV,EAKL,MAAM0+B,WAAqB7D,GACvBvlC,YAAYiJ,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK0H,EAAYikB,EAAStI,EAAM12B,GAC5EvH,MAAM8I,EAAQ,GAAI8R,EAAK0H,GACvBhkB,KAAKiL,KAAOA,EACZjL,KAAKqnC,UAAYA,EACjBrnC,KAAKsnC,UAAYA,EACjBtnC,KAAKioC,QAAUA,EACXjkB,GACAhkB,KAAK4qC,eAAejL,EAAM12B,EACjC,CAUY,cAACuB,EAAQS,EAAMo8B,EAAWC,EAAW3H,EAAM12B,GACpD,IAA6C4hC,EAAzCN,EAAS5K,EAAK6K,UAAUv/B,EAAKE,KAAKxJ,MAClC0B,EAAOknC,GAAUA,EAAOt/B,EAAM00B,GAAM,IAG/BkL,EAEDA,EAAQrgC,OACDqgC,EAAQrgC,OAAOm9B,eAAekD,QADzC,EADW5hC,GAGZo+B,EAAWC,GACVhrB,EAAMjZ,GAAQA,EAAKiZ,IAAK0H,EAAa3gB,GAAQA,EAAK2gB,WACtD,GAAI/Y,EAAK1B,OACL,GAAK+S,GAEA,GAAoB,GAAhBA,EAAIvH,SACT,MAAM,IAAI5I,WAAW,iDAFrBmQ,EAAM2L,SAASvE,eAAezY,EAAKzB,WAIjC8S,KACHA,MAAK0H,cAAeuC,GAAcU,WAAWgB,SAAUhd,EAAKE,KAAK9H,KAAK8jB,MAAMlc,KAE9E+Y,GAAe/Y,EAAK1B,QAA0B,MAAhB+S,EAAI8E,WAC9B9E,EAAIwuB,aAAa,qBAClBxuB,EAAIqhB,gBAAkB,SACtB1yB,EAAKE,KAAK9H,KAAK8gC,YACf7nB,EAAI6nB,WAAY,IAExB,IAAI8D,EAAU3rB,EAEd,OADAA,EAAMyuB,GAAezuB,EAAK+qB,EAAWp8B,GACjC5H,EACOwnC,EAAU,IAAIG,GAAmBxgC,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK0H,GAAc,KAAMikB,EAAS5kC,EAAMs8B,EAAM12B,EAAM,GAC3HgC,EAAK1B,OACH,IAAI0hC,GAAazgC,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK2rB,EAAStI,GAEnE,IAAIgL,GAAangC,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK0H,GAAc,KAAMikB,EAAStI,EAAM12B,EAAM,EACjH,CACDu+B,YAEI,GAAIxnC,KAAKiL,KAAKE,KAAK9H,KAAKonC,cACpB,OAAO,KAKX,IAAIxuB,EAAO,CAAEhR,KAAMjL,KAAKiL,KAAKE,KAAKxJ,KAAMpB,MAAOP,KAAKiL,KAAK1K,OAGzD,GAFiC,OAA7BP,KAAKiL,KAAKE,KAAK+O,aACf+B,EAAKmE,mBAAqB,QACzBpgB,KAAKgkB,WAGL,GAAKhkB,KAAKypC,YAGV,CAID,IAAK,IAAI5mC,EAAI7C,KAAK+mC,SAASv/B,OAAS,EAAG3E,GAAK,EAAGA,IAAK,CAChD,IAAIuG,EAAQpJ,KAAK+mC,SAASlkC,GAC1B,GAAI7C,KAAKsc,IAAI0I,SAAS5b,EAAMkT,IAAI6E,YAAa,CACzClF,EAAKgI,eAAiB7a,EAAMkT,IAAI6E,WAChC,KACH,CACJ,CACIlF,EAAKgI,iBACNhI,EAAK8H,WAAa,IAAM3Z,EAAAA,MAC/B,MAfG6R,EAAKgI,eAAiBjkB,KAAKgkB,gBAH3B/H,EAAK8H,WAAa,IAAM/jB,KAAKiL,KAAK5D,QAmBtC,OAAO4U,CACV,CACDmrB,YAAYn8B,EAAMo8B,EAAWC,GACzB,OAAOtnC,KAAKgnC,OAASN,IAAaz7B,EAAKiB,GAAGlM,KAAKiL,OAC3CigC,GAAc7D,EAAWrnC,KAAKqnC,YAAcC,EAAUp7B,GAAGlM,KAAKsnC,UACrE,CACG5+B,WAAS,OAAO1I,KAAKiL,KAAKvB,QAAW,CACrC26B,aAAW,OAAOrkC,KAAKiL,KAAKC,OAAS,EAAI,CAAI,CAKjD0/B,eAAejL,EAAM12B,GACjB,IAAIqO,EAAStX,KAAKiL,KAAKmH,cAAeirB,EAAMp0B,EACxCkiC,EAAcxL,EAAKyL,UAAYprC,KAAKqrC,qBAAqB1L,EAAM12B,GAAO,KACtEqiC,EAAmBH,GAAeA,EAAYliC,KAAO,EAAIkiC,EAAc,KACvEI,EAAqBJ,GAAeA,EAAYliC,IAAM,EACtDuiC,EAAU,IAAIC,GAAgBzrC,KAAMsrC,GAAoBA,EAAiBrgC,KAAM00B,GACnF+L,GAAS1rC,KAAKiL,KAAMjL,KAAKsnC,WAAW,CAACJ,EAAQrkC,EAAG8oC,KACxCzE,EAAO7jC,KAAKyK,MACZ09B,EAAQI,YAAY1E,EAAO7jC,KAAKyK,MAAOwJ,EAAQqoB,GAC1CuH,EAAO/7B,KAAK6e,MAAQ,IAAM2hB,GAC/BH,EAAQI,YAAY/oC,GAAK7C,KAAKiL,KAAK/B,WAAakE,EAAKY,KAAOhO,KAAKiL,KAAK7B,MAAMvG,GAAGiL,MAAOwJ,EAAQqoB,GAGlG6L,EAAQK,YAAY3E,EAAQvH,EAAMtC,EAAlC,IACD,CAACj0B,EAAOi+B,EAAWC,EAAWzkC,KAI7B,IAAIipC,EAFJN,EAAQI,YAAYxiC,EAAM0E,MAAOwJ,EAAQqoB,GAGrC6L,EAAQO,cAAc3iC,EAAOi+B,EAAWC,EAAWzkC,IAC9C0oC,GAAsB5L,EAAK1mB,MAAM2d,UAAUnuB,KAAO40B,GACvDsC,EAAK1mB,MAAM2d,UAAUtsB,GAAK+yB,EAAMj0B,EAAMM,WACrCoiC,EAAYN,EAAQQ,mBAAmBb,EAAYlgC,QAAU,GAC9DugC,EAAQS,aAAa7iC,EAAOi+B,EAAWC,EAAWwE,EAAWnM,IACxD6L,EAAQU,eAAe9iC,EAAOi+B,EAAWC,EAAW3H,EAAM98B,IAG/D2oC,EAAQp7B,QAAQhH,EAAOi+B,EAAWC,EAAW3H,EAAMtC,GAEvDA,GAAOj0B,EAAMM,QAAb,IAGJ8hC,EAAQI,YAAY,GAAIt0B,EAAQqoB,GAC5B3/B,KAAKiL,KAAK4I,aACV23B,EAAQW,oBACZX,EAAQY,eAEJZ,EAAQa,SAAWrsC,KAAKgnC,OAASJ,MAE7B0E,GACAtrC,KAAKssC,wBAAwB3M,EAAM2L,GACvCiB,GAAYvsC,KAAKgkB,WAAYhkB,KAAK+mC,SAAUpH,GACxCvD,IACAoQ,GAASxsC,KAAKsc,KAEzB,CACD+uB,qBAAqB1L,EAAM12B,GAGvB,IAAI,KAAER,EAAF,GAAQ6B,GAAOq1B,EAAK1mB,MAAM2d,UAC9B,KAAM+I,EAAK1mB,MAAM2d,qBAAqBvB,KAAkB5sB,EAAOQ,GAAOqB,EAAKrB,EAAMjJ,KAAKiL,KAAK5D,QAAQqB,KAC/F,OAAO,KACX,IAAIguB,EAAMiJ,EAAK+F,eACXxgB,EAAWunB,GAAe/V,EAAIoP,UAAWpP,EAAIsP,aACjD,IAAK9gB,IAAallB,KAAKsc,IAAI0I,SAASE,EAAS/D,YACzC,OAAO,KACX,GAAInhB,KAAKiL,KAAKmH,cAAe,CAIzB,IAAI5I,EAAO0b,EAAS5C,UAChBoqB,EAAUC,GAAmB3sC,KAAKiL,KAAK5D,QAASmC,EAAMf,EAAOQ,EAAKqB,EAAKrB,GAC3E,OAAOyjC,EAAU,EAAI,KAAO,CAAEzhC,KAAMia,EAAUjc,IAAKyjC,EAASljC,OAC/D,CAEG,MAAO,CAAEyB,KAAMia,EAAUjc,KAAM,EAAGO,KAAM,GAE/C,CACD8iC,wBAAwB3M,GAAM,KAAE10B,EAAF,IAAQhC,EAAR,KAAaO,IAEvC,GAAIxJ,KAAKkoC,QAAQj9B,GACb,OAEJ,IAAI0P,EAAU1P,EACd,MAAQ0P,EAAUA,EAAQwG,WAAY,CAClC,GAAIxG,EAAQwG,YAAcnhB,KAAKgkB,WAC3B,MACJ,MAAOrJ,EAAQ6H,gBACX7H,EAAQwG,WAAWyrB,YAAYjyB,EAAQ6H,iBAC3C,MAAO7H,EAAQ0J,YACX1J,EAAQwG,WAAWyrB,YAAYjyB,EAAQ0J,aACvC1J,EAAQmjB,aACRnjB,EAAQmjB,gBAAap2B,EAC5B,CACD,IAAIsxB,EAAO,IAAIkR,GAAoBlqC,KAAM2a,EAAS1P,EAAMzB,GACxDm2B,EAAKkN,MAAMC,iBAAiB/kC,KAAKixB,GAEjCh5B,KAAK+mC,SAAW2D,GAAa1qC,KAAK+mC,SAAU99B,EAAKA,EAAMO,EAAKhC,OAAQm4B,EAAM3G,EAC7E,CAGDnzB,OAAOoF,EAAMo8B,EAAWC,EAAW3H,GAC/B,QAAI3/B,KAAKgnC,OAASH,KACb57B,EAAK3B,WAAWtJ,KAAKiL,SAE1BjL,KAAK+sC,YAAY9hC,EAAMo8B,EAAWC,EAAW3H,IACtC,EACV,CACDoN,YAAY9hC,EAAMo8B,EAAWC,EAAW3H,GACpC3/B,KAAKgtC,gBAAgB3F,GACrBrnC,KAAKiL,KAAOA,EACZjL,KAAKsnC,UAAYA,EACbtnC,KAAKgkB,YACLhkB,KAAK4qC,eAAejL,EAAM3/B,KAAKokC,YACnCpkC,KAAKgnC,MAAQN,EAChB,CACDsG,gBAAgB3F,GACZ,GAAI6D,GAAc7D,EAAWrnC,KAAKqnC,WAC9B,OACJ,IAAI4F,EAAqC,GAAzBjtC,KAAKioC,QAAQlzB,SACzBm4B,EAASltC,KAAKsc,IAClBtc,KAAKsc,IAAM6wB,GAAentC,KAAKsc,IAAKtc,KAAKioC,QAASmF,GAAiBptC,KAAKqnC,UAAWrnC,KAAKiL,KAAMgiC,GAAYG,GAAiB/F,EAAWrnC,KAAKiL,KAAMgiC,IAC7IjtC,KAAKsc,KAAO4wB,IACZA,EAAOpP,gBAAap2B,EACpB1H,KAAKsc,IAAIwhB,WAAa99B,MAE1BA,KAAKqnC,UAAYA,CACpB,CAEDgG,aACiC,GAAzBrtC,KAAKioC,QAAQlzB,UACb/U,KAAKioC,QAAQ8B,UAAUljB,IAAI,6BAC3B7mB,KAAKgkB,YAAehkB,KAAKiL,KAAKE,KAAK9H,KAAK8gC,YACxCnkC,KAAKsc,IAAI6nB,WAAY,EAC5B,CAEDmJ,eACiC,GAAzBttC,KAAKioC,QAAQlzB,UACb/U,KAAKioC,QAAQ8B,UAAUliC,OAAO,6BAC9B7H,KAAKgkB,YAAehkB,KAAKiL,KAAKE,KAAK9H,KAAK8gC,WACxCnkC,KAAKsc,IAAIixB,gBAAgB,YAChC,CACGjF,cAAY,OAAOtoC,KAAKiL,KAAK6I,MAAS,EAI9C,SAAS05B,GAAYl8B,EAAK+1B,EAAWC,EAAWhrB,EAAKqjB,GAEjD,OADAoL,GAAezuB,EAAK+qB,EAAW/1B,GACxB,IAAIq5B,QAAajjC,EAAW4J,EAAK+1B,EAAWC,EAAWhrB,EAAKA,EAAKA,EAAKqjB,EAAM,EACtF,CACD,MAAMsL,WAAqBN,GACvBppC,YAAYiJ,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK2rB,EAAStI,GAC1Dj+B,MAAM8I,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK,KAAM2rB,EAAStI,EAAM,EACvE,CACD6H,YACI,IAAItkB,EAAOljB,KAAKioC,QAAQ9mB,WACxB,MAAO+B,GAAQA,GAAQljB,KAAKsc,MAAQ4G,EAAKuqB,SACrCvqB,EAAOA,EAAK/B,WAChB,MAAO,CAAE+B,KAAOA,IAAQ,EAC3B,CACDrd,OAAOoF,EAAMo8B,EAAWC,EAAW3H,GAC/B,QAAI3/B,KAAKgnC,OAASH,IAAe7mC,KAAKgnC,OAASN,KAAc1mC,KAAK0tC,aAC7DziC,EAAK3B,WAAWtJ,KAAKiL,SAE1BjL,KAAKgtC,gBAAgB3F,GAChBrnC,KAAKgnC,OAASN,IAAaz7B,EAAKzB,MAAQxJ,KAAKiL,KAAKzB,MAASyB,EAAKzB,MAAQxJ,KAAKioC,QAAQ3lB,YACtFtiB,KAAKioC,QAAQ3lB,UAAYrX,EAAKzB,KAC1Bm2B,EAAKgO,aAAe3tC,KAAKioC,UACzBtI,EAAKgO,YAAc,OAE3B3tC,KAAKiL,KAAOA,EACZjL,KAAKgnC,MAAQN,IACN,EACV,CACDgH,WACI,IAAIvH,EAAYnmC,KAAKwK,OAAOwZ,WAC5B,IAAK,IAAI9hB,EAAIlC,KAAKioC,QAAS/lC,EAAGA,EAAIA,EAAEif,WAChC,GAAIjf,GAAKikC,EACL,OAAO,EACf,OAAO,CACV,CACD3B,WAAWv7B,GACP,MAAO,CAAEgC,KAAMjL,KAAKioC,QAAS/6B,OAAQjE,EACxC,CACD4+B,gBAAgBvrB,EAAKpP,EAAQkjB,GACzB,OAAI9T,GAAOtc,KAAKioC,QACLjoC,KAAKokC,WAAal6B,KAAKC,IAAI+C,EAAQlN,KAAKiL,KAAKzB,KAAKhC,QACtD9F,MAAMmmC,gBAAgBvrB,EAAKpP,EAAQkjB,EAC7C,CACDmZ,eAAeC,GACX,MAAwB,iBAAjBA,EAASr+B,MAA4C,aAAjBq+B,EAASr+B,IACvD,CACDrD,MAAMW,EAAM6B,EAAIq1B,GACZ,IAAI10B,EAAOjL,KAAKiL,KAAKU,IAAIlD,EAAM6B,GAAKgS,EAAM2L,SAASvE,eAAezY,EAAKzB,MACvE,OAAO,IAAIyhC,GAAajrC,KAAKwK,OAAQS,EAAMjL,KAAKqnC,UAAWrnC,KAAKsnC,UAAWhrB,EAAKA,EAAKqjB,EACxF,CACD+J,UAAUjhC,EAAM6B,GACZ5I,MAAMgoC,UAAUjhC,EAAM6B,GAClBtK,KAAKsc,KAAOtc,KAAKioC,SAAoB,GAARx/B,GAAa6B,GAAMtK,KAAKioC,QAAQ3lB,UAAU9a,SACvExH,KAAKgnC,MAAQH,GACpB,CACGyB,cAAY,OAAO,CAAQ,EAInC,MAAMF,WAA6BtB,GAC/BU,YAAc,MAAO,CAAExkB,QAAQ,EAAS,CACxCukB,YAAYnmB,GAAY,OAAOphB,KAAKgnC,OAASN,IAAa1mC,KAAKsc,IAAI8E,UAAYA,CAAW,CACtFknB,cAAY,OAAO,CAAO,CAC1BtD,sBAAoB,MAA4B,OAArBhlC,KAAKsc,IAAI8E,QAAoB,EAKhE,MAAM4pB,WAA2BL,GAC7BppC,YAAYiJ,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK0H,EAAYikB,EAAS5kC,EAAMs8B,EAAM12B,GAClFvH,MAAM8I,EAAQS,EAAMo8B,EAAWC,EAAWhrB,EAAK0H,EAAYikB,EAAStI,EAAM12B,GAC1EjJ,KAAKqD,KAAOA,CACf,CAIDwC,OAAOoF,EAAMo8B,EAAWC,EAAW3H,GAC/B,GAAI3/B,KAAKgnC,OAASH,GACd,OAAO,EACX,GAAI7mC,KAAKqD,KAAKwC,OAAQ,CAClB,IAAIgD,EAAS7I,KAAKqD,KAAKwC,OAAOoF,EAAMo8B,EAAWC,GAG/C,OAFIz+B,GACA7I,KAAK+sC,YAAY9hC,EAAMo8B,EAAWC,EAAW3H,GAC1C92B,CACV,CACI,SAAK7I,KAAKgkB,aAAe/Y,EAAKC,SAIxBxJ,MAAMmE,OAAOoF,EAAMo8B,EAAWC,EAAW3H,EAEvD,CACD0N,aACIrtC,KAAKqD,KAAKgqC,WAAartC,KAAKqD,KAAKgqC,aAAe3rC,MAAM2rC,YACzD,CACDC,eACIttC,KAAKqD,KAAKiqC,aAAettC,KAAKqD,KAAKiqC,eAAiB5rC,MAAM4rC,cAC7D,CACDzW,aAAa9B,EAAQpV,EAAMuhB,EAAM0H,GAC7B5oC,KAAKqD,KAAKwzB,aAAe72B,KAAKqD,KAAKwzB,aAAa9B,EAAQpV,EAAMuhB,GACxDx/B,MAAMm1B,aAAa9B,EAAQpV,EAAMuhB,EAAM0H,EAChD,CACDlB,UACQ1nC,KAAKqD,KAAKqkC,SACV1nC,KAAKqD,KAAKqkC,UACdhmC,MAAMgmC,SACT,CACDD,UAAUlJ,GACN,QAAOv+B,KAAKqD,KAAKokC,WAAYznC,KAAKqD,KAAKokC,UAAUlJ,EACpD,CACDgL,eAAeC,GACX,OAAOxpC,KAAKqD,KAAKkmC,eAAiBvpC,KAAKqD,KAAKkmC,eAAeC,GAAY9nC,MAAM6nC,eAAeC,EAC/F,EAKL,SAAS+C,GAAYpG,EAAWyH,EAAOjO,GACnC,IAAIrjB,EAAM6pB,EAAU16B,WAAYoiC,GAAU,EAC1C,IAAK,IAAIhrC,EAAI,EAAGA,EAAI+qC,EAAMpmC,OAAQ3E,IAAK,CACnC,IAAIm2B,EAAO4U,EAAM/qC,GAAIirC,EAAW9U,EAAK1c,IACrC,GAAIwxB,EAAS3sB,YAAcglB,EAAW,CAClC,MAAO2H,GAAYxxB,EACfA,EAAMyxB,GAAGzxB,GACTuxB,GAAU,EAEdvxB,EAAMA,EAAI+H,WACb,MAEGwpB,GAAU,EACV1H,EAAU6H,aAAaF,EAAUxxB,GAErC,GAAI0c,aAAgBsR,GAAc,CAC9B,IAAIrhC,EAAMqT,EAAMA,EAAIkG,gBAAkB2jB,EAAU56B,UAChDghC,GAAYvT,EAAKhV,WAAYgV,EAAK+N,SAAUpH,GAC5CrjB,EAAMrT,EAAMA,EAAIob,YAAc8hB,EAAU16B,UAC3C,CACJ,CACD,MAAO6Q,EACHA,EAAMyxB,GAAGzxB,GACTuxB,GAAU,EAEVA,GAAWlO,EAAKgO,aAAexH,IAC/BxG,EAAKgO,YAAc,KAC1B,CACD,MAAMM,GAAiB,SAAU7sB,GACzBA,IACAphB,KAAKohB,SAAWA,EACvB,EACD6sB,GAAe3mC,UAAYyL,OAAOhF,OAAO,MACzC,MAAMmgC,GAAS,CAAC,IAAID,IACpB,SAASb,GAAiB/F,EAAWp8B,EAAMgiC,GACvC,GAAwB,GAApB5F,EAAU7/B,OACV,OAAO0mC,GACX,IAAIrsB,EAAMorB,EAAYiB,GAAO,GAAK,IAAID,GAAgBplC,EAAS,CAACgZ,GAChE,IAAK,IAAIhf,EAAI,EAAGA,EAAIwkC,EAAU7/B,OAAQ3E,IAAK,CACvC,IAAItC,EAAQ8mC,EAAUxkC,GAAGsI,KAAK5K,MAC9B,GAAKA,EAAL,CAEIA,EAAM6gB,UACNvY,EAAOd,KAAK8Z,EAAM,IAAIosB,GAAe1tC,EAAM6gB,WAC/C,IAAK,IAAIzf,KAAQpB,EAAO,CACpB,IAAI8Q,EAAM9Q,EAAMoB,GACL,MAAP0P,IAEA47B,GAA8B,GAAjBpkC,EAAOrB,QACpBqB,EAAOd,KAAK8Z,EAAM,IAAIosB,GAAehjC,EAAK8G,SAAW,OAAS,QACtD,SAARpQ,EACAkgB,EAAIssB,OAAStsB,EAAIssB,MAAQtsB,EAAIssB,MAAQ,IAAM,IAAM98B,EACpC,SAAR1P,EACLkgB,EAAI1F,OAAS0F,EAAI1F,MAAQ0F,EAAI1F,MAAQ,IAAM,IAAM9K,EACpC,YAAR1P,IACLkgB,EAAIlgB,GAAQ0P,GACnB,CAfW,CAgBf,CACD,OAAOxI,CACV,CACD,SAASskC,GAAeiB,EAAUnG,EAASoG,EAAcC,GAErD,GAAID,GAAgBH,IAAUI,GAAeJ,GACzC,OAAOjG,EACX,IAAIsG,EAAStG,EACb,IAAK,IAAIplC,EAAI,EAAGA,EAAIyrC,EAAY9mC,OAAQ3E,IAAK,CACzC,IAAI2rC,EAAOF,EAAYzrC,GAAIy2B,EAAO+U,EAAaxrC,GAC/C,GAAIA,EAAG,CACH,IAAI2H,EACA8uB,GAAQA,EAAKlY,UAAYotB,EAAKptB,UAAYmtB,GAAUH,IACnD5jC,EAAS+jC,EAAOptB,aAAe3W,EAAO4W,SAASC,eAAiBmtB,EAAKptB,WAItE5W,EAASyd,SAASR,cAAc+mB,EAAKptB,UACrC5W,EAAOijC,UAAW,EAClBjjC,EAAOwb,YAAYuoB,GACnBjV,EAAO4U,GAAO,IANdK,EAAS/jC,CAShB,CACDikC,GAAgBF,EAAQjV,GAAQ4U,GAAO,GAAIM,EAC9C,CACD,OAAOD,CACV,CACD,SAASE,GAAgBnyB,EAAKgd,EAAM5sB,GAChC,IAAK,IAAI/K,KAAQ23B,EACD,SAAR33B,GAA2B,SAARA,GAA2B,YAARA,GAAwBA,KAAQ+K,GACtE4P,EAAIixB,gBAAgB5rC,GAC5B,IAAK,IAAIA,KAAQ+K,EACD,SAAR/K,GAA2B,SAARA,GAA2B,YAARA,GAAsB+K,EAAI/K,IAAS23B,EAAK33B,IAC9E2a,EAAIqL,aAAahmB,EAAM+K,EAAI/K,IACnC,GAAI23B,EAAK6U,OAASzhC,EAAIyhC,MAAO,CACzB,IAAIO,EAAWpV,EAAK6U,MAAQ7U,EAAK6U,MAAM32B,MAAM,KAAKm3B,OAAOC,SAAW,GAChEC,EAAUniC,EAAIyhC,MAAQzhC,EAAIyhC,MAAM32B,MAAM,KAAKm3B,OAAOC,SAAW,GACjE,IAAK,IAAI/rC,EAAI,EAAGA,EAAI6rC,EAASlnC,OAAQ3E,KACI,GAAjCgsC,EAAQn4B,QAAQg4B,EAAS7rC,KACzByZ,EAAIytB,UAAUliC,OAAO6mC,EAAS7rC,IACtC,IAAK,IAAIA,EAAI,EAAGA,EAAIgsC,EAAQrnC,OAAQ3E,KACK,GAAjC6rC,EAASh4B,QAAQm4B,EAAQhsC,KACzByZ,EAAIytB,UAAUljB,IAAIgoB,EAAQhsC,IACN,GAAxByZ,EAAIytB,UAAUviC,QACd8U,EAAIixB,gBAAgB,QAC3B,CACD,GAAIjU,EAAKnd,OAASzP,EAAIyP,MAAO,CACzB,GAAImd,EAAKnd,MAAO,CACZ,IAA4FlZ,EAAxF6F,EAAO,gFACX,MAAO7F,EAAI6F,EAAK8X,KAAK0Y,EAAKnd,OACtBG,EAAIH,MAAM2yB,eAAe7rC,EAAE,GAClC,CACGyJ,EAAIyP,QACJG,EAAIH,MAAM4yB,SAAWriC,EAAIyP,MAChC,CACJ,CACD,SAAS4uB,GAAezuB,EAAKkyB,EAAMvjC,GAC/B,OAAOkiC,GAAe7wB,EAAKA,EAAK4xB,GAAQd,GAAiBoB,EAAMvjC,EAAsB,GAAhBqR,EAAIvH,UAC5E,CACD,SAASm2B,GAActoC,EAAGoG,GACtB,GAAIpG,EAAE4E,QAAUwB,EAAExB,OACd,OAAO,EACX,IAAK,IAAI3E,EAAI,EAAGA,EAAID,EAAE4E,OAAQ3E,IAC1B,IAAKD,EAAEC,GAAGsI,KAAKe,GAAGlD,EAAEnG,GAAGsI,MACnB,OAAO,EACf,OAAO,CACV,CAED,SAAS4iC,GAAGzxB,GACR,IAAItK,EAAOsK,EAAI+H,YAEf,OADA/H,EAAI6E,WAAWyrB,YAAYtwB,GACpBtK,CACV,CAGD,MAAMy5B,GACFlqC,YAAYsgB,EAAKmtB,EAAMrP,GACnB3/B,KAAKgvC,KAAOA,EACZhvC,KAAK2/B,KAAOA,EAGZ3/B,KAAK+L,MAAQ,EAGb/L,KAAKqhC,MAAQ,GAEbrhC,KAAKqsC,SAAU,EACfrsC,KAAK6hB,IAAMA,EACX7hB,KAAKivC,SAAWA,GAASptB,EAAI5W,KAAK5D,QAASwa,EAC9C,CAGDqtB,eAAexkC,EAAOD,GAClB,GAAIC,GAASD,EAAb,CAEA,IAAK,IAAI5H,EAAI6H,EAAO7H,EAAI4H,EAAK5H,IACzB7C,KAAK6hB,IAAIklB,SAASlkC,GAAG6kC,UACzB1nC,KAAK6hB,IAAIklB,SAAS/+B,OAAO0C,EAAOD,EAAMC,GACtC1K,KAAKqsC,SAAU,CAJL,CAKb,CAEDD,cACIpsC,KAAKkvC,eAAelvC,KAAK+L,MAAO/L,KAAK6hB,IAAIklB,SAASv/B,OACrD,CAGDokC,YAAY99B,EAAOwJ,EAAQqoB,GACvB,IAAIjZ,EAAO,EAAGpX,EAAQtP,KAAKqhC,MAAM75B,QAAU,EACvC2nC,EAAUjlC,KAAKC,IAAImF,EAAOxB,EAAMtG,QACpC,MAAOkf,EAAOyoB,IACTzoB,GAAQpX,EAAQ,EAAItP,KAAK6hB,IAAM7hB,KAAKqhC,MAAO3a,EAAO,GAAM,IACpDygB,YAAYr5B,EAAM4Y,MAA6C,IAAnC5Y,EAAM4Y,GAAMvb,KAAK9H,KAAKujB,SACvDF,IACJ,MAAOA,EAAOpX,EACVtP,KAAKosC,cACLpsC,KAAK6hB,IAAImlB,MAAQN,GACjB1mC,KAAK+L,MAAQ/L,KAAKqhC,MAAM5pB,MACxBzX,KAAK6hB,IAAM7hB,KAAKqhC,MAAM5pB,MACtBnI,IAEJ,MAAOA,EAAQxB,EAAMtG,OAAQ,CACzBxH,KAAKqhC,MAAMt5B,KAAK/H,KAAK6hB,IAAK7hB,KAAK+L,MAAQ,GACvC,IAAItE,GAAS,EACb,IAAK,IAAI5E,EAAI7C,KAAK+L,MAAOlJ,EAAIqH,KAAKC,IAAInK,KAAK+L,MAAQ,EAAG/L,KAAK6hB,IAAIklB,SAASv/B,QAAS3E,IAC7E,GAAI7C,KAAK6hB,IAAIklB,SAASlkC,GAAGskC,YAAYr5B,EAAMwB,IAAS,CAChD7H,EAAQ5E,EACR,KACH,CAEL,GAAI4E,GAAS,EACLA,EAAQzH,KAAK+L,QACb/L,KAAKqsC,SAAU,EACfrsC,KAAKkvC,eAAelvC,KAAK+L,MAAOtE,IAEpCzH,KAAK6hB,IAAM7hB,KAAK6hB,IAAIklB,SAAS/mC,KAAK+L,WAEjC,CACD,IAAIqjC,EAAW9E,GAAav8B,OAAO/N,KAAK6hB,IAAK/T,EAAMwB,GAAQgI,EAAQqoB,GACnE3/B,KAAK6hB,IAAIklB,SAAS/+B,OAAOhI,KAAK+L,MAAO,EAAGqjC,GACxCpvC,KAAK6hB,IAAMutB,EACXpvC,KAAKqsC,SAAU,CAClB,CACDrsC,KAAK+L,MAAQ,EACbuD,GACH,CACJ,CAGDy8B,cAAc9gC,EAAMo8B,EAAWC,EAAWv7B,GACtC,IAAgBsjC,EAAZ5nC,GAAS,EACb,GAAIsE,GAAS/L,KAAKivC,SAASljC,QACtBsjC,EAAarvC,KAAKivC,SAASnyB,QAAQ/Q,EAAQ/L,KAAKivC,SAASljC,QAAQvB,QAAUxK,KAAK6hB,KACjFwtB,EAAWjI,YAAYn8B,EAAMo8B,EAAWC,GACxC7/B,EAAQzH,KAAK6hB,IAAIklB,SAASrwB,QAAQ24B,EAAYrvC,KAAK+L,YAGnD,IAAK,IAAIlJ,EAAI7C,KAAK+L,MAAO3K,EAAI8I,KAAKC,IAAInK,KAAK6hB,IAAIklB,SAASv/B,OAAQ3E,EAAI,GAAIA,EAAIzB,EAAGyB,IAAK,CAChF,IAAIuG,EAAQpJ,KAAK6hB,IAAIklB,SAASlkC,GAC9B,GAAIuG,EAAMg+B,YAAYn8B,EAAMo8B,EAAWC,KAAetnC,KAAKivC,SAAS30B,QAAQg1B,IAAIlmC,GAAQ,CACpF3B,EAAQ5E,EACR,KACH,CACJ,CAEL,QAAI4E,EAAQ,KAEZzH,KAAKkvC,eAAelvC,KAAK+L,MAAOtE,GAChCzH,KAAK+L,SACE,EACV,CACDkgC,aAAahhC,EAAMo8B,EAAWC,EAAWv7B,EAAO4zB,GAC5C,IAAIv2B,EAAQpJ,KAAK6hB,IAAIklB,SAASh7B,GAG9B,OAFI3C,EAAM49B,OAASH,IAAcz9B,EAAMkT,KAAOlT,EAAM4a,aAChD5a,EAAM49B,MAAQJ,MACbx9B,EAAMvD,OAAOoF,EAAMo8B,EAAWC,EAAW3H,KAE9C3/B,KAAKkvC,eAAelvC,KAAK+L,MAAOA,GAChC/L,KAAK+L,SACE,EACV,CACDigC,mBAAmBuD,GACf,OAAS,CACL,IAAI/kC,EAAS+kC,EAAQpuB,WACrB,IAAK3W,EACD,OAAQ,EACZ,GAAIA,GAAUxK,KAAK6hB,IAAImC,WAAY,CAC/B,IAAIgV,EAAOuW,EAAQzR,WACnB,GAAI9E,EACA,IAAK,IAAIn2B,EAAI7C,KAAK+L,MAAOlJ,EAAI7C,KAAK6hB,IAAIklB,SAASv/B,OAAQ3E,IACnD,GAAI7C,KAAK6hB,IAAIklB,SAASlkC,IAAMm2B,EACxB,OAAOn2B,EAEnB,OAAQ,CACX,CACD0sC,EAAU/kC,CACb,CACJ,CAGD0hC,eAAejhC,EAAMo8B,EAAWC,EAAW3H,EAAM5zB,GAC7C,IAAK,IAAIlJ,EAAI7C,KAAK+L,MAAOlJ,EAAI7C,KAAK6hB,IAAIklB,SAASv/B,OAAQ3E,IAAK,CACxD,IAAImP,EAAOhS,KAAK6hB,IAAIklB,SAASlkC,GAC7B,GAAImP,aAAgB24B,GAAc,CAC9B,IAAIsE,EAAWjvC,KAAKivC,SAAS30B,QAAQlV,IAAI4M,GACzC,GAAgB,MAAZi9B,GAAoBA,GAAYljC,EAChC,OAAO,EACX,IAAIyjC,EAAUx9B,EAAKsK,IAIfmzB,EAASzvC,KAAKgvC,OAASQ,GAAWxvC,KAAKgvC,MAA4B,GAApBQ,EAAQz6B,UAAiBy6B,EAAQxqB,SAAShlB,KAAKgvC,KAAK7tB,gBACjGlW,EAAK1B,QAAUyI,EAAK/G,MAAQ+G,EAAK/G,KAAK1B,QAAUyI,EAAKi2B,QAAQ3lB,WAAarX,EAAKzB,MAC7EwI,EAAKg1B,OAASH,IAAcqE,GAAc7D,EAAWr1B,EAAKq1B,YAClE,IAAKoI,GAAUz9B,EAAKnM,OAAOoF,EAAMo8B,EAAWC,EAAW3H,GAKnD,OAJA3/B,KAAKkvC,eAAelvC,KAAK+L,MAAOlJ,GAC5BmP,EAAKsK,KAAOkzB,IACZxvC,KAAKqsC,SAAU,GACnBrsC,KAAK+L,SACE,EAEX,KACH,CACJ,CACD,OAAO,CACV,CAEDqE,QAAQnF,EAAMo8B,EAAWC,EAAW3H,EAAM12B,GACtCjJ,KAAK6hB,IAAIklB,SAAS/+B,OAAOhI,KAAK+L,QAAS,EAAG4+B,GAAa58B,OAAO/N,KAAK6hB,IAAK5W,EAAMo8B,EAAWC,EAAW3H,EAAM12B,IAC1GjJ,KAAKqsC,SAAU,CAClB,CACDR,YAAY3E,EAAQvH,EAAM12B,GACtB,IAAI+I,EAAOhS,KAAK+L,MAAQ/L,KAAK6hB,IAAIklB,SAASv/B,OAASxH,KAAK6hB,IAAIklB,SAAS/mC,KAAK+L,OAAS,KACnF,IAAIiG,IAAQA,EAAKi1B,cAAcC,IAC1BA,GAAUl1B,EAAKk1B,QAAWl1B,EAAKk1B,OAAO/7B,KAAKgc,MAAMhG,WAGjD,CACD,IAAI6X,EAAO,IAAIqP,GAAeroC,KAAK6hB,IAAKqlB,EAAQvH,EAAM12B,GACtDjJ,KAAK6hB,IAAIklB,SAAS/+B,OAAOhI,KAAK+L,QAAS,EAAGitB,GAC1Ch5B,KAAKqsC,SAAU,CAClB,MANGrsC,KAAK+L,OAOZ,CAGDogC,oBACI,IAAI5gC,EAAYvL,KAAK6hB,IAAIklB,SAAS/mC,KAAK+L,MAAQ,GAAIvB,EAASxK,KAAK6hB,IACjE,MAAOtW,aAAqB++B,GACxB9/B,EAASe,EACTA,EAAYf,EAAOu8B,SAASv8B,EAAOu8B,SAASv/B,OAAS,KAEpD+D,KACCA,aAAqB0/B,KACvB,MAAM9yB,KAAK5M,EAAUN,KAAKzB,OACzBxJ,KAAK2/B,KAAK+P,uBAAyB,MAAMv3B,KAAK5M,EAAUN,KAAKzB,UAEzD0yB,IAAUF,KAAWzwB,GAA8C,SAAjCA,EAAU+Q,IAAIqhB,iBACjD39B,KAAK2vC,YAAY,MAAOnlC,GAC5BxK,KAAK2vC,YAAY,KAAM3vC,KAAK6hB,KAEnC,CACD8tB,YAAYvuB,EAAU5W,GAClB,GAAIA,GAAUxK,KAAK6hB,KAAO7hB,KAAK+L,MAAQvB,EAAOu8B,SAASv/B,QAAUgD,EAAOu8B,SAAS/mC,KAAK+L,OAAOw7B,YAAYnmB,GACrGphB,KAAK+L,YAEJ,CACD,IAAIuQ,EAAM2L,SAASR,cAAcrG,GACjB,OAAZA,IACA9E,EAAIszB,UAAY,wBAChBtzB,EAAIuzB,IAAM,IAEE,MAAZzuB,IACA9E,EAAIszB,UAAY,6BACpB,IAAIE,EAAO,IAAI1H,GAAqBpoC,KAAK6hB,IAAK,GAAIvF,EAAK,MACnD9R,GAAUxK,KAAK6hB,IACfrX,EAAOu8B,SAASh/B,KAAK+nC,GAErBtlC,EAAOu8B,SAAS/+B,OAAOhI,KAAK+L,QAAS,EAAG+jC,GAC5C9vC,KAAKqsC,SAAU,CAClB,CACJ,EAOL,SAAS4C,GAASn5B,EAAMi6B,GACpB,IAAIC,EAAUD,EAAYE,EAAQD,EAAQjJ,SAASv/B,OAC/C0oC,EAAKp6B,EAAK5M,WAAYoR,EAAU,IAAItV,IAAK8X,EAAU,GACvD6R,EAAO,MAAOuhB,EAAK,EAAG,CAClB,IAAIlX,EACJ,OACI,GAAIiX,EAAO,CACP,IAAIj+B,EAAOg+B,EAAQjJ,SAASkJ,EAAQ,GACpC,KAAIj+B,aAAgBs4B,IAIf,CACDtR,EAAOhnB,EACPi+B,IACA,KACH,CAPGD,EAAUh+B,EACVi+B,EAAQj+B,EAAK+0B,SAASv/B,MAO7B,KACI,IAAIwoC,GAAWD,EAChB,MAAMphB,EAINshB,EAAQD,EAAQxlC,OAAOu8B,SAASrwB,QAAQs5B,GACxCA,EAAUA,EAAQxlC,MACrB,CAEL,IAAIS,EAAO+tB,EAAK/tB,KAChB,GAAKA,EAAL,CAEA,GAAIA,GAAQ6K,EAAK1M,MAAM8mC,EAAK,GACxB,QACFA,EACF51B,EAAQ1U,IAAIozB,EAAMkX,GAClBpzB,EAAQ/U,KAAKixB,EALD,CAMf,CACD,MAAO,CAAEjtB,MAAOmkC,EAAI51B,UAASwC,QAASA,EAAQ7F,UACjD,CACD,SAASk5B,GAAYvtC,EAAGoG,GACpB,OAAOpG,EAAEuI,KAAK6e,KAAOhhB,EAAEmC,KAAK6e,IAC/B,CAKD,SAAS0hB,GAASlhC,EAAQgkC,EAAM4B,EAAUC,GACtC,IAAIC,EAAS9B,EAAK8B,OAAO9lC,GAAS0C,EAAS,EAE3C,GAAqB,GAAjBojC,EAAO9oC,OAAa,CACpB,IAAK,IAAI3E,EAAI,EAAGA,EAAI2H,EAAOtB,WAAYrG,IAAK,CACxC,IAAIuG,EAAQoB,EAAOpB,MAAMvG,GACzBwtC,EAAOjnC,EAAOknC,EAAQ9B,EAAK+B,SAASrjC,EAAQ9D,GAAQvG,GACpDqK,GAAU9D,EAAMM,QACnB,CACD,MACH,CACD,IAAI8mC,EAAY,EAAG15B,EAAS,GAAI25B,EAAW,KAC3C,IAAK,IAAIC,EAAc,IAAK,CACxB,GAAIF,EAAYF,EAAO9oC,QAAU8oC,EAAOE,GAAWlmC,IAAM4C,EAAQ,CAC7D,IAAkCyjC,EAA9BzJ,EAASoJ,EAAOE,KACpB,MAAOA,EAAYF,EAAO9oC,QAAU8oC,EAAOE,GAAWlmC,IAAM4C,GACvDyjC,IAAYA,EAAU,CAACzJ,KAAUn/B,KAAKuoC,EAAOE,MAClD,GAAIG,EAAS,CACTA,EAAQ1iC,KAAKkiC,IACb,IAAK,IAAIttC,EAAI,EAAGA,EAAI8tC,EAAQnpC,OAAQ3E,IAChCutC,EAASO,EAAQ9tC,GAAI6tC,IAAeD,EAC3C,MAEGL,EAASlJ,EAAQwJ,IAAeD,EAEvC,CACD,IAAIrnC,EAAO2C,EACX,GAAI0kC,EACA1kC,GAAS,EACT3C,EAAQqnC,EACRA,EAAW,SAEV,MAAIC,EAAclmC,EAAOtB,YAK1B,MAJA6C,EAAQ2kC,EACRtnC,EAAQoB,EAAOpB,MAAMsnC,IAIxB,CACD,IAAK,IAAI7tC,EAAI,EAAGA,EAAIiU,EAAOtP,OAAQ3E,IAC3BiU,EAAOjU,GAAGyH,IAAM4C,GAChB4J,EAAO9O,OAAOnF,IAAK,GAC3B,MAAO2tC,EAAYF,EAAO9oC,QAAU8oC,EAAOE,GAAW/nC,MAAQyE,GAAUojC,EAAOE,GAAWlmC,GAAK4C,EAC3F4J,EAAO/O,KAAKuoC,EAAOE,MACvB,IAAI/lC,EAAMyC,EAAS9D,EAAMM,SACzB,GAAIN,EAAMG,OAAQ,CACd,IAAIqnC,EAAQnmC,EACR+lC,EAAYF,EAAO9oC,QAAU8oC,EAAOE,GAAW/nC,KAAOmoC,IACtDA,EAAQN,EAAOE,GAAW/nC,MAC9B,IAAK,IAAI5F,EAAI,EAAGA,EAAIiU,EAAOtP,OAAQ3E,IAC3BiU,EAAOjU,GAAGyH,GAAKsmC,IACfA,EAAQ95B,EAAOjU,GAAGyH,IACtBsmC,EAAQnmC,IACRgmC,EAAWrnC,EAAMuC,IAAIilC,EAAQ1jC,GAC7B9D,EAAQA,EAAMuC,IAAI,EAAGilC,EAAQ1jC,GAC7BzC,EAAMmmC,EACN7kC,GAAS,EAEhB,CACD,IAAIs7B,EAAYj+B,EAAM2I,WAAa3I,EAAM8B,OAAS4L,EAAO63B,QAAOrsC,IAAMA,EAAEgV,SAAUR,EAAOhP,QACzFuoC,EAAOjnC,EAAOi+B,EAAWmH,EAAK+B,SAASrjC,EAAQ9D,GAAQ2C,GACvDmB,EAASzC,CACZ,CACJ,CAGD,SAAS+hC,GAASlwB,GACd,GAAoB,MAAhBA,EAAI8E,UAAoC,MAAhB9E,EAAI8E,SAAkB,CAC9C,IAAIyvB,EAASv0B,EAAIH,MAAM4yB,QACvBzyB,EAAIH,MAAM4yB,QAAU8B,EAAS,kCAC7B3oB,OAAO4oB,iBAAiBx0B,GAAKy0B,UAC7Bz0B,EAAIH,MAAM4yB,QAAU8B,CACvB,CACJ,CACD,SAASpE,GAAexhC,EAAMiC,GAC1B,OAAS,CACL,GAAqB,GAAjBjC,EAAK8J,SACL,OAAO9J,EACX,GAAqB,GAAjBA,EAAK8J,UAAiB7H,EAAS,EAAG,CAClC,GAAIjC,EAAKmZ,WAAW5c,OAAS0F,GAA8C,GAApCjC,EAAKmZ,WAAWlX,GAAQ6H,SAC3D,OAAO9J,EAAKmZ,WAAWlX,GAC3BjC,EAAOA,EAAKmZ,WAAWlX,EAAS,GAChCA,EAASxD,GAASuB,EACrB,KACI,MAAqB,GAAjBA,EAAK8J,UAAiB7H,EAASjC,EAAKmZ,WAAW5c,QAKpD,OAAO,KAJPyD,EAAOA,EAAKmZ,WAAWlX,GACvBA,EAAS,CAIZ,CACJ,CACJ,CAED,SAASy/B,GAAmB72B,EAAMtM,EAAMf,EAAM6B,GAC1C,IAAK,IAAIzH,EAAI,EAAGoG,EAAM,EAAGpG,EAAIiT,EAAK5M,YAAcD,GAAOqB,GAAK,CACxD,IAAIlB,EAAQ0M,EAAK1M,MAAMvG,KAAMmuC,EAAa/nC,EAE1C,GADAA,GAAOG,EAAMM,UACRN,EAAMG,OACP,SACJ,IAAIgJ,EAAMnJ,EAAMI,KAChB,MAAO3G,EAAIiT,EAAK5M,WAAY,CACxB,IAAI8I,EAAO8D,EAAK1M,MAAMvG,KAEtB,GADAoG,GAAO+I,EAAKtI,UACPsI,EAAKzI,OACN,MACJgJ,GAAOP,EAAKxI,IACf,CACD,GAAIP,GAAOR,EAAM,CACb,IAAIhB,EAAQupC,EAAa1mC,EAAKiI,EAAIsT,YAAYrc,EAAMc,EAAK0mC,EAAa,IAAM,EAC5E,GAAIvpC,GAAS,GAAKA,EAAQ+B,EAAKhC,OAASwpC,GAAcvoC,EAClD,OAAOuoC,EAAavpC,EACxB,GAAIgB,GAAQ6B,GAAMiI,EAAI/K,QAAW8C,EAAKd,EAAKhC,OAAUwpC,GACjDz+B,EAAIzK,MAAMwC,EAAK0mC,EAAY1mC,EAAK0mC,EAAaxnC,EAAKhC,SAAWgC,EAC7D,OAAOc,CACd,CACJ,CACD,OAAQ,CACX,CAMD,SAASogC,GAAa19B,EAAOvE,EAAM6B,EAAIq1B,EAAMtrB,GACzC,IAAIxL,EAAS,GACb,IAAK,IAAIhG,EAAI,EAAGw6B,EAAM,EAAGx6B,EAAImK,EAAMxF,OAAQ3E,IAAK,CAC5C,IAAIuG,EAAQ4D,EAAMnK,GAAI6H,EAAQ2yB,EAAK5yB,EAAM4yB,GAAOj0B,EAAMV,KAClDgC,GAASJ,GAAMG,GAAOhC,EACtBI,EAAOd,KAAKqB,IAGRsB,EAAQjC,GACRI,EAAOd,KAAKqB,EAAMtB,MAAM,EAAGW,EAAOiC,EAAOi1B,IACzCtrB,IACAxL,EAAOd,KAAKsM,GACZA,OAAc3M,GAEd+C,EAAMH,GACNzB,EAAOd,KAAKqB,EAAMtB,MAAMwC,EAAKI,EAAOtB,EAAMV,KAAMi3B,IAE3D,CACD,OAAO92B,CACV,CAED,SAASooC,GAAiBtR,EAAMuR,EAAS,MACrC,IAAIlT,EAAS2B,EAAK+F,eAAgBp0B,EAAMquB,EAAK1mB,MAAM3H,IACnD,IAAK0sB,EAAO8H,UACR,OAAO,KACX,IAAIxC,EAAc3D,EAAKuD,QAAQI,YAAYtF,EAAO8H,WAAYqL,EAAW7N,GAAmC,GAApBA,EAAY56B,KAChGiX,EAAOggB,EAAKuD,QAAQC,WAAWnF,EAAO8H,UAAW9H,EAAOgI,YAAa,GACzE,GAAIrmB,EAAO,EACP,OAAO,KACX,IAA+BiV,EAASgC,EAApC/B,EAAQvjB,EAAIsB,QAAQ+M,GACxB,GAAIoe,GAAmBC,GAAS,CAC5BpJ,EAAUC,EACV,MAAOyO,IAAgBA,EAAYr4B,KAC/Bq4B,EAAcA,EAAY94B,OAC9B,IAAI4mC,EAAkB9N,EAAYr4B,KAClC,GAAIq4B,GAAe8N,EAAgBt9B,QAAUwiB,GAAAA,aAA2B8a,IAAoB9N,EAAY94B,UAC/F4mC,EAAgBr/B,WAAY6rB,GAASI,EAAO8H,UAAW9H,EAAOgI,YAAa1C,EAAYhnB,MAAO,CACnG,IAAIrT,EAAMq6B,EAAYC,UACtB3M,EAAY,IAAIN,GAAc3W,GAAQ1W,EAAM4rB,EAAQvjB,EAAIsB,QAAQ3J,GACnE,CACJ,KACI,CACD,IAAI8rB,EAAS4K,EAAKuD,QAAQC,WAAWnF,EAAOiL,WAAYjL,EAAOkL,aAAc,GAC7E,GAAInU,EAAS,EACT,OAAO,KACXH,EAAUtjB,EAAIsB,QAAQmiB,EACzB,CACD,IAAK6B,EAAW,CACZ,IAAIxG,EAAiB,WAAV8gB,GAAwBvR,EAAK1mB,MAAM2d,UAAUjX,KAAOkV,EAAM5rB,MAAQkoC,EAAY,GAAK,EAC9Fva,EAAYya,GAAiB1R,EAAM/K,EAASC,EAAOzE,EACtD,CACD,OAAOwG,CACV,CACD,SAAS0a,GAAoB3R,GACzB,OAAOA,EAAK4R,SAAW5R,EAAK6R,WACxBC,GAAa9R,IAAS1X,SAASkd,eAAiBld,SAASkd,cAAcngB,SAAS2a,EAAKrjB,IAC5F,CACD,SAASo1B,GAAe/R,EAAMiJ,GAAQ,GAClC,IAAIlS,EAAMiJ,EAAK1mB,MAAM2d,UAErB,GADA+a,GAAkBhS,EAAMjJ,GACnB4a,GAAoB3R,GAAzB,CAKA,IAAKiJ,GAASjJ,EAAKkN,MAAM+E,WAAajS,EAAKkN,MAAM+E,UAAUC,cAAgB7V,GAAQ,CAC/E,IAAIgC,EAAS2B,EAAK+F,eAAgBoM,EAASnS,EAAKoS,YAAYC,iBAC5D,GAAIhU,EAAOiL,YAAc6I,EAAO7I,YAC5B7L,GAAqBY,EAAOiL,WAAYjL,EAAOkL,aAAc4I,EAAO7I,WAAY6I,EAAO5I,cAGvF,OAFAvJ,EAAKkN,MAAM+E,UAAUK,sBAAuB,OAC5CtS,EAAKoS,YAAYG,iBAGxB,CAED,GADAvS,EAAKoS,YAAYI,sBACbxS,EAAKyS,cACLC,GAAoB1S,OAEnB,CACD,IAA4B2S,EAAmBC,GAA3C,OAAExd,EAAF,KAAUpV,GAAS+W,GACnB8b,IAAmC9b,aAAerB,KAC7CqB,EAAItnB,MAAM5E,OAAO4H,gBAClBkgC,EAAoBG,GAAwB9S,EAAMjJ,EAAIjuB,OACrDiuB,EAAI7qB,OAAU6qB,EAAItnB,MAAM5E,OAAO4H,gBAChCmgC,EAAkBE,GAAwB9S,EAAMjJ,EAAIpsB,MAE5Dq1B,EAAKuD,QAAQrM,aAAa9B,EAAQpV,EAAMggB,EAAKuB,KAAM0H,GAC/C4J,KACIF,GACAI,GAAcJ,GACdC,GACAG,GAAcH,IAElB7b,EAAIb,QACJ8J,EAAKrjB,IAAIytB,UAAUliC,OAAO,8BAG1B83B,EAAKrjB,IAAIytB,UAAUljB,IAAI,6BACnB,sBAAuBoB,UACvB0qB,GAA6BhT,GAExC,CACDA,EAAKoS,YAAYG,kBACjBvS,EAAKoS,YAAYa,kBA1CP,CA2Cb,CAID,MAAMJ,GAAgCtW,IAAUF,IAAUC,GAAiB,GAC3E,SAASwW,GAAwB9S,EAAM12B,GACnC,IAAI,KAAEgC,EAAF,OAAQiC,GAAWyyB,EAAKuD,QAAQsB,WAAWv7B,EAAK,GAChDwI,EAAQvE,EAASjC,EAAKmZ,WAAW5c,OAASyD,EAAKmZ,WAAWlX,GAAU,KACpEsE,EAAStE,EAASjC,EAAKmZ,WAAWlX,EAAS,GAAK,KACpD,GAAIgvB,IAAUzqB,GAAkC,SAAzBA,EAAMksB,gBACzB,OAAOkV,GAAYphC,GACvB,KAAMA,GAAkC,SAAzBA,EAAMksB,oBACfnsB,GAAoC,SAA1BA,EAAOmsB,iBAA6B,CAChD,GAAIlsB,EACA,OAAOohC,GAAYphC,GAClB,GAAID,EACL,OAAOqhC,GAAYrhC,EAC1B,CACJ,CACD,SAASqhC,GAAYpP,GAMjB,OALAA,EAAQ9F,gBAAkB,OACtBzB,IAAUuH,EAAQU,YAClBV,EAAQU,WAAY,EACpBV,EAAQqP,cAAe,GAEpBrP,CACV,CACD,SAASiP,GAAcjP,GACnBA,EAAQ9F,gBAAkB,QACtB8F,EAAQqP,eACRrP,EAAQU,WAAY,EACpBV,EAAQqP,aAAe,KAE9B,CACD,SAASH,GAA6BhT,GAClC,IAAIruB,EAAMquB,EAAKrjB,IAAImH,cACnBnS,EAAIvK,oBAAoB,kBAAmB44B,EAAKkN,MAAMkG,oBACtD,IAAI/U,EAAS2B,EAAK+F,eACdz6B,EAAO+yB,EAAOiL,WAAY/7B,EAAS8wB,EAAOkL,aAC9C53B,EAAIpK,iBAAiB,kBAAmBy4B,EAAKkN,MAAMkG,mBAAqB,KAChE/U,EAAOiL,YAAch+B,GAAQ+yB,EAAOkL,cAAgBh8B,IACpDoE,EAAIvK,oBAAoB,kBAAmB44B,EAAKkN,MAAMkG,oBACtD9rC,YAAW,KACFqqC,GAAoB3R,KAASA,EAAK1mB,MAAM2d,UAAUf,SACnD8J,EAAKrjB,IAAIytB,UAAUliC,OAAO,4BAA1B,GACL,IACN,EAER,CACD,SAASwqC,GAAoB1S,GACzB,IAAI3B,EAAS2B,EAAK+F,eAAgBzX,EAAQhG,SAASgV,cAC/ChyB,EAAO00B,EAAKyS,cAAc91B,IAAK02B,EAAuB,OAAjB/nC,EAAKmW,SAC1C4xB,EACA/kB,EAAMiP,OAAOjyB,EAAKkW,WAAYyb,GAAS3xB,GAAQ,GAE/CgjB,EAAMiP,OAAOjyB,EAAM,GACvBgjB,EAAMob,UAAS,GACfrL,EAAOqI,kBACPrI,EAAO1tB,SAAS2d,IAMX+kB,IAAQrT,EAAK1mB,MAAM2d,UAAUf,SAAW8F,IAAMC,IAAc,KAC7D3wB,EAAKgoC,UAAW,EAChBhoC,EAAKgoC,UAAW,EAEvB,CACD,SAAStB,GAAkBhS,EAAMjJ,GAC7B,GAAIA,aAAeJ,GAAe,CAC9B,IAAI0C,EAAO2G,EAAKuD,QAAQiF,OAAOzR,EAAIjuB,MAC/BuwB,GAAQ2G,EAAKuT,uBACbC,GAAmBxT,GACf3G,GACAA,EAAKqU,aACT1N,EAAKuT,qBAAuBla,EAEnC,MAEGma,GAAmBxT,EAE1B,CAED,SAASwT,GAAmBxT,GACpBA,EAAKuT,uBACDvT,EAAKuT,qBAAqB1oC,QAC1Bm1B,EAAKuT,qBAAqB5F,eAC9B3N,EAAKuT,0BAAuBxrC,EAEnC,CACD,SAAS2pC,GAAiB1R,EAAM/K,EAASC,EAAOzE,GAC5C,OAAOuP,EAAKG,SAAS,0BAA0Bt8B,GAAKA,EAAEm8B,EAAM/K,EAASC,MAC9DQ,GAAcO,QAAQhB,EAASC,EAAOzE,EAChD,CACD,SAASgjB,GAAqBzT,GAC1B,QAAIA,EAAK4R,WAAa5R,EAAK6R,aAEpBC,GAAa9R,EACvB,CACD,SAAS8R,GAAa9R,GAClB,IAAIjJ,EAAMiJ,EAAK+F,eACf,IAAKhP,EAAIuS,WACL,OAAO,EACX,IAII,OAAOtJ,EAAKrjB,IAAI0I,SAAoC,GAA3B0R,EAAIuS,WAAWl0B,SAAgB2hB,EAAIuS,WAAW9nB,WAAauV,EAAIuS,cACnFtJ,EAAK4R,UAAY5R,EAAKrjB,IAAI0I,SAAmC,GAA1B0R,EAAIoP,UAAU/wB,SAAgB2hB,EAAIoP,UAAU3kB,WAAauV,EAAIoP,WAIxG,CAFD,MAAOl4B,IACH,OAAO,CACV,CACJ,CACD,SAASylC,GAAmB1T,GACxB,IAAIkJ,EAAYlJ,EAAKuD,QAAQsB,WAAW7E,EAAK1mB,MAAM2d,UAAU7B,OAAQ,GACjEiJ,EAAS2B,EAAK+F,eAClB,OAAOtI,GAAqByL,EAAU59B,KAAM49B,EAAU37B,OAAQ8wB,EAAOiL,WAAYjL,EAAOkL,aAC3F,CAED,SAASoK,GAAmBr6B,EAAOkc,GAC/B,IAAI,QAAEP,EAAF,MAAWC,GAAU5b,EAAM2d,UAC3B2c,EAAQpe,EAAM,EAAIP,EAAQjqB,IAAIkqB,GAASD,EAAQzqB,IAAI0qB,GACnDtkB,EAAUgjC,EAAM/oC,OAAO4H,cAAwBmhC,EAAMjkC,MAAQ2J,EAAM3H,IAAIsB,QAAQuiB,EAAM,EAAIoe,EAAM9hC,QAAU8hC,EAAM/hC,UAAY,KAApF+hC,EAC3C,OAAOhjC,GAAUokB,GAAUY,SAAShlB,EAAQ4kB,EAC/C,CACD,SAAShJ,GAAMwT,EAAMjJ,GAEjB,OADAiJ,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAG0J,aAAaH,GAAKmC,mBACvC,CACV,CACD,SAAS4a,GAAmB9T,EAAMxK,EAAKue,GACnC,IAAIhd,EAAMiJ,EAAK1mB,MAAM2d,UACrB,KAAIF,aAAerB,IA+Bd,IAAIqB,aAAeJ,IAAiBI,EAAIzrB,KAAK8G,SAC9C,OAAOoa,GAAMwT,EAAM,IAAItK,GAAcF,EAAM,EAAIuB,EAAIrnB,IAAMqnB,EAAItnB,QAE5D,CACD,IAAI4C,EAAOshC,GAAmB3T,EAAK1mB,MAAOkc,GAC1C,QAAInjB,GACOma,GAAMwT,EAAM3tB,EAE1B,EAtCG,IAAK0kB,EAAI7qB,OAAS6nC,EAAKh9B,QAAQ,MAAQ,EACnC,OAAO,EAEN,GAAIipB,EAAK8G,eAAetR,EAAM,EAAI,QAAU,QAAS,CACtD,IAAInjB,EAAOshC,GAAmB3T,EAAK1mB,MAAOkc,GAC1C,SAAInjB,GAASA,aAAgBskB,KAClBnK,GAAMwT,EAAM3tB,EAE1B,CACI,KAAMsqB,IAAOoX,EAAKh9B,QAAQ,MAAQ,GAAI,CACvC,IAAsGsiB,EAAlGnE,EAAQ6B,EAAI7B,MAAO5pB,EAAO4pB,EAAMlkB,WAAa,KAAOwkB,EAAM,EAAIN,EAAMhkB,WAAagkB,EAAMjkB,UAC3F,IAAK3F,GAAQA,EAAK1B,OACd,OAAO,EACX,IAAIoqC,EAAUxe,EAAM,EAAIN,EAAM5rB,IAAMgC,EAAKvB,SAAWmrB,EAAM5rB,IAC1D,SAAMgC,EAAK6I,SAAWklB,EAAO2G,EAAKuD,QAAQiF,OAAOwL,MAAc3a,EAAKhV,cAEhEsS,GAAAA,aAA2BrrB,GACpBkhB,GAAMwT,EAAM,IAAIrJ,GAAcnB,EAAM,EAAIwK,EAAK1mB,MAAM3H,IAAIsB,QAAQiiB,EAAM5rB,IAAMgC,EAAKvB,UAAYmrB,MAE9F4H,IAIEtQ,GAAMwT,EAAM,IAAItK,GAAcsK,EAAK1mB,MAAM3H,IAAIsB,QAAQuiB,EAAM,EAAIwe,EAAUA,EAAU1oC,EAAKvB,YAKtG,CAWR,CACD,SAASkqC,GAAQ3oC,GACb,OAAwB,GAAjBA,EAAK8J,SAAgB9J,EAAKqX,UAAU9a,OAASyD,EAAKmZ,WAAW5c,MACvE,CACD,SAASqsC,GAAYv3B,GACjB,IAAI0c,EAAO1c,EAAIwhB,WACf,OAAO9E,GAAqB,GAAbA,EAAKtwB,OAAc4T,EAAI+H,aAA+B,MAAhB/H,EAAI8E,SAC5D,CAGD,SAAS0yB,GAAqBnU,GAC1B,IAAIjJ,EAAMiJ,EAAK+F,eACXz6B,EAAOyrB,EAAIoP,UAAW54B,EAASwpB,EAAIsP,YACvC,IAAK/6B,EACD,OACJ,IAAI8oC,EAAUC,EAAYpL,GAAQ,EAMlC,IAFI9M,IAA0B,GAAjB7wB,EAAK8J,UAAiB7H,EAAS0mC,GAAQ3oC,IAAS4oC,GAAY5oC,EAAKmZ,WAAWlX,MACrF07B,GAAQ,KAER,GAAI17B,EAAS,EAAG,CACZ,GAAqB,GAAjBjC,EAAK8J,SACL,MAEC,CACD,IAAIvD,EAASvG,EAAKmZ,WAAWlX,EAAS,GACtC,GAAI2mC,GAAYriC,GACZuiC,EAAW9oC,EACX+oC,IAAe9mC,MAEd,IAAuB,GAAnBsE,EAAOuD,SAKZ,MAJA9J,EAAOuG,EACPtE,EAASjC,EAAKqX,UAAU9a,MAGnB,CACZ,CACJ,KACI,IAAIysC,GAAYhpC,GACjB,MAEC,CACD,IAAIquB,EAAOruB,EAAKuX,gBAChB,MAAO8W,GAAQua,GAAYva,GACvBya,EAAW9oC,EAAKkW,WAChB6yB,EAAapX,GAAStD,GACtBA,EAAOA,EAAK9W,gBAEhB,GAAK8W,EAODruB,EAAOquB,EACPpsB,EAAS0mC,GAAQ3oC,OARV,CAEP,GADAA,EAAOA,EAAKkW,WACRlW,GAAQ00B,EAAKrjB,IACb,MACJpP,EAAS,CACZ,CAKJ,EAED07B,EACAsL,GAAYvU,EAAMjJ,EAAKzrB,EAAMiC,GACxB6mC,GACLG,GAAYvU,EAAMjJ,EAAKqd,EAAUC,EACxC,CAGD,SAASG,GAAsBxU,GAC3B,IAAIjJ,EAAMiJ,EAAK+F,eACXz6B,EAAOyrB,EAAIoP,UAAW54B,EAASwpB,EAAIsP,YACvC,IAAK/6B,EACD,OACJ,IACI8oC,EAAUC,EADVnR,EAAM+Q,GAAQ3oC,GAElB,OACI,GAAIiC,EAAS21B,EAAK,CACd,GAAqB,GAAjB53B,EAAK8J,SACL,MACJ,IAAItD,EAAQxG,EAAKmZ,WAAWlX,GAC5B,IAAI2mC,GAAYpiC,GAKZ,MAJAsiC,EAAW9oC,EACX+oC,IAAe9mC,CAItB,KACI,IAAI+mC,GAAYhpC,GACjB,MAEC,CACD,IAAI+G,EAAO/G,EAAKoZ,YAChB,MAAOrS,GAAQ6hC,GAAY7hC,GACvB+hC,EAAW/hC,EAAKmP,WAChB6yB,EAAapX,GAAS5qB,GAAQ,EAC9BA,EAAOA,EAAKqS,YAEhB,GAAKrS,EAOD/G,EAAO+G,EACP9E,EAAS,EACT21B,EAAM+Q,GAAQ3oC,OATP,CAEP,GADAA,EAAOA,EAAKkW,WACRlW,GAAQ00B,EAAKrjB,IACb,MACJpP,EAAS21B,EAAM,CAClB,CAMJ,EAEDkR,GACAG,GAAYvU,EAAMjJ,EAAKqd,EAAUC,EACxC,CACD,SAASC,GAAY33B,GACjB,IAAI0c,EAAO1c,EAAIwhB,WACf,OAAO9E,GAAQA,EAAK/tB,MAAQ+tB,EAAK/tB,KAAKG,OACzC,CACD,SAAS8oC,GAAYvU,EAAMjJ,EAAKzrB,EAAMiC,GAClC,GAAI6wB,GAAmBrH,GAAM,CACzB,IAAIzI,EAAQhG,SAASgV,cACrBhP,EAAMiP,OAAOjyB,EAAMiC,GACnB+gB,EAAMkP,SAASlyB,EAAMiC,GACrBwpB,EAAI2P,kBACJ3P,EAAIpmB,SAAS2d,EAChB,MACQyI,EAAI0S,QACT1S,EAAI0S,OAAOn+B,EAAMiC,GAErByyB,EAAKoS,YAAYG,kBACjB,IAAI,MAAEj5B,GAAU0mB,EAEhB14B,YAAW,KACH04B,EAAK1mB,OAASA,GACdy4B,GAAe/R,EAAf,GACL,GACN,CAID,SAASyU,GAAiBzU,EAAMxK,EAAKue,GACjC,IAAIhd,EAAMiJ,EAAK1mB,MAAM2d,UACrB,GAAIF,aAAerB,KAAkBqB,EAAI7qB,OAAS6nC,EAAKh9B,QAAQ,MAAQ,EACnE,OAAO,EACX,GAAI4lB,IAAOoX,EAAKh9B,QAAQ,MAAQ,EAC5B,OAAO,EACX,IAAI,MAAEtH,EAAF,IAASC,GAAQqnB,EACrB,IAAKtnB,EAAM5E,OAAO4H,eAAiButB,EAAK8G,eAAetR,EAAM,EAAI,KAAO,QAAS,CAC7E,IAAInjB,EAAOshC,GAAmB3T,EAAK1mB,MAAOkc,GAC1C,GAAInjB,GAASA,aAAgBskB,GACzB,OAAOnK,GAAMwT,EAAM3tB,EAC1B,CACD,IAAK5C,EAAM5E,OAAO4H,cAAe,CAC7B,IAAI4X,EAAOmL,EAAM,EAAI/lB,EAAQC,EACzBglC,EAAS3d,aAAelB,GAAeb,GAAUuB,KAAKlM,EAAMmL,GAAOR,GAAUY,SAASvL,EAAMmL,GAChG,QAAOkf,GAASloB,GAAMwT,EAAM0U,EAC/B,CACD,OAAO,CACV,CACD,SAASC,GAA2B3U,EAAMxK,GACtC,KAAMwK,EAAK1mB,MAAM2d,qBAAqBvB,IAClC,OAAO,EACX,IAAI,MAAER,EAAF,QAASD,EAAT,MAAkB/oB,GAAU8zB,EAAK1mB,MAAM2d,UAC3C,IAAK/B,EAAMviB,WAAWsiB,GAClB,OAAO,EACX,IAAK/oB,EACD,OAAO,EACX,GAAI8zB,EAAK8G,eAAetR,EAAM,EAAI,UAAY,YAC1C,OAAO,EACX,IAAIof,GAAY1f,EAAMlkB,aAAewkB,EAAM,EAAIN,EAAMhkB,WAAagkB,EAAMjkB,WACxE,GAAI2jC,IAAaA,EAAShrC,OAAQ,CAC9B,IAAI4jB,EAAKwS,EAAK1mB,MAAMkU,GAMpB,OALIgI,EAAM,EACNhI,EAAG2G,OAAOe,EAAM5rB,IAAMsrC,EAAS7qC,SAAUmrB,EAAM5rB,KAE/CkkB,EAAG2G,OAAOe,EAAM5rB,IAAK4rB,EAAM5rB,IAAMsrC,EAAS7qC,UAC9Ci2B,EAAK6T,SAASrmB,IACP,CACV,CACD,OAAO,CACV,CACD,SAASqnB,GAAe7U,EAAM10B,EAAMgO,GAChC0mB,EAAKoS,YAAY/H,OACjB/+B,EAAK0yB,gBAAkB1kB,EACvB0mB,EAAKoS,YAAYrnC,OACpB,CAMD,SAAS+pC,GAAmB9U,GACxB,IAAKzD,IAAUyD,EAAK1mB,MAAM2d,UAAU/B,MAAMllB,aAAe,EACrD,OAAO,EACX,IAAI,UAAEm2B,EAAF,YAAaE,GAAgBrG,EAAK+F,eACtC,GAAII,GAAmC,GAAtBA,EAAU/wB,UAAgC,GAAfixB,GACxCF,EAAUr6B,YAAsD,SAAxCq6B,EAAUr6B,WAAWkyB,gBAA4B,CACzE,IAAIv0B,EAAQ08B,EAAUr6B,WACtB+oC,GAAe7U,EAAMv2B,EAAO,QAC5BnC,YAAW,IAAMutC,GAAe7U,EAAMv2B,EAAO,UAAU,GAC1D,CACD,OAAO,CACV,CAOD,SAASsrC,GAAQnW,GACb,IAAI11B,EAAS,GASb,OARI01B,EAAMoW,UACN9rC,GAAU,KACV01B,EAAMqW,UACN/rC,GAAU,KACV01B,EAAMsW,SACNhsC,GAAU,KACV01B,EAAMuW,WACNjsC,GAAU,KACPA,CACV,CACD,SAASksC,GAAepV,EAAMpB,GAC1B,IAAI38B,EAAO28B,EAAMD,QAASoV,EAAOgB,GAAQnW,GACzC,OAAY,GAAR38B,GAAc06B,IAAe,IAAR16B,GAAsB,KAAR8xC,EAC5BY,GAA2B3U,GAAO,IAAMmU,GAAqBnU,GAEvD,IAAR/9B,GAAe06B,IAAe,IAAR16B,GAAsB,KAAR8xC,EAClCY,GAA2B3U,EAAM,IAAMwU,GAAsBxU,GAEvD,IAAR/9B,GAAsB,IAARA,IAGN,IAARA,GAAe06B,IAAe,IAAR16B,GAAsB,KAAR8xC,EAClCD,GAAmB9T,GAAO,EAAG+T,IAASI,GAAqBnU,GAErD,IAAR/9B,GAAe06B,IAAe,IAAR16B,GAAsB,KAAR8xC,EAClCD,GAAmB9T,EAAM,EAAG+T,IAASS,GAAsBxU,GAErD,IAAR/9B,GAAe06B,IAAe,IAAR16B,GAAsB,KAAR8xC,EAClCU,GAAiBzU,GAAO,EAAG+T,IAASI,GAAqBnU,GAEnD,IAAR/9B,GAAe06B,IAAe,IAAR16B,GAAsB,KAAR8xC,EAClCe,GAAmB9U,IAASyU,GAAiBzU,EAAM,EAAG+T,IAASS,GAAsBxU,GAEvF+T,IAASpX,GAAM,IAAM,OACjB,IAAR16B,GAAsB,IAARA,GAAsB,IAARA,GAAsB,IAARA,GAIlD,CAED,SAASozC,GAAsBrV,EAAM73B,GACjC63B,EAAKG,SAAS,mBAAmBt8B,IAAOsE,EAAQtE,EAAEsE,EAAV,IACxC,IAAIyU,EAAU,IAAI,QAAElV,EAAF,UAAW+G,EAAX,QAAsBC,GAAYvG,EACpD,MAAOsG,EAAY,GAAKC,EAAU,GAA2B,GAAtBhH,EAAQ6B,YAAoD,GAAjC7B,EAAQoE,WAAWvC,WAAiB,CAClGkF,IACAC,IACA,IAAIpD,EAAO5D,EAAQoE,WACnB8Q,EAAQxU,KAAKkD,EAAKE,KAAKxJ,KAAMsJ,EAAK1K,OAAS0K,EAAKE,KAAKiI,aAAenI,EAAK1K,MAAQ,MACjF8G,EAAU4D,EAAK5D,OAClB,CACD,IAAI4tC,EAAatV,EAAKG,SAAS,wBAA0BvZ,GAAc2uB,WAAWvV,EAAK1mB,MAAMrM,QACzF0E,EAAM6jC,KAAex0B,EAAOrP,EAAImW,cAAc,OAClD9G,EAAKqF,YAAYivB,EAAWzuB,kBAAkBnf,EAAS,CAAE4gB,SAAU3W,KACnE,IAAkC27B,EAA9BxhC,EAAakV,EAAKlV,WAAuBsjB,EAAW,EACxD,MAAOtjB,GAAqC,GAAvBA,EAAWsJ,WAAkBk4B,EAAYmI,GAAQ3pC,EAAW2V,SAASC,gBAAiB,CACvG,IAAK,IAAIxe,EAAIoqC,EAAUzlC,OAAS,EAAG3E,GAAK,EAAGA,IAAK,CAC5C,IAAIwyC,EAAU/jC,EAAImW,cAAcwlB,EAAUpqC,IAC1C,MAAO8d,EAAKlV,WACR4pC,EAAQrvB,YAAYrF,EAAKlV,YAC7BkV,EAAKqF,YAAYqvB,GACjBtmB,GACH,CACDtjB,EAAakV,EAAKlV,UACrB,CACGA,GAAqC,GAAvBA,EAAWsJ,UACzBtJ,EAAWkc,aAAa,gBAAkB,GAAEvZ,KAAaC,IAAU0gB,EAAY,KAAIA,IAAa,MAAMhtB,KAAKC,UAAUua,MACzH,IAAI/S,EAAOm2B,EAAKG,SAAS,2BAA2Bt8B,GAAKA,EAAEsE,MACvDA,EAAMT,QAAQwD,YAAY,EAAG/C,EAAMT,QAAQqB,KAAM,QACrD,MAAO,CAAE4T,IAAKqE,EAAMnX,OACvB,CAED,SAAS8rC,GAAmB3V,EAAMn2B,EAAM+rC,EAAMC,EAAWhwB,GACrD,IACIlJ,EAAKxU,EADL2tC,EAASjwB,EAAShb,OAAOW,KAAK9H,KAAKzB,KAEvC,IAAK2zC,IAAS/rC,EACV,OAAO,KACX,IAAIksC,EAASlsC,IAASgsC,GAAaC,IAAWF,GAC9C,GAAIG,EAAQ,CAER,GADA/V,EAAKG,SAAS,uBAAuBt8B,IAAOgG,EAAOhG,EAAEgG,EAAMisC,GAAUD,EAAzB,IACxCC,EACA,OAAOjsC,EAAO,IAAI2E,GAAM/D,EAAAA,KAAcu1B,EAAK1mB,MAAMrM,OAAOpD,KAAKA,EAAK2F,QAAQ,SAAU,QAAS,EAAG,GAAKhB,GAAAA,MACzG,IAAIwnC,EAAShW,EAAKG,SAAS,uBAAuBt8B,GAAKA,EAAEgG,EAAMgc,EAAUgwB,KACzE,GAAIG,EACA7tC,EAAQ6tC,MAEP,CACD,IAAI7nC,EAAQ0X,EAAS1X,SACjB,OAAElB,GAAW+yB,EAAK1mB,MAAOg8B,EAAa1uB,GAAc2uB,WAAWtoC,GACnE0P,EAAM2L,SAASR,cAAc,OAC7Bje,EAAKgO,MAAM,iBAAiBjP,SAAQmc,IAChC,IAAIziB,EAAIqa,EAAI0J,YAAYiC,SAASR,cAAc,MAC3C/C,GACAziB,EAAE+jB,YAAYivB,EAAW/tB,cAActa,EAAOpD,KAAKkb,EAAO5W,IAA1D,GAEX,CACJ,MAEG6xB,EAAKG,SAAS,uBAAuBt8B,IAAO+xC,EAAO/xC,EAAE+xC,EAAT,IAC5Cj5B,EAAMs5B,GAASL,GACX9Y,IACAoZ,GAAsBv5B,GAE9B,IAAIw5B,EAAcx5B,GAAOA,EAAI4H,cAAc,mBACvC6xB,EAAYD,GAAe,gCAAgCl1B,KAAKk1B,EAAY9zB,aAAa,kBAAoB,IACjH,GAAI+zB,GAAaA,EAAU,GACvB,IAAK,IAAIlzC,GAAKkzC,EAAU,GAAIlzC,EAAI,GAAKyZ,EAAI7Q,WAAY5I,IACjDyZ,EAAMA,EAAI7Q,WAClB,IAAK3D,EAAO,CACR,IAAIwZ,EAASqe,EAAKG,SAAS,oBAAsBH,EAAKG,SAAS,cAAgBjkB,GAAAA,WAAqB8jB,EAAK1mB,MAAMrM,QAC/G9E,EAAQwZ,EAAO3E,WAAWL,EAAK,CAC3B8D,sBAAuBs1B,IAAUK,GACjCx5B,QAASiJ,EACTzC,aAAazG,GACT,MAAoB,MAAhBA,EAAI8E,UAAqB9E,EAAI+H,cAC7B/H,EAAI6E,YAAe60B,GAAc79B,KAAKmE,EAAI6E,WAAWC,UAElD,KADI,CAAE4B,QAAQ,EAExB,GAER,CACD,GAAI+yB,EACAjuC,EAAQmuC,GAAWC,GAAWpuC,GAAQiuC,EAAU,IAAKA,EAAU,IAAKA,EAAU,SAI9E,GADAjuC,EAAQqG,GAAAA,QAAcgoC,GAAkBruC,EAAMT,QAASme,IAAW,GAC9D1d,EAAMsG,WAAatG,EAAMuG,QAAS,CAClC,IAAID,EAAY,EAAGC,EAAU,EAC7B,IAAK,IAAIpD,EAAOnD,EAAMT,QAAQoE,WAAY2C,EAAYtG,EAAMsG,YAAcnD,EAAKE,KAAK9H,KAAKwL,UAAWT,IAAanD,EAAOA,EAAKQ,YAC7H,IAAK,IAAIR,EAAOnD,EAAMT,QAAQkE,UAAW8C,EAAUvG,EAAMuG,UAAYpD,EAAKE,KAAK9H,KAAKwL,UAAWR,IAAWpD,EAAOA,EAAKM,WACtHzD,EAAQouC,GAAWpuC,EAAOsG,EAAWC,EACxC,CAGL,OADAsxB,EAAKG,SAAS,mBAAmBt8B,IAAOsE,EAAQtE,EAAEsE,EAAV,IACjCA,CACV,CACD,MAAMkuC,GAAgB,gHAStB,SAASG,GAAkB5nC,EAAUiX,GACjC,GAAIjX,EAASrF,WAAa,EACtB,OAAOqF,EACX,IAAK,IAAIjM,EAAIkjB,EAASlW,MAAOhN,GAAK,EAAGA,IAAK,CACtC,IAEI8zC,EAFA5rC,EAASgb,EAASva,KAAK3I,GACvB4R,EAAQ1J,EAAOyJ,eAAeuR,EAASzZ,MAAMzJ,IACnCuG,EAAS,GAmBvB,GAlBA0F,EAAShG,SAAQ0C,IACb,IAAKpC,EACD,OACJ,IAA0CwtC,EAAtC11B,EAAOzM,EAAMyC,aAAa1L,EAAKE,MACnC,IAAKwV,EACD,OAAO9X,EAAS,KACpB,GAAIwtC,EAASxtC,EAAOrB,QAAU4uC,EAAS5uC,QAAU8uC,GAAa31B,EAAMy1B,EAAUnrC,EAAMpC,EAAOA,EAAOrB,OAAS,GAAI,GAC3GqB,EAAOA,EAAOrB,OAAS,GAAK6uC,MAE3B,CACGxtC,EAAOrB,SACPqB,EAAOA,EAAOrB,OAAS,GAAK+uC,GAAW1tC,EAAOA,EAAOrB,OAAS,GAAI4uC,EAAS5uC,SAC/E,IAAIgvC,EAAUC,GAAaxrC,EAAM0V,GACjC9X,EAAOd,KAAKyuC,GACZtiC,EAAQA,EAAMS,UAAU6hC,EAAQrrC,MAChCirC,EAAWz1B,CACd,KAED9X,EACA,OAAOuB,EAAAA,KAAcvB,EAC5B,CACD,OAAO0F,CACV,CACD,SAASkoC,GAAaxrC,EAAM0V,EAAMlY,EAAO,GACrC,IAAK,IAAI5F,EAAI8d,EAAKnZ,OAAS,EAAG3E,GAAK4F,EAAM5F,IACrCoI,EAAO0V,EAAK9d,GAAGkL,OAAO,KAAM3D,EAAAA,KAAca,IAC9C,OAAOA,CACV,CAGD,SAASqrC,GAAa31B,EAAMy1B,EAAUnrC,EAAMyrC,EAASpnC,GACjD,GAAIA,EAAQqR,EAAKnZ,QAAU8H,EAAQ8mC,EAAS5uC,QAAUmZ,EAAKrR,IAAU8mC,EAAS9mC,GAAQ,CAClF,IAAI7F,EAAQ6sC,GAAa31B,EAAMy1B,EAAUnrC,EAAMyrC,EAAQnrC,UAAW+D,EAAQ,GAC1E,GAAI7F,EACA,OAAOitC,EAAQzqC,KAAKyqC,EAAQrvC,QAAQyE,aAAa4qC,EAAQxtC,WAAa,EAAGO,IAC7E,IAAIyK,EAAQwiC,EAAQziC,eAAeyiC,EAAQxtC,YAC3C,GAAIgL,EAAMS,UAAUrF,GAASqR,EAAKnZ,OAAS,EAAIyD,EAAKE,KAAOwV,EAAKrR,EAAQ,IACpE,OAAOonC,EAAQzqC,KAAKyqC,EAAQrvC,QAAQuB,OAAOwB,EAAAA,KAAcqsC,GAAaxrC,EAAM0V,EAAMrR,EAAQ,KACjG,CACJ,CACD,SAASinC,GAAWtrC,EAAMqE,GACtB,GAAa,GAATA,EACA,OAAOrE,EACX,IAAIsD,EAAWtD,EAAK5D,QAAQyE,aAAab,EAAK/B,WAAa,EAAGqtC,GAAWtrC,EAAKM,UAAW+D,EAAQ,IAC7FoR,EAAOzV,EAAKgJ,eAAehJ,EAAK/B,YAAYgN,WAAW9L,EAAAA,OAAgB,GAC3E,OAAOa,EAAKgB,KAAKsC,EAAS3F,OAAO8X,GACpC,CACD,SAASi2B,GAAWpoC,EAAUyb,EAAMvhB,EAAM6B,EAAIgF,EAAOjB,GACjD,IAAIpD,EAAO+e,EAAO,EAAIzb,EAAS9C,WAAa8C,EAAShD,UAAW9B,EAAQwB,EAAK5D,QAM7E,OALIiI,EAAQhF,EAAK,IACbb,EAAQktC,GAAWltC,EAAOugB,EAAMvhB,EAAM6B,EAAIgF,EAAQ,EAAGjB,IACrDiB,GAAS7G,IACTgB,EAAQugB,EAAO,EAAI/e,EAAKgJ,eAAe,GAAGiC,WAAWzM,EAAO8E,EAASrF,WAAa,GAAKmF,GAAWiB,GAAO1G,OAAOa,GAC1GA,EAAMb,OAAOqC,EAAKgJ,eAAehJ,EAAK/B,YAAYgN,WAAW9L,EAAAA,OAAgB,KAChFmE,EAASzC,aAAake,EAAO,EAAI,EAAIzb,EAASrF,WAAa,EAAG+B,EAAKgB,KAAKxC,GAClF,CACD,SAASysC,GAAWpuC,EAAOsG,EAAWC,GAKlC,OAJID,EAAYtG,EAAMsG,YAClBtG,EAAQ,IAAIqG,GAAMwoC,GAAW7uC,EAAMT,SAAU,EAAG+G,EAAWtG,EAAMsG,UAAW,EAAGtG,EAAMuG,SAAUD,EAAWtG,EAAMuG,UAChHA,EAAUvG,EAAMuG,UAChBvG,EAAQ,IAAIqG,GAAMwoC,GAAW7uC,EAAMT,QAAS,EAAGgH,EAASvG,EAAMuG,QAAS,EAAG,GAAIvG,EAAMsG,UAAWC,IAC5FvG,CACV,CAID,MAAMstC,GAAU,CACZwB,MAAO,CAAC,SACRC,MAAO,CAAC,SACRr3B,MAAO,CAAC,SACRs3B,QAAS,CAAC,SACVC,SAAU,CAAC,SACXC,IAAK,CAAC,QAAS,YACf7pB,GAAI,CAAC,QAAS,SACd8pB,GAAI,CAAC,QAAS,QAAS,MACvBC,GAAI,CAAC,QAAS,QAAS,OAE3B,IAAIC,GAAe,KACnB,SAAShC,KACL,OAAOgC,KAAiBA,GAAelvB,SAASmvB,eAAeC,mBAAmB,SACrF,CACD,SAASzB,GAASL,GACd,IAAI+B,EAAQ,sBAAsB12B,KAAK20B,GACnC+B,IACA/B,EAAOA,EAAKztC,MAAMwvC,EAAM,GAAG9vC,SAC/B,IAC8CmZ,EAD1Cqf,EAAMmV,KAAc1tB,cAAc,OAClC8vB,EAAW,mBAAmB32B,KAAK20B,GAIvC,IAHI50B,EAAO42B,GAAYnC,GAAQmC,EAAS,GAAGl2B,kBACvCk0B,EAAO50B,EAAK3d,KAAId,GAAK,IAAMA,EAAI,MAAKiB,KAAK,IAAMoyC,EAAO50B,EAAK3d,KAAId,GAAK,KAAOA,EAAI,MAAK+U,UAAU9T,KAAK,KACvG68B,EAAIwX,UAAYjC,EACZ50B,EACA,IAAK,IAAI9d,EAAI,EAAGA,EAAI8d,EAAKnZ,OAAQ3E,IAC7Bm9B,EAAMA,EAAI9b,cAAcvD,EAAK9d,KAAOm9B,EAC5C,OAAOA,CACV,CAMD,SAAS6V,GAAsBv5B,GAC3B,IAAItP,EAAQsP,EAAIm7B,iBAAiBzb,GAAS,iCAAmC,8BAC7E,IAAK,IAAIn5B,EAAI,EAAGA,EAAImK,EAAMxF,OAAQ3E,IAAK,CACnC,IAAIoI,EAAO+B,EAAMnK,GACa,GAA1BoI,EAAKmZ,WAAW5c,QAAmC,KAApByD,EAAKiI,aAA2BjI,EAAKkW,YACpElW,EAAKkW,WAAWrV,aAAawQ,EAAImH,cAAcC,eAAe,KAAMzY,EAC3E,CACJ,CACD,SAASgrC,GAAWnuC,EAAOyU,GACvB,IAAKzU,EAAMY,KACP,OAAOZ,EACX,IAAmDgF,EAA/CF,EAAS9E,EAAMT,QAAQoE,WAAWN,KAAKyB,OAC3C,IACIE,EAAQ/K,KAAKuZ,MAAMiB,EAItB,CAFD,MAAOnb,IACH,OAAO0G,CACV,CACD,IAAI,QAAET,EAAF,UAAW+G,EAAX,QAAsBC,GAAYvG,EACtC,IAAK,IAAIjF,EAAIiK,EAAMtF,OAAS,EAAG3E,GAAK,EAAGA,GAAK,EAAG,CAC3C,IAAIsI,EAAOyB,EAAOI,MAAMF,EAAMjK,IAC9B,IAAKsI,GAAQA,EAAK6K,mBACd,MACJ3O,EAAU+C,EAAAA,KAAce,EAAK4C,OAAOjB,EAAMjK,EAAI,GAAIwE,IAClD+G,IACAC,GACH,CACD,OAAO,IAAIF,GAAM9G,EAAS+G,EAAWC,EACxC,CAID,MAAMqpC,GAAW,CAAC,EACZC,GAAe,CAAC,EAChBC,GAAkB,CAAEC,YAAY,EAAMC,WAAW,GACvD,MAAMC,GACFx2C,cACIvB,KAAK80C,UAAW,EAChB90C,KAAK4xC,UAAY,KACjB5xC,KAAKg4C,YAAc,KACnBh4C,KAAKi4C,gBAAkB,EACvBj4C,KAAKk4C,UAAY,CAAExgB,KAAM,EAAGlzB,EAAG,EAAGR,EAAG,EAAGmH,KAAM,IAC9CnL,KAAKm4C,oBAAsB,KAC3Bn4C,KAAKo4C,kBAAoB,EACzBp4C,KAAKq4C,aAAe,EACpBr4C,KAAKs4C,6BAA+B,EACpCt4C,KAAKu4C,UAAY,EACjBv4C,KAAKw4C,UAAY,EACjBx4C,KAAKy4C,kBAAoB,EACzBz4C,KAAKorC,WAAY,EACjBprC,KAAK04C,kBAAoB,EACzB14C,KAAK8sC,iBAAmB,GACxB9sC,KAAK24C,oBAAsB,IAC3B34C,KAAK44C,eAAiB,EACtB54C,KAAK64C,cAAgB9lC,OAAOhF,OAAO,MACnC/N,KAAK+yC,mBAAqB,IAC7B,EAEL,SAAS+F,GAAUnZ,GACf,IAAK,IAAIpB,KAASmZ,GAAU,CACxB,IAAIqB,EAAUrB,GAASnZ,GACvBoB,EAAKrjB,IAAIpV,iBAAiBq3B,EAAOoB,EAAKkN,MAAMgM,cAActa,GAAUA,KAC5Dya,GAAmBrZ,EAAMpB,IAAW0a,GAAiBtZ,EAAMpB,KAC1DoB,EAAK4R,UAAchT,EAAMpzB,QAAQwsC,IAClCoB,EAAQpZ,EAAMpB,EAAd,EACLqZ,GAAgBrZ,GAAS,CAAE2a,SAAS,QAASxxC,EACnD,CAIGw0B,IACAyD,EAAKrjB,IAAIpV,iBAAiB,SAAS,IAAM,OAC7CiyC,GAAgBxZ,EACnB,CACD,SAASyZ,GAAmBzZ,EAAMuR,GAC9BvR,EAAKkN,MAAMsL,oBAAsBjH,EACjCvR,EAAKkN,MAAMuL,kBAAoBzgB,KAAKC,KACvC,CACD,SAASyhB,GAAa1Z,GAClBA,EAAKoS,YAAY/H,OACjB,IAAK,IAAI7+B,KAAQw0B,EAAKkN,MAAMgM,cACxBlZ,EAAKrjB,IAAIvV,oBAAoBoE,EAAMw0B,EAAKkN,MAAMgM,cAAc1tC,IAChEmuC,aAAa3Z,EAAKkN,MAAM6L,kBACxBY,aAAa3Z,EAAKkN,MAAMyL,4BAC3B,CACD,SAASa,GAAgBxZ,GACrBA,EAAKG,SAAS,mBAAmByZ,IAC7B,IAAK,IAAIpuC,KAAQouC,EACR5Z,EAAKkN,MAAMgM,cAAc1tC,IAC1Bw0B,EAAKrjB,IAAIpV,iBAAiBiE,EAAMw0B,EAAKkN,MAAMgM,cAAc1tC,GAAQozB,GAAS0a,GAAiBtZ,EAAMpB,GAAjG,GAEf,CACD,SAAS0a,GAAiBtZ,EAAMpB,GAC5B,OAAOoB,EAAKG,SAAS,mBAAmB4X,IACpC,IAAIqB,EAAUrB,EAASnZ,EAAMpzB,MAC7B,QAAO4tC,IAAUA,EAAQpZ,EAAMpB,IAAUA,EAAMib,iBAA/C,GAEP,CACD,SAASR,GAAmBrZ,EAAMpB,GAC9B,IAAKA,EAAMkb,QACP,OAAO,EACX,GAAIlb,EAAMib,iBACN,OAAO,EACX,IAAK,IAAIvuC,EAAOszB,EAAMluB,OAAQpF,GAAQ00B,EAAKrjB,IAAKrR,EAAOA,EAAKkW,WACxD,IAAKlW,GAAyB,IAAjBA,EAAK8J,UACb9J,EAAK6yB,YAAc7yB,EAAK6yB,WAAW2J,UAAUlJ,GAC9C,OAAO,EACf,OAAO,CACV,CACD,SAASp3B,GAAcw4B,EAAMpB,GACpB0a,GAAiBtZ,EAAMpB,KAAUmZ,GAASnZ,EAAMpzB,QAChDw0B,EAAK4R,UAAchT,EAAMpzB,QAAQwsC,IAClCD,GAASnZ,EAAMpzB,MAAMw0B,EAAMpB,EAClC,CAyDD,SAASmb,GAAYnb,GAAS,MAAO,CAAEI,KAAMJ,EAAMob,QAAS93B,IAAK0c,EAAMqb,QAAY,CACnF,SAASC,GAAOtb,EAAOub,GACnB,IAAInX,EAAKmX,EAAMt1C,EAAI+5B,EAAMob,QAASI,EAAKD,EAAM91C,EAAIu6B,EAAMqb,QACvD,OAAOjX,EAAKA,EAAKoX,EAAKA,EAAK,GAC9B,CACD,SAASC,GAAoBra,EAAMsa,EAAUhxC,EAAK2lB,EAAQ2P,GACtD,IAAe,GAAX3P,EACA,OAAO,EACX,IAAIU,EAAOqQ,EAAK1mB,MAAM3H,IAAIsB,QAAQgc,GAClC,IAAK,IAAI/rB,EAAIysB,EAAKhgB,MAAQ,EAAGzM,EAAI,EAAGA,IAChC,GAAI88B,EAAKG,SAASma,GAAUz2C,GAAKX,EAAIysB,EAAKhgB,MAAQ9L,EAAEm8B,EAAM12B,EAAKqmB,EAAK1e,UAAW0e,EAAK9d,OAAO3O,GAAI07B,GAAO,GAChG/6B,EAAEm8B,EAAM12B,EAAKqmB,EAAKrkB,KAAKpI,GAAIysB,EAAK9d,OAAO3O,GAAI07B,GAAO,KACpD,OAAO,EAEf,OAAO,CACV,CACD,SAAS2b,GAAgBva,EAAM/I,EAAWsa,GACjCvR,EAAKwa,SACNxa,EAAKmC,QACT,IAAI3U,EAAKwS,EAAK1mB,MAAMkU,GAAG0J,aAAaD,GACtB,WAAVsa,GACA/jB,EAAGuL,QAAQ,WAAW,GAC1BiH,EAAK6T,SAASrmB,EACjB,CACD,SAASitB,GAAkBza,EAAM/Q,GAC7B,IAAe,GAAXA,EACA,OAAO,EACX,IAAIU,EAAOqQ,EAAK1mB,MAAM3H,IAAIsB,QAAQgc,GAAS3jB,EAAOqkB,EAAK1e,UACvD,SAAI3F,GAAQA,EAAK6I,QAAUwiB,GAAAA,aAA2BrrB,MAClDivC,GAAgBva,EAAM,IAAIrJ,GAAchH,GAAO,YACxC,EAGd,CACD,SAAS+qB,GAAkB1a,EAAM/Q,GAC7B,IAAe,GAAXA,EACA,OAAO,EACX,IAAgC0rB,EAAcC,EAA1C7jB,EAAMiJ,EAAK1mB,MAAM2d,UACjBF,aAAeJ,KACfgkB,EAAe5jB,EAAIzrB,MACvB,IAAIqkB,EAAOqQ,EAAK1mB,MAAM3H,IAAIsB,QAAQgc,GAClC,IAAK,IAAI/rB,EAAIysB,EAAKhgB,MAAQ,EAAGzM,EAAI,EAAGA,IAAK,CACrC,IAAIoI,EAAOpI,EAAIysB,EAAKhgB,MAAQggB,EAAK1e,UAAY0e,EAAKrkB,KAAKpI,GACvD,GAAIyzB,GAAAA,aAA2BrrB,GAAO,CAG9BsvC,EAFAD,GAAgB5jB,EAAItnB,MAAME,MAAQ,GAClCzM,GAAK6zB,EAAItnB,MAAME,OAASggB,EAAK9d,OAAOklB,EAAItnB,MAAME,MAAQ,IAAMonB,EAAItnB,MAAMnG,IAC3DqmB,EAAK9d,OAAOklB,EAAItnB,MAAME,OAEtBggB,EAAK9d,OAAO3O,GAC3B,KACH,CACJ,CACD,OAAgB,MAAZ03C,IACAL,GAAgBva,EAAMrJ,GAAAA,OAAqBqJ,EAAK1mB,MAAM3H,IAAKipC,GAAW,YAC/D,EAKd,CACD,SAASC,GAAkB7a,EAAM12B,EAAK2lB,EAAQ2P,EAAO8O,GACjD,OAAO2M,GAAoBra,EAAM,gBAAiB12B,EAAK2lB,EAAQ2P,IAC3DoB,EAAKG,SAAS,eAAet8B,GAAKA,EAAEm8B,EAAM12B,EAAKs1B,OAC9C8O,EAAagN,GAAkB1a,EAAM/Q,GAAUwrB,GAAkBza,EAAM/Q,GAC/E,CACD,SAAS6rB,GAAkB9a,EAAM12B,EAAK2lB,EAAQ2P,GAC1C,OAAOyb,GAAoBra,EAAM,sBAAuB12B,EAAK2lB,EAAQ2P,IACjEoB,EAAKG,SAAS,qBAAqBt8B,GAAKA,EAAEm8B,EAAM12B,EAAKs1B,IAC5D,CACD,SAASmc,GAAkB/a,EAAM12B,EAAK2lB,EAAQ2P,GAC1C,OAAOyb,GAAoBra,EAAM,sBAAuB12B,EAAK2lB,EAAQ2P,IACjEoB,EAAKG,SAAS,qBAAqBt8B,GAAKA,EAAEm8B,EAAM12B,EAAKs1B,MACrDoc,GAAmBhb,EAAM/Q,EAAQ2P,EACxC,CACD,SAASoc,GAAmBhb,EAAM/Q,EAAQ2P,GACtC,GAAoB,GAAhBA,EAAMqc,OACN,OAAO,EACX,IAAItpC,EAAMquB,EAAK1mB,MAAM3H,IACrB,IAAe,GAAXsd,EACA,QAAItd,EAAIc,gBACJ8nC,GAAgBva,EAAMtK,GAActnB,OAAOuD,EAAK,EAAGA,EAAIjK,QAAQqB,MAAO,YAC/D,GAIf,IAAI4mB,EAAOhe,EAAIsB,QAAQgc,GACvB,IAAK,IAAI/rB,EAAIysB,EAAKhgB,MAAQ,EAAGzM,EAAI,EAAGA,IAAK,CACrC,IAAIoI,EAAOpI,EAAIysB,EAAKhgB,MAAQggB,EAAK1e,UAAY0e,EAAKrkB,KAAKpI,GACnD8wC,EAAUrkB,EAAK9d,OAAO3O,GAC1B,GAAIoI,EAAKmH,cACL8nC,GAAgBva,EAAMtK,GAActnB,OAAOuD,EAAKqiC,EAAU,EAAGA,EAAU,EAAI1oC,EAAK5D,QAAQqB,MAAO,eAC9F,KAAI4tB,GAAAA,aAA2BrrB,GAGhC,SAFAivC,GAAgBva,EAAMrJ,GAAAA,OAAqBhlB,EAAKqiC,GAAU,UAElD,CACZ,OAAO,CACV,CACJ,CACD,SAASkH,GAAclb,GACnB,OAAOmb,GAAenb,EACzB,CA5JDgY,GAAaoD,QAAU,CAACpb,EAAMqb,KAC1B,IAAIzc,EAAQyc,EAEZ,GADArb,EAAKkN,MAAMiI,SAA4B,IAAjBvW,EAAMD,SAAiBC,EAAMuW,UAC/CmG,GAAoBtb,EAAMpB,KAE9BoB,EAAKkN,MAAMmL,YAAczZ,EAAMD,QAC/BqB,EAAKkN,MAAMoL,gBAAkBtgB,KAAKC,OAI9B4E,KAAWR,IAA2B,IAAjBuC,EAAMD,SAQ/B,GANqB,KAAjBC,EAAMD,SACNqB,EAAKoS,YAAYmJ,cAKjB9e,IAAwB,IAAjBmC,EAAMD,SAAkBC,EAAMoW,SAAYpW,EAAMsW,QAAWtW,EAAMqW,QAUnEjV,EAAKG,SAAS,iBAAiBt8B,GAAKA,EAAEm8B,EAAMpB,MAAWwW,GAAepV,EAAMpB,GACjFA,EAAM4c,iBAGN/B,GAAmBzZ,EAAM,WAdwD,CACjF,IAAI/H,EAAMD,KAAKC,MACf+H,EAAKkN,MAAMwL,aAAezgB,EAC1B+H,EAAKkN,MAAMyL,4BAA8BrxC,YAAW,KAC5C04B,EAAKkN,MAAMwL,cAAgBzgB,IAC3B+H,EAAKG,SAAS,iBAAiBt8B,GAAKA,EAAEm8B,EAAMtB,GAAS,GAAI,YACzDsB,EAAKkN,MAAMwL,aAAe,EAC7B,GACF,IACN,CAMA,EAELV,GAAayD,MAAQ,CAACzb,EAAMpB,KACH,IAAjBA,EAAMD,UACNqB,EAAKkN,MAAMiI,UAAW,EAAtB,EAER6C,GAAa0D,SAAW,CAAC1b,EAAMqb,KAC3B,IAAIzc,EAAQyc,EACZ,GAAIC,GAAoBtb,EAAMpB,KAAWA,EAAM+c,UAC3C/c,EAAMoW,UAAYpW,EAAMsW,QAAUvY,IAAOiC,EAAMqW,QAC/C,OACJ,GAAIjV,EAAKG,SAAS,kBAAkBt8B,GAAKA,EAAEm8B,EAAMpB,KAE7C,YADAA,EAAM4c,iBAGV,IAAIzkB,EAAMiJ,EAAK1mB,MAAM2d,UACrB,KAAMF,aAAerB,MAAmBqB,EAAItnB,MAAMkD,WAAWokB,EAAIrnB,KAAM,CACnE,IAAI7F,EAAO+xC,OAAOC,aAAajd,EAAM+c,UAChC3b,EAAKG,SAAS,mBAAmBt8B,GAAKA,EAAEm8B,EAAMjJ,EAAItnB,MAAMnG,IAAKytB,EAAIrnB,IAAIpG,IAAKO,MAC3Em2B,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAGsL,WAAWjvB,GAAMqvB,kBACjD0F,EAAM4c,gBACT,GAuGL,MAAMM,GAAqBnf,GAAM,UAAY,UAC7Cob,GAASgE,UAAY,CAAC/b,EAAMqb,KACxB,IAAIzc,EAAQyc,EACZrb,EAAKkN,MAAMiI,SAAWvW,EAAMuW,SAC5B,IAAI6G,EAAUd,GAAclb,GACxB/H,EAAMD,KAAKC,MAAOzsB,EAAO,cACzBysB,EAAM+H,EAAKkN,MAAMqL,UAAUxgB,KAAO,KAAOmiB,GAAOtb,EAAOoB,EAAKkN,MAAMqL,aAAe3Z,EAAMkd,MACtD,eAA7B9b,EAAKkN,MAAMqL,UAAU/sC,KACrBA,EAAO,cAC2B,eAA7Bw0B,EAAKkN,MAAMqL,UAAU/sC,OAC1BA,EAAO,gBAEfw0B,EAAKkN,MAAMqL,UAAY,CAAExgB,KAAME,EAAKpzB,EAAG+5B,EAAMob,QAAS31C,EAAGu6B,EAAMqb,QAASzuC,QACxE,IAAIlC,EAAM02B,EAAKkE,YAAY6V,GAAYnb,IAClCt1B,IAEO,eAARkC,GACIw0B,EAAKkN,MAAM+E,WACXjS,EAAKkN,MAAM+E,UAAU1rC,OACzBy5B,EAAKkN,MAAM+E,UAAY,IAAIgK,GAAUjc,EAAM12B,EAAKs1B,IAASod,KAE3C,eAARxwC,EAAwBsvC,GAAoBC,IAAmB/a,EAAM12B,EAAIA,IAAKA,EAAI2lB,OAAQ2P,GAChGA,EAAM4c,iBAGN/B,GAAmBzZ,EAAM,WAC5B,EAEL,MAAMic,GACFr6C,YAAYo+B,EAAM12B,EAAKs1B,EAAOod,GAU1B,IAAIre,EAAYue,EAChB,GAVA77C,KAAK2/B,KAAOA,EACZ3/B,KAAKiJ,IAAMA,EACXjJ,KAAKu+B,MAAQA,EACbv+B,KAAK27C,QAAUA,EACf37C,KAAKiyC,sBAAuB,EAC5BjyC,KAAK87C,UAAY,KACjB97C,KAAK+7C,SAAWpc,EAAK1mB,MAAM3H,IAC3BtR,KAAKqtC,aAAe9O,EAAMkd,IAC1Bz7C,KAAK6xC,aAAetT,EAAMuW,SAEtB7rC,EAAI2lB,QAAU,EACd0O,EAAaqC,EAAK1mB,MAAM3H,IAAIkC,OAAOvK,EAAI2lB,QACvCitB,EAAY5yC,EAAI2lB,WAEf,CACD,IAAIU,EAAOqQ,EAAK1mB,MAAM3H,IAAIsB,QAAQ3J,EAAIA,KACtCq0B,EAAahO,EAAK9kB,OAClBqxC,EAAYvsB,EAAKhgB,MAAQggB,EAAK9d,SAAW,CAC5C,CACD,MAAMnB,EAASsrC,EAAU,KAAOpd,EAAMluB,OAChCg/B,EAAah/B,EAASsvB,EAAKuD,QAAQI,YAAYjzB,GAAQ,GAAQ,KACrErQ,KAAKqQ,OAASg/B,EAAaA,EAAW/yB,IAAM,KAC5C,IAAI,UAAEsa,GAAc+I,EAAK1mB,OACL,GAAhBslB,EAAMqc,QACNtd,EAAWnyB,KAAK9H,KAAK8gC,YAAiD,IAApC7G,EAAWnyB,KAAK9H,KAAKmzB,YACvDI,aAAqBN,IAAiBM,EAAUnuB,MAAQozC,GAAajlB,EAAUtsB,GAAKuxC,KACpF77C,KAAK87C,UAAY,CACb7wC,KAAMqyB,EACNr0B,IAAK4yC,EACLG,WAAYh8C,KAAKqQ,QAAWrQ,KAAKqQ,OAAO8zB,WACxC8X,iBAAkBj8C,KAAKqQ,SAAUyrB,IAAU97B,KAAKqQ,OAAOy6B,aAAa,sBAExE9qC,KAAKqQ,QAAUrQ,KAAK87C,YAAc97C,KAAK87C,UAAUE,SAAWh8C,KAAK87C,UAAUG,iBAC3Ej8C,KAAK2/B,KAAKoS,YAAY/H,OAClBhqC,KAAK87C,UAAUE,UACfh8C,KAAKqQ,OAAO8zB,WAAY,GACxBnkC,KAAK87C,UAAUG,eACfh1C,YAAW,KACHjH,KAAK2/B,KAAKkN,MAAM+E,WAAa5xC,MAC7BA,KAAKqQ,OAAOsX,aAAa,kBAAmB,QAA5C,GACL,IACP3nB,KAAK2/B,KAAKoS,YAAYrnC,SAE1Bi1B,EAAKuB,KAAKh6B,iBAAiB,UAAWlH,KAAKk8C,GAAKl8C,KAAKk8C,GAAGzgC,KAAKzb,OAC7D2/B,EAAKuB,KAAKh6B,iBAAiB,YAAalH,KAAKmyB,KAAOnyB,KAAKmyB,KAAK1W,KAAKzb,OACnEo5C,GAAmBzZ,EAAM,UAC5B,CACDz5B,OACIlG,KAAK2/B,KAAKuB,KAAKn6B,oBAAoB,UAAW/G,KAAKk8C,IACnDl8C,KAAK2/B,KAAKuB,KAAKn6B,oBAAoB,YAAa/G,KAAKmyB,MACjDnyB,KAAK87C,WAAa97C,KAAKqQ,SACvBrQ,KAAK2/B,KAAKoS,YAAY/H,OAClBhqC,KAAK87C,UAAUE,SACfh8C,KAAKqQ,OAAOk9B,gBAAgB,aAC5BvtC,KAAK87C,UAAUG,eACfj8C,KAAKqQ,OAAOk9B,gBAAgB,mBAChCvtC,KAAK2/B,KAAKoS,YAAYrnC,SAEtB1K,KAAKiyC,sBACLhrC,YAAW,IAAMyqC,GAAe1xC,KAAK2/B,QACzC3/B,KAAK2/B,KAAKkN,MAAM+E,UAAY,IAC/B,CACDsK,GAAG3d,GAEC,GADAv+B,KAAKkG,QACAlG,KAAK2/B,KAAKrjB,IAAI0I,SAASuZ,EAAMluB,QAC9B,OACJ,IAAIpH,EAAMjJ,KAAKiJ,IACXjJ,KAAK2/B,KAAK1mB,MAAM3H,KAAOtR,KAAK+7C,WAC5B9yC,EAAMjJ,KAAK2/B,KAAKkE,YAAY6V,GAAYnb,KAC5Cv+B,KAAKm8C,mBAAmB5d,GACpBv+B,KAAK6xC,eAAiB5oC,EACtBmwC,GAAmBp5C,KAAK2/B,KAAM,WAEzB6a,GAAkBx6C,KAAK2/B,KAAM12B,EAAIA,IAAKA,EAAI2lB,OAAQ2P,EAAOv+B,KAAKqtC,YACnE9O,EAAM4c,iBAEe,GAAhB5c,EAAMqc,SACV56C,KAAK27C,SAEDzf,IAAUl8B,KAAK87C,YAAc97C,KAAK87C,UAAU7wC,KAAK6I,QAQjDkoB,KAAWh8B,KAAK2/B,KAAK1mB,MAAM2d,UAAUf,SAClC3rB,KAAKC,IAAID,KAAKkyC,IAAInzC,EAAIA,IAAMjJ,KAAK2/B,KAAK1mB,MAAM2d,UAAUnuB,MAAOyB,KAAKkyC,IAAInzC,EAAIA,IAAMjJ,KAAK2/B,KAAK1mB,MAAM2d,UAAUtsB,MAAQ,IAC1H4vC,GAAgBl6C,KAAK2/B,KAAMhL,GAAUuB,KAAKl2B,KAAK2/B,KAAK1mB,MAAM3H,IAAIsB,QAAQ3J,EAAIA,MAAO,WACjFs1B,EAAM4c,kBAGN/B,GAAmBp5C,KAAK2/B,KAAM,UAErC,CACDxN,KAAKoM,GACDv+B,KAAKm8C,mBAAmB5d,GACxB6a,GAAmBp5C,KAAK2/B,KAAM,WACT,GAAjBpB,EAAM8d,SACNr8C,KAAKkG,MACZ,CACDi2C,mBAAmB5d,IACVv+B,KAAK6xC,eAAiB3nC,KAAKkyC,IAAIp8C,KAAKu+B,MAAM/5B,EAAI+5B,EAAMob,SAAW,GAChEzvC,KAAKkyC,IAAIp8C,KAAKu+B,MAAMv6B,EAAIu6B,EAAMqb,SAAW,KACzC55C,KAAK6xC,cAAe,EAC3B,EAYL,SAASoJ,GAAoBtb,EAAMpB,GAC/B,QAAIoB,EAAKyL,cAYLlP,IAAUhyB,KAAKkyC,IAAI7d,EAAM+d,UAAY3c,EAAKkN,MAAM8L,oBAAsB,OACtEhZ,EAAKkN,MAAM8L,oBAAsB,KAC1B,EAGd,CA5BDjB,GAASG,WAAalY,IAClBA,EAAKkN,MAAM2L,UAAY7gB,KAAKC,MAC5BijB,GAAclb,GACdyZ,GAAmBzZ,EAAM,UAAzB,EAEJ+X,GAASI,UAAYnY,IACjBA,EAAKkN,MAAM2L,UAAY7gB,KAAKC,MAC5BwhB,GAAmBzZ,EAAM,UAAzB,EAEJ+X,GAAS6E,YAAc5c,GAAQkb,GAAclb,GAqB7C,MAAM6c,GAAqBhgB,GAAU,KAAQ,EA8C7C,SAASigB,GAAmB9c,EAAM+c,GAC9BpD,aAAa3Z,EAAKkN,MAAM6L,kBACpBgE,GAAS,IACT/c,EAAKkN,MAAM6L,iBAAmBzxC,YAAW,IAAM6zC,GAAenb,IAAO+c,GAC5E,CACD,SAASC,GAAiBhd,GAClBA,EAAKyL,YACLzL,EAAKkN,MAAMzB,WAAY,EACvBzL,EAAKkN,MAAM8L,mBAAqBiE,MAEpC,MAAOjd,EAAKkN,MAAMC,iBAAiBtlC,OAAS,EACxCm4B,EAAKkN,MAAMC,iBAAiBr1B,MAAMoyB,kBACzC,CACD,SAAS+S,KACL,IAAIre,EAAQtW,SAASuW,YAAY,SAEjC,OADAD,EAAME,UAAU,SAAS,GAAM,GACxBF,EAAM+d,SAChB,CAID,SAASxB,GAAenb,EAAMkd,GAAc,GACxC,KAAIrgB,IAAWmD,EAAKoS,YAAY+K,cAAgB,GAAhD,CAIA,GAFAnd,EAAKoS,YAAYmJ,aACjByB,GAAiBhd,GACbkd,GAAeld,EAAKuD,SAAWvD,EAAKuD,QAAQ8D,MAAO,CACnD,IAAItQ,EAAMua,GAAiBtR,GAK3B,OAJIjJ,IAAQA,EAAIxqB,GAAGyzB,EAAK1mB,MAAM2d,WAC1B+I,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAG0J,aAAaH,IAEzCiJ,EAAKyF,YAAYzF,EAAK1mB,QACnB,CACV,CACD,OAAO,CAXG,CAYb,CACD,SAAS8jC,GAAYpd,EAAMrjB,GAGvB,IAAKqjB,EAAKrjB,IAAI6E,WACV,OACJ,IAAIR,EAAOgf,EAAKrjB,IAAI6E,WAAW6E,YAAYiC,SAASR,cAAc,QAClE9G,EAAKqF,YAAY1J,GACjBqE,EAAKxE,MAAM4yB,QAAU,6CACrB,IAAIrY,EAAMqS,eAAgB9a,EAAQhG,SAASgV,cAC3ChP,EAAM+uB,mBAAmB1gC,GAIzBqjB,EAAKrjB,IAAI2gC,OACTvmB,EAAI2P,kBACJ3P,EAAIpmB,SAAS2d,GACbhnB,YAAW,KACH0Z,EAAKQ,YACLR,EAAKQ,WAAWyrB,YAAYjsB,GAChCgf,EAAKmC,OAAL,GACD,GACN,CAtGD6V,GAAauF,iBAAmBvF,GAAawF,kBAAoBxd,IAC7D,IAAKA,EAAKyL,UAAW,CACjBzL,EAAKoS,YAAYqL,QACjB,IAAI,MAAEnkC,GAAU0mB,EAAMrQ,EAAOrW,EAAM2d,UAAUxnB,MAC7C,GAAI6J,EAAM2d,UAAU/qB,QACfoN,EAAM6e,cACDxI,EAAK3e,YAAc2e,EAAK3f,cAAgB2f,EAAKze,WAAW/C,MAAMuO,MAAKpZ,IAA+B,IAA1BA,EAAEkI,KAAK9H,KAAKwO,aAE1F8tB,EAAK0d,WAAa1d,EAAK1mB,MAAM6e,aAAexI,EAAKxhB,QACjDgtC,GAAenb,GAAM,GACrBA,EAAK0d,WAAa,UAOlB,GAJAvC,GAAenb,GAIX7D,IAAS7iB,EAAM2d,UAAU/qB,OAASyjB,EAAK3f,eAAiB2f,EAAK3e,YAAc2e,EAAKze,WAAW/C,MAAMtG,OAAQ,CACzG,IAAIkvB,EAAMiJ,EAAK+F,eACf,IAAK,IAAIz6B,EAAOyrB,EAAIoP,UAAW54B,EAASwpB,EAAIsP,YAAa/6B,GAAyB,GAAjBA,EAAK8J,UAA2B,GAAV7H,GAAc,CACjG,IAAIsE,EAAStE,EAAS,EAAIjC,EAAKM,UAAYN,EAAKmZ,WAAWlX,EAAS,GACpE,IAAKsE,EACD,MACJ,GAAuB,GAAnBA,EAAOuD,SAAe,CACtB2hB,EAAI2S,SAAS73B,EAAQA,EAAO8Q,UAAU9a,QACtC,KACH,CAEGyD,EAAOuG,EACPtE,GAAU,CAEjB,CACJ,CAELyyB,EAAKkN,MAAMzB,WAAY,CAC1B,CACDqR,GAAmB9c,EAAM6c,GAAzB,EAEJ7E,GAAa2F,eAAiB,CAAC3d,EAAMpB,KAC7BoB,EAAKyL,YACLzL,EAAKkN,MAAMzB,WAAY,EACvBzL,EAAKkN,MAAM8L,mBAAqBpa,EAAM+d,UACtCG,GAAmB9c,EAAM,IAC5B,EA+DL,MAAM4d,GAAsB5hB,IAAMC,GAAa,IAC1CQ,IAAOO,GAAiB,IAqB7B,SAAS6gB,GAAgB11C,GACrB,OAA0B,GAAnBA,EAAMsG,WAAmC,GAAjBtG,EAAMuG,SAA4C,GAA5BvG,EAAMT,QAAQ6B,WAAkBpB,EAAMT,QAAQoE,WAAa,IACnH,CACD,SAASgyC,GAAa9d,EAAMpB,GACxB,IAAKoB,EAAKrjB,IAAI6E,WACV,OACJ,IAAIq0B,EAAY7V,EAAKkN,MAAMiI,UAAYnV,EAAK1mB,MAAM2d,UAAUxnB,MAAM5E,OAAOW,KAAK9H,KAAKzB,KAC/EyO,EAASsvB,EAAKrjB,IAAI6E,WAAW6E,YAAYiC,SAASR,cAAc+tB,EAAY,WAAa,QACxFA,IACDnlC,EAAOstB,gBAAkB,QAC7BttB,EAAO8L,MAAM4yB,QAAU,6CACvB1+B,EAAOyxB,QACP76B,YAAW,KACP04B,EAAKmC,QACDzxB,EAAO8Q,YACP9Q,EAAO8Q,WAAWyrB,YAAYv8B,GAC9BmlC,EACAkI,GAAQ/d,EAAMtvB,EAAO5P,MAAO,KAAM89B,GAElCmf,GAAQ/d,EAAMtvB,EAAO6C,YAAa7C,EAAOmnC,UAAWjZ,EAApD,GACL,GACN,CACD,SAASmf,GAAQ/d,EAAMn2B,EAAM+rC,EAAMhX,GAC/B,IAAIz2B,EAAQwtC,GAAmB3V,EAAMn2B,EAAM+rC,EAAM5V,EAAKkN,MAAMiI,SAAUnV,EAAK1mB,MAAM2d,UAAUxnB,OAC3F,GAAIuwB,EAAKG,SAAS,eAAet8B,GAAKA,EAAEm8B,EAAMpB,EAAOz2B,GAASqG,GAAAA,SAC1D,OAAO,EACX,IAAKrG,EACD,OAAO,EACX,IAAI61C,EAAaH,GAAgB11C,GAC7BqlB,EAAKwwB,EACHhe,EAAK1mB,MAAMkU,GAAGmL,qBAAqBqlB,EAAYhe,EAAKkN,MAAMiI,UAC1DnV,EAAK1mB,MAAMkU,GAAGkL,iBAAiBvwB,GAErC,OADA63B,EAAK6T,SAASrmB,EAAG0L,iBAAiBH,QAAQ,SAAS,GAAMA,QAAQ,UAAW,WACrE,CACV,CAtDDgf,GAASzrC,KAAO0rC,GAAahsC,IAAM,CAACg0B,EAAMqb,KACtC,IAAIzc,EAAQyc,EACRtkB,EAAMiJ,EAAK1mB,MAAM2d,UAAWjrB,EAAoB,OAAd4yB,EAAMpzB,KAC5C,GAAIurB,EAAI7qB,MACJ,OAEJ,IAAI+xC,EAAOL,GAAqB,KAAOhf,EAAMsf,cACzC/1C,EAAQ4uB,EAAIrvB,WAAW,IAAEiV,EAAF,KAAO9S,GAASwrC,GAAsBrV,EAAM73B,GACnE81C,GACArf,EAAM4c,iBACNyC,EAAKE,YACLF,EAAKG,QAAQ,YAAazhC,EAAIk7B,WAC9BoG,EAAKG,QAAQ,aAAcv0C,IAG3BuzC,GAAYpd,EAAMrjB,GAElB3Q,GACAg0B,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAGqL,kBAAkBK,iBAAiBH,QAAQ,UAAW,OAAlF,EAqCRif,GAAaqG,MAAQ,CAACre,EAAMqb,KACxB,IAAIzc,EAAQyc,EAKZ,GAAIrb,EAAKyL,YAAc5O,GACnB,OACJ,IAAIohB,EAAOL,GAAqB,KAAOhf,EAAMsf,cACzCD,GAAQF,GAAQ/d,EAAMie,EAAKK,QAAQ,cAAeL,EAAKK,QAAQ,aAAc1f,GAC7EA,EAAM4c,iBAENsC,GAAa9d,EAAMpB,EAAnB,EAER,MAAM2f,GACF38C,YAAYuG,EAAOqqB,GACfnyB,KAAK8H,MAAQA,EACb9H,KAAKmyB,KAAOA,CACf,EAEL,MAAMgsB,GAAmB7hB,GAAM,SAAW,UAC1Cob,GAAS0G,UAAY,CAACze,EAAMqb,KACxB,IAAIzc,EAAQyc,EACRpJ,EAAYjS,EAAKkN,MAAM+E,UAG3B,GAFIA,GACAA,EAAU1rC,QACTq4B,EAAM8f,aACP,OACJ,IAAI3nB,EAAMiJ,EAAK1mB,MAAM2d,UACjB3tB,EAAMytB,EAAI7qB,MAAQ,KAAO8zB,EAAKkE,YAAY6V,GAAYnb,IAC1D,GAAIt1B,GAAOA,EAAIA,KAAOytB,EAAIjuB,MAAQQ,EAAIA,MAAQytB,aAAeJ,GAAgBI,EAAIpsB,GAAK,EAAIosB,EAAIpsB,UACzF,GAAIsnC,GAAaA,EAAUkK,UAC5Bnc,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAG0J,aAAaP,GAAAA,OAAqBqJ,EAAK1mB,MAAM3H,IAAKsgC,EAAUkK,UAAU7yC,YAEjG,GAAIs1B,EAAMluB,QAAmC,GAAzBkuB,EAAMluB,OAAO0E,SAAe,CACjD,IAAIikB,EAAO2G,EAAKuD,QAAQI,YAAY/E,EAAMluB,QAAQ,GAC9C2oB,GAAQA,EAAK/tB,KAAKE,KAAK9H,KAAK8gC,WAAanL,GAAQ2G,EAAKuD,SACtDvD,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAG0J,aAAaP,GAAAA,OAAqBqJ,EAAK1mB,MAAM3H,IAAK0nB,EAAKuK,YAC1F,CACD,IAAIz7B,EAAQ63B,EAAK1mB,MAAM2d,UAAUvvB,WAAW,IAAEiV,EAAF,KAAO9S,GAASwrC,GAAsBrV,EAAM73B,GACxFy2B,EAAM8f,aAAaP,YACnBvf,EAAM8f,aAAaN,QAAQR,GAAqB,OAAS,YAAajhC,EAAIk7B,WAE1EjZ,EAAM8f,aAAaC,cAAgB,WAC9Bf,IACDhf,EAAM8f,aAAaN,QAAQ,aAAcv0C,GAC7Cm2B,EAAK4e,SAAW,IAAIL,GAASp2C,GAAQy2B,EAAM4f,IAA3C,EAEJzG,GAAS8G,QAAU7e,IACf,IAAI4e,EAAW5e,EAAK4e,SACpBr2B,OAAOjhB,YAAW,KACV04B,EAAK4e,UAAYA,IACjB5e,EAAK4e,SAAW,KAAhB,GACL,GAHH,EAKJ5G,GAAa8G,SAAW9G,GAAa+G,UAAY,CAAC9wC,EAAGxM,IAAMA,EAAE+5C,iBAC7DxD,GAAagH,KAAO,CAAChf,EAAMqb,KACvB,IAAIzc,EAAQyc,EACRuD,EAAW5e,EAAK4e,SAEpB,GADA5e,EAAK4e,SAAW,MACXhgB,EAAM8f,aACP,OACJ,IAAIO,EAAWjf,EAAKkE,YAAY6V,GAAYnb,IAC5C,IAAKqgB,EACD,OACJ,IAAIC,EAASlf,EAAK1mB,MAAM3H,IAAIsB,QAAQgsC,EAAS31C,KACzCnB,EAAQy2C,GAAYA,EAASz2C,MAC7BA,EACA63B,EAAKG,SAAS,mBAAmBt8B,IAAOsE,EAAQtE,EAAEsE,EAAV,IAGxCA,EAAQwtC,GAAmB3V,EAAMpB,EAAM8f,aAAaJ,QAAQV,GAAqB,OAAS,cAAeA,GAAqB,KAAOhf,EAAM8f,aAAaJ,QAAQ,cAAc,EAAOY,GAEzL,IAAI1sB,KAAUosB,GAAahgB,EAAM4f,KACjC,GAAIxe,EAAKG,SAAS,cAAct8B,GAAKA,EAAEm8B,EAAMpB,EAAOz2B,GAASqG,GAAAA,MAAagkB,KAEtE,YADAoM,EAAM4c,iBAGV,IAAKrzC,EACD,OACJy2B,EAAM4c,iBACN,IAAI9qB,EAAYvoB,EAAQooB,GAAUyP,EAAK1mB,MAAM3H,IAAKutC,EAAO51C,IAAKnB,GAAS+2C,EAAO51C,IAC7D,MAAbonB,IACAA,EAAYwuB,EAAO51C,KACvB,IAAIkkB,EAAKwS,EAAK1mB,MAAMkU,GAChBgF,GACAhF,EAAGqL,kBACP,IAAIvvB,EAAMkkB,EAAGtC,QAAQ7nB,IAAIqtB,GACrByuB,EAA4B,GAAnBh3C,EAAMsG,WAAmC,GAAjBtG,EAAMuG,SAA4C,GAA5BvG,EAAMT,QAAQ6B,WACrE61C,EAAe5xB,EAAG7b,IAKtB,GAJIwtC,EACA3xB,EAAGwG,iBAAiB1qB,EAAKA,EAAKnB,EAAMT,QAAQoE,YAE5C0hB,EAAGsF,aAAaxpB,EAAKA,EAAKnB,GAC1BqlB,EAAG7b,IAAIpF,GAAG6yC,GACV,OACJ,IAAIzvB,EAAOnC,EAAG7b,IAAIsB,QAAQ3J,GAC1B,GAAI61C,GAAUxoB,GAAAA,aAA2BxuB,EAAMT,QAAQoE,aACnD6jB,EAAK1e,WAAa0e,EAAK1e,UAAUtH,WAAWxB,EAAMT,QAAQoE,YAC1D0hB,EAAG0J,aAAa,IAAIP,GAAchH,QAEjC,CACD,IAAI7kB,EAAM0iB,EAAGtC,QAAQ7nB,IAAIqtB,GACzBlD,EAAGtC,QAAQN,KAAK4C,EAAGtC,QAAQN,KAAK/iB,OAAS,GAAGe,SAAQ,CAACyuB,EAAOC,EAAKC,EAAUC,IAAU1sB,EAAM0sB,IAC3FhK,EAAG0J,aAAawa,GAAiB1R,EAAMrQ,EAAMnC,EAAG7b,IAAIsB,QAAQnI,IAC/D,CACDk1B,EAAKmC,QACLnC,EAAK6T,SAASrmB,EAAGuL,QAAQ,UAAW,QAApC,EAEJgf,GAAS5V,MAAQnC,IACbA,EAAKkN,MAAM0L,UAAY5gB,KAAKC,MACvB+H,EAAKwa,UACNxa,EAAKoS,YAAY/H,OACjBrK,EAAKrjB,IAAIytB,UAAUljB,IAAI,uBACvB8Y,EAAKoS,YAAYrnC,QACjBi1B,EAAKwa,SAAU,EACflzC,YAAW,KACH04B,EAAKuD,SAAWvD,EAAK6R,aAAe7R,EAAKoS,YAAYC,iBAAiB9lC,GAAGyzB,EAAK+F,iBAC9EgM,GAAe/R,EAAf,GACL,IACN,EAEL+X,GAASuF,KAAO,CAACtd,EAAMqb,KACnB,IAAIzc,EAAQyc,EACRrb,EAAKwa,UACLxa,EAAKoS,YAAY/H,OACjBrK,EAAKrjB,IAAIytB,UAAUliC,OAAO,uBAC1B83B,EAAKoS,YAAYrnC,QACb6zB,EAAMygB,eAAiBrf,EAAKrjB,IAAI0I,SAASuZ,EAAMygB,gBAC/Crf,EAAKoS,YAAYC,iBAAiBiN,QACtCtf,EAAKwa,SAAU,EAClB,EAELzC,GAASwH,YAAc,CAACvf,EAAMqb,KAC1B,IAAIzc,EAAQyc,EAKZ,GAAIhf,IAAUQ,IAA8B,yBAAnB+B,EAAM4gB,UAAsC,CACjExf,EAAKoS,YAAYqN,YACjB,IAAI,eAAExG,GAAmBjZ,EAAKkN,MAC9B5lC,YAAW,KACP,GAAI04B,EAAKkN,MAAM+L,gBAAkBA,EAC7B,OAIJ,GAFAjZ,EAAKrjB,IAAI2gC,OACTtd,EAAKmC,QACDnC,EAAKG,SAAS,iBAAiBt8B,GAAKA,EAAEm8B,EAAMtB,GAAS,EAAG,gBACxD,OACJ,IAAI,QAAEpI,GAAY0J,EAAK1mB,MAAM2d,UAEzBX,GAAWA,EAAQhtB,IAAM,GACzB02B,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAG2G,OAAOmC,EAAQhtB,IAAM,EAAGgtB,EAAQhtB,KAAK4vB,iBAAjE,GACL,GACN,GAGL,IAAK,IAAI/vB,MAAQ6uC,GACbD,GAAS5uC,IAAQ6uC,GAAa7uC,IAElC,SAASu2C,GAAYz8C,EAAGoG,GACpB,GAAIpG,GAAKoG,EACL,OAAO,EACX,IAAK,IAAI/G,KAAKW,EACV,GAAIA,EAAEX,KAAO+G,EAAE/G,GACX,OAAO,EACf,IAAK,IAAIA,KAAK+G,EACV,KAAM/G,KAAKW,GACP,OAAO,EACf,OAAO,CACV,CACD,MAAM08C,GACF/9C,YAAY4lB,EAAO9jB,GACfrD,KAAKmnB,MAAQA,EACbnnB,KAAKqD,KAAOA,GAAQk8C,GACpBv/C,KAAKgqB,KAAOhqB,KAAKqD,KAAK2mB,MAAQ,CACjC,CACDhnB,IAAI6nB,EAAS20B,EAAMtyC,EAAQuyC,GACvB,IAAI,IAAEx2C,EAAF,QAAO+f,GAAY6B,EAAQrB,UAAUg2B,EAAK/2C,KAAOg3C,EAAWz/C,KAAKgqB,KAAO,GAAK,EAAI,GACrF,OAAOhB,EAAU,KAAO,IAAI02B,GAAWz2C,EAAMiE,EAAQjE,EAAMiE,EAAQlN,KACtE,CACD2/C,QAAU,OAAO,CAAO,CACxBzzC,GAAGb,GACC,OAAOrL,MAAQqL,GACVA,aAAiBi0C,KACbt/C,KAAKqD,KAAKkE,KAAOvH,KAAKqD,KAAKkE,KAAO8D,EAAMhI,KAAKkE,KAC1CvH,KAAKmnB,OAAS9b,EAAM8b,OAASk4B,GAAYr/C,KAAKqD,KAAMgI,EAAMhI,MACzE,CACDqkC,QAAQz8B,GACAjL,KAAKqD,KAAKqkC,SACV1nC,KAAKqD,KAAKqkC,QAAQz8B,EACzB,EAEL,MAAM20C,GACFr+C,YAAYhB,EAAO8C,GACfrD,KAAKO,MAAQA,EACbP,KAAKqD,KAAOA,GAAQk8C,EACvB,CACDv8C,IAAI6nB,EAAS20B,EAAMtyC,EAAQuyC,GACvB,IAAIh3C,EAAOoiB,EAAQ7nB,IAAIw8C,EAAK/2C,KAAOg3C,EAAWz/C,KAAKqD,KAAKw8C,gBAAkB,EAAI,GAAK3yC,EAC/E5C,EAAKugB,EAAQ7nB,IAAIw8C,EAAKl1C,GAAKm1C,EAAWz/C,KAAKqD,KAAKy8C,aAAe,GAAK,GAAK5yC,EAC7E,OAAOzE,GAAQ6B,EAAK,KAAO,IAAIo1C,GAAWj3C,EAAM6B,EAAItK,KACvD,CACD2/C,MAAM/xC,EAAG4xC,GAAQ,OAAOA,EAAK/2C,KAAO+2C,EAAKl1C,EAAK,CAC9C4B,GAAGb,GACC,OAAOrL,MAAQqL,GACVA,aAAiBu0C,IAAcP,GAAYr/C,KAAKO,MAAO8K,EAAM9K,QAC1D8+C,GAAYr/C,KAAKqD,KAAMgI,EAAMhI,KACxC,CACQ,UAACm8C,GAAQ,OAAOA,EAAKr0C,gBAAgBy0C,EAAa,CAC3DlY,UAAa,EAEjB,MAAM5tB,GACFvY,YAAYhB,EAAO8C,GACfrD,KAAKO,MAAQA,EACbP,KAAKqD,KAAOA,GAAQk8C,EACvB,CACDv8C,IAAI6nB,EAAS20B,EAAMtyC,EAAQuyC,GACvB,IAAIh3C,EAAOoiB,EAAQrB,UAAUg2B,EAAK/2C,KAAOg3C,EAAW,GACpD,GAAIh3C,EAAKugB,QACL,OAAO,KACX,IAAI1e,EAAKugB,EAAQrB,UAAUg2B,EAAKl1C,GAAKm1C,GAAY,GACjD,OAAIn1C,EAAG0e,SAAW1e,EAAGrB,KAAOR,EAAKQ,IACtB,KACJ,IAAIy2C,GAAWj3C,EAAKQ,IAAMiE,EAAQ5C,EAAGrB,IAAMiE,EAAQlN,KAC7D,CACD2/C,MAAM10C,EAAMu0C,GACR,IAA2Dp2C,GAAvD,MAAE2C,EAAF,OAASmB,GAAWjC,EAAK5D,QAAQiF,UAAUkzC,EAAK/2C,MACpD,OAAOyE,GAAUsyC,EAAK/2C,QAAUW,EAAQ6B,EAAK7B,MAAM2C,IAAQxC,QAAU2D,EAAS9D,EAAMM,UAAY81C,EAAKl1C,EACxG,CACD4B,GAAGb,GACC,OAAOrL,MAAQqL,GACVA,aAAiByO,IAAYulC,GAAYr/C,KAAKO,MAAO8K,EAAM9K,QACxD8+C,GAAYr/C,KAAKqD,KAAMgI,EAAMhI,KACxC,CACDqkC,UAAa,EAOjB,MAAMgY,GAIFn+C,YAIAkH,EAKA6B,EAIAa,GACInL,KAAKyI,KAAOA,EACZzI,KAAKsK,GAAKA,EACVtK,KAAKmL,KAAOA,CACf,CAIDc,KAAKxD,EAAM6B,GACP,OAAO,IAAIo1C,GAAWj3C,EAAM6B,EAAItK,KAAKmL,KACxC,CAIDe,GAAGb,EAAO6B,EAAS,GACf,OAAOlN,KAAKmL,KAAKe,GAAGb,EAAMF,OAASnL,KAAKyI,KAAOyE,GAAU7B,EAAM5C,MAAQzI,KAAKsK,GAAK4C,GAAU7B,EAAMf,EACpG,CAIDtH,IAAI6nB,EAAS3d,EAAQuyC,GACjB,OAAOz/C,KAAKmL,KAAKnI,IAAI6nB,EAAS7qB,KAAMkN,EAAQuyC,EAC/C,CASY,cAACx2C,EAAKke,EAAO9jB,GACtB,OAAO,IAAIq8C,GAAWz2C,EAAKA,EAAK,IAAIq2C,GAAWn4B,EAAO9jB,GACzD,CAKY,cAACoF,EAAM6B,EAAI/J,EAAO8C,GAC3B,OAAO,IAAIq8C,GAAWj3C,EAAM6B,EAAI,IAAIs1C,GAAWr/C,EAAO8C,GACzD,CAMU,YAACoF,EAAM6B,EAAI/J,EAAO8C,GACzB,OAAO,IAAIq8C,GAAWj3C,EAAM6B,EAAI,IAAIwP,GAASvZ,EAAO8C,GACvD,CAKGA,WAAS,OAAOrD,KAAKmL,KAAK9H,IAAO,CAIjCiU,aAAW,OAAOtX,KAAKmL,gBAAgBy0C,EAAa,EAE5D,MAAM5xC,GAAO,GAAIuxC,GAAS,CAAC,EAO3B,MAAMQ,GAIFx+C,YAAYy+C,EAAOjZ,GACf/mC,KAAKggD,MAAQA,EAAMx4C,OAASw4C,EAAQhyC,GACpChO,KAAK+mC,SAAWA,EAASv/B,OAASu/B,EAAW/4B,EAChD,CAKY,cAACsD,EAAK2uC,GACf,OAAOA,EAAYz4C,OAAS04C,GAAUD,EAAa3uC,EAAK,EAAGiuC,IAAU1zC,EACxE,CASD1G,KAAKuF,EAAOD,EAAK01C,GACb,IAAIt3C,EAAS,GAEb,OADA7I,KAAKogD,UAAmB,MAAT11C,EAAgB,EAAIA,EAAc,MAAPD,EAAc,IAAMA,EAAK5B,EAAQ,EAAGs3C,GACvEt3C,CACV,CACDu3C,UAAU11C,EAAOD,EAAK5B,EAAQqE,EAAQizC,GAClC,IAAK,IAAIt9C,EAAI,EAAGA,EAAI7C,KAAKggD,MAAMx4C,OAAQ3E,IAAK,CACxC,IAAI28C,EAAOx/C,KAAKggD,MAAMn9C,GAClB28C,EAAK/2C,MAAQgC,GAAO+0C,EAAKl1C,IAAMI,KAAWy1C,GAAaA,EAAUX,EAAKn8C,QACtEwF,EAAOd,KAAKy3C,EAAKvzC,KAAKuzC,EAAK/2C,KAAOyE,EAAQsyC,EAAKl1C,GAAK4C,GAC3D,CACD,IAAK,IAAIrK,EAAI,EAAGA,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,GAAK,EAC3C,GAAI7C,KAAK+mC,SAASlkC,GAAK4H,GAAOzK,KAAK+mC,SAASlkC,EAAI,GAAK6H,EAAO,CACxD,IAAI21C,EAAWrgD,KAAK+mC,SAASlkC,GAAK,EAClC7C,KAAK+mC,SAASlkC,EAAI,GAAGu9C,UAAU11C,EAAQ21C,EAAU51C,EAAM41C,EAAUx3C,EAAQqE,EAASmzC,EAAUF,EAC/F,CAER,CAKDn9C,IAAI6nB,EAASvZ,EAAKsJ,GACd,OAAI5a,MAAQ6L,IAAgC,GAAvBgf,EAAQN,KAAK/iB,OACvBxH,KACJA,KAAKsgD,SAASz1B,EAASvZ,EAAK,EAAG,EAAGsJ,GAAW2kC,GACvD,CAIDe,SAASz1B,EAAS5f,EAAMiC,EAAQuyC,EAAW7kC,GACvC,IAAI2lC,EACJ,IAAK,IAAI19C,EAAI,EAAGA,EAAI7C,KAAKggD,MAAMx4C,OAAQ3E,IAAK,CACxC,IAAIopB,EAASjsB,KAAKggD,MAAMn9C,GAAGG,IAAI6nB,EAAS3d,EAAQuyC,GAC5CxzB,GAAUA,EAAO9gB,KAAKw0C,MAAM10C,EAAMghB,IACjCs0B,IAAaA,EAAW,KAAKx4C,KAAKkkB,GAC9BrR,EAAQ4lC,UACb5lC,EAAQ4lC,SAASxgD,KAAKggD,MAAMn9C,GAAGQ,KACtC,CACD,OAAIrD,KAAK+mC,SAASv/B,OACPi5C,GAAYzgD,KAAK+mC,SAAUwZ,GAAY,GAAI11B,EAAS5f,EAAMiC,EAAQuyC,EAAW7kC,GAE7E2lC,EAAW,IAAIR,GAAcQ,EAAStyC,KAAKyyC,IAAQ1yC,IAAQnC,EACzE,CAMDgb,IAAIvV,EAAK2uC,GACL,OAAKA,EAAYz4C,OAEbxH,MAAQ6L,GACDk0C,GAAchyC,OAAOuD,EAAK2uC,GAC9BjgD,KAAK2gD,SAASrvC,EAAK2uC,EAAa,GAH5BjgD,IAId,CACD2gD,SAASrvC,EAAK2uC,EAAa/yC,GACvB,IAAI65B,EAAUvE,EAAa,EAC3BlxB,EAAI/I,SAAQ,CAACq4C,EAAWC,KACpB,IAAuCp5C,EAAnCq5C,EAAaD,EAAc3zC,EAC/B,GAAMzF,EAAQs5C,GAAiBd,EAAaW,EAAWE,GAAvD,CAEK/Z,IACDA,EAAW/mC,KAAK+mC,SAASj/B,SAC7B,MAAO06B,EAAauE,EAASv/B,QAAUu/B,EAASvE,GAAcqe,EAC1Dre,GAAc,EACduE,EAASvE,IAAeqe,EACxB9Z,EAASvE,EAAa,GAAKuE,EAASvE,EAAa,GAAGme,SAASC,EAAWn5C,EAAOq5C,EAAa,GAE5F/Z,EAAS/+B,OAAOw6B,EAAY,EAAGqe,EAAaA,EAAcD,EAAUl3C,SAAUw2C,GAAUz4C,EAAOm5C,EAAWE,EAAa,EAAGvB,KAC9H/c,GAAc,CATJ,CASV,IAEJ,IAAIwd,EAAQgB,GAAUxe,EAAaye,GAAahB,GAAeA,GAAc/yC,GAC7E,IAAK,IAAIrK,EAAI,EAAGA,EAAIm9C,EAAMx4C,OAAQ3E,IACzBm9C,EAAMn9C,GAAGsI,KAAKw0C,MAAMruC,EAAK0uC,EAAMn9C,KAChCm9C,EAAMh4C,OAAOnF,IAAK,GAC1B,OAAO,IAAIk9C,GAAcC,EAAMx4C,OAASxH,KAAKggD,MAAM93C,OAAO83C,GAAO/xC,KAAKyyC,IAAS1gD,KAAKggD,MAAOjZ,GAAY/mC,KAAK+mC,SAC/G,CAKDl/B,OAAOo4C,GACH,OAA0B,GAAtBA,EAAYz4C,QAAexH,MAAQ6L,GAC5B7L,KACJA,KAAKkhD,YAAYjB,EAAa,EACxC,CACDiB,YAAYjB,EAAa/yC,GACrB,IAAI65B,EAAW/mC,KAAK+mC,SAAUiZ,EAAQhgD,KAAKggD,MAC3C,IAAK,IAAIn9C,EAAI,EAAGA,EAAIkkC,EAASv/B,OAAQ3E,GAAK,EAAG,CACzC,IAAI4E,EACAgB,EAAOs+B,EAASlkC,GAAKqK,EAAQ5C,EAAKy8B,EAASlkC,EAAI,GAAKqK,EACxD,IAAK,IAAWsyC,EAAP95C,EAAI,EAASA,EAAIu6C,EAAYz4C,OAAQ9B,KACtC85C,EAAOS,EAAYv6C,KACf85C,EAAK/2C,KAAOA,GAAQ+2C,EAAKl1C,GAAKA,IAC9B21C,EAAYv6C,GAAK,MAChB+B,IAAUA,EAAQ,KAAKM,KAAKy3C,IAGzC,IAAK/3C,EACD,SACAs/B,GAAY/mC,KAAK+mC,WACjBA,EAAW/mC,KAAK+mC,SAASj/B,SAC7B,IAAIwlB,EAAUyZ,EAASlkC,EAAI,GAAGq+C,YAAYz5C,EAAOgB,EAAO,GACpD6kB,GAAWzhB,GACXk7B,EAASlkC,EAAI,GAAKyqB,GAGlByZ,EAAS/+B,OAAOnF,EAAG,GACnBA,GAAK,EAEZ,CACD,GAAIm9C,EAAMx4C,OACN,IAAK,IAAWg4C,EAAP38C,EAAI,EAASA,EAAIo9C,EAAYz4C,OAAQ3E,IAC1C,GAAI28C,EAAOS,EAAYp9C,GACnB,IAAK,IAAI6C,EAAI,EAAGA,EAAIs6C,EAAMx4C,OAAQ9B,IAC1Bs6C,EAAMt6C,GAAGwG,GAAGszC,EAAMtyC,KACd8yC,GAAShgD,KAAKggD,QACdA,EAAQhgD,KAAKggD,MAAMl4C,SACvBk4C,EAAMh4C,OAAOtC,IAAK,IAGtC,OAAIqhC,GAAY/mC,KAAK+mC,UAAYiZ,GAAShgD,KAAKggD,MACpChgD,KACJggD,EAAMx4C,QAAUu/B,EAASv/B,OAAS,IAAIu4C,GAAcC,EAAOjZ,GAAYl7B,EACjF,CAID0kC,SAASrjC,EAAQjC,GACb,GAAIjL,MAAQ6L,GACR,OAAO7L,KACX,GAAIiL,EAAKC,OACL,OAAO60C,GAAcl0C,MACzB,IAAIzC,EAAO42C,EACX,IAAK,IAAIn9C,EAAI,EAAGA,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,GAAK,EAC3C,GAAI7C,KAAK+mC,SAASlkC,IAAMqK,EAAQ,CACxBlN,KAAK+mC,SAASlkC,IAAMqK,IACpB9D,EAAQpJ,KAAK+mC,SAASlkC,EAAI,IAC9B,KACH,CACL,IAAI6H,EAAQwC,EAAS,EAAGzC,EAAMC,EAAQO,EAAK5D,QAAQqB,KACnD,IAAK,IAAI7F,EAAI,EAAGA,EAAI7C,KAAKggD,MAAMx4C,OAAQ3E,IAAK,CACxC,IAAIs+C,EAAMnhD,KAAKggD,MAAMn9C,GACrB,GAAIs+C,EAAI14C,KAAOgC,GAAO02C,EAAI72C,GAAKI,GAAUy2C,EAAIh2C,gBAAgBy0C,GAAa,CACtE,IAAIn3C,EAAOyB,KAAKS,IAAID,EAAOy2C,EAAI14C,MAAQiC,EAAOJ,EAAKJ,KAAKC,IAAIM,EAAK02C,EAAI72C,IAAMI,EACvEjC,EAAO6B,IACN01C,IAAUA,EAAQ,KAAKj4C,KAAKo5C,EAAIl1C,KAAKxD,EAAM6B,GACnD,CACJ,CACD,GAAI01C,EAAO,CACP,IAAIoB,EAAW,IAAIrB,GAAcC,EAAM/xC,KAAKyyC,IAAQ1yC,IACpD,OAAO5E,EAAQ,IAAIi4C,GAAgB,CAACD,EAAUh4C,IAAUg4C,CAC3D,CACD,OAAOh4C,GAASyC,EACnB,CAIDK,GAAGb,GACC,GAAIrL,MAAQqL,EACR,OAAO,EACX,KAAMA,aAAiB00C,KACnB//C,KAAKggD,MAAMx4C,QAAU6D,EAAM20C,MAAMx4C,QACjCxH,KAAK+mC,SAASv/B,QAAU6D,EAAM07B,SAASv/B,OACvC,OAAO,EACX,IAAK,IAAI3E,EAAI,EAAGA,EAAI7C,KAAKggD,MAAMx4C,OAAQ3E,IACnC,IAAK7C,KAAKggD,MAAMn9C,GAAGqJ,GAAGb,EAAM20C,MAAMn9C,IAC9B,OAAO,EACf,IAAK,IAAIA,EAAI,EAAGA,EAAI7C,KAAK+mC,SAASv/B,OAAQ3E,GAAK,EAC3C,GAAI7C,KAAK+mC,SAASlkC,IAAMwI,EAAM07B,SAASlkC,IACnC7C,KAAK+mC,SAASlkC,EAAI,IAAMwI,EAAM07B,SAASlkC,EAAI,KAC1C7C,KAAK+mC,SAASlkC,EAAI,GAAGqJ,GAAGb,EAAM07B,SAASlkC,EAAI,IAC5C,OAAO,EACf,OAAO,CACV,CAIDytC,OAAOrlC,GACH,OAAOq2C,GAActhD,KAAKuhD,YAAYt2C,GACzC,CAIDs2C,YAAYt2C,GACR,GAAIjL,MAAQ6L,GACR,OAAOmC,GACX,GAAI/C,EAAKmH,gBAAkBpS,KAAKggD,MAAM3jC,KAAKujC,GAAW4B,IAClD,OAAOxhD,KAAKggD,MAChB,IAAIn3C,EAAS,GACb,IAAK,IAAIhG,EAAI,EAAGA,EAAI7C,KAAKggD,MAAMx4C,OAAQ3E,IAC7B7C,KAAKggD,MAAMn9C,GAAGsI,gBAAgBy0C,IAChC/2C,EAAOd,KAAK/H,KAAKggD,MAAMn9C,IAE/B,OAAOgG,CACV,EAKLk3C,GAAcl0C,MAAQ,IAAIk0C,GAAc,GAAI,IAI5CA,GAAcuB,cAAgBA,GAC9B,MAAMz1C,GAAQk0C,GAAcl0C,MAI5B,MAAMw1C,GACF9/C,YAAYkgD,GACRzhD,KAAKyhD,QAAUA,CAClB,CACDz+C,IAAI6nB,EAASvZ,GACT,MAAMowC,EAAc1hD,KAAKyhD,QAAQz+C,KAAI2+C,GAAUA,EAAO3+C,IAAI6nB,EAASvZ,EAAKiuC,MACxE,OAAO8B,GAAgB54C,KAAKi5C,EAC/B,CACDnR,SAASrjC,EAAQ9D,GACb,GAAIA,EAAM8B,OACN,OAAO60C,GAAcl0C,MACzB,IAAIpE,EAAQ,GACZ,IAAK,IAAI5E,EAAI,EAAGA,EAAI7C,KAAKyhD,QAAQj6C,OAAQ3E,IAAK,CAC1C,IAAIgG,EAAS7I,KAAKyhD,QAAQ5+C,GAAG0tC,SAASrjC,EAAQ9D,GAC1CP,GAAUgD,KAEVhD,aAAkBw4C,GAClB55C,EAAQA,EAAMS,OAAOW,EAAO44C,SAE5Bh6C,EAAMM,KAAKc,GAClB,CACD,OAAOw4C,GAAgB54C,KAAKhB,EAC/B,CACDyE,GAAGb,GACC,KAAMA,aAAiBg2C,KACnBh2C,EAAMo2C,QAAQj6C,QAAUxH,KAAKyhD,QAAQj6C,OACrC,OAAO,EACX,IAAK,IAAI3E,EAAI,EAAGA,EAAI7C,KAAKyhD,QAAQj6C,OAAQ3E,IACrC,IAAK7C,KAAKyhD,QAAQ5+C,GAAGqJ,GAAGb,EAAMo2C,QAAQ5+C,IAClC,OAAO,EACf,OAAO,CACV,CACDytC,OAAOrlC,GACH,IAAIpC,EAAQ+4C,GAAS,EACrB,IAAK,IAAI/+C,EAAI,EAAGA,EAAI7C,KAAKyhD,QAAQj6C,OAAQ3E,IAAK,CAC1C,IAAIytC,EAAStwC,KAAKyhD,QAAQ5+C,GAAG0+C,YAAYt2C,GACzC,GAAKqlC,EAAO9oC,OAEZ,GAAKqB,EAGA,CACG+4C,IACA/4C,EAASA,EAAOf,QAChB85C,GAAS,GAEb,IAAK,IAAIl8C,EAAI,EAAGA,EAAI4qC,EAAO9oC,OAAQ9B,IAC/BmD,EAAOd,KAAKuoC,EAAO5qC,GAC1B,MATGmD,EAASynC,CAUhB,CACD,OAAOznC,EAASy4C,GAAcM,EAAS/4C,EAASA,EAAOoF,KAAKyyC,KAAU1yC,EACzE,CAGU,YAACyzC,GACR,OAAQA,EAAQj6C,QACZ,KAAK,EAAG,OAAOqE,GACf,KAAK,EAAG,OAAO41C,EAAQ,GACvB,QAAS,OAAO,IAAIJ,GAAgBI,GAE3C,EAEL,SAAShB,GAAYoB,EAAatB,EAAU11B,EAAS5f,EAAMiC,EAAQuyC,EAAW7kC,GAC1E,IAAImsB,EAAW8a,EAAY/5C,QAG3B,IAAK,IAAIjF,EAAI,EAAGi+C,EAAarB,EAAW58C,EAAIgoB,EAAQN,KAAK/iB,OAAQ3E,IAAK,CAClE,IAAIi/C,EAAQ,EACZj3B,EAAQN,KAAK1nB,GAAG0F,SAAQ,CAAC4hB,EAAU43B,EAAQ33B,EAAU43B,KACjD,IAAIC,EAASD,EAAS53B,GAAa23B,EAAS53B,GAC5C,IAAK,IAAItnB,EAAI,EAAGA,EAAIkkC,EAASv/B,OAAQ3E,GAAK,EAAG,CACzC,IAAI4H,EAAMs8B,EAASlkC,EAAI,GACvB,GAAI4H,EAAM,GAAK0f,EAAW1f,EAAMq2C,EAAagB,EACzC,SACJ,IAAIp3C,EAAQq8B,EAASlkC,GAAKi+C,EAAagB,EACnCC,GAAUr3C,EACVq8B,EAASlkC,EAAI,GAAKsnB,GAAYzf,GAAS,GAAK,EAEvC0f,GAAYld,GAAU+0C,IAC3Blb,EAASlkC,IAAMo/C,EACflb,EAASlkC,EAAI,IAAMo/C,EAE1B,CACDH,GAASG,CAAT,IAEJnB,EAAaj2B,EAAQN,KAAK1nB,GAAGG,IAAI89C,GAAa,EACjD,CAGD,IAAIoB,GAAc,EAClB,IAAK,IAAIr/C,EAAI,EAAGA,EAAIkkC,EAASv/B,OAAQ3E,GAAK,EACtC,GAAIkkC,EAASlkC,EAAI,GAAK,EAAG,CACrB,IAAwB,GAApBkkC,EAASlkC,EAAI,GAAU,CACvBq/C,GAAc,EACdnb,EAASlkC,EAAI,IAAM,EACnB,QACH,CACD,IAAI4F,EAAOoiB,EAAQ7nB,IAAI6+C,EAAYh/C,GAAK48C,GAAY0C,EAAY15C,EAAOyE,EACvE,GAAIi1C,EAAY,GAAKA,GAAal3C,EAAK5D,QAAQqB,KAAM,CACjDw5C,GAAc,EACd,QACH,CAED,IAAI53C,EAAKugB,EAAQ7nB,IAAI6+C,EAAYh/C,EAAI,GAAK48C,GAAY,GAAI2C,EAAU93C,EAAK4C,GACrE,MAAEnB,EAAOmB,OAAQ2zC,GAAgB51C,EAAK5D,QAAQiF,UAAU61C,GACxDvB,EAAY31C,EAAKmB,WAAWL,GAChC,GAAI60C,GAAaC,GAAesB,GAAatB,EAAcD,EAAUl3C,UAAY04C,EAAS,CACtF,IAAIn2B,EAAS8a,EAASlkC,EAAI,GACrBy9C,SAASz1B,EAAS+1B,EAAWn4C,EAAO,EAAGo5C,EAAYh/C,GAAK48C,EAAY,EAAG7kC,GACxEqR,GAAUpgB,IACVk7B,EAASlkC,GAAKs/C,EACdpb,EAASlkC,EAAI,GAAKu/C,EAClBrb,EAASlkC,EAAI,GAAKopB,IAGlB8a,EAASlkC,EAAI,IAAM,EACnBq/C,GAAc,EAErB,MAEGA,GAAc,CAErB,CAEL,GAAIA,EAAa,CACb,IAAIjC,EAAcoC,GAAiCtb,EAAU8a,EAAatB,EAAU11B,EAAS3d,EAAQuyC,EAAW7kC,GAC5GlB,EAAQwmC,GAAUD,EAAah1C,EAAM,EAAG2P,GAC5C2lC,EAAW7mC,EAAMsmC,MACjB,IAAK,IAAIn9C,EAAI,EAAGA,EAAIkkC,EAASv/B,OAAQ3E,GAAK,EAClCkkC,EAASlkC,EAAI,GAAK,IAClBkkC,EAAS/+B,OAAOnF,EAAG,GACnBA,GAAK,GAEb,IAAK,IAAIA,EAAI,EAAG6C,EAAI,EAAG7C,EAAI6W,EAAMqtB,SAASv/B,OAAQ3E,GAAK,EAAG,CACtD,IAAI4F,EAAOiR,EAAMqtB,SAASlkC,GAC1B,MAAO6C,EAAIqhC,EAASv/B,QAAUu/B,EAASrhC,GAAK+C,EACxC/C,GAAK,EACTqhC,EAAS/+B,OAAOtC,EAAG,EAAGgU,EAAMqtB,SAASlkC,GAAI6W,EAAMqtB,SAASlkC,EAAI,GAAI6W,EAAMqtB,SAASlkC,EAAI,GACtF,CACJ,CACD,OAAO,IAAIk9C,GAAcQ,EAAStyC,KAAKyyC,IAAQ3Z,EAClD,CACD,SAASia,GAAUsB,EAAOp1C,GACtB,IAAKA,IAAWo1C,EAAM96C,OAClB,OAAO86C,EACX,IAAIz5C,EAAS,GACb,IAAK,IAAIhG,EAAI,EAAGA,EAAIy/C,EAAM96C,OAAQ3E,IAAK,CACnC,IAAI28C,EAAO8C,EAAMz/C,GACjBgG,EAAOd,KAAK,IAAI23C,GAAWF,EAAK/2C,KAAOyE,EAAQsyC,EAAKl1C,GAAK4C,EAAQsyC,EAAKr0C,MACzE,CACD,OAAOtC,CACV,CACD,SAASw5C,GAAiCtb,EAAU8a,EAAa5B,EAAap1B,EAAS3d,EAAQuyC,EAAW7kC,GAEtG,SAAS2nC,EAAO38C,EAAK65C,GACjB,IAAK,IAAI58C,EAAI,EAAGA,EAAI+C,EAAIo6C,MAAMx4C,OAAQ3E,IAAK,CACvC,IAAIopB,EAASrmB,EAAIo6C,MAAMn9C,GAAGG,IAAI6nB,EAAS3d,EAAQuyC,GAC3CxzB,EACAg0B,EAAYl4C,KAAKkkB,GACZrR,EAAQ4lC,UACb5lC,EAAQ4lC,SAAS56C,EAAIo6C,MAAMn9C,GAAGQ,KACrC,CACD,IAAK,IAAIR,EAAI,EAAGA,EAAI+C,EAAImhC,SAASv/B,OAAQ3E,GAAK,EAC1C0/C,EAAO38C,EAAImhC,SAASlkC,EAAI,GAAI+C,EAAImhC,SAASlkC,GAAK48C,EAAY,EACjE,CACD,IAAK,IAAI58C,EAAI,EAAGA,EAAIkkC,EAASv/B,OAAQ3E,GAAK,GACd,GAApBkkC,EAASlkC,EAAI,IACb0/C,EAAOxb,EAASlkC,EAAI,GAAIg/C,EAAYh/C,GAAK48C,EAAY,GAC7D,OAAOQ,CACV,CACD,SAASc,GAAiBuB,EAAOr3C,EAAMiC,GACnC,GAAIjC,EAAKC,OACL,OAAO,KACX,IAAIT,EAAMyC,EAASjC,EAAKvB,SAAUjC,EAAQ,KAC1C,IAAK,IAAW+3C,EAAP38C,EAAI,EAASA,EAAIy/C,EAAM96C,OAAQ3E,KAC/B28C,EAAO8C,EAAMz/C,KAAO28C,EAAK/2C,KAAOyE,GAAUsyC,EAAKl1C,GAAKG,KACpDhD,IAAUA,EAAQ,KAAKM,KAAKy3C,GAC7B8C,EAAMz/C,GAAK,MAGnB,OAAO4E,CACV,CACD,SAASw5C,GAAan0C,GAClB,IAAIjE,EAAS,GACb,IAAK,IAAIhG,EAAI,EAAGA,EAAIiK,EAAMtF,OAAQ3E,IACd,MAAZiK,EAAMjK,IACNgG,EAAOd,KAAK+E,EAAMjK,IAC1B,OAAOgG,CACV,CAKD,SAASq3C,GAAUoC,EAAOr3C,EAAMiC,EAAQ0N,GACpC,IAAImsB,EAAW,GAAIyb,GAAW,EAC9Bv3C,EAAK1C,SAAQ,CAACq4C,EAAW6B,KACrB,IAAIh7C,EAAQs5C,GAAiBuB,EAAO1B,EAAW6B,EAAav1C,GAC5D,GAAIzF,EAAO,CACP+6C,GAAW,EACX,IAAIE,EAAUxC,GAAUz4C,EAAOm5C,EAAW1zC,EAASu1C,EAAa,EAAG7nC,GAC/D8nC,GAAW72C,IACXk7B,EAASh/B,KAAK06C,EAAYA,EAAa7B,EAAUl3C,SAAUg5C,EAClE,KAEL,IAAIpS,EAAS0Q,GAAUwB,EAAWvB,GAAaqB,GAASA,GAAQp1C,GAAQe,KAAKyyC,IAC7E,IAAK,IAAI79C,EAAI,EAAGA,EAAIytC,EAAO9oC,OAAQ3E,IAC1BytC,EAAOztC,GAAGsI,KAAKw0C,MAAM10C,EAAMqlC,EAAOztC,MAC/B+X,EAAQ4lC,UACR5lC,EAAQ4lC,SAASlQ,EAAOztC,GAAGQ,MAC/BitC,EAAOtoC,OAAOnF,IAAK,IAE3B,OAAOytC,EAAO9oC,QAAUu/B,EAASv/B,OAAS,IAAIu4C,GAAczP,EAAQvJ,GAAYl7B,EACnF,CAID,SAAS60C,GAAM99C,EAAGoG,GACd,OAAOpG,EAAE6F,KAAOO,EAAEP,MAAQ7F,EAAE0H,GAAKtB,EAAEsB,EACtC,CAKD,SAASg3C,GAAcgB,GACnB,IAAIK,EAAUL,EACd,IAAK,IAAIz/C,EAAI,EAAGA,EAAI8/C,EAAQn7C,OAAS,EAAG3E,IAAK,CACzC,IAAI28C,EAAOmD,EAAQ9/C,GACnB,GAAI28C,EAAK/2C,MAAQ+2C,EAAKl1C,GAClB,IAAK,IAAI5E,EAAI7C,EAAI,EAAG6C,EAAIi9C,EAAQn7C,OAAQ9B,IAAK,CACzC,IAAIsM,EAAO2wC,EAAQj9C,GACnB,GAAIsM,EAAKvJ,MAAQ+2C,EAAK/2C,KAAtB,CAYQuJ,EAAKvJ,KAAO+2C,EAAKl1C,KACbq4C,GAAWL,IACXK,EAAUL,EAAMx6C,SAGpB66C,EAAQ9/C,GAAK28C,EAAKvzC,KAAKuzC,EAAK/2C,KAAMuJ,EAAKvJ,MACvCm6C,GAAYD,EAASj9C,EAAG85C,EAAKvzC,KAAK+F,EAAKvJ,KAAM+2C,EAAKl1C,MAEtD,KACH,CApBO0H,EAAK1H,IAAMk1C,EAAKl1C,KACZq4C,GAAWL,IACXK,EAAUL,EAAMx6C,SAGpB66C,EAAQj9C,GAAKsM,EAAK/F,KAAK+F,EAAKvJ,KAAM+2C,EAAKl1C,IACvCs4C,GAAYD,EAASj9C,EAAI,EAAGsM,EAAK/F,KAAKuzC,EAAKl1C,GAAI0H,EAAK1H,KAe/D,CACR,CACD,OAAOq4C,CACV,CACD,SAASC,GAAY91C,EAAOjK,EAAG2rC,GAC3B,MAAO3rC,EAAIiK,EAAMtF,QAAUk5C,GAAMlS,EAAM1hC,EAAMjK,IAAM,EAC/CA,IACJiK,EAAM9E,OAAOnF,EAAG,EAAG2rC,EACtB,CAED,SAASqU,GAAgBljB,GACrB,IAAIl4B,EAAQ,GAQZ,OAPAk4B,EAAKG,SAAS,eAAet8B,IACzB,IAAIqF,EAASrF,EAAEm8B,EAAK1mB,OAChBpQ,GAAUA,GAAUgD,IACpBpE,EAAMM,KAAKc,EAAX,IAEJ82B,EAAKyS,eACL3qC,EAAMM,KAAKg4C,GAAchyC,OAAO4xB,EAAK1mB,MAAM3H,IAAK,CAACquB,EAAKyS,cAAc5D,QACjE6S,GAAgB54C,KAAKhB,EAC/B,CAED,MAAMq7C,GAAiB,CACnBC,WAAW,EACXC,eAAe,EACfC,uBAAuB,EACvBC,YAAY,EACZC,mBAAmB,EACnBT,SAAS,GAGPU,GAAcznB,IAAMC,IAAc,GACxC,MAAMynB,GACF9hD,cACIvB,KAAKipC,WAAa,KAClBjpC,KAAKkpC,aAAe,EACpBlpC,KAAK8lC,UAAY,KACjB9lC,KAAKgmC,YAAc,CACtB,CACDpgC,IAAI8wB,GACA12B,KAAKipC,WAAavS,EAAIuS,WACtBjpC,KAAKkpC,aAAexS,EAAIwS,aACxBlpC,KAAK8lC,UAAYpP,EAAIoP,UACrB9lC,KAAKgmC,YAActP,EAAIsP,WAC1B,CACDiZ,QACIj/C,KAAKipC,WAAajpC,KAAK8lC,UAAY,IACtC,CACD55B,GAAGwqB,GACC,OAAOA,EAAIuS,YAAcjpC,KAAKipC,YAAcvS,EAAIwS,cAAgBlpC,KAAKkpC,cACjExS,EAAIoP,WAAa9lC,KAAK8lC,WAAapP,EAAIsP,aAAehmC,KAAKgmC,WAClE,EAEL,MAAMsd,GACF/hD,YAAYo+B,EAAM4jB,GACdvjD,KAAK2/B,KAAOA,EACZ3/B,KAAKujD,gBAAkBA,EACvBvjD,KAAKwjD,MAAQ,GACbxjD,KAAK88C,cAAgB,EACrB98C,KAAKyjD,SAAW,KAChBzjD,KAAKgyC,iBAAmB,IAAIqR,GAC5BrjD,KAAK0jD,WAAa,KAClB1jD,KAAK2jD,6BAA8B,EACnC3jD,KAAKyjD,SAAWv7B,OAAO07B,kBACnB,IAAI17B,OAAO07B,kBAAiBC,IACxB,IAAK,IAAIhhD,EAAI,EAAGA,EAAIghD,EAAUr8C,OAAQ3E,IAClC7C,KAAKwjD,MAAMz7C,KAAK87C,EAAUhhD,IAK1B84B,IAAMC,IAAc,IAAMioB,EAAUxnC,MAAKpZ,GAAe,aAAVA,EAAEkI,MAAuBlI,EAAE6gD,aAAat8C,QAC5E,iBAAVvE,EAAEkI,MAA2BlI,EAAEonC,SAAS7iC,OAASvE,EAAEoN,OAAOiS,UAAU9a,SACpExH,KAAKo/C,YAELp/C,KAAKo9C,OAAL,IAERgG,KACApjD,KAAK0jD,WAAatiD,IACdpB,KAAKwjD,MAAMz7C,KAAK,CAAEsI,OAAQjP,EAAEiP,OAAQlF,KAAM,gBAAiBk/B,SAAUjpC,EAAE2iD,YACvE/jD,KAAKo/C,WAAL,GAGRp/C,KAAKgkD,kBAAoBhkD,KAAKgkD,kBAAkBvoC,KAAKzb,KACxD,CACDo/C,YACQp/C,KAAK88C,aAAe,IACpB98C,KAAK88C,aAAe50B,OAAOjhB,YAAW,KAAQjH,KAAK88C,cAAgB,EAAG98C,KAAKo9C,OAAL,GAAiB,IAC9F,CACDlC,aACQl7C,KAAK88C,cAAgB,IACrB50B,OAAOoxB,aAAat5C,KAAK88C,cACzB98C,KAAK88C,cAAgB,EACrB98C,KAAKo9C,QAEZ,CACD1yC,QACQ1K,KAAKyjD,WACLzjD,KAAKyjD,SAASQ,cACdjkD,KAAKyjD,SAASS,QAAQlkD,KAAK2/B,KAAKrjB,IAAKwmC,KAErC9iD,KAAK0jD,YACL1jD,KAAK2/B,KAAKrjB,IAAIpV,iBAAiB,2BAA4BlH,KAAK0jD,YACpE1jD,KAAK4yC,kBACR,CACD5I,OACI,GAAIhqC,KAAKyjD,SAAU,CACf,IAAIU,EAAOnkD,KAAKyjD,SAASQ,cACzB,GAAIE,EAAK38C,OAAQ,CACb,IAAK,IAAI3E,EAAI,EAAGA,EAAIshD,EAAK38C,OAAQ3E,IAC7B7C,KAAKwjD,MAAMz7C,KAAKo8C,EAAKthD,IACzBqlB,OAAOjhB,YAAW,IAAMjH,KAAKo9C,SAAS,GACzC,CACDp9C,KAAKyjD,SAASnjD,YACjB,CACGN,KAAK0jD,YACL1jD,KAAK2/B,KAAKrjB,IAAIvV,oBAAoB,2BAA4B/G,KAAK0jD,YACvE1jD,KAAKmyC,qBACR,CACDS,mBACI5yC,KAAK2/B,KAAKrjB,IAAImH,cAAcvc,iBAAiB,kBAAmBlH,KAAKgkD,kBACxE,CACD7R,sBACInyC,KAAK2/B,KAAKrjB,IAAImH,cAAc1c,oBAAoB,kBAAmB/G,KAAKgkD,kBAC3E,CACDI,2BACIpkD,KAAK2jD,6BAA8B,EACnC18C,YAAW,IAAMjH,KAAK2jD,6BAA8B,GAAO,GAC9D,CACDK,oBACI,GAAK5Q,GAAqBpzC,KAAK2/B,MAA/B,CAEA,GAAI3/B,KAAK2jD,4BACL,OAAOjS,GAAe1xC,KAAK2/B,MAI/B,GAAIhE,IAAMC,IAAc,KAAO57B,KAAK2/B,KAAK1mB,MAAM2d,UAAU/qB,MAAO,CAC5D,IAAI6qB,EAAM12B,KAAK2/B,KAAK+F,eAEpB,GAAIhP,EAAIoP,WAAa1I,GAAqB1G,EAAIoP,UAAWpP,EAAIsP,YAAatP,EAAIuS,WAAYvS,EAAIwS,cAC1F,OAAOlpC,KAAKo/C,WACnB,CACDp/C,KAAKo9C,OAZK,CAab,CACDlL,kBACIlyC,KAAKgyC,iBAAiBpsC,IAAI5F,KAAK2/B,KAAK+F,eACvC,CACD2e,sBAAsB3tB,GAClB,GAAsB,GAAlBA,EAAIyH,WACJ,OAAO,EACX,IAAImmB,EAAY5tB,EAAI0H,WAAW,GAAGmmB,wBAC9BvrB,EAAOh5B,KAAK2/B,KAAKuD,QAAQI,YAAYghB,GACzC,OAAItrB,GAAQA,EAAKuQ,eAAe,CAC5Bp+B,KAAM,YACNkF,OAA8B,GAAtBi0C,EAAUvvC,SAAgBuvC,EAAUnjC,WAAamjC,KAEzDtkD,KAAKkyC,mBACE,QALX,CAOH,CACDkL,QACI,IAAI,KAAEzd,GAAS3/B,KACf,IAAK2/B,EAAKuD,SAAWljC,KAAK88C,cAAgB,EACtC,OACJ,IAAI+G,EAAY7jD,KAAKyjD,SAAWzjD,KAAKyjD,SAASQ,cAAgB,GAC1DjkD,KAAKwjD,MAAMh8C,SACXq8C,EAAY7jD,KAAKwjD,MAAMt7C,OAAO27C,GAC9B7jD,KAAKwjD,MAAMh8C,OAAS,GAExB,IAAIkvB,EAAMiJ,EAAK+F,eACX8e,GAAUxkD,KAAK2jD,8BAAgC3jD,KAAKgyC,iBAAiB9lC,GAAGwqB,IAAQ0c,GAAqBzT,KAAU3/B,KAAKqkD,sBAAsB3tB,GAC1IjuB,GAAQ,EAAG6B,GAAM,EAAGm6C,GAAW,EAAOl3B,EAAQ,GAClD,GAAIoS,EAAK4R,SACL,IAAK,IAAI1uC,EAAI,EAAGA,EAAIghD,EAAUr8C,OAAQ3E,IAAK,CACvC,IAAIgG,EAAS7I,KAAK0kD,iBAAiBb,EAAUhhD,GAAI0qB,GAC7C1kB,IACAJ,EAAOA,EAAO,EAAII,EAAOJ,KAAOyB,KAAKC,IAAItB,EAAOJ,KAAMA,GACtD6B,EAAKA,EAAK,EAAIzB,EAAOyB,GAAKJ,KAAKS,IAAI9B,EAAOyB,GAAIA,GAC1CzB,EAAO47C,WACPA,GAAW,GAEtB,CAEL,GAAI3oB,IAASvO,EAAM/lB,OAAS,EAAG,CAC3B,IAAIm9C,EAAMp3B,EAAMohB,QAAOzsC,GAAmB,MAAdA,EAAEkf,WAC9B,GAAkB,GAAdujC,EAAIn9C,OAAa,CACjB,IAAI5E,EAAI+hD,EAAI,GAAI37C,EAAI27C,EAAI,GACpB/hD,EAAEue,YAAcve,EAAEue,WAAWA,YAAcnY,EAAEmY,WAC7CnY,EAAEnB,SAEFjF,EAAEiF,QACT,CACJ,CACD,IAAI+8C,EAAU,KAIVn8C,EAAO,GAAK+7C,GAAU7kB,EAAKkN,MAAM0L,UAAY5gB,KAAKC,MAAQ,KAC1D+H,EAAKkN,MAAM2L,UAAY7gB,KAAKC,MAAQ,KACpCmG,GAAmBrH,KAASkuB,EAAU3T,GAAiBtR,KACvDilB,EAAQ14C,GAAGyoB,GAAUuB,KAAKyJ,EAAK1mB,MAAM3H,IAAIsB,QAAQ,GAAI,KACrD+sB,EAAKkN,MAAM0L,UAAY,EACvB7G,GAAe/R,GACf3/B,KAAKgyC,iBAAiBpsC,IAAI8wB,GAC1BiJ,EAAKklB,sBAEAp8C,GAAQ,GAAK+7C,KACd/7C,GAAQ,IACRk3B,EAAKuD,QAAQwG,UAAUjhC,EAAM6B,GAC7Bw6C,GAASnlB,IAEb3/B,KAAKujD,gBAAgB96C,EAAM6B,EAAIm6C,EAAUl3B,GACrCoS,EAAKuD,SAAWvD,EAAKuD,QAAQ8D,MAC7BrH,EAAKyF,YAAYzF,EAAK1mB,OAChBjZ,KAAKgyC,iBAAiB9lC,GAAGwqB,IAC/Bgb,GAAe/R,GACnB3/B,KAAKgyC,iBAAiBpsC,IAAI8wB,GAEjC,CACDguB,iBAAiBta,EAAK7c,GAElB,GAAIA,EAAM7W,QAAQ0zB,EAAI/5B,SAAW,EAC7B,OAAO,KACX,IAAI2oB,EAAOh5B,KAAK2/B,KAAKuD,QAAQI,YAAY8G,EAAI/5B,QAC7C,GAAgB,cAAZ+5B,EAAIj/B,OACH6tB,GAAQh5B,KAAK2/B,KAAKuD,SAAgC,mBAArBkH,EAAI2a,eAER,SAArB3a,EAAI2a,gBAA6B3a,EAAIC,WAAaD,EAAI/5B,OAAO2R,aAAa,UAC/E,OAAO,KACX,IAAKgX,GAAQA,EAAKuQ,eAAea,GAC7B,OAAO,KACX,GAAgB,aAAZA,EAAIj/B,KAAqB,CACzB,IAAK,IAAItI,EAAI,EAAGA,EAAIunC,EAAI4a,WAAWx9C,OAAQ3E,IACvC0qB,EAAMxlB,KAAKqiC,EAAI4a,WAAWniD,IAC9B,GAAIm2B,EAAKhV,YAAcgV,EAAKhV,YAAcgV,EAAK1c,MAAQ0c,EAAKhV,WAAWgB,SAASolB,EAAI/5B,QAChF,MAAO,CAAE5H,KAAMuwB,EAAKuK,UAAWj5B,GAAI0uB,EAAKwK,UAC5C,IAAIlK,EAAO8Q,EAAI5nB,gBAAiBxQ,EAAOo4B,EAAI/lB,YAC3C,GAAIsX,IAAMC,IAAc,IAAMwO,EAAI4a,WAAWx9C,OAGzC,IAAK,IAAI3E,EAAI,EAAGA,EAAIunC,EAAI4a,WAAWx9C,OAAQ3E,IAAK,CAC5C,IAAI,gBAAE2f,EAAF,YAAmB6B,GAAgB+lB,EAAI4a,WAAWniD,KACjD2f,GAAmB1f,MAAMwE,UAAUoP,QAAQoE,KAAKsvB,EAAI4a,WAAYxiC,GAAmB,KACpF8W,EAAO9W,KACN6B,GAAevhB,MAAMwE,UAAUoP,QAAQoE,KAAKsvB,EAAI4a,WAAY3gC,GAAe,KAC5ErS,EAAOqS,EACd,CAEL,IAAImkB,EAAalP,GAAQA,EAAKnY,YAAcipB,EAAI/5B,OAC1CusB,GAAStD,GAAQ,EAAI,EACvB7wB,EAAOuwB,EAAK6O,gBAAgBuC,EAAI/5B,OAAQm4B,GAAa,GACrDC,EAAWz2B,GAAQA,EAAKmP,YAAcipB,EAAI/5B,OACxCusB,GAAS5qB,GAAQo4B,EAAI/5B,OAAO+T,WAAW5c,OACzC8C,EAAK0uB,EAAK6O,gBAAgBuC,EAAI/5B,OAAQo4B,EAAU,GACpD,MAAO,CAAEhgC,OAAM6B,KAClB,CACI,MAAgB,cAAZ8/B,EAAIj/B,KACF,CAAE1C,KAAMuwB,EAAKoL,WAAapL,EAAKqL,OAAQ/5B,GAAI0uB,EAAK4O,SAAW5O,EAAKqL,QAGhE,CACH57B,KAAMuwB,EAAKoL,WACX95B,GAAI0uB,EAAK4O,SAKT6c,SAAUra,EAAI/5B,OAAOiS,WAAa8nB,EAAIC,SAGjD,EAEL,IAAI4a,GAAa,IAAIC,QACjBC,IAAiB,EACrB,SAASL,GAASnlB,GACd,IAAIslB,GAAW3V,IAAI3P,KAEnBslB,GAAWr/C,IAAI+5B,EAAM,OACoE,IAArF,CAAC,SAAU,SAAU,YAAYjpB,QAAQo6B,iBAAiBnR,EAAKrjB,KAAK8oC,aAAoB,CAExF,GADAzlB,EAAK+P,sBAAwB5T,GACzBqpB,GACA,OACJnvB,QAAQ,QAAQ,4KAChBmvB,IAAiB,CACpB,CACJ,CAOD,SAASE,GAAa1lB,EAAM2lB,EAAOC,GAC/B,IAEIpgD,GAFE8F,KAAMT,EAAR,WAAgBg+B,EAAhB,SAA4BC,EAA5B,KAAsChgC,EAAtC,GAA4C6B,GAAOq1B,EAAKuD,QAAQqF,WAAW+c,EAAOC,GAClFvnB,EAAS2B,EAAK+F,eAEd3Q,EAASiJ,EAAOiL,WAQpB,GAPIlU,GAAU4K,EAAKrjB,IAAI0I,SAA4B,GAAnB+P,EAAOhgB,SAAgBggB,EAASA,EAAO5T,cACnEhc,EAAO,CAAC,CAAE8F,KAAM8pB,EAAQ7nB,OAAQ8wB,EAAOkL,eAClCnL,GAAmBC,IACpB74B,EAAK4C,KAAK,CAAEkD,KAAM+yB,EAAO8H,UAAW54B,OAAQ8wB,EAAOgI,eAIvDhK,IAAqC,IAA3B2D,EAAKkN,MAAMmL,YACrB,IAAK,IAAI3a,EAAMoL,EAAUpL,EAAMmL,EAAYnL,IAAO,CAC9C,IAAIpyB,EAAOT,EAAO4Z,WAAWiZ,EAAM,GAAIrE,EAAO/tB,EAAK6yB,WACnD,GAAqB,MAAjB7yB,EAAKmW,WAAqB4X,EAAM,CAChCyP,EAAWpL,EACX,KACH,CACD,IAAKrE,GAAQA,EAAKtwB,KACd,KACP,CAEL,IAAIqzC,EAAWpc,EAAK1mB,MAAM3H,IACtBgQ,EAASqe,EAAKG,SAAS,cAAgBjkB,GAAAA,WAAqB8jB,EAAK1mB,MAAMrM,QACvEwC,EAAQ2sC,EAASnpC,QAAQnK,GACzBiuB,EAAM,KAAMplB,EAAMgQ,EAAOhG,MAAM9Q,EAAQ,CACvCmQ,QAASvL,EAAM5E,OACfkX,SAAUtS,EAAM5E,OAAOyJ,eAAe7E,EAAMrD,SAC5C+Y,SAAS,EACTrc,KAAM+/B,EACNl+B,GAAIm+B,EACJroB,mBAAoD,OAAhChR,EAAM5E,OAAOW,KAAK+O,YAAsB,OAC5DyH,cAAexc,EACf4d,gBACAxG,QAASnN,IAEb,GAAIjK,GAAuB,MAAfA,EAAK,GAAG8D,IAAa,CAC7B,IAAI8rB,EAAS5vB,EAAK,GAAG8D,IAAK0W,EAAOxa,EAAK,IAAMA,EAAK,GAAG8D,IACxC,MAAR0W,IACAA,EAAOoV,GACX2B,EAAM,CAAE3B,OAAQA,EAAStsB,EAAMkX,KAAMA,EAAOlX,EAC/C,CACD,MAAO,CAAE6I,MAAKolB,MAAKjuB,OAAM6B,KAC5B,CACD,SAASyY,GAAazG,GAClB,IAAI0c,EAAO1c,EAAIwhB,WACf,GAAI9E,EACA,OAAOA,EAAKwO,YAEX,GAAoB,MAAhBlrB,EAAI8E,UAAoB9E,EAAI6E,WAAY,CAI7C,GAAI+a,IAAU,aAAa/jB,KAAKmE,EAAI6E,WAAWC,UAAW,CACtD,IAAI8B,EAAO+E,SAASR,cAAc,OAElC,OADAvE,EAAK8C,YAAYiC,SAASR,cAAc,OACjC,CAAEvE,OACZ,CACI,GAAI5G,EAAI6E,WAAW5V,WAAa+Q,GAAO4f,IAAU,gBAAgB/jB,KAAKmE,EAAI6E,WAAWC,UACtF,MAAO,CAAE4B,QAAQ,EAExB,MACI,GAAoB,OAAhB1G,EAAI8E,UAAqB9E,EAAI0F,aAAa,oBAC/C,MAAO,CAAEgB,QAAQ,GAErB,OAAO,IACV,CACD,SAASwiC,GAAc7lB,EAAMl3B,EAAM6B,EAAIm6C,EAAUO,GAC7C,GAAIv8C,EAAO,EAAG,CACV,IAAIyoC,EAASvR,EAAKkN,MAAMuL,kBAAoBzgB,KAAKC,MAAQ,GAAK+H,EAAKkN,MAAMsL,oBAAsB,KAC3FqM,EAASvT,GAAiBtR,EAAMuR,GACpC,GAAIsT,IAAW7kB,EAAK1mB,MAAM2d,UAAU1qB,GAAGs4C,GAAS,CAC5C,IAAIr3B,EAAKwS,EAAK1mB,MAAMkU,GAAG0J,aAAa2tB,GACtB,WAAVtT,EACA/jB,EAAGuL,QAAQ,WAAW,GACP,OAAVwY,GACL/jB,EAAG0L,iBACP8G,EAAK6T,SAASrmB,EACjB,CACD,MACH,CACD,IAAIjd,EAAUyvB,EAAK1mB,MAAM3H,IAAIsB,QAAQnK,GACjCg9C,EAASv1C,EAAQ+B,YAAY3H,GACjC7B,EAAOyH,EAAQsB,OAAOi0C,EAAS,GAC/Bn7C,EAAKq1B,EAAK1mB,MAAM3H,IAAIsB,QAAQtI,GAAImH,MAAMg0C,EAAS,GAC/C,IAGIC,EAAcC,EAHdjvB,EAAMiJ,EAAK1mB,MAAM2d,UACjBtb,EAAQ+pC,GAAa1lB,EAAMl3B,EAAM6B,GACjCgH,EAAMquB,EAAK1mB,MAAM3H,IAAKs0C,EAAUt0C,EAAIxJ,MAAMwT,EAAM7S,KAAM6S,EAAMhR,IAGjC,IAA3Bq1B,EAAKkN,MAAMmL,aAAqBrgB,KAAKC,MAAQ,IAAM+H,EAAKkN,MAAMoL,iBAC9DyN,EAAe/lB,EAAK1mB,MAAM2d,UAAUtsB,GACpCq7C,EAAgB,QAGhBD,EAAe/lB,EAAK1mB,MAAM2d,UAAUnuB,KACpCk9C,EAAgB,SAEpBhmB,EAAKkN,MAAMmL,YAAc,KACzB,IAAI6N,EAASC,GAASF,EAAQv+C,QAASiU,EAAMhK,IAAIjK,QAASiU,EAAM7S,KAAMi9C,EAAcC,GACpF,IAAKvpB,IAAOuD,EAAKkN,MAAMwL,aAAe1gB,KAAKC,MAAQ,KAAO4E,KACtDwoB,EAAW3oC,MAAKna,GAAmB,OAAdA,EAAEkf,UAAmC,KAAdlf,EAAEkf,cAC5CykC,GAAUA,EAAOE,MAAQF,EAAOG,OAClCrmB,EAAKG,SAAS,iBAAiBt8B,GAAKA,EAAEm8B,EAAMtB,GAAS,GAAI,YAEzD,YADAsB,EAAKkN,MAAMwL,aAAe,GAG9B,IAAKwN,EAAQ,CACT,KAAIpB,GAAY/tB,aAAerB,KAAkBqB,EAAI7qB,OAAS6qB,EAAI7B,MAAMviB,WAAWokB,EAAI9B,WAClF+K,EAAKyL,WAAe9vB,EAAMob,KAAOpb,EAAMob,IAAI3B,QAAUzZ,EAAMob,IAAI/W,KAG/D,CACD,GAAIrE,EAAMob,IAAK,CACX,IAAIA,EAAMuvB,GAAiBtmB,EAAMA,EAAK1mB,MAAM3H,IAAKgK,EAAMob,KACnDA,IAAQA,EAAIxqB,GAAGyzB,EAAK1mB,MAAM2d,YAC1B+I,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAG0J,aAAaH,GAChD,CACD,MACH,CATGmvB,EAAS,CAAEn7C,MAAOgsB,EAAIjuB,KAAMs9C,KAAMrvB,EAAIpsB,GAAI07C,KAAMtvB,EAAIpsB,GAU3D,CAGD,GAAI0xB,IAAU2D,EAAKyS,eAAiB92B,EAAMob,KAAOpb,EAAMob,IAAI3B,QAAU4K,EAAKyS,cAAc5D,KAAK/lC,MACzF6S,EAAMob,IAAI/W,MAAQrE,EAAMob,IAAI3B,OAAQ,CACpC,IAAIrsB,EAAOm9C,EAAOG,KAAOH,EAAOn7C,MAChC4Q,EAAMob,IAAM,CAAE3B,OAAQzZ,EAAMob,IAAI3B,OAASrsB,EAAMiX,KAAMrE,EAAMob,IAAI3B,OAASrsB,EAC3E,CACDi3B,EAAKkN,MAAM+L,iBAIPjZ,EAAK1mB,MAAM2d,UAAUnuB,KAAOk3B,EAAK1mB,MAAM2d,UAAUtsB,IACjDu7C,EAAOn7C,OAASm7C,EAAOG,MACvBrmB,EAAK1mB,MAAM2d,qBAAqBvB,KAC5BwwB,EAAOn7C,MAAQi1B,EAAK1mB,MAAM2d,UAAUnuB,MAAQo9C,EAAOn7C,OAASi1B,EAAK1mB,MAAM2d,UAAUnuB,KAAO,GACxFk3B,EAAK1mB,MAAM2d,UAAUnuB,MAAQ6S,EAAM7S,KACnCo9C,EAAOn7C,MAAQi1B,EAAK1mB,MAAM2d,UAAUnuB,KAE/Bo9C,EAAOE,KAAOpmB,EAAK1mB,MAAM2d,UAAUtsB,IAAMu7C,EAAOE,MAAQpmB,EAAK1mB,MAAM2d,UAAUtsB,GAAK,GACvFq1B,EAAK1mB,MAAM2d,UAAUtsB,IAAMgR,EAAMhR,KACjCu7C,EAAOG,MAASrmB,EAAK1mB,MAAM2d,UAAUtsB,GAAKu7C,EAAOE,KACjDF,EAAOE,KAAOpmB,EAAK1mB,MAAM2d,UAAUtsB,KAMvCqxB,IAAMC,IAAc,IAAMiqB,EAAOG,MAAQH,EAAOn7C,MAAQ,GACxDm7C,EAAOE,MAAQF,EAAOn7C,OAASm7C,EAAOn7C,MAAQ4Q,EAAM7S,MACmC,MAAvF6S,EAAMhK,IAAIzG,YAAYg7C,EAAOn7C,MAAQ4Q,EAAM7S,KAAO,EAAGo9C,EAAOn7C,MAAQ4Q,EAAM7S,KAAO,KACjFo9C,EAAOn7C,QACPm7C,EAAOE,OACPF,EAAOG,QAEX,IAIIE,EAJA92C,EAAQkM,EAAMhK,IAAIL,eAAe40C,EAAOn7C,MAAQ4Q,EAAM7S,MACtD4G,EAAMiM,EAAMhK,IAAIL,eAAe40C,EAAOG,KAAO1qC,EAAM7S,MACnD09C,EAAS70C,EAAIsB,QAAQizC,EAAOn7C,OAC5B07C,EAAeh3C,EAAMkD,WAAWjD,IAAQD,EAAM5E,OAAO4H,eAAiB+zC,EAAO17C,OAASo7C,EAAOE,KAIjG,IAAM3pB,IAAOuD,EAAKkN,MAAMwL,aAAe1gB,KAAKC,MAAQ,OAC9CwuB,GAAgBpB,EAAW3oC,MAAKna,GAAmB,OAAdA,EAAEkf,UAAmC,KAAdlf,EAAEkf,cAC9DglC,GAAgBh3C,EAAMnG,IAAMqS,EAAMhK,IAAIjK,QAAQqB,OAC3Cw9C,EAAUvxB,GAAUY,SAASja,EAAMhK,IAAIsB,QAAQxD,EAAMnG,IAAM,GAAI,GAAG,KACnEi9C,EAAQvmC,MAAQtQ,EAAIpG,MACxB02B,EAAKG,SAAS,iBAAiBt8B,GAAKA,EAAEm8B,EAAMtB,GAAS,GAAI,YAEzD,YADAsB,EAAKkN,MAAMwL,aAAe,GAI9B,GAAI1Y,EAAK1mB,MAAM2d,UAAU7B,OAAS8wB,EAAOn7C,OACrC27C,GAAc/0C,EAAKu0C,EAAOn7C,MAAOm7C,EAAOE,KAAM32C,EAAOC,IACrDswB,EAAKG,SAAS,iBAAiBt8B,GAAKA,EAAEm8B,EAAMtB,GAAS,EAAG,gBAGxD,YAFI7B,IAAWR,IACX2D,EAAKoS,YAAYqS,4BAMrBpoB,IAAUQ,IAAWqpB,EAAOG,MAAQH,EAAOn7C,QAC3Ci1B,EAAKkN,MAAM4L,kBAAoB9gB,KAAKC,OASpC4E,KAAY4pB,GAAgBh3C,EAAM1E,SAAW2E,EAAI3E,SAA+B,GAApB2E,EAAIM,cAAqBP,EAAME,OAASD,EAAIC,OACxGgM,EAAMob,KAAOpb,EAAMob,IAAI3B,QAAUzZ,EAAMob,IAAI/W,MAAQrE,EAAMob,IAAI/W,MAAQkmC,EAAOE,OAC5EF,EAAOG,MAAQ,EACf32C,EAAMiM,EAAMhK,IAAIL,eAAe40C,EAAOG,KAAO1qC,EAAM7S,MACnDxB,YAAW,KACP04B,EAAKG,SAAS,iBAAiB,SAAUt8B,GAAK,OAAOA,EAAEm8B,EAAMtB,GAAS,GAAI,SAAY,GAAtF,GACD,KAEP,IACIlR,EAAI2K,EAAawuB,EADjBC,EAASV,EAAOn7C,MAAO87C,EAAOX,EAAOE,KAEzC,GAAIK,EACA,GAAIh3C,EAAMnG,KAAOoG,EAAIpG,IAGb0yB,IAAMC,IAAc,IAA4B,GAAtBxsB,EAAMO,eAChCgwB,EAAKoS,YAAYqS,2BACjBn9C,YAAW,IAAMyqC,GAAe/R,IAAO,KAE3CxS,EAAKwS,EAAK1mB,MAAMkU,GAAG2G,OAAOyyB,EAAQC,GAClC1uB,EAAcxmB,EAAIsB,QAAQizC,EAAOn7C,OAAOoH,YAAYR,EAAIsB,QAAQizC,EAAOE,YAEtE,GACLF,EAAOE,MAAQF,EAAOG,OACjBM,EAAaG,GAAar3C,EAAM5E,OAAOnD,QAAQsE,IAAIyD,EAAMO,aAAcN,EAAIM,cAAew2C,EAAO37C,OAAOnD,QAAQsE,IAAIw6C,EAAOx2C,aAAck2C,EAAOE,KAAOI,EAAOz7C,WAC/JyiB,EAAKwS,EAAK1mB,MAAMkU,GACO,OAAnBm5B,EAAWn7C,KACXgiB,EAAGD,QAAQq5B,EAAQC,EAAMF,EAAWhzC,MAEpC6Z,EAAGM,WAAW84B,EAAQC,EAAMF,EAAWhzC,WAE1C,GAAIlE,EAAM5E,OAAOpB,MAAMgG,EAAMrD,SAASxC,QAAU6F,EAAMrD,SAAWsD,EAAItD,SAAWsD,EAAIsB,WAAa,EAAI,GAAI,CAE1G,IAAInH,EAAO4F,EAAM5E,OAAOK,YAAYuE,EAAMO,aAAcN,EAAIM,cAC5D,GAAIgwB,EAAKG,SAAS,mBAAmBt8B,GAAKA,EAAEm8B,EAAM4mB,EAAQC,EAAMh9C,KAC5D,OACJ2jB,EAAKwS,EAAK1mB,MAAMkU,GAAGsL,WAAWjvB,EAAM+8C,EAAQC,EAC/C,CAIL,GAFKr5B,IACDA,EAAKwS,EAAK1mB,MAAMkU,GAAGhe,QAAQo3C,EAAQC,EAAMlrC,EAAMhK,IAAIxJ,MAAM+9C,EAAOn7C,MAAQ4Q,EAAM7S,KAAMo9C,EAAOG,KAAO1qC,EAAM7S,QACxG6S,EAAMob,IAAK,CACX,IAAIA,EAAMuvB,GAAiBtmB,EAAMxS,EAAG7b,IAAKgK,EAAMob,KAM3CA,KAASsF,IAAUQ,IAAWmD,EAAKyL,WAAa1U,EAAI7qB,QACnDg6C,EAAOn7C,OAASm7C,EAAOG,MAAQrmB,EAAKkN,MAAM4L,kBAAoB9gB,KAAKC,MAAQ,OAC3ElB,EAAI/W,MAAQ4mC,GAAU7vB,EAAI/W,MAAQwN,EAAGtC,QAAQ7nB,IAAIwjD,GAAQ,IAC1D7qB,IAAMjF,EAAI7qB,OAAS6qB,EAAI/W,MAAQ4mC,IAC/Bp5B,EAAG0J,aAAaH,EACvB,CACGoB,GACA3K,EAAGgJ,YAAY2B,GACnB6H,EAAK6T,SAASrmB,EAAG0L,iBACpB,CACD,SAASotB,GAAiBtmB,EAAMruB,EAAKo1C,GACjC,OAAIx8C,KAAKS,IAAI+7C,EAAU3xB,OAAQ2xB,EAAU/mC,MAAQrO,EAAIjK,QAAQqB,KAClD,KACJ2oC,GAAiB1R,EAAMruB,EAAIsB,QAAQ8zC,EAAU3xB,QAASzjB,EAAIsB,QAAQ8zC,EAAU/mC,MACtF,CAID,SAAS8mC,GAAa/5C,EAAK4sB,GACvB,IAC2CnuB,EAAMmI,EAAMzN,EADnD8gD,EAAWj6C,EAAIjB,WAAWqC,MAAO84C,EAAYttB,EAAK7tB,WAAWqC,MAC7Dyf,EAAQo5B,EAAUr5B,EAAUs5B,EAChC,IAAK,IAAI/jD,EAAI,EAAGA,EAAI+jD,EAAUp/C,OAAQ3E,IAClC0qB,EAAQq5B,EAAU/jD,GAAG4K,cAAc8f,GACvC,IAAK,IAAI1qB,EAAI,EAAGA,EAAI8jD,EAASn/C,OAAQ3E,IACjCyqB,EAAUq5B,EAAS9jD,GAAG4K,cAAc6f,GACxC,GAAoB,GAAhBC,EAAM/lB,QAAiC,GAAlB8lB,EAAQ9lB,OAC7B8L,EAAOia,EAAM,GACbpiB,EAAO,MACPtF,EAAUoF,GAASA,EAAKqI,KAAKA,EAAKjG,SAASpC,EAAK6C,YAE/C,IAAoB,GAAhByf,EAAM/lB,QAAiC,GAAlB8lB,EAAQ9lB,OAMlC,OAAO,KALP8L,EAAOga,EAAQ,GACfniB,EAAO,SACPtF,EAAUoF,GAASA,EAAKqI,KAAKA,EAAK7F,cAAcxC,EAAK6C,OAIxD,CACD,IAAI0e,EAAU,GACd,IAAK,IAAI3pB,EAAI,EAAGA,EAAIy2B,EAAKpwB,WAAYrG,IACjC2pB,EAAQzkB,KAAKlC,EAAOyzB,EAAKlwB,MAAMvG,KACnC,GAAIuH,EAAAA,KAAcoiB,GAAStgB,GAAGQ,GAC1B,MAAO,CAAE4G,OAAMnI,OACtB,CACD,SAASk7C,GAAcQ,EAAKn8C,EAAOD,EAAKq8C,EAAWC,GAC/C,IAAKD,EAAUt8C,OAAOqJ,aAElBpJ,EAAMC,GAASq8C,EAAQ99C,IAAM69C,EAAU79C,KAEvC+9C,GAAsBF,GAAW,GAAM,GAASC,EAAQ99C,IACxD,OAAO,EACX,IAAIsH,EAASs2C,EAAIj0C,QAAQlI,GAEzB,GAAI6F,EAAOZ,aAAeY,EAAO/F,OAAOnD,QAAQqB,OAAS6H,EAAO/F,OAAOqJ,YACnE,OAAO,EACX,IAAIozC,EAAQJ,EAAIj0C,QAAQo0C,GAAsBz2C,GAAQ,GAAM,IAE5D,SAAK02C,EAAMz8C,OAAOqJ,aAAeozC,EAAMh+C,IAAMwB,GACzCu8C,GAAsBC,GAAO,GAAM,GAASx8C,IAGzCq8C,EAAUt8C,OAAOnD,QAAQsE,IAAIm7C,EAAUn3C,cAAczD,GAAG+6C,EAAMz8C,OAAOnD,QAC/E,CACD,SAAS2/C,GAAsB13B,EAAM43B,EAASC,GAC1C,IAAI73C,EAAQggB,EAAKhgB,MAAO7E,EAAMy8C,EAAU53B,EAAK7kB,MAAQ6kB,EAAKrmB,IAC1D,MAAOqG,EAAQ,IAAM43C,GAAW53B,EAAK/d,WAAWjC,IAAUggB,EAAKrkB,KAAKqE,GAAOpG,YACvEoG,IACA7E,IACAy8C,GAAU,EAEd,GAAIC,EAAS,CACT,IAAIn1C,EAAOsd,EAAKrkB,KAAKqE,GAAOlD,WAAWkjB,EAAK/d,WAAWjC,IACvD,MAAO0C,IAASA,EAAK9G,OACjB8G,EAAOA,EAAKvG,WACZhB,GAEP,CACD,OAAOA,CACV,CACD,SAASq7C,GAASljD,EAAGoG,EAAGC,EAAKy8C,EAAcC,GACvC,IAAIj7C,EAAQ9H,EAAEmG,cAAcC,EAAGC,GAC/B,GAAa,MAATyB,EACA,OAAO,KACX,IAAM9H,EAAGmjD,EAAM/8C,EAAGg9C,GAASpjD,EAAE+G,YAAYX,EAAGC,EAAMrG,EAAE8F,KAAMO,EAAMD,EAAEN,MAClE,GAAqB,OAAjBi9C,EAAwB,CACxB,IAAIyB,EAASl9C,KAAKS,IAAI,EAAGD,EAAQR,KAAKC,IAAI47C,EAAMC,IAChDN,GAAgBK,EAAOqB,EAAS18C,CACnC,CACD,GAAIq7C,EAAOr7C,GAAS9H,EAAE8F,KAAOM,EAAEN,KAAM,CACjC,IAAIypB,EAAOuzB,GAAgBh7C,GAASg7C,GAAgBK,EAAOr7C,EAAQg7C,EAAe,EAClFh7C,GAASynB,EACT6zB,EAAOt7C,GAASs7C,EAAOD,GACvBA,EAAOr7C,CACV,MACI,GAAIs7C,EAAOt7C,EAAO,CACnB,IAAIynB,EAAOuzB,GAAgBh7C,GAASg7C,GAAgBM,EAAOt7C,EAAQg7C,EAAe,EAClFh7C,GAASynB,EACT4zB,EAAOr7C,GAASq7C,EAAOC,GACvBA,EAAOt7C,CACV,CACD,MAAO,CAAEA,QAAOq7C,OAAMC,OACzB,CAmBD,MAAMqB,GAQF9lD,YAAY8G,EAAO0yB,GACf/6B,KAAKsnD,MAAQ,KAIbtnD,KAAKm6C,SAAU,EAIfn6C,KAAK2tC,YAAc,KACnB3tC,KAAKunD,SAAU,EAIfvnD,KAAKq9C,WAAa,KAIlBr9C,KAAKoyC,cAAgB,KAIrBpyC,KAAKkzC,0BAAuBxrC,EAI5B1H,KAAK6sC,MAAQ,IAAIkL,GACjB/3C,KAAKwnD,kBAAoB,GACzBxnD,KAAKynD,YAAc,GAMnBznD,KAAK0vC,uBAAwB,EAM7B1vC,KAAKu+C,SAAW,KAChBv+C,KAAK0nD,OAAS3sB,EACd/6B,KAAKiZ,MAAQ8hB,EAAM9hB,MACnBjZ,KAAK2nD,cAAgB5sB,EAAMvB,SAAW,GACtCx5B,KAAK2nD,cAAcp/C,QAAQq/C,IAC3B5nD,KAAKwzC,SAAWxzC,KAAKwzC,SAAS/3B,KAAKzb,MACnCA,KAAKsc,IAAOjU,GAASA,EAAMw/C,OAAU5/B,SAASR,cAAc,OACxDpf,IACIA,EAAM2d,YACN3d,EAAM2d,YAAYhmB,KAAKsc,KACF,mBAATjU,EACZA,EAAMrI,KAAKsc,KACNjU,EAAMw/C,QACX7nD,KAAKunD,SAAU,IAEvBvnD,KAAKuxC,SAAWuW,GAAY9nD,MAC5B+nD,GAAoB/nD,MACpBA,KAAKwqC,UAAYwd,GAAehoD,MAChCA,KAAKkjC,QAAUsK,GAAYxtC,KAAKiZ,MAAM3H,IAAK22C,GAAejoD,MAAO6iD,GAAgB7iD,MAAOA,KAAKsc,IAAKtc,MAClGA,KAAK+xC,YAAc,IAAIuR,GAAYtjD,MAAM,CAACyI,EAAM6B,EAAIm6C,EAAUl3B,IAAUi4B,GAAcxlD,KAAMyI,EAAM6B,EAAIm6C,EAAUl3B,KAChHvtB,KAAK+xC,YAAYrnC,QACjBouC,GAAU94C,MACVA,KAAKkoD,mBACR,CAMG9c,gBAAc,OAAOprC,KAAK6sC,MAAMzB,SAAY,CAI5CrQ,YACA,GAAI/6B,KAAK0nD,OAAOzuC,OAASjZ,KAAKiZ,MAAO,CACjC,IAAIqgB,EAAOt5B,KAAK0nD,OAChB1nD,KAAK0nD,OAAS,CAAC,EACf,IAAK,IAAI/lD,KAAQ23B,EACbt5B,KAAK0nD,OAAO/lD,GAAQ23B,EAAK33B,GAC7B3B,KAAK0nD,OAAOzuC,MAAQjZ,KAAKiZ,KAC5B,CACD,OAAOjZ,KAAK0nD,MACf,CAKD7hD,OAAOk1B,GACCA,EAAMotB,iBAAmBnoD,KAAK0nD,OAAOS,iBACrChP,GAAgBn5C,MACpB,IAAIooD,EAAYpoD,KAAK0nD,OACrB1nD,KAAK0nD,OAAS3sB,EACVA,EAAMvB,UACNuB,EAAMvB,QAAQjxB,QAAQq/C,IACtB5nD,KAAK2nD,cAAgB5sB,EAAMvB,SAE/Bx5B,KAAKqoD,iBAAiBttB,EAAM9hB,MAAOmvC,EACtC,CAMDE,SAASvtB,GACL,IAAIvO,EAAU,CAAC,EACf,IAAK,IAAI7qB,KAAQ3B,KAAK0nD,OAClBl7B,EAAQ7qB,GAAQ3B,KAAK0nD,OAAO/lD,GAChC6qB,EAAQvT,MAAQjZ,KAAKiZ,MACrB,IAAK,IAAItX,KAAQo5B,EACbvO,EAAQ7qB,GAAQo5B,EAAMp5B,GAC1B3B,KAAK6F,OAAO2mB,EACf,CAKD4Y,YAAYnsB,GACRjZ,KAAKqoD,iBAAiBpvC,EAAOjZ,KAAK0nD,OACrC,CACDW,iBAAiBpvC,EAAOmvC,GACpB,IAAI9uB,EAAOt5B,KAAKiZ,MAAOsvC,GAAS,EAAOC,GAAY,EAG/CvvC,EAAM6e,aAAe93B,KAAKorC,YAC1BuR,GAAiB38C,MACjBwoD,GAAY,GAEhBxoD,KAAKiZ,MAAQA,EACb,IAAIwvC,EAAiBnvB,EAAKE,SAAWvgB,EAAMugB,SAAWx5B,KAAK0nD,OAAOluB,SAAW4uB,EAAU5uB,QACvF,GAAIivB,GAAkBzoD,KAAK0nD,OAAOluB,SAAW4uB,EAAU5uB,SAAWx5B,KAAK0nD,OAAOld,WAAa4d,EAAU5d,UAAW,CAC5G,IAAIA,EAAYwd,GAAehoD,MAC3B0oD,GAAiBle,EAAWxqC,KAAKwqC,aACjCxqC,KAAKwqC,UAAYA,EACjB+d,GAAS,EAEhB,EACGE,GAAkBL,EAAUD,iBAAmBnoD,KAAK0nD,OAAOS,kBAC3DhP,GAAgBn5C,MAEpBA,KAAKuxC,SAAWuW,GAAY9nD,MAC5B+nD,GAAoB/nD,MACpB,IAAIsnC,EAAYub,GAAgB7iD,MAAOqnC,EAAY4gB,GAAejoD,MAC9D2oD,EAASrvB,EAAKE,SAAWvgB,EAAMugB,SAAYF,EAAKhoB,IAAIpF,GAAG+M,EAAM3H,KAC3D2H,EAAM4rC,kBAAoBvrB,EAAKurB,kBAAoB,eAAiB,WADF,QAEpE+D,EAAYL,IAAWvoD,KAAKkjC,QAAQkE,YAAYnuB,EAAM3H,IAAK+1B,EAAWC,IACtEshB,GAAc3vC,EAAM2d,UAAU1qB,GAAGotB,EAAK1C,aACtC4xB,GAAY,GAChB,IAAIK,EAAyB,YAAVF,GAAwBH,GAA8C,MAAjCxoD,KAAKsc,IAAIH,MAAM2sC,gBAA0BhoB,GAAe9gC,MAChH,GAAIwoD,EAAW,CACXxoD,KAAK+xC,YAAY/H,OAMjB,IAAI+e,EAAiBH,IAAcjtB,IAAMK,MAAYh8B,KAAKorC,YACrD9R,EAAK1C,UAAU/qB,QAAUoN,EAAM2d,UAAU/qB,OAASm9C,GAAwB1vB,EAAK1C,UAAW3d,EAAM2d,WACrG,GAAIgyB,EAAW,CAKX,IAAIK,EAAejtB,GAAUh8B,KAAK2tC,YAAc3tC,KAAK0lC,eAAeI,UAAa,MAC7EyiB,GAAWvoD,KAAKkjC,QAAQr9B,OAAOoT,EAAM3H,IAAK+1B,EAAWC,EAAWtnC,QAChEA,KAAKkjC,QAAQ8J,gBAAgB,IAC7BhtC,KAAKkjC,QAAQwE,UACb1nC,KAAKkjC,QAAUsK,GAAYv0B,EAAM3H,IAAK+1B,EAAWC,EAAWtnC,KAAKsc,IAAKtc,OAEtEipD,IAAiBjpD,KAAK2tC,cACtBob,GAAiB,EACxB,CAKGA,KACE/oD,KAAK6sC,MAAM+E,WAAa5xC,KAAK+xC,YAAYC,iBAAiB9lC,GAAGlM,KAAK0lC,iBAAmB2N,GAAmBrzC,OAC1G0xC,GAAe1xC,KAAM+oD,IAGrBpX,GAAkB3xC,KAAMiZ,EAAM2d,WAC9B52B,KAAK+xC,YAAYG,mBAErBlyC,KAAK+xC,YAAYrnC,OACpB,CACD1K,KAAKkoD,kBAAkB5uB,GACT,SAAVqvB,EACA3oD,KAAKsc,IAAIqkB,UAAY,EAEN,gBAAVgoB,EACL3oD,KAAK6kD,oBAEAgE,GACLtnB,GAAesnB,EAEtB,CAIDhE,oBACI,IAAIjlB,EAAW5/B,KAAK0lC,eAAeI,UACnC,GAAI9lC,KAAK8/B,SAAS,2BAA2Bt8B,GAAKA,EAAExD,cAC/C,GAAIA,KAAKiZ,MAAM2d,qBAAqBN,GAAe,CACpD,IAAIjmB,EAASrQ,KAAKkjC,QAAQkD,YAAYpmC,KAAKiZ,MAAM2d,UAAUnuB,MACpC,GAAnB4H,EAAO0E,UACP2qB,GAAmB1/B,KAAMqQ,EAAO8uB,wBAAyBS,EAChE,MAEGF,GAAmB1/B,KAAMA,KAAKukC,YAAYvkC,KAAKiZ,MAAM2d,UAAUjX,KAAM,GAAIigB,EAEhF,CACDspB,qBACI,IAAIvpB,EACJ,MAAOA,EAAO3/B,KAAKynD,YAAYhwC,MACvBkoB,EAAK+H,SACL/H,EAAK+H,SAChB,CACDwgB,kBAAkBiB,GACd,GAAKA,GAAaA,EAAU3vB,SAAWx5B,KAAKiZ,MAAMugB,SAAWx5B,KAAK2nD,eAAiB3nD,KAAKwnD,kBAepF,IAAK,IAAI3kD,EAAI,EAAGA,EAAI7C,KAAKynD,YAAYjgD,OAAQ3E,IAAK,CAC9C,IAAIumD,EAAappD,KAAKynD,YAAY5kD,GAC9BumD,EAAWvjD,QACXujD,EAAWvjD,OAAO7F,KAAMmpD,EAC/B,KAnBsG,CACvGnpD,KAAKwnD,kBAAoBxnD,KAAK2nD,cAC9B3nD,KAAKkpD,qBACL,IAAK,IAAIrmD,EAAI,EAAGA,EAAI7C,KAAK2nD,cAAcngD,OAAQ3E,IAAK,CAChD,IAAI82B,EAAS35B,KAAK2nD,cAAc9kD,GAC5B82B,EAAOt2B,KAAKs8B,MACZ3/B,KAAKynD,YAAY1/C,KAAK4xB,EAAOt2B,KAAKs8B,KAAK3/B,MAC9C,CACD,IAAK,IAAI6C,EAAI,EAAGA,EAAI7C,KAAKiZ,MAAMugB,QAAQhyB,OAAQ3E,IAAK,CAChD,IAAI82B,EAAS35B,KAAKiZ,MAAMugB,QAAQ32B,GAC5B82B,EAAOt2B,KAAKs8B,MACZ3/B,KAAKynD,YAAY1/C,KAAK4xB,EAAOt2B,KAAKs8B,KAAK3/B,MAC9C,CACJ,CAQJ,CACD8/B,SAASma,EAAUz2C,GACf,IAAiD/C,EAA7CqI,EAAO9I,KAAK0nD,QAAU1nD,KAAK0nD,OAAOzN,GACtC,GAAY,MAARnxC,IAAiBrI,EAAQ+C,EAAIA,EAAEsF,GAAQA,GACvC,OAAOrI,EACX,IAAK,IAAIoC,EAAI,EAAGA,EAAI7C,KAAK2nD,cAAcngD,OAAQ3E,IAAK,CAChD,IAAIiG,EAAO9I,KAAK2nD,cAAc9kD,GAAGk4B,MAAMkf,GACvC,GAAY,MAARnxC,IAAiBrI,EAAQ+C,EAAIA,EAAEsF,GAAQA,GACvC,OAAOrI,CACd,CACD,IAAI+4B,EAAUx5B,KAAKiZ,MAAMugB,QACzB,GAAIA,EACA,IAAK,IAAI32B,EAAI,EAAGA,EAAI22B,EAAQhyB,OAAQ3E,IAAK,CACrC,IAAIiG,EAAO0wB,EAAQ32B,GAAGk4B,MAAMkf,GAC5B,GAAY,MAARnxC,IAAiBrI,EAAQ+C,EAAIA,EAAEsF,GAAQA,GACvC,OAAOrI,CACd,CACR,CAID+wC,WAII,GAAI7V,GAAI,CAGJ,IAAI1wB,EAAOjL,KAAKkhC,KAAKiE,cACrB,GAAIl6B,GAAQjL,KAAKsc,IACb,OAAO,EACX,IAAKrR,IAASjL,KAAKsc,IAAI0I,SAAS/Z,GAC5B,OAAO,EACX,MAAOA,GAAQjL,KAAKsc,KAAOrR,GAAQjL,KAAKsc,IAAI0I,SAAS/Z,GAAO,CACxD,GAA4B,SAAxBA,EAAK0yB,gBACL,OAAO,EACX1yB,EAAOA,EAAKo+C,aACf,CACD,OAAO,CACV,CACD,OAAOrpD,KAAKkhC,KAAKiE,eAAiBnlC,KAAKsc,GAC1C,CAIDwlB,QACI9hC,KAAK+xC,YAAY/H,OACbhqC,KAAKuxC,UACL3P,GAAmB5hC,KAAKsc,KAC5Bo1B,GAAe1xC,MACfA,KAAK+xC,YAAYrnC,OACpB,CAOGw2B,WACA,IAAIxuB,EAAS1S,KAAKsnD,MAClB,GAAc,MAAV50C,EACA,IAAK,IAAI2D,EAASrW,KAAKsc,IAAI6E,WAAY9K,EAAQA,EAASA,EAAO8K,WAC3D,GAAuB,GAAnB9K,EAAOtB,UAAqC,IAAnBsB,EAAOtB,UAAkBsB,EAAOymB,KAGzD,OAFKzmB,EAAO0yB,eACRh2B,OAAOu2C,eAAejzC,GAAQ0yB,aAAe,IAAM1yB,EAAOoN,cAAcslB,gBACrE/oC,KAAKsnD,MAAQjxC,EAGhC,OAAO3D,GAAUuV,QACpB,CAUD4b,YAAY3B,GACR,OAAO2B,GAAY7jC,KAAMkiC,EAC5B,CASDqC,YAAYt7B,EAAK+gB,EAAO,GACpB,OAAOua,GAAYvkC,KAAMiJ,EAAK+gB,EACjC,CAWDu/B,SAAStgD,EAAK+gB,EAAO,GACjB,OAAOhqB,KAAKkjC,QAAQsB,WAAWv7B,EAAK+gB,EACvC,CAWDie,QAAQh/B,GACJ,IAAI+vB,EAAOh5B,KAAKkjC,QAAQiF,OAAOl/B,GAC/B,OAAO+vB,EAAOA,EAAKiP,QAAU,IAChC,CAWDuhB,SAASv+C,EAAMiC,EAAQkjB,GAAO,GAC1B,IAAInnB,EAAMjJ,KAAKkjC,QAAQC,WAAWl4B,EAAMiC,EAAQkjB,GAChD,GAAW,MAAPnnB,EACA,MAAM,IAAIkD,WAAW,sCACzB,OAAOlD,CACV,CASDw9B,eAAetR,EAAKlc,GAChB,OAAOwtB,GAAezmC,KAAMiZ,GAASjZ,KAAKiZ,MAAOkc,EACpD,CAKDuS,UACS1nC,KAAKkjC,UAEVmW,GAAar5C,MACbA,KAAKkpD,qBACDlpD,KAAKunD,SACLvnD,KAAKkjC,QAAQr9B,OAAO7F,KAAKiZ,MAAM3H,IAAK,GAAIuxC,GAAgB7iD,MAAOA,MAC/DA,KAAKsc,IAAIpJ,YAAc,IAElBlT,KAAKsc,IAAI6E,YACdnhB,KAAKsc,IAAI6E,WAAWyrB,YAAY5sC,KAAKsc,KAEzCtc,KAAKkjC,QAAQwE,UACb1nC,KAAKkjC,QAAU,KAClB,CAMGumB,kBACA,OAAuB,MAAhBzpD,KAAKkjC,OACf,CAID/7B,cAAco3B,GACV,OAAOp3B,GAAcnH,KAAMu+B,EAC9B,CAUDiV,SAASrmB,GACL,IAAIu8B,EAAsB1pD,KAAK0nD,OAAOgC,oBAClCA,EACAA,EAAoB5uC,KAAK9a,KAAMmtB,GAE/BntB,KAAKolC,YAAYplC,KAAKiZ,MAAMkT,MAAMgB,GACzC,CAIDuY,eACI,OAAO1lC,KAAKkhC,KAAK6H,cACpB,EAEL,SAASkf,GAAetoB,GACpB,IAAIp/B,EAAQwS,OAAOhF,OAAO,MAkB1B,OAjBAxN,EAAM4tC,MAAQ,cACd5tC,EAAMopD,gBAAkBpO,OAAO5b,EAAK4R,UACpChxC,EAAMqpD,UAAY,KAClBjqB,EAAKG,SAAS,cAAcr/B,IAGxB,GAFoB,mBAATA,IACPA,EAAQA,EAAMk/B,EAAK1mB,QACnBxY,EACA,IAAK,IAAI6Y,KAAQ7Y,EACD,SAAR6Y,IACA/Y,EAAM4tC,OAAS,IAAM1tC,EAAM6Y,IACnB,SAARA,EACA/Y,EAAM4b,OAAS5b,EAAM4b,MAAQ5b,EAAM4b,MAAQ,IAAM,IAAM1b,EAAM6Y,GAEvD/Y,EAAM+Y,IAAiB,mBAARA,GAAqC,YAARA,IAClD/Y,EAAM+Y,GAAQiiC,OAAO96C,EAAM6Y,IAClC,IAEF,CAAComC,GAAWz0C,KAAK,EAAG00B,EAAK1mB,MAAM3H,IAAIjK,QAAQqB,KAAMnI,GAC3D,CACD,SAASwnD,GAAoBpoB,GACzB,GAAIA,EAAK0d,WAAY,CACjB,IAAI/gC,EAAM2L,SAASR,cAAc,OACjCnL,EAAIszB,UAAY,wBAChBtzB,EAAIqL,aAAa,mBAAoB,QACrCrL,EAAIqL,aAAa,MAAO,IACxBgY,EAAKyS,cAAgB,CAAE91B,MAAKkyB,KAAMkR,GAAWxY,OAAOvH,EAAK1mB,MAAM2d,UAAUjX,KAAMrD,EAAK,CAAEwtB,KAAK,EAAMh8B,MAAO6xB,EAAK0d,aAChH,MAEG1d,EAAKyS,cAAgB,IAE5B,CACD,SAAS0V,GAAYnoB,GACjB,OAAQA,EAAKG,SAAS,YAAYr/B,IAA+B,IAAtBA,EAAMk/B,EAAK1mB,QACzD,CACD,SAAS+vC,GAAwBa,EAAMC,GACnC,IAAIx6C,EAAQpF,KAAKC,IAAI0/C,EAAKj1B,QAAQ3iB,YAAY43C,EAAKlqC,MAAOmqC,EAAKl1B,QAAQ3iB,YAAY63C,EAAKnqC,OACxF,OAAOkqC,EAAKj1B,QAAQlqB,MAAM4E,IAAUw6C,EAAKl1B,QAAQlqB,MAAM4E,EAC1D,CACD,SAAS04C,GAAeroB,GACpB,IAAI92B,EAASkK,OAAOhF,OAAO,MAC3B,SAAS8Y,EAAIlZ,GACT,IAAK,IAAI7E,KAAQ6E,EACRoF,OAAOzL,UAAUuT,eAAeC,KAAKjS,EAAQC,KAC9CD,EAAOC,GAAQ6E,EAAI7E,GAC9B,CAGD,OAFA62B,EAAKG,SAAS,YAAajZ,GAC3B8Y,EAAKG,SAAS,YAAajZ,GACpBhe,CACV,CACD,SAAS6/C,GAAiB9lD,EAAGoG,GACzB,IAAI+gD,EAAK,EAAGC,EAAK,EACjB,IAAK,IAAIlhD,KAAQlG,EAAG,CAChB,GAAIA,EAAEkG,IAASE,EAAEF,GACb,OAAO,EACXihD,GACH,CACD,IAAK,IAAIn8C,KAAK5E,EACVghD,IACJ,OAAOD,GAAMC,CAChB,CACD,SAASpC,GAAoBjuB,GACzB,GAAIA,EAAOt2B,KAAK4V,OAAS0gB,EAAOt2B,KAAKy2B,mBAAqBH,EAAOt2B,KAAKg3B,kBAClE,MAAM,IAAIluB,WAAW,sEAC5B,CCptKD,MAAMivB,GAA0B,oBAAbC,UAA2BA,UAAY,KACpD/pB,GAAyB,oBAAZ2W,SAA0BA,SAAW,KAClDqT,GAAQF,IAAOA,GAAIG,WAAa,GAChCC,GAAU,cAAc5a,KAAK0a,IAC7BG,GAAY,UAAU7a,KAAK0a,IAC3BI,GAAU,wCAAwC9a,KAAK0a,IAChDK,MAAQF,IAAaC,IAAWF,IAChCI,GAAaH,GAAYxT,SAAS4T,aAAeH,IAAWA,GAAQ,GAAKF,IAAWA,GAAQ,GAAK,EACjGM,IAASH,IAAM,gBAAgBxjB,KAAKmjB,IACpC2uB,GAAgBnuB,MAAW,iBAAiBlb,KAAK0a,KAAU,CAAC,EAAG,IAAI,GAC1ES,IAAWJ,IAAM,gBAAgB/a,KAAK0a,IAC/BU,KAAWD,GACXE,GAAiBF,IAAWA,GAAQ,GAAK,EACzCG,IAAUP,MAAQP,IAAO,iBAAiBjjB,KAAKijB,GAAIe,QACnDC,GAAMF,KAAW,cAAc/jB,KAAKmjB,OAAYF,IAAOA,GAAIiB,eAAiB,GAC5EC,GAAMF,MAAQhB,IAAM,MAAMjjB,KAAKijB,GAAImB,UACnCC,GAAU,aAAarkB,KAAKmjB,IAC5BmB,KAAWnrB,IAAO,wBAAyBA,GAAIorB,gBAAgBvgB,MAC/DwgB,GAAiBF,KAAW,uBAAuB7b,KAAKya,UAAUE,YAAc,CAAC,EAAG,IAAI,GAAK,E,gLCjB1G,SAAS2uB,GAAIvqB,EAAMl3B,EAAM6B,EAAId,EAAMsS,EAAO6d,GACxC,GAAIgG,EAAKyL,UACP,OAAO,EACT,MAAMnyB,EAAQ0mB,EAAK1mB,MAAO7J,EAAQ6J,EAAM3H,IAAIsB,QAAQnK,GACpD,GAAI2G,EAAM5E,OAAOW,KAAK9H,KAAKzB,KACzB,OAAO,EACT,MAAMuoD,EAAa/6C,EAAM5E,OAAOK,YAAYX,KAAKS,IAAI,EAAGyE,EAAMO,aAAe,KAAMP,EAAMO,kBAAc,EAAQ,KAAYnG,EAC3H,IAAK,IAAI3G,EAAI,EAAGA,EAAIiZ,EAAMtU,OAAQ3E,IAAK,CACrC,MAAMqR,EAAQ4H,EAAMjZ,GAAGqR,MAAM0M,KAAKupC,GAC5Bh9B,EAAKjZ,GAASA,EAAM,IAAM4H,EAAMjZ,GAAGk2C,QAAQ9/B,EAAO/E,EAAOzL,GAAQyL,EAAM,GAAG1M,OAASgC,EAAKhC,QAAS8C,GACvG,GAAK6iB,EAGL,OADAwS,EAAK6T,SAASrmB,EAAGuL,QAAQiB,EAAQ,CAAEywB,UAAWj9B,EAAI1kB,OAAM6B,KAAId,WACrD,CACR,CACD,OAAO,CACR,CACW,MAAC6gD,GAAsB,IAAIlvB,GAAU,8BACpCmvB,GAAmB,EAAGxuC,YACjC,MAAM6d,EAAS,IAAImB,GAAO,CACxBvzB,IAAK8iD,GACLE,cAAc,EACdtxC,MAAO,CACLggB,OACE,OAAO,IACR,EACD9M,MAAMgB,EAAImM,GACR,MAAMyI,EAAS5U,EAAGwL,QAAQ,MAC1B,OAAIoJ,IAEG5U,EAAG4K,cAAgB5K,EAAGmH,WAAa,KAAOgF,EAClD,GAEHyB,MAAO,CACLyvB,gBAAgB7qB,EAAMl3B,EAAM6B,EAAId,GAC9B,OAAO0gD,GAAIvqB,EAAMl3B,EAAM6B,EAAId,EAAMsS,EAAO6d,EACzC,EACDwuB,gBAAiB,CACf7K,eAAiB3d,IACf14B,YAAW,KACT,MAAM,QAAEgvB,GAAY0J,EAAK1mB,MAAM2d,UAC3BX,GACFi0B,GAAIvqB,EAAM1J,EAAQhtB,IAAKgtB,EAAQhtB,IAAK,GAAI6S,EAAO6d,EAA/C,KAEG,IAGX8wB,cAAc9qB,EAAMpB,GAClB,GAAkB,UAAdA,EAAMh3B,IACR,OAAO,EACT,MAAM,QAAE0uB,GAAY0J,EAAK1mB,MAAM2d,UAC/B,QAAIX,GACKi0B,GAAIvqB,EAAM1J,EAAQhtB,IAAKgtB,EAAQhtB,IAAK,KAAM6S,EAAO6d,EAE3D,KAGL,OAAOA,CAAP,ECzDU,MAAC+wB,GAAwB,CAAC/qB,EAAMtvB,EAAQ0oC,KAClD,MAAM9/B,EAAQ0mB,EAAK1mB,OACb,KAAExQ,GAASwQ,EAAM2d,WACjB,KAAE3rB,GAAS00B,EAAK4pB,SAAS9gD,GACzBg7B,EAAUx4B,aAAgB0/C,KAAO1/C,EAAKo+C,cAAgBp+C,EAC5D,KAAMw4B,aAAmBmnB,aACvB,MAAM3mD,EAAmBw/B,GAE3B,MAAMonB,EAAmBpnB,EAAQtE,wBAC3B2rB,EAAiBz6C,EAAO8uB,wBACxB30B,EAAS6F,EAAOg5C,cACtB,IAAK7+C,EACH,MAAMvG,EAAmBuG,GAE3B,MAAMugD,EAAiBvgD,EAAO20B,yBACvBtd,EAAK8c,GAAQoa,EAAQ8R,EAAkBC,EAAgBC,GAC9D16C,EAAO8L,MAAM0F,IAAMA,EAAM,KACzBxR,EAAO8L,MAAMwiB,KAAOA,EAAO,IAA3B,EAEWqsB,GAAwB,CAACrrB,EAAMtvB,EAAQ0oC,KAClD,MAAM9/B,EAAQ0mB,EAAK1mB,OACb,KAAExQ,EAAF,GAAQ6B,GAAO2O,EAAM2d,UACrBlsB,EAAQi1B,EAAK4E,YAAY97B,GACzBgC,EAAMk1B,EAAK4E,YAAYj6B,GACvBwgD,EAAiBz6C,EAAO8uB,wBACxB30B,EAAS6F,EAAOg5C,cACtB,IAAK7+C,EACH,MAAMjG,IAER,MAAMwmD,EAAiBvgD,EAAO20B,yBACvBtd,EAAK8c,GAAQoa,EAAQruC,EAAOD,EAAKqgD,EAAgBC,GACxD16C,EAAO8L,MAAM0F,IAAMA,EAAM,KACzBxR,EAAO8L,MAAMwiB,KAAOA,EAAO,IAA3B,ECjCWssB,GAAW99B,GACfpa,OAAOm4C,OAAOn4C,OAAOhF,OAAOof,GAAKA,GAAIiL,QAAQT,KAAKC,OAE9CuzB,GAAgB,CAACp2C,EAAU9J,IAC/BnI,MAAMC,QAAQgS,IAAaA,EAAS2B,QAAQzL,EAAKE,OAAS,GAAKF,EAAKE,OAAS4J,ECHzEq2C,GAAoB,CAACjgD,EAAMyB,KACtC,MAAMyD,EAASzD,EAAOI,MAAM7B,GAC5B,IAAKkF,EACH,MAAMtM,EAAsB,OAAQoH,GAEtC,OAAOkF,CAAP,ECJWg7C,GAA8BlL,GAAe7wB,IACxD,IAAK,IAAIzsB,EAAIysB,EAAKhgB,MAAOzM,EAAI,EAAGA,IAAK,CACnC,MAAMoI,EAAOqkB,EAAKrkB,KAAKpI,GACvB,GAAIs9C,EAAUl1C,GACZ,MAAO,CACLhC,IAAKpG,EAAI,EAAIysB,EAAK9d,OAAO3O,GAAK,EAC9B6H,MAAO4kB,EAAK5kB,MAAM7H,GAClByM,MAAOzM,EACPoI,OAGL,CACD,EAEWqgD,GAAkBnL,GAAevpB,GACrCy0B,GAA2BlL,EAA3BkL,CAAsCz0B,EAAUxnB,OAE5Cm8C,GAAyB,CAAC30B,EAAW7hB,KAChD,KAAM6hB,aAAqBN,IACzB,OAEF,MAAM,KAAErrB,EAAF,MAAQmE,GAAUwnB,EACxB,OAAIu0B,GAAcp2C,EAAU9J,GACnB,CAAEA,OAAMhC,IAAKmG,EAAMnG,IAAKyB,MAAO0E,EAAM1E,MAAM0E,EAAME,OAAQA,MAAOF,EAAME,YAD/E,CAGA,ECpBIkpB,GAAkB,CAACvf,EAAOu6B,KACxBv6B,EAAM2d,UAAU/qB,QAEhB2nC,GACAA,EAASv6B,EAAMkU,GAAGqL,kBAAkBK,mBACjC,GAWL2yB,GAAe,CAACvyC,EAAOu6B,EAAU7T,KACnC,IAAI,QAAE1J,GAAYhd,EAAM2d,UACxB,IAAKX,IAAY0J,GAAQA,EAAK8G,eAAe,WAAYxtB,GACnDgd,EAAQtmB,aAAe,GACzB,OAAO,EACX,IAAI87C,EAAOC,GAAcz1B,GAEzB,IAAKw1B,EAAM,CACP,IAAIx9B,EAAQgI,EAAQ/jB,aAAc7B,EAAS4d,GAASD,GAAWC,GAC/D,OAAc,MAAV5d,IAEAmjC,GACAA,EAASv6B,EAAMkU,GAAGe,KAAKD,EAAO5d,GAAQwoB,mBACnC,EACV,CACD,IAAIrnB,EAASi6C,EAAK56C,WAElB,IAAKW,EAAOrG,KAAK9H,KAAKwL,WAAa88C,GAAc1yC,EAAOwyC,EAAMjY,GAC1D,OAAO,EAGX,GAAmC,GAA/Bvd,EAAQzrB,OAAOnD,QAAQqB,OACtBkjD,GAAYp6C,EAAQ,QAAU8kB,GAAAA,aAA2B9kB,IAAU,CACpE,IAAIq6C,EAAUr7B,GAAYvX,EAAM3H,IAAK2kB,EAAQzkB,SAAUykB,EAAQxkB,QAAStD,GAAAA,OACxE,GAAI09C,GAAWA,EAAQ/jD,MAAMY,KAAOmjD,EAAQvhD,GAAKuhD,EAAQpjD,KAAM,CAC3D,GAAI+qC,EAAU,CACV,IAAIrmB,EAAKlU,EAAMkU,GAAGK,KAAKq+B,GACvB1+B,EAAG0J,aAAa+0B,GAAYp6C,EAAQ,OAASmjB,GAAUY,SAASpI,EAAG7b,IAAIsB,QAAQua,EAAGtC,QAAQ7nB,IAAIyoD,EAAKxiD,KAAM,KAAM,GACzGqtB,GAAAA,OAAqBnJ,EAAG7b,IAAKm6C,EAAKxiD,IAAMuI,EAAO9H,WACrD8pC,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CACV,CACJ,CAED,SAAIrnB,EAAOsC,QAAU23C,EAAKn8C,OAAS2mB,EAAQ3mB,MAAQ,KAC3CkkC,GACAA,EAASv6B,EAAMkU,GAAG2G,OAAO23B,EAAKxiD,IAAMuI,EAAO9H,SAAU+hD,EAAKxiD,KAAK4vB,mBAC5D,EAEX,EAEJ,SAAS+yB,GAAY3gD,EAAM+e,EAAM8hC,GAAO,GACpC,IAAK,IAAI10C,EAAOnM,EAAMmM,EAAMA,EAAgB,SAAR4S,EAAkB5S,EAAK3L,WAAa2L,EAAK7L,UAAY,CACrF,GAAI6L,EAAKvD,YACL,OAAO,EACX,GAAIi4C,GAA2B,GAAnB10C,EAAKlO,WACb,OAAO,CACd,CACD,OAAO,CACV,CASD,MAAM6iD,GAAqB,CAAC9yC,EAAOu6B,EAAU7T,KACzC,IAAI,MAAE9K,EAAF,MAAShpB,GAAUoN,EAAM2d,UAAW60B,EAAO52B,EAC/C,IAAKhpB,EACD,OAAO,EACX,GAAIgpB,EAAMrqB,OAAOqJ,YAAa,CAC1B,GAAI8rB,GAAQA,EAAK8G,eAAe,WAAYxtB,GAAS4b,EAAMllB,aAAe,EACtE,OAAO,EACX87C,EAAOC,GAAc72B,EACxB,CACD,IAAI5pB,EAAOwgD,GAAQA,EAAK56C,WACxB,SAAK5F,IAASqrB,GAAAA,aAA2BrrB,MAErCuoC,GACAA,EAASv6B,EAAMkU,GAAG0J,aAAaP,GAAAA,OAAqBrd,EAAM3H,IAAKm6C,EAAKxiD,IAAMgC,EAAKvB,WAAWmvB,mBACvF,EAAP,EAEJ,SAAS6yB,GAAcp8B,GACnB,IAAKA,EAAK9kB,OAAOW,KAAK9H,KAAKwL,UACvB,IAAK,IAAIhM,EAAIysB,EAAKhgB,MAAQ,EAAGzM,GAAK,EAAGA,IAAK,CACtC,GAAIysB,EAAKvjB,MAAMlJ,GAAK,EAChB,OAAOysB,EAAKhe,IAAIsB,QAAQ0c,EAAK9d,OAAO3O,EAAI,IAC5C,GAAIysB,EAAKrkB,KAAKpI,GAAGsI,KAAK9H,KAAKwL,UACvB,KACP,CACL,OAAO,IACV,CAQD,MAAMm9C,GAAc,CAAC/yC,EAAOu6B,EAAU7T,KAClC,IAAI,QAAE1J,GAAYhd,EAAM2d,UACxB,IAAKX,IAAY0J,GAAQA,EAAK8G,eAAe,UAAWxtB,GAClDgd,EAAQtmB,aAAesmB,EAAQzrB,OAAOnD,QAAQqB,MAChD,OAAO,EACX,IAAI+iD,EAAOQ,GAAah2B,GAExB,IAAKw1B,EACD,OAAO,EACX,IAAIh6C,EAAQg6C,EAAK76C,UAEjB,GAAI+6C,GAAc1yC,EAAOwyC,EAAMjY,GAC3B,OAAO,EAGX,GAAmC,GAA/Bvd,EAAQzrB,OAAOnD,QAAQqB,OACtBkjD,GAAYn6C,EAAO,UAAY6kB,GAAAA,aAA2B7kB,IAAS,CACpE,IAAIo6C,EAAUr7B,GAAYvX,EAAM3H,IAAK2kB,EAAQzkB,SAAUykB,EAAQxkB,QAAStD,GAAAA,OACxE,GAAI09C,GAAWA,EAAQ/jD,MAAMY,KAAOmjD,EAAQvhD,GAAKuhD,EAAQpjD,KAAM,CAC3D,GAAI+qC,EAAU,CACV,IAAIrmB,EAAKlU,EAAMkU,GAAGK,KAAKq+B,GACvB1+B,EAAG0J,aAAa+0B,GAAYn6C,EAAO,SAAWkjB,GAAUY,SAASpI,EAAG7b,IAAIsB,QAAQua,EAAGtC,QAAQ7nB,IAAIyoD,EAAKxiD,MAAO,GACrGqtB,GAAAA,OAAqBnJ,EAAG7b,IAAK6b,EAAGtC,QAAQ7nB,IAAIyoD,EAAKxiD,OACvDuqC,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CACV,CACJ,CAED,SAAIpnB,EAAMqC,QAAU23C,EAAKn8C,OAAS2mB,EAAQ3mB,MAAQ,KAC1CkkC,GACAA,EAASv6B,EAAMkU,GAAG2G,OAAO23B,EAAKxiD,IAAKwiD,EAAKxiD,IAAMwI,EAAM/H,UAAUmvB,mBAC3D,EAEX,EAUEqzB,GAAoB,CAACjzC,EAAOu6B,EAAU7T,KACxC,IAAI,MAAE9K,EAAF,MAAShpB,GAAUoN,EAAM2d,UAAW60B,EAAO52B,EAC/C,IAAKhpB,EACD,OAAO,EACX,GAAIgpB,EAAMrqB,OAAOqJ,YAAa,CAC1B,GAAI8rB,GAAQA,EAAK8G,eAAe,UAAWxtB,GAAS4b,EAAMllB,aAAeklB,EAAMrqB,OAAOnD,QAAQqB,KAC1F,OAAO,EACX+iD,EAAOQ,GAAap3B,EACvB,CACD,IAAI5pB,EAAOwgD,GAAQA,EAAK76C,UACxB,SAAK3F,IAASqrB,GAAAA,aAA2BrrB,MAErCuoC,GACAA,EAASv6B,EAAMkU,GAAG0J,aAAaP,GAAAA,OAAqBrd,EAAM3H,IAAKm6C,EAAKxiD,MAAM4vB,mBACvE,EAAP,EAEJ,SAASozB,GAAa38B,GAClB,IAAKA,EAAK9kB,OAAOW,KAAK9H,KAAKwL,UACvB,IAAK,IAAIhM,EAAIysB,EAAKhgB,MAAQ,EAAGzM,GAAK,EAAGA,IAAK,CACtC,IAAI2H,EAAS8kB,EAAKrkB,KAAKpI,GACvB,GAAIysB,EAAKvjB,MAAMlJ,GAAK,EAAI2H,EAAOtB,WAC3B,OAAOomB,EAAKhe,IAAIsB,QAAQ0c,EAAK7d,MAAM5O,EAAI,IAC3C,GAAI2H,EAAOW,KAAK9H,KAAKwL,UACjB,KACP,CACL,OAAO,IACV,CAMD,MA0DMs9C,GAAgB,CAAClzC,EAAOu6B,KAC1B,IAAI,MAAE3e,EAAF,QAASD,GAAY3b,EAAM2d,UAC/B,SAAK/B,EAAMrqB,OAAOW,KAAK9H,KAAKzB,OAASizB,EAAMviB,WAAWsiB,MAElD4e,GACAA,EAASv6B,EAAMkU,GAAGsL,WAAW,MAAMI,mBAChC,EAAP,EAEJ,SAASuzB,GAAel4C,GACpB,IAAK,IAAIrR,EAAI,EAAGA,EAAIqR,EAAMgD,UAAWrU,IAAK,CACtC,IAAI,KAAEsI,GAAS+I,EAAMiD,KAAKtU,GAC1B,GAAIsI,EAAK0I,cAAgB1I,EAAK6K,mBAC1B,OAAO7K,CACd,CACD,OAAO,IACV,CAMD,MAAMkhD,GAAW,CAACpzC,EAAOu6B,KACrB,IAAI,MAAE3e,EAAF,QAASD,GAAY3b,EAAM2d,UAC/B,IAAK/B,EAAMrqB,OAAOW,KAAK9H,KAAKzB,OAASizB,EAAMviB,WAAWsiB,GAClD,OAAO,EACX,IAAI03B,EAAQz3B,EAAM5pB,MAAM,GAAIwG,EAAQojB,EAAMtjB,YAAY,GAAIpG,EAAOihD,GAAeE,EAAMr4C,eAAexC,IACrG,IAAKtG,IAASmhD,EAAM53C,eAAejD,EAAOA,EAAOtG,GAC7C,OAAO,EACX,GAAIqoC,EAAU,CACV,IAAIvqC,EAAM4rB,EAAMpjB,QAAS0b,EAAKlU,EAAMkU,GAAGsC,YAAYxmB,EAAKA,EAAKkC,EAAKsL,iBAClE0W,EAAG0J,aAAalC,GAAUuB,KAAK/I,EAAG7b,IAAIsB,QAAQ3J,GAAM,IACpDuqC,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CAAP,EAME0zB,GAAsB,CAACtzC,EAAOu6B,KAChC,IAAI9c,EAAMzd,EAAM2d,WAAW,MAAExnB,EAAF,IAASC,GAAQqnB,EAC5C,GAAIA,aAAelB,IAAgBpmB,EAAM5E,OAAO4H,eAAiB/C,EAAI7E,OAAO4H,cACxE,OAAO,EACX,IAAIjH,EAAOihD,GAAe/8C,EAAI7E,OAAOyJ,eAAe5E,EAAIkC,eACxD,IAAKpG,IAASA,EAAK0I,YACf,OAAO,EACX,GAAI2/B,EAAU,CACV,IAAIxpB,IAAS5a,EAAMO,cAAgBN,EAAItD,QAAUsD,EAAI7E,OAAOtB,WAAakG,EAAQC,GAAKpG,IAClFkkB,EAAKlU,EAAMkU,GAAGle,OAAO+a,EAAM7e,EAAKsL,iBACpC0W,EAAG0J,aAAaxB,GAActnB,OAAOof,EAAG7b,IAAK0Y,EAAO,IACpDwpB,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CAAP,EAME2zB,GAAiB,CAACvzC,EAAOu6B,KAC3B,IAAI,QAAEvd,GAAYhd,EAAM2d,UACxB,IAAKX,GAAWA,EAAQzrB,OAAOnD,QAAQqB,KACnC,OAAO,EACX,GAAIutB,EAAQ3mB,MAAQ,GAAK2mB,EAAQxkB,SAAWwkB,EAAQxrB,KAAK,GAAI,CACzD,IAAI+G,EAASykB,EAAQzkB,SACrB,GAAIke,GAASzW,EAAM3H,IAAKE,GAGpB,OAFIgiC,GACAA,EAASv6B,EAAMkU,GAAG3V,MAAMhG,GAAQqnB,mBAC7B,CAEd,CACD,IAAI5K,EAAQgI,EAAQ/jB,aAAc7B,EAAS4d,GAASD,GAAWC,GAC/D,OAAc,MAAV5d,IAEAmjC,GACAA,EAASv6B,EAAMkU,GAAGe,KAAKD,EAAO5d,GAAQwoB,mBACnC,EAAP,EAME4zB,GAAa,CAACxzC,EAAOu6B,KACvB,IAAI,MAAEpkC,EAAF,IAASC,GAAQ4J,EAAM2d,UAC3B,GAAI3d,EAAM2d,qBAAqBN,IAAiBrd,EAAM2d,UAAU3rB,KAAKG,QACjE,SAAKgE,EAAMO,eAAiB+f,GAASzW,EAAM3H,IAAKlC,EAAMnG,QAElDuqC,GACAA,EAASv6B,EAAMkU,GAAG3V,MAAMpI,EAAMnG,KAAK4vB,mBAChC,GAEX,IAAKzpB,EAAM5E,OAAOY,QACd,OAAO,EACX,GAAIooC,EAAU,CACV,IAAI3V,EAAQxuB,EAAIM,cAAgBN,EAAI7E,OAAOnD,QAAQqB,KAC/CykB,EAAKlU,EAAMkU,IACXlU,EAAM2d,qBAAqBvB,IAAiBpc,EAAM2d,qBAAqBpB,KACvErI,EAAGqL,kBACP,IAAI/S,EAAuB,GAAfrW,EAAME,MAAa,KAAO88C,GAAeh9C,EAAMnE,MAAM,GAAGgJ,eAAe7E,EAAMmC,YAAY,KACjG+E,EAAQunB,GAASpY,EAAQ,CAAC,CAAEta,KAAMsa,SAAW/d,EAC7CglD,EAAMh9B,GAASvC,EAAG7b,IAAK6b,EAAGtC,QAAQ7nB,IAAIoM,EAAMnG,KAAM,EAAGqN,GAMzD,GALKA,GAAUo2C,IAAOh9B,GAASvC,EAAG7b,IAAK6b,EAAGtC,QAAQ7nB,IAAIoM,EAAMnG,KAAM,EAAGwc,EAAQ,CAAC,CAAEta,KAAMsa,SAAW/d,KACzF+d,IACAnP,EAAQ,CAAC,CAAEnL,KAAMsa,KACrBinC,GAAM,GAENA,IACAv/B,EAAG3V,MAAM2V,EAAGtC,QAAQ7nB,IAAIoM,EAAMnG,KAAM,EAAGqN,IAClCunB,IAAUzuB,EAAMO,cAAgBP,EAAM5E,OAAOW,MAAQsa,GAAO,CAC7D,IAAIja,EAAQ2hB,EAAGtC,QAAQ7nB,IAAIoM,EAAMoC,UAAWm7C,EAASx/B,EAAG7b,IAAIsB,QAAQpH,GAChEia,GAASrW,EAAMnE,MAAM,GAAGyJ,eAAei4C,EAAO5gD,QAAS4gD,EAAO5gD,QAAU,EAAG0Z,IAC3E0H,EAAGoC,cAAcpC,EAAGtC,QAAQ7nB,IAAIoM,EAAMoC,UAAWiU,EACxD,CAEL+tB,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CAAP,EAkBE+zB,GAAmB,CAAC3zC,EAAOu6B,KAC7B,IAAqCvqC,GAAjC,MAAEmG,EAAF,GAAS9E,GAAO2O,EAAM2d,UACtB5sB,EAAOoF,EAAM6C,YAAY3H,GAC7B,OAAY,GAARN,IAEJf,EAAMmG,EAAMoC,OAAOxH,GACfwpC,GACAA,EAASv6B,EAAMkU,GAAG0J,aAAaP,GAAAA,OAAqBrd,EAAM3H,IAAKrI,MAC5D,EAAP,EAKE4jD,GAAY,CAAC5zC,EAAOu6B,KAClBA,GACAA,EAASv6B,EAAMkU,GAAG0J,aAAa,IAAIrB,GAAavc,EAAM3H,QACnD,GAEX,SAASw7C,GAAe7zC,EAAOqW,EAAMkkB,GACjC,IAAIhiC,EAAS8d,EAAKze,WAAYY,EAAQ6d,EAAK1e,UAAW7E,EAAQujB,EAAKvjB,QACnE,SAAKyF,GAAWC,GAAUD,EAAOrG,KAAK6E,kBAAkByB,EAAMtG,UAEzDqG,EAAOnK,QAAQqB,MAAQ4mB,EAAK9kB,OAAO0E,WAAWnD,EAAQ,EAAGA,IACtDynC,GACAA,EAASv6B,EAAMkU,GAAG2G,OAAOxE,EAAKrmB,IAAMuI,EAAO9H,SAAU4lB,EAAKrmB,KAAK4vB,mBAC5D,MAENvJ,EAAK9kB,OAAO0E,WAAWnD,EAAOA,EAAQ,KAAQ0F,EAAMoC,cAAemc,GAAQ/W,EAAM3H,IAAKge,EAAKrmB,QAE5FuqC,GACAA,EAASv6B,EAAMkU,GACVQ,kBAAkB2B,EAAKrmB,IAAKuI,EAAOrG,KAAMqG,EAAOyC,eAAezC,EAAOtI,aACtE/F,KAAKmsB,EAAKrmB,KACV4vB,mBACF,GACV,CACD,SAAS8yB,GAAc1yC,EAAOwyC,EAAMjY,GAChC,IAAsDuZ,EAAM74C,EAAxD1C,EAASi6C,EAAK56C,WAAYY,EAAQg6C,EAAK76C,UAC3C,GAAIY,EAAOrG,KAAK9H,KAAKwL,WAAa4C,EAAMtG,KAAK9H,KAAKwL,UAC9C,OAAO,EACX,GAAIi+C,GAAe7zC,EAAOwyC,EAAMjY,GAC5B,OAAO,EACX,IAAIwZ,EAAcvB,EAAKjhD,OAAO0E,WAAWu8C,EAAK1/C,QAAS0/C,EAAK1/C,QAAU,GACtE,GAAIihD,IACCD,GAAQ74C,EAAQ1C,EAAOyC,eAAezC,EAAOtI,aAAayN,aAAalF,EAAMtG,QAC9E+I,EAAMS,UAAUo4C,EAAK,IAAMt7C,EAAMtG,MAAMqJ,SAAU,CACjD,GAAIg/B,EAAU,CACV,IAAI/oC,EAAMghD,EAAKxiD,IAAMwI,EAAM/H,SAAUiX,EAAOvW,EAAAA,MAC5C,IAAK,IAAIvH,EAAIkqD,EAAKvlD,OAAS,EAAG3E,GAAK,EAAGA,IAClC8d,EAAOvW,EAAAA,KAAc2iD,EAAKlqD,GAAGkL,OAAO,KAAM4S,IAC9CA,EAAOvW,EAAAA,KAAcoH,EAAOvF,KAAK0U,IACjC,IAAIwM,EAAKlU,EAAMkU,GAAGK,KAAK,IAAIX,GAAkB4+B,EAAKxiD,IAAM,EAAGwB,EAAKghD,EAAKxiD,IAAKwB,EAAK,IAAI0D,GAAMwS,EAAM,EAAG,GAAIosC,EAAKvlD,QAAQ,IAC/GylD,EAASxiD,EAAM,EAAIsiD,EAAKvlD,OACxBwoB,GAAQ7C,EAAG7b,IAAK27C,IAChB9/B,EAAGhqB,KAAK8pD,GACZzZ,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CACV,CACD,IAAIq0B,EAAWv4B,GAAUY,SAASk2B,EAAM,GACpCx9B,EAAQi/B,GAAYA,EAAS99C,MAAM8C,WAAWg7C,EAAS79C,KAAMgB,EAAS4d,GAASD,GAAWC,GAC9F,GAAc,MAAV5d,GAAkBA,GAAUo7C,EAAKn8C,MAGjC,OAFIkkC,GACAA,EAASv6B,EAAMkU,GAAGe,KAAKD,EAAO5d,GAAQwoB,mBACnC,EAEX,GAAIm0B,GAAepB,GAAYn6C,EAAO,SAAS,IAASm6C,GAAYp6C,EAAQ,OAAQ,CAChF,IAAI27C,EAAK37C,EAAQmP,EAAO,GACxB,OAAS,CAEL,GADAA,EAAK5Y,KAAKolD,GACNA,EAAGt5C,YACH,MACJs5C,EAAKA,EAAG5hD,SACX,CACD,IAAI6hD,EAAY37C,EAAO47C,EAAa,EACpC,MAAQD,EAAUv5C,YAAau5C,EAAYA,EAAU3hD,WACjD4hD,IACJ,GAAIF,EAAGj+C,WAAWi+C,EAAGjkD,WAAYikD,EAAGjkD,WAAYkkD,EAAU/lD,SAAU,CAChE,GAAImsC,EAAU,CACV,IAAI/oC,EAAML,EAAAA,MACV,IAAK,IAAIvH,EAAI8d,EAAKnZ,OAAS,EAAG3E,GAAK,EAAGA,IAClC4H,EAAML,EAAAA,KAAcuW,EAAK9d,GAAGoJ,KAAKxB,IACrC,IAAI0iB,EAAKlU,EAAMkU,GAAGK,KAAK,IAAIX,GAAkB4+B,EAAKxiD,IAAM0X,EAAKnZ,OAAQikD,EAAKxiD,IAAMwI,EAAM/H,SAAU+hD,EAAKxiD,IAAMokD,EAAY5B,EAAKxiD,IAAMwI,EAAM/H,SAAW2jD,EAAY,IAAIl/C,GAAM1D,EAAKkW,EAAKnZ,OAAQ,GAAI,GAAG,IAClMgsC,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CACV,CACJ,CACD,OAAO,CACV,CACD,SAASy0B,GAAoBtjC,GACzB,OAAO,SAAU/Q,EAAOu6B,GACpB,IAAI9c,EAAMzd,EAAM2d,UAAWtH,EAAOtF,EAAO,EAAI0M,EAAItnB,MAAQsnB,EAAIrnB,IACzDC,EAAQggB,EAAKhgB,MACjB,MAAOggB,EAAKrkB,KAAKqE,GAAOyC,SAAU,CAC9B,IAAKzC,EACD,OAAO,EACXA,GACH,CACD,QAAKggB,EAAKrkB,KAAKqE,GAAOuE,cAElB2/B,GACAA,EAASv6B,EAAMkU,GAAG0J,aAAaxB,GAActnB,OAAOkL,EAAM3H,IAAK0Y,EAAO,EAAIsF,EAAK5kB,MAAM4E,GAASggB,EAAK7kB,IAAI6E,OACpG,EACV,CACJ,CAID,MAAMi+C,GAAuBD,IAAqB,GAI5CE,GAAqBF,GAAoB,GAM/C,SAASG,GAAO14C,EAAUxU,EAAQ,MAC9B,OAAO,SAAU0Y,EAAOu6B,GACpB,IAAI,MAAEpkC,EAAF,IAASC,GAAQ4J,EAAM2d,UACvB3I,EAAQ7e,EAAM8C,WAAW7C,GAAMkhB,EAAWtC,GAAStX,GAAasX,EAAOlZ,EAAUxU,GACrF,QAAKgwB,IAEDijB,GACAA,EAASv6B,EAAMkU,GAAGxM,KAAKsN,EAAOsC,GAAUsI,mBACrC,EACV,CACJ,CAKD,SAAS7J,GAAaja,EAAUxU,EAAQ,MACpC,OAAO,SAAU0Y,EAAOu6B,GACpB,IAAI,KAAE/qC,EAAF,GAAQ6B,GAAO2O,EAAM2d,UACrB82B,GAAa,EAcjB,OAbAz0C,EAAM3H,IAAIjH,aAAa5B,EAAM6B,GAAI,CAACW,EAAMhC,KACpC,GAAIykD,EACA,OAAO,EACX,GAAKziD,EAAK4I,cAAe5I,EAAKkI,UAAU4B,EAAUxU,GAElD,GAAI0K,EAAKE,MAAQ4J,EACb24C,GAAa,MAEZ,CACD,IAAIp+B,EAAOrW,EAAM3H,IAAIsB,QAAQ3J,GAAM8C,EAAQujB,EAAKvjB,QAChD2hD,EAAap+B,EAAK9kB,OAAOkK,eAAe3I,EAAOA,EAAQ,EAAGgJ,EAC7D,OAEA24C,IAEDla,GACAA,EAASv6B,EAAMkU,GAAG6B,aAAavmB,EAAM6B,EAAIyK,EAAUxU,GAAOs4B,mBACvD,EACV,CACJ,CACD,SAAS80B,GAAYr8C,EAAK+X,EAAQle,GAC9B,IAAK,IAAItI,EAAI,EAAGA,EAAIwmB,EAAO7hB,OAAQ3E,IAAK,CACpC,IAAI,MAAEuM,EAAF,IAASC,GAAQga,EAAOxmB,GACxB6pD,EAAqB,GAAft9C,EAAME,QAAagC,EAAIc,eAAiBd,EAAInG,KAAKoP,eAAepP,IAM1E,GALAmG,EAAIjH,aAAa+E,EAAMnG,IAAKoG,EAAIpG,KAAKgC,IACjC,GAAIyhD,EACA,OAAO,EACXA,EAAMzhD,EAAKmH,eAAiBnH,EAAKE,KAAKoP,eAAepP,EAArD,IAEAuhD,EACA,OAAO,CACd,CACD,OAAO,CACV,CAUD,SAASkB,GAAWpzC,EAAUja,EAAQ,MAClC,OAAO,SAAU0Y,EAAOu6B,GACpB,IAAI,MAAE3nC,EAAF,QAASoqB,EAAT,OAAkB5M,GAAWpQ,EAAM2d,UACvC,GAAK/qB,IAAUoqB,IAAa03B,GAAY10C,EAAM3H,IAAK+X,EAAQ7O,GACvD,OAAO,EACX,GAAIg5B,EACA,GAAIvd,EACIzb,EAAS9M,QAAQuL,EAAM6e,aAAe7B,EAAQnoB,SAC9C0lC,EAASv6B,EAAMkU,GAAG+K,iBAAiB1d,IAEnCg5B,EAASv6B,EAAMkU,GAAG8K,cAAczd,EAASzM,OAAOxN,SAEnD,CACD,IAAI+uC,GAAM,EAAOniB,EAAKlU,EAAMkU,GAC5B,IAAK,IAAItqB,EAAI,GAAIysC,GAAOzsC,EAAIwmB,EAAO7hB,OAAQ3E,IAAK,CAC5C,IAAI,MAAEuM,EAAF,IAASC,GAAQga,EAAOxmB,GAC5BysC,EAAMr2B,EAAM3H,IAAIsC,aAAaxE,EAAMnG,IAAKoG,EAAIpG,IAAKuR,EACpD,CACD,IAAK,IAAI3X,EAAI,EAAGA,EAAIwmB,EAAO7hB,OAAQ3E,IAAK,CACpC,IAAI,MAAEuM,EAAF,IAASC,GAAQga,EAAOxmB,GAC5B,GAAIysC,EACAniB,EAAGM,WAAWre,EAAMnG,IAAKoG,EAAIpG,IAAKuR,OAEjC,CACD,IAAI/R,EAAO2G,EAAMnG,IAAKqB,EAAK+E,EAAIpG,IAAKyB,EAAQ0E,EAAMwB,UAAWnG,EAAM4E,EAAIwB,WACnEg9C,EAAanjD,GAASA,EAAMnB,OAAS,OAAOqX,KAAKlW,EAAMlB,MAAM,GAAGhC,OAAS,EACzEsmD,EAAWrjD,GAAOA,EAAIlB,OAAS,OAAOqX,KAAKnW,EAAIjB,MAAM,GAAGhC,OAAS,EACjEiB,EAAOolD,EAAavjD,IACpB7B,GAAQolD,EACRvjD,GAAMwjD,GAEV3gC,EAAGD,QAAQzkB,EAAM6B,EAAIkQ,EAASzM,OAAOxN,GACxC,CACJ,CACDizC,EAASrmB,EAAG0L,iBACf,CAEL,OAAO,CACV,CACJ,CAwDD,SAASk1B,MAAiBC,GACtB,OAAO,SAAU/0C,EAAOu6B,EAAU7T,GAC9B,IAAK,IAAI98B,EAAI,EAAGA,EAAImrD,EAASxmD,OAAQ3E,IACjC,GAAImrD,EAASnrD,GAAGoW,EAAOu6B,EAAU7T,GAC7B,OAAO,EACf,OAAO,CACV,CACJ,CACD,IAAIsuB,GAAYF,GAAcv1B,GAAiBgzB,GAAcO,IACzD9hC,GAAM8jC,GAAcv1B,GAAiBwzB,GAAaE,IAatD,MAAMgC,GAAe,CACjB,MAASH,GAAc5B,GAAeI,GAAqBC,GAAgBC,IAC3E,YAAaJ,GACb,UAAa4B,GACb,gBAAiBA,GACjB,kBAAmBA,GACnB,OAAUhkC,GACV,aAAcA,GACd,QAAS4iC,IAQPsB,GAAgB,CAClB,SAAUD,GAAa,aACvB,gBAAiBA,GAAa,iBAC9B,SAAUA,GAAa,UACvB,qBAAsBA,GAAa,cACnC,aAAcA,GAAa,cAC3B,QAASA,GAAa,cACtB,SAAUX,GACV,SAAUC,IAEd,IAAK,IAAIjmD,MAAO2mD,GACZC,GAAc5mD,IAAO2mD,GAAa3mD,IACtC,MAAM+0B,GAA0B,oBAAbjB,UAA2B,qBAAqBljB,KAAKkjB,UAAUkB,YAE/D,oBAAN6xB,KAAqBA,GAAG7xB,WAA4B,UAAjB6xB,GAAG7xB,WAM7C8xB,GAAa/xB,GAAM6xB,GAAgBD,GCnnBzC,IAzFO,IAAIj5C,GAAO,CAChB,EAAG,YACH,EAAG,MACH,GAAI,QACJ,GAAI,UACJ,GAAI,QACJ,GAAI,QACJ,GAAI,UACJ,GAAI,MACJ,GAAI,WACJ,GAAI,SACJ,GAAI,IACJ,GAAI,SACJ,GAAI,WACJ,GAAI,MACJ,GAAI,OACJ,GAAI,YACJ,GAAI,UACJ,GAAI,aACJ,GAAI,YACJ,GAAI,cACJ,GAAI,SACJ,GAAI,SACJ,GAAI,IACJ,GAAI,IACJ,GAAI,OACJ,GAAI,OACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,UACL,IAAK,aACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,MACL,IAAK,MACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,KAGI+B,GAAQ,CACjB,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAGHglB,GAA6B,oBAAbX,WAA4B,gBAAgBza,KAAKya,UAAUE,WAE3Ee,IAD4B,oBAAbjB,WAA4B,aAAaljB,KAAKkjB,UAAUE,WAC7C,oBAAbF,WAA4B,MAAMljB,KAAKkjB,UAAUkB,WAC9DZ,GAAyB,oBAAbN,WAA4B,gDAAgDza,KAAKya,UAAUE,WACvG+yB,GAAsBhyB,IAAON,KAAWA,GAAO,GAAK,GAG/Cn5B,GAAI,EAAGA,GAAI,GAAIA,KAAKoS,GAAK,GAAKpS,IAAKoS,GAAK,GAAKpS,IAAK04C,OAAO14C,IAGlE,IAASA,GAAI,EAAGA,IAAK,GAAIA,KAAKoS,GAAKpS,GAAI,KAAO,IAAMA,GAGpD,IAASA,GAAI,GAAIA,IAAK,GAAIA,KACxBoS,GAAKpS,IAAK04C,OAAOC,aAAa34C,GAAI,IAClCmU,GAAMnU,IAAK04C,OAAOC,aAAa34C,IAIjC,IAAK,IAAIjB,MAAQqT,GAAW+B,GAAM6D,eAAejZ,MAAOoV,GAAMpV,IAAQqT,GAAKrT,KAEpE,SAAS2sD,GAAQhwB,GACtB,IAAIiwB,EAAYF,KAAwB/vB,EAAMoW,SAAWpW,EAAMsW,QAAUtW,EAAMqW,UAC7EjZ,IAAM4C,EAAMuW,UAAYvW,EAAMh3B,KAA2B,GAApBg3B,EAAMh3B,IAAIC,QAClC,gBAAb+2B,EAAMh3B,IACJ5F,GAAS6sD,GAAajwB,EAAMh3B,MAC7Bg3B,EAAMuW,SAAW99B,GAAQ/B,IAAMspB,EAAMD,UACtCC,EAAMh3B,KAAO,eASf,MAPY,OAAR5F,IAAeA,EAAO,UACd,OAARA,IAAeA,EAAO,UAEd,QAARA,IAAgBA,EAAO,aACf,MAARA,IAAcA,EAAO,WACb,SAARA,IAAiBA,EAAO,cAChB,QAARA,IAAgBA,EAAO,aACpBA,CACR,CCpHD,MAAM26B,GAA0B,oBAAbjB,WAA2B,qBAAqBljB,KAAKkjB,UAAUkB,UAClF,SAASkyB,GAAiB9sD,GACtB,IAGIkuC,EAAK6e,EAAM13C,EAAOygB,EAHlBtS,EAAQxjB,EAAK6V,MAAM,UAAW3O,EAASsc,EAAMA,EAAM3d,OAAS,GAClD,SAAVqB,IACAA,EAAS,KAEb,IAAK,IAAIhG,EAAI,EAAGA,EAAIsiB,EAAM3d,OAAS,EAAG3E,IAAK,CACvC,IAAI8rD,EAAMxpC,EAAMtiB,GAChB,GAAI,kBAAkBsV,KAAKw2C,GACvBl3B,GAAO,OACN,GAAI,YAAYtf,KAAKw2C,GACtB9e,GAAM,OACL,GAAI,sBAAsB13B,KAAKw2C,GAChCD,GAAO,OACN,GAAI,cAAcv2C,KAAKw2C,GACxB33C,GAAQ,MACP,KAAI,SAASmB,KAAKw2C,GAOnB,MAAM,IAAIrtD,MAAM,+BAAiCqtD,GAN7CryB,GACA7E,GAAO,EAEPi3B,GAAO,CAGX,CACP,CASD,OARI7e,IACAhnC,EAAS,OAASA,GAClB6lD,IACA7lD,EAAS,QAAUA,GACnB4uB,IACA5uB,EAAS,QAAUA,GACnBmO,IACAnO,EAAS,SAAWA,GACjBA,CACV,CACD,SAAS+lD,GAAU5rD,GACf,IAAIiJ,EAAO8G,OAAOhF,OAAO,MACzB,IAAK,IAAIjF,KAAQ9F,EACbiJ,EAAKwiD,GAAiB3lD,IAAS9F,EAAI8F,GACvC,OAAOmD,CACV,CACD,SAAS4iD,GAAUltD,EAAM48B,EAAOvnB,GAS5B,OARIunB,EAAMsW,SACNlzC,EAAO,OAASA,GAChB48B,EAAMoW,UACNhzC,EAAO,QAAUA,GACjB48B,EAAMqW,UACNjzC,EAAO,QAAUA,IACP,IAAVqV,GAAmBunB,EAAMuW,WACzBnzC,EAAO,SAAWA,GACfA,CACV,CAgCD,SAASmtD,GAAOC,GACZ,OAAO,IAAIj0B,GAAO,CAAEC,MAAO,CAAE0vB,cAAeuE,GAAeD,KAC9D,CAMD,SAASC,GAAeD,GACpB,IAAI/rD,EAAM4rD,GAAUG,GACpB,OAAO,SAAUpvB,EAAMpB,GACnB,IAAqE0wB,EAAjEttD,EAAO4sD,GAAQhwB,GAAQ2wB,EAAwB,GAAfvtD,EAAK6F,QAAuB,KAAR7F,EACpDwtD,EAASnsD,EAAI6rD,GAAUltD,EAAM48B,GAAQ2wB,IACzC,GAAIC,GAAUA,EAAOxvB,EAAK1mB,MAAO0mB,EAAK6T,SAAU7T,GAC5C,OAAO,EACX,GAAIuvB,IAAW3wB,EAAMuW,UAAYvW,EAAMsW,QAAUtW,EAAMqW,SAAWjzC,EAAKyb,WAAW,GAAK,OAClF6xC,EAAWh6C,GAAKspB,EAAMD,WAAa2wB,GAAYttD,EAAM,CAKtD,IAAIytD,EAAWpsD,EAAI6rD,GAAUI,EAAU1wB,GAAO,IAC9C,GAAI6wB,GAAYA,EAASzvB,EAAK1mB,MAAO0mB,EAAK6T,SAAU7T,GAChD,OAAO,CACd,MACI,GAAIuvB,GAAU3wB,EAAMuW,SAAU,CAG/B,IAAIua,EAAYrsD,EAAI6rD,GAAUltD,EAAM48B,GAAO,IAC3C,GAAI8wB,GAAaA,EAAU1vB,EAAK1mB,MAAO0mB,EAAK6T,SAAU7T,GAClD,OAAO,CACd,CACD,OAAO,CACV,CACJ,CC1GM,SAASr8B,GAAS2H,EAAM2P,GAC7B,IAAI,gBAAC00C,GAAkB,GAAQ10C,GAAW,CAAC,EAC3C,OAAOtG,GAAIrJ,EAAMqkD,EAClB,CAOD,SAASh7C,GAAIrJ,EAAMqkD,GACjB,OACGrkD,GACiB,kBAATA,IAENA,EAAKxK,QAEH6uD,EAAkBrkD,EAAK4kC,IAAM,KAE7B,aAAc5kC,GAAQ3E,GAAI2E,EAAK87B,SAAUuoB,IACzCxsD,MAAMC,QAAQkI,IAAS3E,GAAI2E,EAAMqkD,KACtC,EAEH,CAOD,SAAShpD,GAAIpB,EAAQoqD,GAEnB,IAAIzmD,EAAS,GACTkD,GAAS,EAEb,QAASA,EAAQ7G,EAAOsC,OACtBqB,EAAOkD,GAASuI,GAAIpP,EAAO6G,GAAQujD,GAGrC,OAAOzmD,EAAO1F,KAAK,GACpB,CCtCM,SAAS6E,GAAOunD,EAAM7kD,EAAO7C,EAAQ2nD,GAC1C,MAAM/kD,EAAM8kD,EAAK/nD,OACjB,IAGIioD,EAHAC,EAAa,EAajB,GAPEhlD,EADEA,EAAQ,GACDA,EAAQD,EAAM,EAAIA,EAAMC,EAEzBA,EAAQD,EAAMA,EAAMC,EAG9B7C,EAASA,EAAS,EAAIA,EAAS,EAE3B2nD,EAAMhoD,OAAS,IACjBioD,EAAa3sD,MAAM2F,KAAK+mD,GACxBC,EAAW38B,QAAQpoB,EAAO7C,GACzB,GAAGG,OAAOmkB,MAAMojC,EAAME,OAClB,CAED5nD,GAAQ,GAAGG,OAAOmkB,MAAMojC,EAAM,CAAC7kD,EAAO7C,IAE1C,MAAO6nD,EAAaF,EAAMhoD,OACxBioD,EAAaD,EAAM1nD,MAAM4nD,EAAYA,EAAa,KAClDD,EAAW38B,QAAQpoB,EAAO,GACzB,GAAG1C,OAAOmkB,MAAMojC,EAAME,GACvBC,GAAc,IACdhlD,GAAS,GAEZ,CACF,CAcM,SAAS3C,GAAKwnD,EAAMC,GACzB,OAAID,EAAK/nD,OAAS,GAChBQ,GAAOunD,EAAMA,EAAK/nD,OAAQ,EAAGgoD,GACtBD,GAGFC,CACR,CC3DD,MAAM30C,GAAiB,CAAC,EAAEA,eAQnB,SAAS80C,GAAkBC,GAEhC,MAAMtpD,EAAM,CAAC,EACb,IAAIyF,GAAS,EAEb,QAASA,EAAQ6jD,EAAWpoD,OAC1BqoD,GAAgBvpD,EAAKspD,EAAW7jD,IAGlC,OAAOzF,CACR,CASD,SAASupD,GAAgBvpD,EAAKwpD,GAE5B,IAAIC,EAEJ,IAAKA,KAAQD,EAAW,CACtB,MAAME,EAAQn1C,GAAeC,KAAKxU,EAAKypD,GAAQzpD,EAAIypD,QAAQroD,EACrDi3B,EAAOqxB,IAAU1pD,EAAIypD,GAAQ,CAAC,GAC9BnxB,EAAQkxB,EAAUC,GAExB,IAAInuD,EAEJ,IAAKA,KAAQg9B,EAAO,CACb/jB,GAAeC,KAAK6jB,EAAM/8B,KAAO+8B,EAAK/8B,GAAQ,IACnD,MAAMnB,EAAQm+B,EAAMh9B,GACpBquD,GAEEtxB,EAAK/8B,GACLkB,MAAMC,QAAQtC,GAASA,EAAQA,EAAQ,CAACA,GAAS,GAEpD,CACF,CACF,CAUD,SAASwvD,GAAWC,EAAUX,GAC5B,IAAIxjD,GAAS,EAEb,MAAMyF,EAAS,GAEf,QAASzF,EAAQwjD,EAAK/nD,QAEE,UAApB+nD,EAAKxjD,GAAO8a,IAAkBqpC,EAAW1+C,GAAQzJ,KAAKwnD,EAAKxjD,IAG/D/D,GAAOkoD,EAAU,EAAG,EAAG1+C,EACxB,CCxEM,MAAM2+C,GACX,8vCCUWC,GAAaC,GAAW,YAQxBC,GAAaD,GAAW,MAexBE,GAAgBF,GAAW,cAS3BG,GAAoBH,GAAW,cAU/BI,GAAmBJ,GAAW,kBAkB9BK,GAAaL,GAAW,uBAW9B,SAASM,GAAa/uD,GAC3B,OAGW,OAATA,IAAkBA,EAAO,IAAe,MAATA,EAElC,CASM,SAASgvD,GAA0BhvD,GACxC,OAAgB,OAATA,IAAkBA,EAAO,GAAc,KAATA,EACtC,CAeM,SAASivD,GAAmBjvD,GACjC,OAAgB,OAATA,GAAiBA,GAAQ,CACjC,CAeM,SAASkvD,GAAclvD,GAC5B,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,CACtC,CAiBM,MAAMmvD,GAAoBV,GAAW,MAkB/BW,GAAqBX,GAAWF,IAQ7C,SAASE,GAAWY,GAClB,OAAOp8C,EAQP,SAASA,EAAMjT,GACb,OAAgB,OAATA,GAAiBqvD,EAAM94C,KAAKojC,OAAOC,aAAa55C,GACxD,CACF,CCrLM,SAASsvD,GAAaC,EAASv1C,EAAIzQ,EAAMR,GAC9C,MAAMymD,EAAQzmD,EAAMA,EAAM,EAAIyN,OAAOi5C,kBACrC,IAAI3oD,EAAO,EACX,OAAOgC,EAGP,SAASA,EAAM9I,GACb,OAAIkvD,GAAclvD,IAChBuvD,EAAQttC,MAAM1Y,GACPmmD,EAAO1vD,IAGTga,EAAGha,EACX,CAGD,SAAS0vD,EAAO1vD,GACd,OAAIkvD,GAAclvD,IAAS8G,IAAS0oD,GAClCD,EAAQI,QAAQ3vD,GACT0vD,IAGTH,EAAQK,KAAKrmD,GACNyQ,EAAGha,GACX,CACF,CC5BM,MAAMyF,GAAU,CACrBoqD,SAAUC,IAIZ,SAASA,GAAkBP,GACzB,MAAMQ,EAAeR,EAAQS,QAC3B5xD,KAAKshB,OAAO2uC,WAAW4B,eACvBC,EACAC,GAIF,IAAIC,EACJ,OAAOL,EAGP,SAASG,EAA2BlwD,GAClC,GAAa,OAATA,EAQJ,OAHAuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNN,GAAaC,EAASQ,EAAc,cAPzCR,EAAQI,QAAQ3vD,EAQnB,CAGD,SAASmwD,EAAiBnwD,GAExB,OADAuvD,EAAQttC,MAAM,aACPouC,EAAUrwD,EAClB,CAGD,SAASqwD,EAAUrwD,GACjB,MAAMswD,EAAQf,EAAQttC,MAAM,YAAa,CACvCsuC,YAAa,OACbH,aAQF,OALIA,IACFA,EAAShgD,KAAOkgD,GAGlBF,EAAWE,EACJtU,EAAKh8C,EACb,CAGD,SAASg8C,EAAKh8C,GACZ,OAAa,OAATA,GACFuvD,EAAQK,KAAK,aACbL,EAAQK,KAAK,kBACbL,EAAQI,QAAQ3vD,IAIdivD,GAAmBjvD,IACrBuvD,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,aACNS,IAGTd,EAAQI,QAAQ3vD,GACTg8C,EACR,CACF,CC1DM,MAAM31B,GAAW,CACtBwpC,SAAUW,IAINC,GAAqB,CACzBZ,SAAUa,IAIZ,SAASF,GAAmBjB,GAC1B,MAAMvpD,EAAO5H,KAGPqhC,EAAQ,GACd,IAGIkxB,EAGAC,EAGAC,EATAC,EAAY,EAUhB,OAAOhoD,EAGP,SAASA,EAAM9I,GAWb,GAAI8wD,EAAYrxB,EAAM75B,OAAQ,CAC5B,MAAMmrD,EAAOtxB,EAAMqxB,GAEnB,OADA9qD,EAAKgrD,eAAiBD,EAAK,GACpBxB,EAAQS,QACbe,EAAK,GAAGE,aACRC,EACAC,EAHK5B,CAILvvD,EACH,CAED,OAAOmxD,EAAmBnxD,EAC3B,CAGD,SAASkxD,EAAiBlxD,GAKxB,GAJA8wD,IAII9qD,EAAKgrD,eAAeI,WAAY,CAClCprD,EAAKgrD,eAAeI,gBAAatrD,EAE7B6qD,GACFU,IAIF,MAAMC,EAAmBtrD,EAAKurD,OAAO3rD,OACrC,IAGIosB,EAHAw/B,EAAkBF,EAKtB,MAAOE,IACL,GACsC,SAApCxrD,EAAKurD,OAAOC,GAAiB,IACY,cAAzCxrD,EAAKurD,OAAOC,GAAiB,GAAGjoD,KAChC,CACAyoB,EAAQhsB,EAAKurD,OAAOC,GAAiB,GAAG3oD,IACxC,KACD,CAGH4oD,EAAeX,GAEf,IAAI3mD,EAAQmnD,EAEZ,MAAOnnD,EAAQnE,EAAKurD,OAAO3rD,OACzBI,EAAKurD,OAAOpnD,GAAO,GAAGtB,IAAMsI,OAAOm4C,OAAO,CAAC,EAAGt3B,GAC9C7nB,IAWF,OARA/D,GACEJ,EAAKurD,OACLC,EAAkB,EAClB,EACAxrD,EAAKurD,OAAOrrD,MAAMorD,IAGpBtrD,EAAKurD,OAAO3rD,OAASuE,EACdgnD,EAAmBnxD,EAC3B,CAED,OAAO8I,EAAM9I,EACd,CAGD,SAASmxD,EAAmBnxD,GAM1B,GAAI8wD,IAAcrxB,EAAM75B,OAAQ,CAI9B,IAAK+qD,EACH,OAAOe,EAAkB1xD,GAK3B,GAAI2wD,EAAUgB,kBAAoBhB,EAAUgB,iBAAiBC,SAC3D,OAAOC,EAAU7xD,GAKnBgG,EAAK8rD,UAAY9kB,QACf2jB,EAAUgB,mBAAqBhB,EAAUoB,8BAE5C,CAGD,OADA/rD,EAAKgrD,eAAiB,CAAC,EAChBzB,EAAQt8C,MACbw9C,GACAuB,EACAC,EAHK1C,CAILvvD,EACH,CAGD,SAASgyD,EAAqBhyD,GAG5B,OAFI2wD,GAAWU,IACfI,EAAeX,GACRY,EAAkB1xD,EAC1B,CAGD,SAASiyD,EAAsBjyD,GAG7B,OAFAgG,EAAK0Z,OAAOwyC,KAAKlsD,EAAKgwB,MAAMm8B,MAAQrB,IAAcrxB,EAAM75B,OACxDirD,EAAkB7qD,EAAKgwB,MAAM1qB,OACtBumD,EAAU7xD,EAClB,CAGD,SAAS0xD,EAAkB1xD,GAGzB,OADAgG,EAAKgrD,eAAiB,CAAC,EAChBzB,EAAQS,QACbS,GACA2B,EACAP,EAHKtC,CAILvvD,EACH,CAGD,SAASoyD,EAAkBpyD,GAIzB,OAHA8wD,IACArxB,EAAMt5B,KAAK,CAACH,EAAK2rD,iBAAkB3rD,EAAKgrD,iBAEjCU,EAAkB1xD,EAC1B,CAGD,SAAS6xD,EAAU7xD,GACjB,OAAa,OAATA,GACE2wD,GAAWU,IACfI,EAAe,QACflC,EAAQI,QAAQ3vD,KAIlB2wD,EAAYA,GAAa3qD,EAAK0Z,OAAO2yC,KAAKrsD,EAAKgwB,OAC/Cu5B,EAAQttC,MAAM,YAAa,CACzBsuC,YAAa,OACbH,SAAUQ,EACV0B,WAAY3B,IAEP4B,EAAavyD,GACrB,CAGD,SAASuyD,EAAavyD,GACpB,OAAa,OAATA,GACFwyD,EAAajD,EAAQK,KAAK,cAAc,GACxC6B,EAAe,QACflC,EAAQI,QAAQ3vD,IAIdivD,GAAmBjvD,IACrBuvD,EAAQI,QAAQ3vD,GAChBwyD,EAAajD,EAAQK,KAAK,cAE1BkB,EAAY,EACZ9qD,EAAK8rD,eAAYhsD,EACVgD,IAGTymD,EAAQI,QAAQ3vD,GACTuyD,EACR,CAOD,SAASC,EAAalC,EAAOmC,GAC3B,MAAM/+C,EAAS1N,EAAK0sD,YAAYpC,GAwChC,GAvCImC,GAAK/+C,EAAOvN,KAAK,MACrBmqD,EAAMF,SAAWQ,EACbA,IAAYA,EAAWxgD,KAAOkgD,GAClCM,EAAaN,EACbK,EAAUgC,WAAWrC,EAAMxnD,OAC3B6nD,EAAUiC,MAAMl/C,GAkCZ1N,EAAK0Z,OAAOwyC,KAAK5B,EAAMxnD,MAAMqpD,MAAO,CACtC,IAAIhoD,EAAQwmD,EAAUY,OAAO3rD,OAE7B,MAAOuE,IACL,GAEEwmD,EAAUY,OAAOpnD,GAAO,GAAGrB,MAAMwC,OAASulD,KACxCF,EAAUY,OAAOpnD,GAAO,GAAGtB,KAC3B8nD,EAAUY,OAAOpnD,GAAO,GAAGtB,IAAIyC,OAASulD,GAI1C,OAKJ,MAAMS,EAAmBtrD,EAAKurD,OAAO3rD,OACrC,IAGI4O,EAGAwd,EANAw/B,EAAkBF,EAQtB,MAAOE,IACL,GACsC,SAApCxrD,EAAKurD,OAAOC,GAAiB,IACY,cAAzCxrD,EAAKurD,OAAOC,GAAiB,GAAGjoD,KAChC,CACA,GAAIiL,EAAM,CACRwd,EAAQhsB,EAAKurD,OAAOC,GAAiB,GAAG3oD,IACxC,KACD,CAED2L,GAAO,CACR,CAGHi9C,EAAeX,GAEf3mD,EAAQmnD,EAER,MAAOnnD,EAAQnE,EAAKurD,OAAO3rD,OACzBI,EAAKurD,OAAOpnD,GAAO,GAAGtB,IAAMsI,OAAOm4C,OAAO,CAAC,EAAGt3B,GAC9C7nB,IAGF/D,GACEJ,EAAKurD,OACLC,EAAkB,EAClB,EACAxrD,EAAKurD,OAAOrrD,MAAMorD,IAGpBtrD,EAAKurD,OAAO3rD,OAASuE,CACtB,CACF,CAMD,SAASsnD,EAAe3qD,GACtB,IAAIqD,EAAQs1B,EAAM75B,OAElB,MAAOuE,KAAUrD,EAAM,CACrB,MAAM+rD,EAAQpzB,EAAMt1B,GACpBnE,EAAKgrD,eAAiB6B,EAAM,GAC5BA,EAAM,GAAGjD,KAAK12C,KAAKlT,EAAMupD,EAC1B,CAED9vB,EAAM75B,OAASkB,CAChB,CAED,SAASuqD,IACPV,EAAUiC,MAAM,CAAC,OACjBhC,OAAa9qD,EACb6qD,OAAY7qD,EACZE,EAAKgrD,eAAeI,gBAAatrD,CAClC,CACF,CAGD,SAAS4qD,GAAkBnB,EAASv1C,EAAI84C,GACtC,OAAOxD,GACLC,EACAA,EAAQS,QAAQ5xD,KAAKshB,OAAO2uC,WAAWhoC,SAAUrM,EAAI84C,GACrD,aACA10D,KAAKshB,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,qBAAkBntD,EAAY,EAE9E,CC3WM,MAAMotD,GAAY,CACvBrD,SAAUsD,GACVC,SAAS,GAIX,SAASD,GAAkB5D,EAASv1C,EAAI84C,GACtC,OAAOxD,GAAaC,EAAS8D,EAAiB,cAG9C,SAASA,EAAgBrzD,GACvB,OAAgB,OAATA,GAAiBivD,GAAmBjvD,GAAQga,EAAGha,GAAQ8yD,EAAI9yD,EACnE,CACF,CCTM,SAASszD,GAAY/B,GAE1B,MAAMgC,EAAQ,CAAC,EACf,IAGI52B,EAGA62B,EAGAC,EAGAC,EAGA7F,EAGA8F,EAGAC,EArBAzpD,GAAS,EAuBb,QAASA,EAAQonD,EAAO3rD,OAAQ,CAC9B,MAAOuE,KAASopD,EACdppD,EAAQopD,EAAMppD,GAMhB,GAHAwyB,EAAQ40B,EAAOpnD,GAIbA,GACkB,cAAlBwyB,EAAM,GAAGpzB,MACqB,mBAA9BgoD,EAAOpnD,EAAQ,GAAG,GAAGZ,OAErBoqD,EAAYh3B,EAAM,GAAG21B,WAAWf,OAChCkC,EAAa,EAGXA,EAAaE,EAAU/tD,QACW,oBAAlC+tD,EAAUF,GAAY,GAAGlqD,OAEzBkqD,GAAc,GAIdA,EAAaE,EAAU/tD,QACW,YAAlC+tD,EAAUF,GAAY,GAAGlqD,MAEzB,QAASkqD,EAAaE,EAAU/tD,OAAQ,CACtC,GAAsC,YAAlC+tD,EAAUF,GAAY,GAAGlqD,KAC3B,MAGoC,cAAlCoqD,EAAUF,GAAY,GAAGlqD,OAC3BoqD,EAAUF,GAAY,GAAGI,6BAA8B,EACvDJ,IAEH,CAIL,GAAiB,UAAb92B,EAAM,GACJA,EAAM,GAAG4zB,cACXp/C,OAAOm4C,OAAOiK,EAAOO,GAAWvC,EAAQpnD,IACxCA,EAAQopD,EAAMppD,GACdypD,GAAO,QAGN,GAAIj3B,EAAM,GAAGo3B,WAAY,CAC5BN,EAAatpD,EACbqpD,OAAY1tD,EAEZ,MAAO2tD,IAAc,CAGnB,GAFAC,EAAanC,EAAOkC,GAGK,eAAvBC,EAAW,GAAGnqD,MACS,oBAAvBmqD,EAAW,GAAGnqD,KAWd,MATsB,UAAlBmqD,EAAW,KACTF,IACFjC,EAAOiC,GAAW,GAAGjqD,KAAO,mBAG9BmqD,EAAW,GAAGnqD,KAAO,aACrBiqD,EAAYC,EAKjB,CAEGD,IAEF72B,EAAM,GAAG9zB,IAAMsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOiC,GAAW,GAAG1qD,OAEtD+kD,EAAa0D,EAAOrrD,MAAMstD,EAAWrpD,GACrC0jD,EAAW38B,QAAQyL,GACnBv2B,GAAOmrD,EAAQiC,EAAWrpD,EAAQqpD,EAAY,EAAG3F,GAEpD,CACF,CAED,OAAQ+F,CACT,CASD,SAASE,GAAWvC,EAAQyC,GAC1B,MAAM1D,EAAQiB,EAAOyC,GAAY,GAC3Br5C,EAAU42C,EAAOyC,GAAY,GACnC,IAAIC,EAAgBD,EAAa,EAGjC,MAAME,EAAiB,GACjBC,EACJ7D,EAAMgC,YAAc33C,EAAQ+E,OAAO4wC,EAAMC,aAAaD,EAAMxnD,OACxDsrD,EAAcD,EAAU5C,OAGxBgC,EAAQ,GAGRc,EAAO,CAAC,EAGd,IAAI3gD,EAGA08C,EACAjmD,GAAS,EAGTC,EAAUkmD,EACV9K,EAAS,EACT18C,EAAQ,EACZ,MAAMwrD,EAAS,CAACxrD,GAGhB,MAAOsB,EAAS,CAEd,MAAOmnD,IAAS0C,GAAe,KAAO7pD,GAItC8pD,EAAe/tD,KAAK8tD,GAEf7pD,EAAQkoD,aACX5+C,EAASiH,EAAQ+3C,YAAYtoD,GAExBA,EAAQgG,MACXsD,EAAOvN,KAAK,MAGViqD,GACF+D,EAAUxB,WAAWvoD,EAAQtB,OAG3BsB,EAAQypD,8BACVM,EAAUI,oCAAqC,GAGjDJ,EAAUvB,MAAMl/C,GAEZtJ,EAAQypD,8BACVM,EAAUI,wCAAqCzuD,IAInDsqD,EAAWhmD,EACXA,EAAUA,EAAQgG,IACnB,CAGDhG,EAAUkmD,EAEV,QAASnmD,EAAQiqD,EAAYxuD,OAGC,SAA1BwuD,EAAYjqD,GAAO,IACW,UAA9BiqD,EAAYjqD,EAAQ,GAAG,IACvBiqD,EAAYjqD,GAAO,GAAGZ,OAAS6qD,EAAYjqD,EAAQ,GAAG,GAAGZ,MACzD6qD,EAAYjqD,GAAO,GAAGrB,MAAMqpD,OAASiC,EAAYjqD,GAAO,GAAGtB,IAAIspD,OAE/DrpD,EAAQqB,EAAQ,EAChBmqD,EAAOnuD,KAAK2C,GAEZsB,EAAQkoD,gBAAaxsD,EACrBsE,EAAQgmD,cAAWtqD,EACnBsE,EAAUA,EAAQgG,MAItB+jD,EAAU5C,OAAS,GAIfnnD,GAEFA,EAAQkoD,gBAAaxsD,EACrBsE,EAAQgmD,cAAWtqD,GAEnBwuD,EAAOz+C,MAIT1L,EAAQmqD,EAAO1uD,OAEf,MAAOuE,IAAS,CACd,MAAMjE,EAAQkuD,EAAYluD,MAAMouD,EAAOnqD,GAAQmqD,EAAOnqD,EAAQ,IACxDrB,EAAQorD,EAAer+C,MAC7B09C,EAAMriC,QAAQ,CAACpoB,EAAOA,EAAQ5C,EAAMN,OAAS,IAC7CQ,GAAOmrD,EAAQzoD,EAAO,EAAG5C,EAC1B,CAEDiE,GAAS,EAET,QAASA,EAAQopD,EAAM3tD,OACrByuD,EAAK7O,EAAS+N,EAAMppD,GAAO,IAAMq7C,EAAS+N,EAAMppD,GAAO,GACvDq7C,GAAU+N,EAAMppD,GAAO,GAAKopD,EAAMppD,GAAO,GAAK,EAGhD,OAAOkqD,CACR,CCvOM,MAAM5uD,GAAU,CACrBoqD,SAAU2E,GACVxjD,QAASyjD,IAILC,GAAwB,CAC5B7E,SAAU8E,GACVvB,SAAS,GASX,SAASqB,GAAelD,GAEtB,OADA+B,GAAY/B,GACLA,CACR,CAGD,SAASiD,GAAgBjF,EAASv1C,GAEhC,IAAIo2C,EACJ,OAAOtnD,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,WACdmuC,EAAWb,EAAQttC,MAAM,eAAgB,CACvCsuC,YAAa,YAERvU,EAAKh8C,EACb,CAGD,SAASg8C,EAAKh8C,GACZ,OAAa,OAATA,EACK40D,EAAW50D,GAGhBivD,GAAmBjvD,GACduvD,EAAQt8C,MACbyhD,GACAG,EACAD,EAHKrF,CAILvvD,IAGJuvD,EAAQI,QAAQ3vD,GACTg8C,EACR,CAGD,SAAS4Y,EAAW50D,GAGlB,OAFAuvD,EAAQK,KAAK,gBACbL,EAAQK,KAAK,WACN51C,EAAGha,EACX,CAGD,SAAS60D,EAAgB70D,GAQvB,OAPAuvD,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,gBACbQ,EAAShgD,KAAOm/C,EAAQttC,MAAM,eAAgB,CAC5CsuC,YAAa,UACbH,aAEFA,EAAWA,EAAShgD,KACb4rC,CACR,CACF,CAGD,SAAS2Y,GAAqBpF,EAASv1C,EAAI84C,GACzC,MAAM9sD,EAAO5H,KACb,OAAO02D,EAGP,SAASA,EAAe90D,GAKtB,OAJAuvD,EAAQK,KAAK,gBACbL,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNN,GAAaC,EAASwF,EAAU,aACxC,CAGD,SAASA,EAAS/0D,GAChB,GAAa,OAATA,GAAiBivD,GAAmBjvD,GACtC,OAAO8yD,EAAI9yD,GAGb,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAE9C,OACGI,EAAK0Z,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,iBAC9C+B,GACiB,eAAjBA,EAAK,GAAGzrD,MACRyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,QAAU,EAEzCoU,EAAGha,GAGLuvD,EAAQuC,UAAU9rD,EAAK0Z,OAAO2uC,WAAWgE,KAAMS,EAAK94C,EAApDu1C,CAAwDvvD,EAChE,CACF,CCjHM,MAAMqyD,GAAO,CAClBxC,SAAUqF,IAIZ,SAASA,GAAe3F,GACtB,MAAMvpD,EAAO5H,KACP+2D,EAAU5F,EAAQS,QAEtBkD,GACAkC,EACA7F,EAAQS,QACN5xD,KAAKshB,OAAO2uC,WAAWgH,YACvBC,EACAhG,GACEC,EACAA,EAAQS,QACN5xD,KAAKshB,OAAO2uC,WAAWgE,KACvBiD,EACA/F,EAAQS,QAAQvqD,GAAS6vD,IAE3B,gBAIN,OAAOH,EAGP,SAASC,EAAcp1D,GACrB,GAAa,OAATA,EASJ,OAJAuvD,EAAQttC,MAAM,mBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,mBACb5pD,EAAK2rD,sBAAmB7rD,EACjBqvD,EARL5F,EAAQI,QAAQ3vD,EASnB,CAGD,SAASs1D,EAAet1D,GACtB,GAAa,OAATA,EASJ,OAJAuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACb5pD,EAAK2rD,sBAAmB7rD,EACjBqvD,EARL5F,EAAQI,QAAQ3vD,EASnB,CACF,CCxDM,MAAMu1D,GAAW,CACtBC,WAAYC,MAEDjiD,GAASkiD,GAAkB,UAC3B9tD,GAAO8tD,GAAkB,QAMtC,SAASA,GAAkB98B,GACzB,MAAO,CACLi3B,SAAU8F,EACVH,WAAYC,GACA,SAAV78B,EAAmBg9B,QAAyB9vD,IAKhD,SAAS6vD,EAAepG,GACtB,MAAMvpD,EAAO5H,KACPiwD,EAAajwD,KAAKshB,OAAO2uC,WAAWz1B,GACpChxB,EAAO2nD,EAAQS,QAAQ3B,EAAYvlD,EAAO+sD,GAChD,OAAO/sD,EAGP,SAASA,EAAM9I,GACb,OAAO81D,EAAQ91D,GAAQ4H,EAAK5H,GAAQ61D,EAAQ71D,EAC7C,CAGD,SAAS61D,EAAQ71D,GACf,GAAa,OAATA,EAOJ,OAFAuvD,EAAQttC,MAAM,QACdstC,EAAQI,QAAQ3vD,GACTg8C,EANLuT,EAAQI,QAAQ3vD,EAOnB,CAGD,SAASg8C,EAAKh8C,GACZ,OAAI81D,EAAQ91D,IACVuvD,EAAQK,KAAK,QACNhoD,EAAK5H,KAGduvD,EAAQI,QAAQ3vD,GACTg8C,EACR,CAMD,SAAS8Z,EAAQ91D,GACf,GAAa,OAATA,EACF,OAAO,EAGT,MAAM2tD,EAAOU,EAAWruD,GACxB,IAAImK,GAAS,EAEb,GAAIwjD,EACF,QAASxjD,EAAQwjD,EAAK/nD,OAAQ,CAC5B,MAAMmrD,EAAOpD,EAAKxjD,GAElB,IAAK4mD,EAAKX,UAAYW,EAAKX,SAASl3C,KAAKlT,EAAMA,EAAKoqD,UAClD,OAAO,CAEV,CAGH,OAAO,CACR,CACF,CACF,CAMD,SAASqF,GAAeM,GACtB,OAAOC,EAGP,SAASA,EAAezE,EAAQ52C,GAC9B,IAGIsH,EAHA9X,GAAS,EAMb,QAASA,GAASonD,EAAO3rD,YACTE,IAAVmc,EACEsvC,EAAOpnD,IAAoC,SAA1BonD,EAAOpnD,GAAO,GAAGZ,OACpC0Y,EAAQ9X,EACRA,KAEQonD,EAAOpnD,IAAoC,SAA1BonD,EAAOpnD,GAAO,GAAGZ,OAExCY,IAAU8X,EAAQ,IACpBsvC,EAAOtvC,GAAO,GAAGpZ,IAAM0oD,EAAOpnD,EAAQ,GAAG,GAAGtB,IAC5C0oD,EAAOnrD,OAAO6b,EAAQ,EAAG9X,EAAQ8X,EAAQ,GACzC9X,EAAQ8X,EAAQ,GAGlBA,OAAQnc,GAIZ,OAAOiwD,EAAgBA,EAAcxE,EAAQ52C,GAAW42C,CACzD,CACF,CAaD,SAASqE,GAAuBrE,EAAQ52C,GACtC,IAAIq5C,EAAa,EAEjB,QAASA,GAAczC,EAAO3rD,OAC5B,IACGouD,IAAezC,EAAO3rD,QACU,eAA/B2rD,EAAOyC,GAAY,GAAGzqD,OACW,SAAnCgoD,EAAOyC,EAAa,GAAG,GAAGzqD,KAC1B,CACA,MAAMyyC,EAAOuV,EAAOyC,EAAa,GAAG,GAC9BiC,EAASt7C,EAAQ+3C,YAAY1W,GACnC,IAKIka,EALA/rD,EAAQ8rD,EAAOrwD,OACfuwD,GAAe,EACfrvD,EAAO,EAKX,MAAOqD,IAAS,CACd,MAAMisD,EAAQH,EAAO9rD,GAErB,GAAqB,kBAAVisD,EAAoB,CAC7BD,EAAcC,EAAMxwD,OAEpB,MAA6C,KAAtCwwD,EAAM56C,WAAW26C,EAAc,GACpCrvD,IACAqvD,IAGF,GAAIA,EAAa,MACjBA,GAAe,CAChB,MACI,IAAe,IAAXC,EACPF,GAAO,EACPpvD,SACK,IAAe,IAAXsvD,EAEJ,CAELjsD,IACA,KACD,CACF,CAED,GAAIrD,EAAM,CACR,MAAMwpD,EAAQ,CACZ/mD,KACEyqD,IAAezC,EAAO3rD,QAAUswD,GAAQpvD,EAAO,EAC3C,aACA,oBACNgC,MAAO,CACLqpD,KAAMnW,EAAKnzC,IAAIspD,KACfkE,OAAQra,EAAKnzC,IAAIwtD,OAASvvD,EAC1BwE,OAAQ0wC,EAAKnzC,IAAIyC,OAASxE,EAC1BwvD,OAAQta,EAAKlzC,MAAMwtD,OAASnsD,EAC5BosD,aAAcpsD,EACVgsD,EACAna,EAAKlzC,MAAMytD,aAAeJ,GAEhCttD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGtN,EAAKnzC,MAE9BmzC,EAAKnzC,IAAMsI,OAAOm4C,OAAO,CAAC,EAAGgH,EAAMxnD,OAE/BkzC,EAAKlzC,MAAMwC,SAAW0wC,EAAKnzC,IAAIyC,OACjC6F,OAAOm4C,OAAOtN,EAAMsU,IAEpBiB,EAAOnrD,OACL4tD,EACA,EACA,CAAC,QAAS1D,EAAO31C,GACjB,CAAC,OAAQ21C,EAAO31C,IAElBq5C,GAAc,EAEjB,CAEDA,GACD,CAGH,OAAOzC,CACR,CC3MM,SAASiE,GAAWnH,EAAYkD,EAAQ52C,GAE7C,MAAM67C,EAAS,GACf,IAAIrsD,GAAS,EAEb,QAASA,EAAQkkD,EAAWzoD,OAAQ,CAClC,MAAMoL,EAAUq9C,EAAWlkD,GAAOqrD,WAE9BxkD,IAAYwlD,EAAOvD,SAASjiD,KAC9BugD,EAASvgD,EAAQugD,EAAQ52C,GACzB67C,EAAOrwD,KAAK6K,GAEf,CAED,OAAOugD,CACR,CCcM,SAASkF,GAAgB/2C,EAAQg3C,EAAY7vD,GAElD,IAAImrB,EAAQ7gB,OAAOm4C,OACjBziD,EACIsK,OAAOm4C,OAAO,CAAC,EAAGziD,GAClB,CACEsrD,KAAM,EACNkE,OAAQ,EACR/qD,OAAQ,GAEd,CACEgrD,OAAQ,EACRC,cAAe,IAKnB,MAAMI,EAAc,CAAC,EAGfC,EAAuB,GAG7B,IAAIX,EAAS,GAGTx2B,EAAQ,GAGRo3B,GAAW,EAOf,MAAMtH,EAAU,CACdI,UACA1tC,QACA2tC,OACAI,QAAS8G,EAAiBC,GAC1B9jD,MAAO6jD,EAAiBE,GACxBlF,UAAWgF,EAAiBE,EAAmB,CAC7ClF,WAAW,KASTn3C,EAAU,CACdy1C,SAAU,KACVpwD,KAAM,KACNgxD,eAAgB,CAAC,EACjBO,OAAQ,GACR7xC,SACAgzC,cACAuC,iBACAj/B,MACA28B,aACAC,SAQF,IAOIqE,EAPA5/C,EAAQq/C,EAAW7G,SAAS32C,KAAKyB,EAAS40C,GAa9C,OAJImH,EAAWlB,YACboB,EAAqBzwD,KAAKuwD,GAGrB/7C,EAGP,SAASi4C,EAAM1sD,GAIb,OAHA+vD,EAAS9vD,GAAK8vD,EAAQ/vD,GACtBgI,IAEkC,OAA9B+nD,EAAOA,EAAOrwD,OAAS,GAClB,IAGTsxD,EAAUR,EAAY,GAEtB/7C,EAAQ42C,OAASiE,GAAWoB,EAAsBj8C,EAAQ42C,OAAQ52C,GAC3DA,EAAQ42C,OAChB,CAMD,SAAS0D,EAAe3E,EAAO6G,GAC7B,OAAOC,GAAgB1E,EAAYpC,GAAQ6G,EAC5C,CAGD,SAASzE,EAAYpC,GACnB,OAAO+G,GAAYpB,EAAQ3F,EAC5B,CAGD,SAASt6B,IACP,OAAO7kB,OAAOm4C,OAAO,CAAC,EAAGt3B,EAC1B,CAGD,SAAS2gC,EAAW9zD,GAClB83D,EAAY93D,EAAMszD,MAAQtzD,EAAMw3D,OAChCiB,GACD,CAeD,SAASppD,IAEP,IAAIqpD,EAEJ,MAAOvlC,EAAMskC,OAASL,EAAOrwD,OAAQ,CACnC,MAAMwwD,EAAQH,EAAOjkC,EAAMskC,QAE3B,GAAqB,kBAAVF,EAAoB,CAC7BmB,EAAavlC,EAAMskC,OAEftkC,EAAMukC,aAAe,IACvBvkC,EAAMukC,aAAe,GAGvB,MACEvkC,EAAMskC,SAAWiB,GACjBvlC,EAAMukC,aAAeH,EAAMxwD,OAE3B4xD,EAAGpB,EAAM56C,WAAWwW,EAAMukC,cAE7B,MACCiB,EAAGpB,EAEN,CACF,CAQD,SAASoB,EAAGx3D,GACV62D,OAAW/wD,EACXmxD,EAAej3D,EACfqX,EAAQA,EAAMrX,EACf,CAGD,SAAS2vD,EAAQ3vD,GACXivD,GAAmBjvD,IACrBgyB,EAAMmgC,OACNngC,EAAMqkC,OAAS,EACfrkC,EAAM1mB,SAAoB,IAAVtL,EAAc,EAAI,EAClCs3D,MACmB,IAAVt3D,IACTgyB,EAAMqkC,SACNrkC,EAAM1mB,UAGJ0mB,EAAMukC,aAAe,EACvBvkC,EAAMskC,UAENtkC,EAAMukC,eAIFvkC,EAAMukC,eAAiBN,EAAOjkC,EAAMskC,QAAQ1wD,SAC9CosB,EAAMukC,cAAgB,EACtBvkC,EAAMskC,WAIV37C,EAAQy1C,SAAWpwD,EAEnB62D,GAAW,CACZ,CAGD,SAAS50C,EAAM1Y,EAAMuuB,GAGnB,MAAMw4B,EAAQx4B,GAAU,CAAC,EAKzB,OAJAw4B,EAAM/mD,KAAOA,EACb+mD,EAAMxnD,MAAQktB,IACdrb,EAAQ42C,OAAOprD,KAAK,CAAC,QAASmqD,EAAO31C,IACrC8kB,EAAMt5B,KAAKmqD,GACJA,CACR,CAGD,SAASV,EAAKrmD,GACZ,MAAM+mD,EAAQ7wB,EAAM5pB,MAGpB,OAFAy6C,EAAMznD,IAAMmtB,IACZrb,EAAQ42C,OAAOprD,KAAK,CAAC,OAAQmqD,EAAO31C,IAC7B21C,CACR,CAOD,SAASyG,EAAsBU,EAAWC,GACxCR,EAAUO,EAAWC,EAAK7wD,KAC3B,CAOD,SAASmwD,EAAkBhrD,EAAG0rD,GAC5BA,EAAKC,SACN,CAQD,SAASb,EAAiBc,EAAU9/B,GAClC,OAAOq2B,EAWP,SAASA,EAAKE,EAAYwJ,EAAaC,GAErC,IAAIC,EAGAC,EAGArG,EAGA+F,EACJ,OAAOx2D,MAAMC,QAAQktD,GAEjB4J,EAAuB5J,GACvB,aAAcA,EACd4J,EAAuB,CAAC5J,IACxB6J,EAAsB7J,GAQ1B,SAAS6J,EAAsB92D,GAC7B,OAAO0H,EAGP,SAASA,EAAM9I,GACb,MAAMuxB,EAAe,OAATvxB,GAAiBoB,EAAIpB,GAC3B0E,EAAe,OAAT1E,GAAiBoB,EAAI4xD,KAC3BrF,EAAO,IAIPzsD,MAAMC,QAAQowB,GAAOA,EAAMA,EAAM,CAACA,GAAO,MACzCrwB,MAAMC,QAAQuD,GAAOA,EAAMA,EAAM,CAACA,GAAO,IAE/C,OAAOuzD,EAAuBtK,EAAvBsK,CAA6Bj4D,EACrC,CACF,CAQD,SAASi4D,EAAuBtK,GAI9B,OAHAoK,EAAmBpK,EACnBqK,EAAiB,EAEG,IAAhBrK,EAAK/nD,OACAkyD,EAGFK,EAAgBxK,EAAKqK,GAC7B,CAQD,SAASG,EAAgBV,GACvB,OAAO3uD,EAGP,SAASA,EAAM9I,GAYb,OAPA03D,EAAO5yD,IACP6sD,EAAmB8F,EAEdA,EAAUrE,UACbz4C,EAAQg3C,iBAAmB8F,GAI3BA,EAAU13D,MACV4a,EAAQ+E,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAASwE,EAAU13D,MAEnD+yD,EAAI9yD,GAGNy3D,EAAU5H,SAAS32C,KAIxB4e,EAAS3mB,OAAOm4C,OAAOn4C,OAAOhF,OAAOwO,GAAUmd,GAAUnd,EACzD40C,EACAv1C,EACA84C,EAPK2E,CAQLz3D,EACH,CACF,CAGD,SAASga,EAAGha,GAGV,OAFA62D,GAAW,EACXe,EAASjG,EAAkB+F,GACpBG,CACR,CAGD,SAAS/E,EAAI9yD,GAIX,OAHA62D,GAAW,EACXa,EAAKC,YAECK,EAAiBD,EAAiBnyD,OAC/BuyD,EAAgBJ,EAAiBC,IAGnCF,CACR,CACF,CACF,CAOD,SAASZ,EAAUO,EAAW5wD,GACxB4wD,EAAUjC,aAAeoB,EAAqB3D,SAASwE,IACzDb,EAAqBzwD,KAAKsxD,GAGxBA,EAAUzmD,SACZ5K,GACEuU,EAAQ42C,OACR1qD,EACA8T,EAAQ42C,OAAO3rD,OAASiB,EACxB4wD,EAAUzmD,QAAQ2J,EAAQ42C,OAAOrrD,MAAMW,GAAO8T,IAI9C88C,EAAUW,YACZz9C,EAAQ42C,OAASkG,EAAUW,UAAUz9C,EAAQ42C,OAAQ52C,GAExD,CAOD,SAAS7V,IACP,MAAMuzD,EAAariC,IACbsiC,EAAgB39C,EAAQy1C,SACxBmI,EAAwB59C,EAAQg3C,iBAChC6G,EAAmB79C,EAAQ42C,OAAO3rD,OAClC6yD,EAAav3D,MAAM2F,KAAK44B,GAC9B,MAAO,CACLk4B,UACA9wD,KAAM2xD,GAQR,SAASb,IACP3lC,EAAQqmC,EACR19C,EAAQy1C,SAAWkI,EACnB39C,EAAQg3C,iBAAmB4G,EAC3B59C,EAAQ42C,OAAO3rD,OAAS4yD,EACxB/4B,EAAQg5B,EACRnB,GACD,CACF,CAQD,SAASA,IACHtlC,EAAMmgC,QAAQwE,GAAe3kC,EAAMqkC,OAAS,IAC9CrkC,EAAMqkC,OAASM,EAAY3kC,EAAMmgC,MACjCngC,EAAM1mB,QAAUqrD,EAAY3kC,EAAMmgC,MAAQ,EAE7C,CACF,CASD,SAASkF,GAAYpB,EAAQ3F,GAC3B,MAAMzhD,EAAayhD,EAAMxnD,MAAMwtD,OACzBoC,EAAmBpI,EAAMxnD,MAAMytD,aAC/BznD,EAAWwhD,EAAMznD,IAAIytD,OACrBqC,EAAiBrI,EAAMznD,IAAI0tD,aAGjC,IAAIx4B,EAmBJ,OAjBIlvB,IAAeC,EAEjBivB,EAAO,CAACk4B,EAAOpnD,GAAY3I,MAAMwyD,EAAkBC,KAEnD56B,EAAOk4B,EAAO/vD,MAAM2I,EAAYC,GAE5B4pD,GAAoB,IAEtB36B,EAAK,GAAKA,EAAK,GAAG73B,MAAMwyD,IAGtBC,EAAiB,GAEnB56B,EAAK53B,KAAK8vD,EAAOnnD,GAAU5I,MAAM,EAAGyyD,KAIjC56B,CACR,CASD,SAASq5B,GAAgBnB,EAAQkB,GAC/B,IAAIhtD,GAAS,EAGb,MAAMlD,EAAS,GAGf,IAAI2xD,EAEJ,QAASzuD,EAAQ8rD,EAAOrwD,OAAQ,CAC9B,MAAMwwD,EAAQH,EAAO9rD,GAGrB,IAAItL,EAEJ,GAAqB,kBAAVu3D,EACTv3D,EAAQu3D,OAER,OAAQA,GACN,KAAM,EACJv3D,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,OACR,MAGF,KAAM,EACJA,EAAQs4D,EAAa,IAAM,KAC3B,MAGF,KAAM,EACJ,IAAKA,GAAcyB,EAAO,SAC1B/5D,EAAQ,IACR,MAGF,QAEEA,EAAQ86C,OAAOC,aAAawc,GAIlCwC,GAAmB,IAAXxC,EACRnvD,EAAOd,KAAKtH,EACb,CAED,OAAOoI,EAAO1F,KAAK,GACpB,CCxkBM,MAAMs3D,GAAgB,CAC3B94D,KAAM,gBACN8vD,SAAUiJ,IAIZ,SAASA,GAAsBvJ,EAASv1C,EAAI84C,GAC1C,IAGIiG,EAHAjyD,EAAO,EAIX,OAAOgC,EAGP,SAASA,EAAM9I,GAGb,OAFAuvD,EAAQttC,MAAM,iBACd82C,EAAS/4D,EACF81D,EAAQ91D,EAChB,CAGD,SAAS81D,EAAQ91D,GACf,OAAIA,IAAS+4D,GACXxJ,EAAQttC,MAAM,yBACP+2C,EAASh5D,IAGdkvD,GAAclvD,GACTsvD,GAAaC,EAASuG,EAAS,aAA/BxG,CAA6CtvD,GAGlD8G,EAAO,GAAe,OAAT9G,IAAkBivD,GAAmBjvD,GAC7C8yD,EAAI9yD,IAGbuvD,EAAQK,KAAK,iBACN51C,EAAGha,GACX,CAGD,SAASg5D,EAASh5D,GAChB,OAAIA,IAAS+4D,GACXxJ,EAAQI,QAAQ3vD,GAChB8G,IACOkyD,IAGTzJ,EAAQK,KAAK,yBACNkG,EAAQ91D,GAChB,CACF,CCzCM,MAAM2tD,GAAO,CAClB5tD,KAAM,OACN8vD,SAAUoJ,GACVhI,aAAc,CACZpB,SAAUqJ,IAEZtJ,KAAMuJ,IAIFC,GAAoC,CACxCvJ,SAAUwJ,GACVjG,SAAS,GAILkG,GAAkB,CACtBzJ,SAAU0J,GACVnG,SAAS,GAOX,SAAS6F,GAAkB1J,EAASv1C,EAAI84C,GACtC,MAAM9sD,EAAO5H,KACP42D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAC9C,IAAI4zD,EACFxE,GAAyB,eAAjBA,EAAK,GAAGzrD,KACZyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,OACtC,EACFkB,EAAO,EACX,OAAOgC,EAGP,SAASA,EAAM9I,GACb,MAAMy5D,EACJzzD,EAAKgrD,eAAeznD,OACV,KAATvJ,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAATy5D,GACKzzD,EAAKgrD,eAAe+H,QAAU/4D,IAASgG,EAAKgrD,eAAe+H,OAC5DrK,GAAW1uD,GACf,CAQA,GAPKgG,EAAKgrD,eAAeznD,OACvBvD,EAAKgrD,eAAeznD,KAAOkwD,EAC3BlK,EAAQttC,MAAMw3C,EAAM,CAClB1F,YAAY,KAIH,kBAAT0F,EAEF,OADAlK,EAAQttC,MAAM,kBACE,KAATjiB,GAAwB,KAATA,EAClBuvD,EAAQt8C,MAAM4lD,GAAe/F,EAAK4G,EAAlCnK,CAA4CvvD,GAC5C05D,EAAS15D,GAGf,IAAKgG,EAAK8rD,WAAsB,KAAT9xD,EAGrB,OAFAuvD,EAAQttC,MAAM,kBACdstC,EAAQttC,MAAM,iBACP+K,EAAOhtB,EAEjB,CAED,OAAO8yD,EAAI9yD,EACZ,CAGD,SAASgtB,EAAOhtB,GACd,OAAI0uD,GAAW1uD,MAAW8G,EAAO,IAC/ByoD,EAAQI,QAAQ3vD,GACTgtB,KAILhnB,EAAK8rD,WAAahrD,EAAO,KAC1Bd,EAAKgrD,eAAe+H,OACjB/4D,IAASgG,EAAKgrD,eAAe+H,OACpB,KAAT/4D,GAAwB,KAATA,IAEnBuvD,EAAQK,KAAK,iBACN8J,EAAS15D,IAGX8yD,EAAI9yD,EACZ,CAKD,SAAS05D,EAAS15D,GAKhB,OAJAuvD,EAAQttC,MAAM,kBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,kBACb5pD,EAAKgrD,eAAe+H,OAAS/yD,EAAKgrD,eAAe+H,QAAU/4D,EACpDuvD,EAAQt8C,MACbigD,GACAltD,EAAK8rD,UAAYgB,EAAM6G,EACvBpK,EAAQS,QACNoJ,GACAQ,EACAC,GAGL,CAGD,SAASF,EAAQ35D,GAGf,OAFAgG,EAAKgrD,eAAe8I,kBAAmB,EACvCN,IACOI,EAAY55D,EACpB,CAGD,SAAS65D,EAAY75D,GACnB,OAAIkvD,GAAclvD,IAChBuvD,EAAQttC,MAAM,4BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,4BACNgK,GAGF9G,EAAI9yD,EACZ,CAGD,SAAS45D,EAAY55D,GAInB,OAHAgG,EAAKgrD,eAAelqD,KAClB0yD,EACAxzD,EAAKivD,eAAe1F,EAAQK,KAAK,mBAAmB,GAAMhqD,OACrDoU,EAAGha,EACX,CACF,CAMD,SAASk5D,GAAyB3J,EAASv1C,EAAI84C,GAC7C,MAAM9sD,EAAO5H,KAEb,OADA4H,EAAKgrD,eAAeI,gBAAatrD,EAC1BypD,EAAQt8C,MAAMigD,GAAWyG,EAASI,GAGzC,SAASJ,EAAQ35D,GAMf,OALAgG,EAAKgrD,eAAegJ,kBAClBh0D,EAAKgrD,eAAegJ,mBACpBh0D,EAAKgrD,eAAe8I,iBAGfxK,GACLC,EACAv1C,EACA,iBACAhU,EAAKgrD,eAAelqD,KAAO,EAJtBwoD,CAKLtvD,EACH,CAGD,SAAS+5D,EAAS/5D,GAChB,OAAIgG,EAAKgrD,eAAegJ,oBAAsB9K,GAAclvD,IAC1DgG,EAAKgrD,eAAegJ,uBAAoBl0D,EACxCE,EAAKgrD,eAAe8I,sBAAmBh0D,EAChCm0D,EAAiBj6D,KAG1BgG,EAAKgrD,eAAegJ,uBAAoBl0D,EACxCE,EAAKgrD,eAAe8I,sBAAmBh0D,EAChCypD,EAAQS,QAAQsJ,GAAiBt/C,EAAIigD,EAArC1K,CAAuDvvD,GAC/D,CAGD,SAASi6D,EAAiBj6D,GAKxB,OAHAgG,EAAKgrD,eAAeI,YAAa,EAEjCprD,EAAK8rD,eAAYhsD,EACVwpD,GACLC,EACAA,EAAQS,QAAQrC,GAAM3zC,EAAI84C,GAC1B,aACA9sD,EAAK0Z,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,qBACzCntD,EACA,EANCwpD,CAOLtvD,EACH,CACF,CAMD,SAASu5D,GAAehK,EAASv1C,EAAI84C,GACnC,MAAM9sD,EAAO5H,KACb,OAAOkxD,GACLC,EACA2K,EACA,iBACAl0D,EAAKgrD,eAAelqD,KAAO,GAI7B,SAASozD,EAAYl6D,GACnB,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAC9C,OAAOovD,GACY,mBAAjBA,EAAK,GAAGzrD,MACRyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,SAAWI,EAAKgrD,eAAelqD,KACnEkT,EAAGha,GACH8yD,EAAI9yD,EACT,CACF,CAMD,SAASm5D,GAAgB5J,GACvBA,EAAQK,KAAKxxD,KAAK4yD,eAAeznD,KAClC,CAMD,SAAS8vD,GAAiC9J,EAASv1C,EAAI84C,GACrD,MAAM9sD,EAAO5H,KACb,OAAOkxD,GACLC,EACA2K,EACA,2BACAl0D,EAAK0Z,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,qBACzCntD,EACA,GAIN,SAASo0D,EAAYl6D,GACnB,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAC9C,OAAQspD,GAAclvD,IACpBg1D,GACiB,6BAAjBA,EAAK,GAAGzrD,KACNyQ,EAAGha,GACH8yD,EAAI9yD,EACT,CACF,CClQM,MAAMm6D,GAAa,CACxBp6D,KAAM,aACN8vD,SAAUuK,GACVnJ,aAAc,CACZpB,SAAUwK,IAEZzK,SAIF,SAASwK,GAAwB7K,EAASv1C,EAAI84C,GAC5C,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GACb,GAAa,KAATA,EAAa,CACf,MAAMqX,EAAQrR,EAAKgrD,eAanB,OAXK35C,EAAMnY,OACTqwD,EAAQttC,MAAM,aAAc,CAC1B8xC,YAAY,IAEd18C,EAAMnY,MAAO,GAGfqwD,EAAQttC,MAAM,oBACdstC,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBACN//C,CACR,CAED,OAAOijD,EAAI9yD,EACZ,CAGD,SAAS6P,EAAM7P,GACb,OAAIkvD,GAAclvD,IAChBuvD,EAAQttC,MAAM,8BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,8BACbL,EAAQK,KAAK,oBACN51C,IAGTu1C,EAAQK,KAAK,oBACN51C,EAAGha,GACX,CACF,CAGD,SAASq6D,GAA+B9K,EAASv1C,EAAI84C,GACnD,OAAOxD,GACLC,EACAA,EAAQS,QAAQmK,GAAYngD,EAAI84C,GAChC,aACA10D,KAAKshB,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,qBAAkBntD,EAAY,EAE9E,CAGD,SAAS8pD,GAAKL,GACZA,EAAQK,KAAK,aACd,CCnDM,SAAS0K,GACd/K,EACAv1C,EACA84C,EACAvpD,EACAgxD,EACAC,EACAC,EACAC,EACA3xD,GAEA,MAAMymD,EAAQzmD,GAAOyN,OAAOi5C,kBAC5B,IAAIkL,EAAU,EACd,OAAO7xD,EAGP,SAASA,EAAM9I,GACb,OAAa,KAATA,GACFuvD,EAAQttC,MAAM1Y,GACdgmD,EAAQttC,MAAMs4C,GACdhL,EAAQttC,MAAMu4C,GACdjL,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK4K,GACNI,GAGI,OAAT56D,GAA0B,KAATA,GAAe+uD,GAAa/uD,GACxC8yD,EAAI9yD,IAGbuvD,EAAQttC,MAAM1Y,GACdgmD,EAAQttC,MAAMw4C,GACdlL,EAAQttC,MAAMy4C,GACdnL,EAAQttC,MAAM,cAAe,CAC3BsuC,YAAa,WAERsK,EAAe76D,GACvB,CAGD,SAAS46D,EAA0B56D,GACjC,OAAa,KAATA,GACFuvD,EAAQttC,MAAMu4C,GACdjL,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK4K,GACbjL,EAAQK,KAAK2K,GACbhL,EAAQK,KAAKrmD,GACNyQ,IAGTu1C,EAAQttC,MAAMy4C,GACdnL,EAAQttC,MAAM,cAAe,CAC3BsuC,YAAa,WAERuK,EAAoB96D,GAC5B,CAGD,SAAS86D,EAAoB96D,GAC3B,OAAa,KAATA,GACFuvD,EAAQK,KAAK,eACbL,EAAQK,KAAK8K,GACNE,EAA0B56D,IAGtB,OAATA,GAA0B,KAATA,GAAeivD,GAAmBjvD,GAC9C8yD,EAAI9yD,IAGbuvD,EAAQI,QAAQ3vD,GACA,KAATA,EAAc+6D,EAA4BD,EAClD,CAGD,SAASC,EAA0B/6D,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuvD,EAAQI,QAAQ3vD,GACT86D,GAGFA,EAAoB96D,EAC5B,CAGD,SAAS66D,EAAe76D,GACtB,OAAa,KAATA,IACI26D,EAAUnL,EAAcsD,EAAI9yD,IAClCuvD,EAAQI,QAAQ3vD,GACT66D,GAGI,KAAT76D,EACG26D,KAQLpL,EAAQI,QAAQ3vD,GACT66D,IARLtL,EAAQK,KAAK,eACbL,EAAQK,KAAK8K,GACbnL,EAAQK,KAAK6K,GACblL,EAAQK,KAAKrmD,GACNyQ,EAAGha,IAOD,OAATA,GAAiBgvD,GAA0BhvD,GACzC26D,EAAgB7H,EAAI9yD,IACxBuvD,EAAQK,KAAK,eACbL,EAAQK,KAAK8K,GACbnL,EAAQK,KAAK6K,GACblL,EAAQK,KAAKrmD,GACNyQ,EAAGha,IAGR+uD,GAAa/uD,GAAc8yD,EAAI9yD,IACnCuvD,EAAQI,QAAQ3vD,GACA,KAATA,EAAcg7D,EAAuBH,EAC7C,CAGD,SAASG,EAAqBh7D,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuvD,EAAQI,QAAQ3vD,GACT66D,GAGFA,EAAe76D,EACvB,CACF,CCpIM,SAASi7D,GAAa1L,EAASv1C,EAAI84C,EAAKvpD,EAAM2xD,EAAYR,GAC/D,MAAM10D,EAAO5H,KACb,IAGI49C,EAHAl1C,EAAO,EAIX,OAAOgC,EAGP,SAASA,EAAM9I,GAMb,OALAuvD,EAAQttC,MAAM1Y,GACdgmD,EAAQttC,MAAMi5C,GACd3L,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAKsL,GACb3L,EAAQttC,MAAMy4C,GACP5E,CACR,CAGD,SAASA,EAAQ91D,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgBg8C,GAQP,KAATh8C,IACE8G,GACD,2BAA4Bd,EAAK0Z,OAAO2uC,YAC1CvnD,EAAO,IAEAgsD,EAAI9yD,GAGA,KAATA,GACFuvD,EAAQK,KAAK8K,GACbnL,EAAQttC,MAAMi5C,GACd3L,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAKsL,GACb3L,EAAQK,KAAKrmD,GACNyQ,GAGLi1C,GAAmBjvD,IACrBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNkG,IAGTvG,EAAQttC,MAAM,cAAe,CAC3BsuC,YAAa,WAER4K,EAAMn7D,GACd,CAGD,SAASm7D,EAAMn7D,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAivD,GAAmBjvD,IACnB8G,IAAS,KAETyoD,EAAQK,KAAK,eACNkG,EAAQ91D,KAGjBuvD,EAAQI,QAAQ3vD,GAChBg8C,EAAOA,IAASkT,GAAclvD,GACd,KAATA,EAAco7D,EAAcD,EACpC,CAGD,SAASC,EAAYp7D,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuvD,EAAQI,QAAQ3vD,GAChB8G,IACOq0D,GAGFA,EAAMn7D,EACd,CACF,CCzFM,SAASq7D,GAAa9L,EAASv1C,EAAI84C,EAAKvpD,EAAM2xD,EAAYR,GAE/D,IAAI3B,EACJ,OAAOjwD,EAGP,SAASA,EAAM9I,GAMb,OALAuvD,EAAQttC,MAAM1Y,GACdgmD,EAAQttC,MAAMi5C,GACd3L,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAKsL,GACbnC,EAAkB,KAAT/4D,EAAc,GAAKA,EACrBs7D,CACR,CAGD,SAASA,EAAkBt7D,GACzB,OAAIA,IAAS+4D,GACXxJ,EAAQttC,MAAMi5C,GACd3L,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAKsL,GACb3L,EAAQK,KAAKrmD,GACNyQ,IAGTu1C,EAAQttC,MAAMy4C,GACPa,EAAav7D,GACrB,CAGD,SAASu7D,EAAav7D,GACpB,OAAIA,IAAS+4D,GACXxJ,EAAQK,KAAK8K,GACNY,EAAkBvC,IAGd,OAAT/4D,EACK8yD,EAAI9yD,GAGTivD,GAAmBjvD,IACrBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNN,GAAaC,EAASgM,EAAc,gBAG7ChM,EAAQttC,MAAM,cAAe,CAC3BsuC,YAAa,WAERryC,EAAMle,GACd,CAGD,SAASke,EAAMle,GACb,OAAIA,IAAS+4D,GAAmB,OAAT/4D,GAAiBivD,GAAmBjvD,IACzDuvD,EAAQK,KAAK,eACN2L,EAAav7D,KAGtBuvD,EAAQI,QAAQ3vD,GACA,KAATA,EAAcw7D,EAAct9C,EACpC,CAGD,SAASs9C,EAAYx7D,GACnB,OAAIA,IAAS+4D,GAAmB,KAAT/4D,GACrBuvD,EAAQI,QAAQ3vD,GACTke,GAGFA,EAAMle,EACd,CACF,CChFM,SAASy7D,GAAkBlM,EAASv1C,GAEzC,IAAIxF,EACJ,OAAO1L,EAGP,SAASA,EAAM9I,GACb,OAAIivD,GAAmBjvD,IACrBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACbp7C,GAAO,EACA1L,GAGLomD,GAAclvD,GACTsvD,GACLC,EACAzmD,EACA0L,EAAO,aAAe,aAHjB86C,CAILtvD,GAGGga,EAAGha,EACX,CACF,CC9BM,SAAS07D,GAAoB78D,GAClC,OACEA,EACG0O,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlBkS,cACAk8C,aAEN,CCFM,MAAMC,GAAa,CACxB77D,KAAM,aACN8vD,SAAUgM,IAINC,GAAiB,CACrBjM,SAAUkM,GACV3I,SAAS,GAIX,SAASyI,GAAmBtM,EAASv1C,EAAI84C,GACvC,MAAM9sD,EAAO5H,KAGb,IAAI49D,EACJ,OAAOlzD,EAGP,SAASA,EAAM9I,GAEb,OADAuvD,EAAQttC,MAAM,cACPg5C,GAAa/hD,KAClBlT,EACAupD,EACA0M,EACAnJ,EACA,kBACA,wBACA,wBAPKmI,CAQLj7D,EACH,CAGD,SAASi8D,EAAWj8D,GAKlB,OAJAg8D,EAAaN,GACX11D,EAAKivD,eAAejvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAAG,IAAIM,MAAM,GAAI,IAG3D,KAATlG,GACFuvD,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBAEN6L,GACLlM,EACA+K,GACE/K,EACAA,EAAQS,QACN8L,GACAxM,GAAaC,EAAS1/C,EAAO,cAC7By/C,GAAaC,EAAS1/C,EAAO,eAE/BijD,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAI9yD,EACZ,CAGD,SAAS6P,EAAM7P,GACb,OAAa,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,cAER5pD,EAAK0Z,OAAOw8C,QAAQjJ,SAAS+I,IAChCh2D,EAAK0Z,OAAOw8C,QAAQ/1D,KAAK61D,GAGpBhiD,EAAGha,IAGL8yD,EAAI9yD,EACZ,CACF,CAGD,SAAS+7D,GAAcxM,EAASv1C,EAAI84C,GAClC,OAAOhqD,EAGP,SAASA,EAAM9I,GACb,OAAOgvD,GAA0BhvD,GAC7By7D,GAAkBlM,EAAS3/C,EAA3B6rD,CAAmCz7D,GACnC8yD,EAAI9yD,EACT,CAGD,SAAS4P,EAAO5P,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBq7D,GACL9L,EACAD,GAAaC,EAAS1/C,EAAO,cAC7BijD,EACA,kBACA,wBACA,wBANKuI,CAOLr7D,GAGG8yD,EAAI9yD,EACZ,CAGD,SAAS6P,EAAM7P,GACb,OAAgB,OAATA,GAAiBivD,GAAmBjvD,GAAQga,EAAGha,GAAQ8yD,EAAI9yD,EACnE,CACF,CCvHM,MAAMm8D,GAAe,CAC1Bp8D,KAAM,eACN8vD,SAAUuM,IAINC,GAAkB,CACtBxM,SAAUyM,GACVlJ,SAAS,GAIX,SAASgJ,GAAqB7M,EAASv1C,EAAI84C,GACzC,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GAEb,OADAuvD,EAAQttC,MAAM,gBACPqtC,GAAaC,EAASgN,EAAkB,aAAc,EAAtDjN,CAA6DtvD,EACrE,CAGD,SAASu8D,EAAiBv8D,GACxB,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAC9C,OAAOovD,GACY,eAAjBA,EAAK,GAAGzrD,MACRyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,QAAU,EAC9Cs0D,EAAYl6D,GACZ8yD,EAAI9yD,EACT,CAGD,SAASk6D,EAAYl6D,GACnB,OAAa,OAATA,EACK6P,EAAM7P,GAGXivD,GAAmBjvD,GACduvD,EAAQS,QAAQqM,GAAiBnC,EAAarqD,EAA9C0/C,CAAqDvvD,IAG9DuvD,EAAQttC,MAAM,iBACPxc,EAAQzF,GAChB,CAGD,SAASyF,EAAQzF,GACf,OAAa,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,iBACNsK,EAAYl6D,KAGrBuvD,EAAQI,QAAQ3vD,GACTyF,EACR,CAGD,SAASoK,EAAM7P,GAEb,OADAuvD,EAAQK,KAAK,gBACN51C,EAAGha,EACX,CACF,CAGD,SAASs8D,GAAwB/M,EAASv1C,EAAI84C,GAC5C,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GAEb,OAAIgG,EAAK0Z,OAAOwyC,KAAKlsD,EAAKgwB,MAAMm8B,MACvBW,EAAI9yD,GAGTivD,GAAmBjvD,IACrBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACN9mD,GAGFwmD,GAAaC,EAAS2K,EAAa,aAAc,EAAjD5K,CAAwDtvD,EAChE,CAGD,SAASk6D,EAAYl6D,GACnB,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAC9C,OAAOovD,GACY,eAAjBA,EAAK,GAAGzrD,MACRyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,QAAU,EAC9CoU,EAAGha,GACHivD,GAAmBjvD,GACnB8I,EAAM9I,GACN8yD,EAAI9yD,EACT,CACF,CC5FM,MAAMw8D,GAAa,CACxBz8D,KAAM,aACN8vD,SAAU4M,GACVzrD,QAAS0rD,IAIX,SAASA,GAAkBnL,EAAQ52C,GACjC,IAIIlV,EAGAmC,EAPAgtD,EAAarD,EAAO3rD,OAAS,EAC7BmqD,EAAe,EAiDnB,MAzCqC,eAAjCwB,EAAOxB,GAAc,GAAGxmD,OAC1BwmD,GAAgB,GAIhB6E,EAAa,EAAI7E,GACc,eAA/BwB,EAAOqD,GAAY,GAAGrrD,OAEtBqrD,GAAc,GAIiB,uBAA/BrD,EAAOqD,GAAY,GAAGrrD,OACrBwmD,IAAiB6E,EAAa,GAC5BA,EAAa,EAAI7E,GACmB,eAAnCwB,EAAOqD,EAAa,GAAG,GAAGrrD,QAE9BqrD,GAAc7E,EAAe,IAAM6E,EAAa,EAAI,GAGlDA,EAAa7E,IACftqD,EAAU,CACR8D,KAAM,iBACNT,MAAOyoD,EAAOxB,GAAc,GAAGjnD,MAC/BD,IAAK0oD,EAAOqD,GAAY,GAAG/rD,KAE7BjB,EAAO,CACL2B,KAAM,YACNT,MAAOyoD,EAAOxB,GAAc,GAAGjnD,MAC/BD,IAAK0oD,EAAOqD,GAAY,GAAG/rD,IAE3B0nD,YAAa,QAEfnqD,GAAOmrD,EAAQxB,EAAc6E,EAAa7E,EAAe,EAAG,CAC1D,CAAC,QAAStqD,EAASkV,GACnB,CAAC,QAAS/S,EAAM+S,GAChB,CAAC,OAAQ/S,EAAM+S,GACf,CAAC,OAAQlV,EAASkV,MAIf42C,CACR,CAGD,SAASkL,GAAmBlN,EAASv1C,EAAI84C,GACvC,MAAM9sD,EAAO5H,KACb,IAAI0I,EAAO,EACX,OAAOgC,EAGP,SAASA,EAAM9I,GAGb,OAFAuvD,EAAQttC,MAAM,cACdstC,EAAQttC,MAAM,sBACP06C,EAAgB38D,EACxB,CAGD,SAAS28D,EAAgB38D,GACvB,OAAa,KAATA,GAAe8G,IAAS,GAC1ByoD,EAAQI,QAAQ3vD,GACT28D,GAGI,OAAT38D,GAAiBgvD,GAA0BhvD,IAC7CuvD,EAAQK,KAAK,sBACN5pD,EAAK8rD,UAAY93C,EAAGha,GAAQ48D,EAAa58D,IAG3C8yD,EAAI9yD,EACZ,CAGD,SAAS48D,EAAa58D,GACpB,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,sBACP+2C,EAASh5D,IAGL,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,cACN51C,EAAGha,IAGRkvD,GAAclvD,GACTsvD,GAAaC,EAASqN,EAAc,aAApCtN,CAAkDtvD,IAG3DuvD,EAAQttC,MAAM,kBACP+5B,EAAKh8C,GACb,CAGD,SAASg5D,EAASh5D,GAChB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTg5D,IAGTzJ,EAAQK,KAAK,sBACNgN,EAAa58D,GACrB,CAGD,SAASg8C,EAAKh8C,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAegvD,GAA0BhvD,IAC5DuvD,EAAQK,KAAK,kBACNgN,EAAa58D,KAGtBuvD,EAAQI,QAAQ3vD,GACTg8C,EACR,CACF,CCvIM,MAAM6gB,GAAkB,CAC7B98D,KAAM,kBACN8vD,SAAUiN,GACV1E,UAAW2E,IAIb,SAASA,GAAyBxL,EAAQ52C,GACxC,IAGIlV,EAGAmC,EAGAg0D,EATAzxD,EAAQonD,EAAO3rD,OAYnB,MAAOuE,IACL,GAAyB,UAArBonD,EAAOpnD,GAAO,GAAgB,CAChC,GAA8B,YAA1BonD,EAAOpnD,GAAO,GAAGZ,KAAoB,CACvC9D,EAAU0E,EACV,KACD,CAE6B,cAA1BonD,EAAOpnD,GAAO,GAAGZ,OACnB3B,EAAOuC,EAEV,KAE+B,YAA1BonD,EAAOpnD,GAAO,GAAGZ,MAEnBgoD,EAAOnrD,OAAO+D,EAAO,GAGlByxD,GAAwC,eAA1BrK,EAAOpnD,GAAO,GAAGZ,OAClCqyD,EAAazxD,GAKnB,MAAM6yD,EAAU,CACdzzD,KAAM,gBACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAO3pD,GAAM,GAAGkB,OACzCD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOA,EAAO3rD,OAAS,GAAG,GAAGiD,MAetD,OAZA0oD,EAAO3pD,GAAM,GAAG2B,KAAO,oBAGnBqyD,GACFrK,EAAOnrD,OAAOwB,EAAM,EAAG,CAAC,QAASo1D,EAASriD,IAC1C42C,EAAOnrD,OAAOw1D,EAAa,EAAG,EAAG,CAAC,OAAQrK,EAAO9rD,GAAS,GAAIkV,IAC9D42C,EAAO9rD,GAAS,GAAGoD,IAAMsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOqK,GAAY,GAAG/yD,MAEjE0oD,EAAO9rD,GAAS,GAAKu3D,EAGvBzL,EAAOprD,KAAK,CAAC,OAAQ62D,EAASriD,IACvB42C,CACR,CAGD,SAASuL,GAAwBvN,EAASv1C,EAAI84C,GAC5C,MAAM9sD,EAAO5H,KACb,IAGI26D,EAGAkE,EANA9yD,EAAQnE,EAAKurD,OAAO3rD,OAQxB,MAAOuE,IAGL,GACiC,eAA/BnE,EAAKurD,OAAOpnD,GAAO,GAAGZ,MACS,eAA/BvD,EAAKurD,OAAOpnD,GAAO,GAAGZ,MACS,YAA/BvD,EAAKurD,OAAOpnD,GAAO,GAAGZ,KACtB,CACA0zD,EAA2C,cAA/Bj3D,EAAKurD,OAAOpnD,GAAO,GAAGZ,KAClC,KACD,CAGH,OAAOT,EAGP,SAASA,EAAM9I,GACb,OAAKgG,EAAK0Z,OAAOwyC,KAAKlsD,EAAKgwB,MAAMm8B,QAAUnsD,EAAK8rD,YAAamL,EAOtDnK,EAAI9yD,IANTuvD,EAAQttC,MAAM,qBACdstC,EAAQttC,MAAM,6BACd82C,EAAS/4D,EACFk9D,EAAgBl9D,GAI1B,CAGD,SAASk9D,EAAgBl9D,GACvB,OAAIA,IAAS+4D,GACXxJ,EAAQI,QAAQ3vD,GACTk9D,IAGT3N,EAAQK,KAAK,6BACNN,GAAaC,EAAS4N,EAAoB,aAA1C7N,CAAwDtvD,GAChE,CAGD,SAASm9D,EAAmBn9D,GAC1B,OAAa,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,qBACN51C,EAAGha,IAGL8yD,EAAI9yD,EACZ,CACF,CC3HM,MAAMo9D,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAaWC,GAAe,CAAC,MAAO,SAAU,QAAS,YClE1CC,GAAW,CACtBv9D,KAAM,WACN8vD,SAAU0N,GACVnF,UAAWoF,GACX5L,UAAU,GAIN6L,GAAqB,CACzB5N,SAAU6N,GACVtK,SAAS,GAIX,SAASoK,GAAkBjM,GACzB,IAAIpnD,EAAQonD,EAAO3rD,OAEnB,MAAOuE,IACL,GAAyB,UAArBonD,EAAOpnD,GAAO,IAA4C,aAA1BonD,EAAOpnD,GAAO,GAAGZ,KACnD,MAaJ,OATIY,EAAQ,GAAmC,eAA9BonD,EAAOpnD,EAAQ,GAAG,GAAGZ,OAEpCgoD,EAAOpnD,GAAO,GAAGrB,MAAQyoD,EAAOpnD,EAAQ,GAAG,GAAGrB,MAE9CyoD,EAAOpnD,EAAQ,GAAG,GAAGrB,MAAQyoD,EAAOpnD,EAAQ,GAAG,GAAGrB,MAElDyoD,EAAOnrD,OAAO+D,EAAQ,EAAG,IAGpBonD,CACR,CAGD,SAASgM,GAAiBhO,EAASv1C,EAAI84C,GACrC,MAAM9sD,EAAO5H,KAGb,IAAIq7D,EAGAkE,EAGAC,EAGAzzD,EAGA4uD,EACJ,OAAOjwD,EAGP,SAASA,EAAM9I,GAIb,OAHAuvD,EAAQttC,MAAM,YACdstC,EAAQttC,MAAM,gBACdstC,EAAQI,QAAQ3vD,GACTd,CACR,CAGD,SAASA,EAAKc,GACZ,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT69D,GAGI,KAAT79D,GACFuvD,EAAQI,QAAQ3vD,GACT89D,GAGI,KAAT99D,GACFuvD,EAAQI,QAAQ3vD,GAChBy5D,EAAO,EAGAzzD,EAAK8rD,UAAY93C,EAAK+jD,GAG3BvP,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GAChB49D,EAASjkB,OAAOC,aAAa55C,GAC7B29D,GAAW,EACJj4C,GAGFotC,EAAI9yD,EACZ,CAGD,SAAS69D,EAAiB79D,GACxB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GAChBy5D,EAAO,EACAuE,GAGI,KAATh+D,GACFuvD,EAAQI,QAAQ3vD,GAChBy5D,EAAO,EACPmE,EAAS,SACTzzD,EAAQ,EACD8zD,GAGLzP,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GAChBy5D,EAAO,EACAzzD,EAAK8rD,UAAY93C,EAAK+jD,GAGxBjL,EAAI9yD,EACZ,CAGD,SAASg+D,EAAkBh+D,GACzB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTgG,EAAK8rD,UAAY93C,EAAK+jD,GAGxBjL,EAAI9yD,EACZ,CAGD,SAASi+D,EAAgBj+D,GACvB,OAAIA,IAAS49D,EAAOpiD,WAAWrR,MAC7BolD,EAAQI,QAAQ3vD,GACTmK,IAAUyzD,EAAOh4D,OACpBI,EAAK8rD,UACH93C,EACAi3C,EACFgN,GAGCnL,EAAI9yD,EACZ,CAGD,SAAS89D,EAAc99D,GACrB,OAAIwuD,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GAChB49D,EAASjkB,OAAOC,aAAa55C,GACtB0lB,GAGFotC,EAAI9yD,EACZ,CAGD,SAAS0lB,EAAQ1lB,GACf,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAgvD,GAA0BhvD,GAGf,KAATA,GACA29D,GACAN,GAAapK,SAAS2K,EAAOn+C,gBAE7Bg6C,EAAO,EACAzzD,EAAK8rD,UAAY93C,EAAGha,GAAQixD,EAAajxD,IAG9Co9D,GAAenK,SAAS2K,EAAOn+C,gBACjCg6C,EAAO,EAEM,KAATz5D,GACFuvD,EAAQI,QAAQ3vD,GACTk+D,GAGFl4D,EAAK8rD,UAAY93C,EAAGha,GAAQixD,EAAajxD,KAGlDy5D,EAAO,EAEAzzD,EAAK8rD,YAAc9rD,EAAK0Z,OAAOwyC,KAAKlsD,EAAKgwB,MAAMm8B,MAClDW,EAAI9yD,GACJ29D,EACAQ,EAA4Bn+D,GAC5Bo+D,EAAwBp+D,IAGjB,KAATA,GAAe4uD,GAAkB5uD,IACnCuvD,EAAQI,QAAQ3vD,GAChB49D,GAAUjkB,OAAOC,aAAa55C,GACvB0lB,GAGFotC,EAAI9yD,EACZ,CAGD,SAASk+D,EAAiBl+D,GACxB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTgG,EAAK8rD,UAAY93C,EAAKi3C,GAGxB6B,EAAI9yD,EACZ,CAGD,SAASo+D,EAAwBp+D,GAC/B,OAAIkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTo+D,GAGFC,EAAYr+D,EACpB,CAGD,SAASm+D,EAA4Bn+D,GACnC,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTq+D,GAGI,KAATr+D,GAAwB,KAATA,GAAewuD,GAAWxuD,IAC3CuvD,EAAQI,QAAQ3vD,GACTs+D,GAGLpP,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTm+D,GAGFE,EAAYr+D,EACpB,CAGD,SAASs+D,EAAsBt+D,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA4uD,GAAkB5uD,IAElBuvD,EAAQI,QAAQ3vD,GACTs+D,GAGFC,EAA2Bv+D,EACnC,CAGD,SAASu+D,EAA2Bv+D,GAClC,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTw+D,GAGLtP,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTu+D,GAGFJ,EAA4Bn+D,EACpC,CAGD,SAASw+D,EAA6Bx+D,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8yD,EAAI9yD,GAGA,KAATA,GAAwB,KAATA,GACjBuvD,EAAQI,QAAQ3vD,GAChB+4D,EAAS/4D,EACFy+D,GAGLvP,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTw+D,IAGTzF,EAAS,KACF2F,EAA+B1+D,GACvC,CAGD,SAASy+D,EAA6Bz+D,GACpC,OAAa,OAATA,GAAiBivD,GAAmBjvD,GAC/B8yD,EAAI9yD,GAGTA,IAAS+4D,GACXxJ,EAAQI,QAAQ3vD,GACT2+D,IAGTpP,EAAQI,QAAQ3vD,GACTy+D,EACR,CAGD,SAASC,EAA+B1+D,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAgvD,GAA0BhvD,GAEnBu+D,EAA2Bv+D,IAGpCuvD,EAAQI,QAAQ3vD,GACT0+D,EACR,CAGD,SAASC,EAAkC3+D,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAekvD,GAAclvD,GACvCm+D,EAA4Bn+D,GAG9B8yD,EAAI9yD,EACZ,CAGD,SAASq+D,EAAYr+D,GACnB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT4+D,GAGF9L,EAAI9yD,EACZ,CAGD,SAAS4+D,EAAc5+D,GACrB,OAAIkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACT4+D,GAGO,OAAT5+D,GAAiBivD,GAAmBjvD,GACvCixD,EAAajxD,GACb8yD,EAAI9yD,EACT,CAGD,SAASixD,EAAajxD,GACpB,OAAa,KAATA,GAAwB,IAATy5D,GACjBlK,EAAQI,QAAQ3vD,GACT6+D,GAGI,KAAT7+D,GAAwB,IAATy5D,GACjBlK,EAAQI,QAAQ3vD,GACT8+D,GAGI,KAAT9+D,GAAwB,IAATy5D,GACjBlK,EAAQI,QAAQ3vD,GACT++D,GAGI,KAAT/+D,GAAwB,IAATy5D,GACjBlK,EAAQI,QAAQ3vD,GACT+9D,GAGI,KAAT/9D,GAAwB,IAATy5D,GACjBlK,EAAQI,QAAQ3vD,GACTg/D,IAGL/P,GAAmBjvD,IAAmB,IAATy5D,GAAuB,IAATA,EAQlC,OAATz5D,GAAiBivD,GAAmBjvD,GAC/Bi/D,EAAyBj/D,IAGlCuvD,EAAQI,QAAQ3vD,GACTixD,GAZE1B,EAAQt8C,MACbwqD,GACAsB,EACAE,EAHK1P,CAILvvD,EASL,CAGD,SAASi/D,EAAyBj/D,GAEhC,OADAuvD,EAAQK,KAAK,gBACNsP,EAAkBl/D,EAC1B,CAGD,SAASk/D,EAAkBl/D,GACzB,OAAa,OAATA,EACKsE,EAAKtE,GAGVivD,GAAmBjvD,GACduvD,EAAQS,QACb,CACEH,SAAUsP,EACV/L,SAAS,GAEX8L,EACA56D,EANKirD,CAOLvvD,IAGJuvD,EAAQttC,MAAM,gBACPgvC,EAAajxD,GACrB,CAGD,SAASm/D,EAAY5P,EAASv1C,EAAI84C,GAChC,OAAOhqD,EAGP,SAASA,EAAM9I,GAIb,OAHAuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNS,CACR,CAGD,SAASA,EAAUrwD,GACjB,OAAOgG,EAAK0Z,OAAOwyC,KAAKlsD,EAAKgwB,MAAMm8B,MAAQW,EAAI9yD,GAAQga,EAAGha,EAC3D,CACF,CAGD,SAAS6+D,EAA0B7+D,GACjC,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT+9D,GAGF9M,EAAajxD,EACrB,CAGD,SAAS8+D,EAAuB9+D,GAC9B,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GAChB49D,EAAS,GACFwB,GAGFnO,EAAajxD,EACrB,CAGD,SAASo/D,EAAsBp/D,GAC7B,OAAa,KAATA,GAAeq9D,GAAapK,SAAS2K,EAAOn+C,gBAC9C8vC,EAAQI,QAAQ3vD,GACT++D,GAGLvQ,GAAWxuD,IAAS49D,EAAOh4D,OAAS,GACtC2pD,EAAQI,QAAQ3vD,GAChB49D,GAAUjkB,OAAOC,aAAa55C,GACvBo/D,GAGFnO,EAAajxD,EACrB,CAGD,SAASg/D,EAAgCh/D,GACvC,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT+9D,GAGF9M,EAAajxD,EACrB,CAGD,SAAS+9D,EAA8B/9D,GACrC,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT++D,GAGI,KAAT/+D,GAAwB,IAATy5D,GACjBlK,EAAQI,QAAQ3vD,GACT+9D,GAGF9M,EAAajxD,EACrB,CAGD,SAAS++D,EAAkB/+D,GACzB,OAAa,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,gBACNtrD,EAAKtE,KAGduvD,EAAQI,QAAQ3vD,GACT++D,EACR,CAGD,SAASz6D,EAAKtE,GAEZ,OADAuvD,EAAQK,KAAK,YACN51C,EAAGha,EACX,CACF,CAGD,SAAS09D,GAAkBnO,EAASv1C,EAAI84C,GACtC,OAAOhqD,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQK,KAAK,gBACbL,EAAQttC,MAAM,mBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,mBACNL,EAAQS,QAAQkD,GAAWl5C,EAAI84C,EACvC,CACF,CCniBM,MAAMuM,GAAa,CACxBt/D,KAAM,aACN8vD,SAAUyP,GACV1N,UAAU,GAIZ,SAAS0N,GAAmB/P,EAASv1C,EAAI84C,GACvC,MAAM9sD,EAAO5H,KAGPmhE,EAAwB,CAC5B1P,SAAU2P,EACVpM,SAAS,GAILqM,EAAc,CAClB5P,SAAU6P,EACVtM,SAAS,GAEL4B,EAAO52D,KAAKmzD,OAAOnzD,KAAKmzD,OAAO3rD,OAAS,GACxC+5D,EACJ3K,GAAyB,eAAjBA,EAAK,GAAGzrD,KACZyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,OACtC,EACN,IAGImzD,EAHA6G,EAAW,EAIf,OAAO92D,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,cACdstC,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,2BACd82C,EAAS/4D,EACF6/D,EAAa7/D,EACrB,CAGD,SAAS6/D,EAAa7/D,GACpB,OAAIA,IAAS+4D,GACXxJ,EAAQI,QAAQ3vD,GAChB4/D,IACOC,IAGTtQ,EAAQK,KAAK,2BACNgQ,EAAW,EACd9M,EAAI9yD,GACJsvD,GAAaC,EAASuQ,EAAU,aAAhCxQ,CAA8CtvD,GACnD,CAGD,SAAS8/D,EAAS9/D,GAChB,OAAa,OAATA,GAAiBivD,GAAmBjvD,GAC/B+/D,EAAU//D,IAGnBuvD,EAAQttC,MAAM,uBACdstC,EAAQttC,MAAM,cAAe,CAC3BsuC,YAAa,WAERmH,EAAK13D,GACb,CAGD,SAAS03D,EAAK13D,GACZ,OAAa,OAATA,GAAiBgvD,GAA0BhvD,IAC7CuvD,EAAQK,KAAK,eACbL,EAAQK,KAAK,uBACNN,GAAaC,EAASyQ,EAAW,aAAjC1Q,CAA+CtvD,IAG3C,KAATA,GAAeA,IAAS+4D,EAAejG,EAAI9yD,IAC/CuvD,EAAQI,QAAQ3vD,GACT03D,EACR,CAGD,SAASsI,EAAUhgE,GACjB,OAAa,OAATA,GAAiBivD,GAAmBjvD,GAC/B+/D,EAAU//D,IAGnBuvD,EAAQttC,MAAM,uBACdstC,EAAQttC,MAAM,cAAe,CAC3BsuC,YAAa,WAER16B,EAAK71B,GACb,CAGD,SAAS61B,EAAK71B,GACZ,OAAa,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,eACbL,EAAQK,KAAK,uBACNmQ,EAAU//D,IAGN,KAATA,GAAeA,IAAS+4D,EAAejG,EAAI9yD,IAC/CuvD,EAAQI,QAAQ3vD,GACT61B,EACR,CAGD,SAASkqC,EAAU//D,GAEjB,OADAuvD,EAAQK,KAAK,mBACN5pD,EAAK8rD,UAAY93C,EAAGha,GAAQ+vD,EAAa/vD,EACjD,CAGD,SAAS+vD,EAAa/vD,GACpB,OAAa,OAATA,EACK6P,EAAM7P,GAGXivD,GAAmBjvD,GACduvD,EAAQS,QACbyP,EACAlQ,EAAQS,QACNuP,EACA1vD,EACA8vD,EACIrQ,GACEC,EACAQ,EACA,aACA4P,EAAgB,GAElB5P,GAENlgD,EAdK0/C,CAeLvvD,IAGJuvD,EAAQttC,MAAM,iBACP4yC,EAAgB70D,GACxB,CAGD,SAAS60D,EAAgB70D,GACvB,OAAa,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,iBACNG,EAAa/vD,KAGtBuvD,EAAQI,QAAQ3vD,GACT60D,EACR,CAGD,SAAShlD,EAAM7P,GAEb,OADAuvD,EAAQK,KAAK,cACN51C,EAAGha,EACX,CAGD,SAAS0/D,EAAoBnQ,EAASv1C,EAAI84C,GACxC,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GAIb,OAHAuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNS,CACR,CAGD,SAASA,EAAUrwD,GACjB,OAAOgG,EAAK0Z,OAAOwyC,KAAKlsD,EAAKgwB,MAAMm8B,MAAQW,EAAI9yD,GAAQga,EAAGha,EAC3D,CACF,CAGD,SAASw/D,EAAqBjQ,EAASv1C,EAAI84C,GACzC,IAAIhsD,EAAO,EACX,OAAOwoD,GACLC,EACA0Q,EACA,aACA7hE,KAAKshB,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,qBACzCntD,EACA,GAIN,SAASm6D,EAAqBjgE,GAG5B,OAFAuvD,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,2BACPi7C,EAAgBl9D,EACxB,CAGD,SAASk9D,EAAgBl9D,GACvB,OAAIA,IAAS+4D,GACXxJ,EAAQI,QAAQ3vD,GAChB8G,IACOo2D,GAGLp2D,EAAO84D,EAAiB9M,EAAI9yD,IAChCuvD,EAAQK,KAAK,2BACNN,GAAaC,EAAS4N,EAAoB,aAA1C7N,CAAwDtvD,GAChE,CAGD,SAASm9D,EAAmBn9D,GAC1B,OAAa,OAATA,GAAiBivD,GAAmBjvD,IACtCuvD,EAAQK,KAAK,mBACN51C,EAAGha,IAGL8yD,EAAI9yD,EACZ,CACF,CACF,CCrOD,MAAM6hC,GAAUxb,SAASR,cAAc,KAMhC,SAASq6C,GAA8BrhE,GAC5C,MAAMshE,EAAqB,IAAMthE,EAAQ,IACzCgjC,GAAQ+T,UAAYuqB,EACpB,MAAMC,EAAOv+B,GAAQvwB,YAUrB,OAAyC,KAArC8uD,EAAK5kD,WAAW4kD,EAAKx6D,OAAS,IAAiC,SAAV/G,KAQlDuhE,IAASD,GAA6BC,EAC9C,CCjBM,MAAMD,GAAqB,CAChCpgE,KAAM,qBACN8vD,SAAUwQ,IAIZ,SAASA,GAA2B9Q,EAASv1C,EAAI84C,GAC/C,MAAM9sD,EAAO5H,KACb,IAGI2K,EAGAwN,EANAzP,EAAO,EAOX,OAAOgC,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,sBACdstC,EAAQttC,MAAM,4BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,4BACN1wD,CACR,CAGD,SAASA,EAAKc,GACZ,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,mCACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,mCACN0Q,IAGT/Q,EAAQttC,MAAM,2BACdlZ,EAAM,GACNwN,EAAOq4C,GACA/vD,EAAMmB,GACd,CAGD,SAASsgE,EAAQtgE,GACf,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQttC,MAAM,uCACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,uCACbL,EAAQttC,MAAM,2BACdlZ,EAAM,EACNwN,EAAOo4C,GACA9vD,IAGT0wD,EAAQttC,MAAM,2BACdlZ,EAAM,EACNwN,EAAOm4C,GACA7vD,EAAMmB,GACd,CAGD,SAASnB,EAAMmB,GAEb,IAAIswD,EAEJ,OAAa,KAATtwD,GAAe8G,GACjBwpD,EAAQf,EAAQK,KAAK,2BAGnBr5C,IAASq4C,IACRsR,GAA8Bl6D,EAAKivD,eAAe3E,KAKrDf,EAAQttC,MAAM,4BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,4BACbL,EAAQK,KAAK,sBACN51C,GAPE84C,EAAI9yD,IAUXuW,EAAKvW,IAAS8G,IAASiC,GACzBwmD,EAAQI,QAAQ3vD,GACTnB,GAGFi0D,EAAI9yD,EACZ,CACF,CC/FM,MAAMugE,GAAkB,CAC7BxgE,KAAM,kBACN8vD,SAAU2Q,IAIZ,SAASA,GAAwBjR,EAASv1C,EAAI84C,GAC5C,OAAOhqD,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,gBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,gBACN1wD,CACR,CAGD,SAASA,EAAKc,GACZ,OAAI6uD,GAAiB7uD,IACnBuvD,EAAQttC,MAAM,wBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,wBACbL,EAAQK,KAAK,mBACN51C,GAGF84C,EAAI9yD,EACZ,CACF,CC7BM,MAAMygE,GAAa,CACxB1gE,KAAM,aACN8vD,SAAU6Q,IAIZ,SAASA,GAAmBnR,EAASv1C,GACnC,OAAOlR,EAGP,SAASA,EAAM9I,GAIb,OAHAuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNN,GAAaC,EAASv1C,EAAI,aAClC,CACF,CCNM,MAAM2mD,GAAW,CACtB5gE,KAAM,WACN8vD,SAAU+Q,GACVxI,UAAWyI,GACXrL,WAAYsL,IAIRC,GAAoB,CACxBlR,SAAUmR,IAINC,GAAyB,CAC7BpR,SAAUqR,IAINC,GAA8B,CAClCtR,SAAUuR,IAIZ,SAASN,GAAmBvP,GAC1B,IAGIjB,EAHAnmD,GAAS,EAKb,QAASA,EAAQonD,EAAO3rD,OACtB0qD,EAAQiB,EAAOpnD,GAAO,GAGL,eAAfmmD,EAAM/mD,MACS,cAAf+mD,EAAM/mD,MACS,aAAf+mD,EAAM/mD,OAGNgoD,EAAOnrD,OAAO+D,EAAQ,EAAkB,eAAfmmD,EAAM/mD,KAAwB,EAAI,GAC3D+mD,EAAM/mD,KAAO,OACbY,KAIJ,OAAOonD,CACR,CAGD,SAASsP,GAAkBtP,EAAQ52C,GACjC,IAII21C,EAGApxD,EAGA2O,EAGAwzD,EAbAl3D,EAAQonD,EAAO3rD,OACf0F,EAAS,EAcb,MAAOnB,IAGL,GAFAmmD,EAAQiB,EAAOpnD,GAAO,GAElBjL,EAAM,CAER,GACiB,SAAfoxD,EAAM/mD,MACU,cAAf+mD,EAAM/mD,MAAwB+mD,EAAMgR,UAErC,MAIuB,UAArB/P,EAAOpnD,GAAO,IAAiC,cAAfmmD,EAAM/mD,OACxC+mD,EAAMgR,WAAY,EAErB,MAAM,GAAIzzD,GACT,GACuB,UAArB0jD,EAAOpnD,GAAO,KACE,eAAfmmD,EAAM/mD,MAAwC,cAAf+mD,EAAM/mD,QACrC+mD,EAAMiR,YAEPriE,EAAOiL,EAEY,cAAfmmD,EAAM/mD,MAAsB,CAC9B+B,EAAS,EACT,KACD,MAEqB,aAAfglD,EAAM/mD,OACfsE,EAAQ1D,GAIZ,MAAMiO,EAAQ,CACZ7O,KAA+B,cAAzBgoD,EAAOryD,GAAM,GAAGqK,KAAuB,OAAS,QACtDT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,GAAM,GAAG4J,OACzCD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOA,EAAO3rD,OAAS,GAAG,GAAGiD,MAEhDsyD,EAAQ,CACZ5xD,KAAM,QACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,GAAM,GAAG4J,OACzCD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAO1jD,GAAO,GAAGhF,MAEpCjB,EAAO,CACX2B,KAAM,YACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,EAAOoM,EAAS,GAAG,GAAGzC,KACtDA,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAO1jD,EAAQ,GAAG,GAAG/E,QA+B9C,OA7BAu4D,EAAQ,CACN,CAAC,QAASjpD,EAAOuC,GACjB,CAAC,QAASwgD,EAAOxgD,IAGnB0mD,EAAQl7D,GAAKk7D,EAAO9P,EAAOrrD,MAAMhH,EAAO,EAAGA,EAAOoM,EAAS,IAE3D+1D,EAAQl7D,GAAKk7D,EAAO,CAAC,CAAC,QAASz5D,EAAM+S,KAErC0mD,EAAQl7D,GACNk7D,EACA7L,GACE76C,EAAQ+E,OAAO2uC,WAAWmT,WAAWxO,KACrCzB,EAAOrrD,MAAMhH,EAAOoM,EAAS,EAAGuC,EAAQ,GACxC8M,IAIJ0mD,EAAQl7D,GAAKk7D,EAAO,CAClB,CAAC,OAAQz5D,EAAM+S,GACf42C,EAAO1jD,EAAQ,GACf0jD,EAAO1jD,EAAQ,GACf,CAAC,OAAQstD,EAAOxgD,KAGlB0mD,EAAQl7D,GAAKk7D,EAAO9P,EAAOrrD,MAAM2H,EAAQ,IAEzCwzD,EAAQl7D,GAAKk7D,EAAO,CAAC,CAAC,OAAQjpD,EAAOuC,KACrCvU,GAAOmrD,EAAQryD,EAAMqyD,EAAO3rD,OAAQy7D,GAC7B9P,CACR,CAGD,SAASqP,GAAiBrR,EAASv1C,EAAI84C,GACrC,MAAM9sD,EAAO5H,KACb,IAGIqjE,EAGAvF,EANA/xD,EAAQnE,EAAKurD,OAAO3rD,OAQxB,MAAOuE,IACL,IACkC,eAA/BnE,EAAKurD,OAAOpnD,GAAO,GAAGZ,MACU,cAA/BvD,EAAKurD,OAAOpnD,GAAO,GAAGZ,QACvBvD,EAAKurD,OAAOpnD,GAAO,GAAGo3D,UACvB,CACAE,EAAaz7D,EAAKurD,OAAOpnD,GAAO,GAChC,KACD,CAGH,OAAOrB,EAGP,SAASA,EAAM9I,GACb,OAAKyhE,EAIDA,EAAWH,UAAkBI,EAAS1hE,IAC1Ck8D,EAAUl2D,EAAK0Z,OAAOw8C,QAAQjJ,SAC5ByI,GACE11D,EAAKivD,eAAe,CAClBnsD,MAAO24D,EAAW54D,IAClBA,IAAK7C,EAAKgwB,UAIhBu5B,EAAQttC,MAAM,YACdstC,EAAQttC,MAAM,eACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,eACbL,EAAQK,KAAK,YACN+R,GAjBE7O,EAAI9yD,EAkBd,CAGD,SAAS2hE,EAAc3hE,GAErB,OAAa,KAATA,EACKuvD,EAAQS,QACb+Q,GACA/mD,EACAkiD,EAAUliD,EAAK0nD,EAHVnS,CAILvvD,GAGS,KAATA,EACKuvD,EAAQS,QACbiR,GACAjnD,EACAkiD,EACI3M,EAAQS,QAAQmR,GAA6BnnD,EAAI0nD,GACjDA,EALCnS,CAMLvvD,GAGGk8D,EAAUliD,EAAGha,GAAQ0hE,EAAS1hE,EACtC,CAGD,SAAS0hE,EAAS1hE,GAEhB,OADAyhE,EAAWF,WAAY,EAChBzO,EAAI9yD,EACZ,CACF,CAGD,SAASghE,GAAiBzR,EAASv1C,EAAI84C,GACrC,OAAOhqD,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,YACdstC,EAAQttC,MAAM,kBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,kBACN6L,GAAkBlM,EAASrwD,EACnC,CAGD,SAASA,EAAKc,GACZ,OAAa,KAATA,EACK6I,EAAI7I,GAGNs6D,GACL/K,EACAqS,EACA9O,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,GATKwH,CAULt6D,EACH,CAGD,SAAS4hE,EAAiB5hE,GACxB,OAAOgvD,GAA0BhvD,GAC7By7D,GAAkBlM,EAASv7B,EAA3BynC,CAAoCz7D,GACpC6I,EAAI7I,EACT,CAGD,SAASg0B,EAAQh0B,GACf,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBq7D,GACL9L,EACAkM,GAAkBlM,EAAS1mD,GAC3BiqD,EACA,gBACA,sBACA,sBANKuI,CAOLr7D,GAGG6I,EAAI7I,EACZ,CAGD,SAAS6I,EAAI7I,GACX,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,kBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,kBACbL,EAAQK,KAAK,YACN51C,GAGF84C,EAAI9yD,EACZ,CACF,CAGD,SAASkhE,GAAsB3R,EAASv1C,EAAI84C,GAC1C,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GACb,OAAOi7D,GAAa/hD,KAClBlT,EACAupD,EACAsS,EACA/O,EACA,YACA,kBACA,kBAPKmI,CAQLj7D,EACH,CAGD,SAAS6hE,EAAW7hE,GAClB,OAAOgG,EAAK0Z,OAAOw8C,QAAQjJ,SACzByI,GACE11D,EAAKivD,eAAejvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAAG,IAAIM,MAAM,GAAI,KAGtE8T,EAAGha,GACH8yD,EAAI9yD,EACT,CACF,CAGD,SAASohE,GAA2B7R,EAASv1C,EAAI84C,GAC/C,OAAOhqD,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,aACdstC,EAAQttC,MAAM,mBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,mBACN1wD,CACR,CAGD,SAASA,EAAKc,GACZ,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,mBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,mBACbL,EAAQK,KAAK,aACN51C,GAGF84C,EAAI9yD,EACZ,CACF,CCtWM,MAAM8hE,GAAkB,CAC7B/hE,KAAM,kBACN8vD,SAAUkS,GACVvM,WAAYmL,GAASnL,YAIvB,SAASuM,GAAwBxS,EAASv1C,EAAI84C,GAC5C,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,cACdstC,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBACN1wD,CACR,CAGD,SAASA,EAAKc,GACZ,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,eACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,eACbL,EAAQK,KAAK,cACN//C,GAGFijD,EAAI9yD,EACZ,CAGD,SAAS6P,EAAM7P,GAQb,OAAgB,KAATA,GAAe,2BAA4BgG,EAAK0Z,OAAO2uC,WAC1DyE,EAAI9yD,GACJga,EAAGha,EACR,CACF,CCjCM,SAASgiE,GAAkBhiE,GAChC,OACW,OAATA,GACAgvD,GAA0BhvD,IAC1BmvD,GAAkBnvD,GAEX,EAGLovD,GAAmBpvD,GACd,OADT,CAGD,CClBM,MAAMiiE,GAAY,CACvBliE,KAAM,YACN8vD,SAAUqS,GACV1M,WAAY2M,IAQd,SAASA,GAAoB5Q,EAAQ52C,GACnC,IAGIzb,EAGAkZ,EAGAxQ,EAGAw6D,EAGAlF,EAGA/4D,EAGAk+D,EAGA/2D,EAxBAnB,GAAS,EA6Bb,QAASA,EAAQonD,EAAO3rD,OAEtB,GACuB,UAArB2rD,EAAOpnD,GAAO,IACY,sBAA1BonD,EAAOpnD,GAAO,GAAGZ,MACjBgoD,EAAOpnD,GAAO,GAAGm4D,OACjB,CACApjE,EAAOiL,EAEP,MAAOjL,IAEL,GACsB,SAApBqyD,EAAOryD,GAAM,IACY,sBAAzBqyD,EAAOryD,GAAM,GAAGqK,MAChBgoD,EAAOryD,GAAM,GAAGqjE,OAChB5nD,EAAQs6C,eAAe1D,EAAOryD,GAAM,IAAIsc,WAAW,KACjDb,EAAQs6C,eAAe1D,EAAOpnD,GAAO,IAAIqR,WAAW,GACtD,CAKA,IACG+1C,EAAOryD,GAAM,GAAGojE,QAAU/Q,EAAOpnD,GAAO,GAAGo4D,SAC3ChR,EAAOpnD,GAAO,GAAGtB,IAAIyC,OAASimD,EAAOpnD,GAAO,GAAGrB,MAAMwC,QAAU,MAE7DimD,EAAOryD,GAAM,GAAG2J,IAAIyC,OACnBimD,EAAOryD,GAAM,GAAG4J,MAAMwC,OACtBimD,EAAOpnD,GAAO,GAAGtB,IAAIyC,OACrBimD,EAAOpnD,GAAO,GAAGrB,MAAMwC,QACzB,GAGF,SAGFnH,EACEotD,EAAOryD,GAAM,GAAG2J,IAAIyC,OAASimD,EAAOryD,GAAM,GAAG4J,MAAMwC,OAAS,GAC5DimD,EAAOpnD,GAAO,GAAGtB,IAAIyC,OAASimD,EAAOpnD,GAAO,GAAGrB,MAAMwC,OAAS,EAC1D,EACA,EACN,MAAMxC,EAAQqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,GAAM,GAAG2J,KAC1CA,EAAMsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,GAAO,GAAGrB,OAC/C05D,GAAU15D,GAAQ3E,GAClBq+D,GAAU35D,EAAK1E,GACfi+D,EAAkB,CAChB74D,KAAMpF,EAAM,EAAI,iBAAmB,mBACnC2E,QACAD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,GAAM,GAAG2J,MAEzCq0D,EAAkB,CAChB3zD,KAAMpF,EAAM,EAAI,iBAAmB,mBACnC2E,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,GAAO,GAAGrB,OAC1CD,OAEFjB,EAAO,CACL2B,KAAMpF,EAAM,EAAI,aAAe,eAC/B2E,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,GAAM,GAAG2J,KACzCA,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,GAAO,GAAGrB,QAE1CsP,EAAQ,CACN7O,KAAMpF,EAAM,EAAI,SAAW,WAC3B2E,MAAOqI,OAAOm4C,OAAO,CAAC,EAAG8Y,EAAgBt5D,OACzCD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAG4T,EAAgBr0D,MAEzC0oD,EAAOryD,GAAM,GAAG2J,IAAMsI,OAAOm4C,OAAO,CAAC,EAAG8Y,EAAgBt5D,OACxDyoD,EAAOpnD,GAAO,GAAGrB,MAAQqI,OAAOm4C,OAAO,CAAC,EAAG4T,EAAgBr0D,KAC3Dw5D,EAAa,GAET9Q,EAAOryD,GAAM,GAAG2J,IAAIyC,OAASimD,EAAOryD,GAAM,GAAG4J,MAAMwC,SACrD+2D,EAAal8D,GAAKk8D,EAAY,CAC5B,CAAC,QAAS9Q,EAAOryD,GAAM,GAAIyb,GAC3B,CAAC,OAAQ42C,EAAOryD,GAAM,GAAIyb,MAI9B0nD,EAAal8D,GAAKk8D,EAAY,CAC5B,CAAC,QAASjqD,EAAOuC,GACjB,CAAC,QAASynD,EAAiBznD,GAC3B,CAAC,OAAQynD,EAAiBznD,GAC1B,CAAC,QAAS/S,EAAM+S,KAGlB0nD,EAAal8D,GACXk8D,EACA7M,GACE76C,EAAQ+E,OAAO2uC,WAAWmT,WAAWxO,KACrCzB,EAAOrrD,MAAMhH,EAAO,EAAGiL,GACvBwQ,IAIJ0nD,EAAal8D,GAAKk8D,EAAY,CAC5B,CAAC,OAAQz6D,EAAM+S,GACf,CAAC,QAASuiD,EAAiBviD,GAC3B,CAAC,OAAQuiD,EAAiBviD,GAC1B,CAAC,OAAQvC,EAAOuC,KAGd42C,EAAOpnD,GAAO,GAAGtB,IAAIyC,OAASimD,EAAOpnD,GAAO,GAAGrB,MAAMwC,QACvDA,EAAS,EACT+2D,EAAal8D,GAAKk8D,EAAY,CAC5B,CAAC,QAAS9Q,EAAOpnD,GAAO,GAAIwQ,GAC5B,CAAC,OAAQ42C,EAAOpnD,GAAO,GAAIwQ,MAG7BrP,EAAS,EAGXlF,GAAOmrD,EAAQryD,EAAO,EAAGiL,EAAQjL,EAAO,EAAGmjE,GAC3Cl4D,EAAQjL,EAAOmjE,EAAWz8D,OAAS0F,EAAS,EAC5C,KACD,CAEJ,CAGHnB,GAAS,EAET,QAASA,EAAQonD,EAAO3rD,OACQ,sBAA1B2rD,EAAOpnD,GAAO,GAAGZ,OACnBgoD,EAAOpnD,GAAO,GAAGZ,KAAO,QAI5B,OAAOgoD,CACR,CAGD,SAAS2Q,GAAkB3S,EAASv1C,GAClC,MAAMyoD,EAAmBrkE,KAAKshB,OAAO2uC,WAAWoU,iBAAiBzP,KAC3D5C,EAAWhyD,KAAKgyD,SAChBxgD,EAASoyD,GAAkB5R,GAGjC,IAAI2I,EACJ,OAAOjwD,EAGP,SAASA,EAAM9I,GAGb,OAFAuvD,EAAQttC,MAAM,qBACd82C,EAAS/4D,EACFg5D,EAASh5D,EACjB,CAGD,SAASg5D,EAASh5D,GAChB,GAAIA,IAAS+4D,EAEX,OADAxJ,EAAQI,QAAQ3vD,GACTg5D,EAGT,MAAM1I,EAAQf,EAAQK,KAAK,qBACrB//C,EAAQmyD,GAAkBhiE,GAC1Bd,GACH2Q,GAAoB,IAAVA,GAAeD,GAAW6yD,EAAiBxP,SAASjzD,GAC3D6N,GACH+B,GAAsB,IAAXA,GAAgBC,GAAU4yD,EAAiBxP,SAAS7C,GAGlE,OAFAE,EAAMiS,MAAQv1B,QAAmB,KAAX+rB,EAAgB75D,EAAOA,IAAS0Q,IAAW/B,IACjEyiD,EAAMgS,OAASt1B,QAAmB,KAAX+rB,EAAgBlrD,EAAQA,IAAUgC,IAAU3Q,IAC5D8a,EAAGha,EACX,CACF,CAYD,SAASwiE,GAAUxwC,EAAO1mB,GACxB0mB,EAAMqkC,QAAU/qD,EAChB0mB,EAAM1mB,QAAUA,EAChB0mB,EAAMukC,cAAgBjrD,CACvB,CC7NM,MAAMo3D,GAAW,CACtB3iE,KAAM,WACN8vD,SAAU8S,IAIZ,SAASA,GAAiBpT,EAASv1C,EAAI84C,GACrC,IAAIhsD,EAAO,EACX,OAAOgC,EAGP,SAASA,EAAM9I,GAMb,OALAuvD,EAAQttC,MAAM,YACdstC,EAAQttC,MAAM,kBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,kBACbL,EAAQttC,MAAM,oBACP/iB,CACR,CAGD,SAASA,EAAKc,GACZ,OAAIwuD,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GACT4iE,GAGF9T,GAAW9uD,GAAQ6iE,EAAW7iE,GAAQ8yD,EAAI9yD,EAClD,CAGD,SAAS4iE,EAAmB5iE,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAe4uD,GAAkB5uD,GAClE8iE,EAAyB9iE,GACzB6iE,EAAW7iE,EAChB,CAGD,SAAS8iE,EAAyB9iE,GAChC,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT+iE,IAIG,KAAT/iE,GAAwB,KAATA,GAAwB,KAATA,GAAe4uD,GAAkB5uD,KAChE8G,IAAS,IAETyoD,EAAQI,QAAQ3vD,GACT8iE,GAGFD,EAAW7iE,EACnB,CAGD,SAAS+iE,EAAU/iE,GACjB,OAAa,KAATA,GACFuvD,EAAQK,KAAK,oBACN/mD,EAAI7I,IAGA,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAe+uD,GAAa/uD,GACvD8yD,EAAI9yD,IAGbuvD,EAAQI,QAAQ3vD,GACT+iE,EACR,CAGD,SAASF,EAAW7iE,GAClB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GAChB8G,EAAO,EACAk8D,GAGLlU,GAAW9uD,IACbuvD,EAAQI,QAAQ3vD,GACT6iE,GAGF/P,EAAI9yD,EACZ,CAGD,SAASgjE,EAAiBhjE,GACxB,OAAO4uD,GAAkB5uD,GAAQijE,EAAWjjE,GAAQ8yD,EAAI9yD,EACzD,CAGD,SAASijE,EAAWjjE,GAClB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GAChB8G,EAAO,EACAk8D,GAGI,KAAThjE,GAEFuvD,EAAQK,KAAK,oBAAoBrmD,KAAO,gBACjCV,EAAI7I,IAGNkjE,EAAWljE,EACnB,CAGD,SAASkjE,EAAWljE,GAClB,OAAc,KAATA,GAAe4uD,GAAkB5uD,KAAU8G,IAAS,IACvDyoD,EAAQI,QAAQ3vD,GACA,KAATA,EAAckjE,EAAaD,GAG7BnQ,EAAI9yD,EACZ,CAGD,SAAS6I,EAAI7I,GAKX,OAJAuvD,EAAQttC,MAAM,kBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,kBACbL,EAAQK,KAAK,YACN51C,CACR,CACF,CC3HM,MAAMmpD,GAAW,CACtBpjE,KAAM,WACN8vD,SAAUuT,IAIZ,SAASA,GAAiB7T,EAASv1C,EAAI84C,GACrC,MAAM9sD,EAAO5H,KAGb,IAAI26D,EAGA6E,EAGAzzD,EAGA0tD,EACJ,OAAO/uD,EAGP,SAASA,EAAM9I,GAIb,OAHAuvD,EAAQttC,MAAM,YACdstC,EAAQttC,MAAM,gBACdstC,EAAQI,QAAQ3vD,GACTd,CACR,CAGD,SAASA,EAAKc,GACZ,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTqjE,GAGI,KAATrjE,GACFuvD,EAAQI,QAAQ3vD,GACT89D,GAGI,KAAT99D,GACFuvD,EAAQI,QAAQ3vD,GACTsjE,GAGL9U,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GACTujE,GAGFzQ,EAAI9yD,EACZ,CAGD,SAASqjE,EAAgBrjE,GACvB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTwjE,GAGI,KAATxjE,GACFuvD,EAAQI,QAAQ3vD,GAChB49D,EAAS,SACTzzD,EAAQ,EACDs5D,GAGLjV,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GACT0jE,GAGF5Q,EAAI9yD,EACZ,CAGD,SAASwjE,EAAYxjE,GACnB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT2jE,GAGF7Q,EAAI9yD,EACZ,CAGD,SAAS2jE,EAAa3jE,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZ8yD,EAAI9yD,GAGA,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT4jE,GAGFC,EAAQ7jE,EAChB,CAGD,SAAS4jE,EAAiB5jE,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZ8yD,EAAI9yD,GAGN6jE,EAAQ7jE,EAChB,CAGD,SAAS6jE,EAAQ7jE,GACf,OAAa,OAATA,EACK8yD,EAAI9yD,GAGA,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT8jE,GAGL7U,GAAmBjvD,IACrB63D,EAAcgM,EACPE,EAAa/jE,KAGtBuvD,EAAQI,QAAQ3vD,GACT6jE,EACR,CAGD,SAASC,EAAa9jE,GACpB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT6I,GAGFg7D,EAAQ7jE,EAChB,CAGD,SAASyjE,EAAUzjE,GACjB,OAAIA,IAAS49D,EAAOpiD,WAAWrR,MAC7BolD,EAAQI,QAAQ3vD,GACTmK,IAAUyzD,EAAOh4D,OAASo+D,EAAQP,GAGpC3Q,EAAI9yD,EACZ,CAGD,SAASgkE,EAAMhkE,GACb,OAAa,OAATA,EACK8yD,EAAI9yD,GAGA,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTikE,GAGLhV,GAAmBjvD,IACrB63D,EAAcmM,EACPD,EAAa/jE,KAGtBuvD,EAAQI,QAAQ3vD,GACTgkE,EACR,CAGD,SAASC,EAAWjkE,GAClB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTkkE,GAGFF,EAAMhkE,EACd,CAGD,SAASkkE,EAASlkE,GAChB,OAAa,KAATA,EACK6I,EAAI7I,GAGA,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTkkE,GAGFF,EAAMhkE,EACd,CAGD,SAAS0jE,EAAY1jE,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZ6I,EAAI7I,GAGTivD,GAAmBjvD,IACrB63D,EAAc6L,EACPK,EAAa/jE,KAGtBuvD,EAAQI,QAAQ3vD,GACT0jE,EACR,CAGD,SAASJ,EAAYtjE,GACnB,OAAa,OAATA,EACK8yD,EAAI9yD,GAGA,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTmkE,GAGLlV,GAAmBjvD,IACrB63D,EAAcyL,EACPS,EAAa/jE,KAGtBuvD,EAAQI,QAAQ3vD,GACTsjE,EACR,CAGD,SAASa,EAAiBnkE,GACxB,OAAgB,KAATA,EAAc6I,EAAI7I,GAAQsjE,EAAYtjE,EAC9C,CAGD,SAAS89D,EAAc99D,GACrB,OAAIwuD,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GACTokE,GAGFtR,EAAI9yD,EACZ,CAGD,SAASokE,EAASpkE,GAChB,OAAa,KAATA,GAAe4uD,GAAkB5uD,IACnCuvD,EAAQI,QAAQ3vD,GACTokE,GAGFC,EAAgBrkE,EACxB,CAGD,SAASqkE,EAAgBrkE,GACvB,OAAIivD,GAAmBjvD,IACrB63D,EAAcwM,EACPN,EAAa/jE,IAGlBkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTqkE,GAGFx7D,EAAI7I,EACZ,CAGD,SAASujE,EAAQvjE,GACf,OAAa,KAATA,GAAe4uD,GAAkB5uD,IACnCuvD,EAAQI,QAAQ3vD,GACTujE,GAGI,KAATvjE,GAAwB,KAATA,GAAegvD,GAA0BhvD,GACnDskE,EAAetkE,GAGjB8yD,EAAI9yD,EACZ,CAGD,SAASskE,EAAetkE,GACtB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT6I,GAGI,KAAT7I,GAAwB,KAATA,GAAewuD,GAAWxuD,IAC3CuvD,EAAQI,QAAQ3vD,GACTukE,GAGLtV,GAAmBjvD,IACrB63D,EAAcyM,EACPP,EAAa/jE,IAGlBkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTskE,GAGFz7D,EAAI7I,EACZ,CAGD,SAASukE,EAAqBvkE,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA4uD,GAAkB5uD,IAElBuvD,EAAQI,QAAQ3vD,GACTukE,GAGFC,EAA0BxkE,EAClC,CAGD,SAASwkE,EAA0BxkE,GACjC,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTykE,GAGLxV,GAAmBjvD,IACrB63D,EAAc2M,EACPT,EAAa/jE,IAGlBkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTwkE,GAGFF,EAAetkE,EACvB,CAGD,SAASykE,EAA4BzkE,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8yD,EAAI9yD,GAGA,KAATA,GAAwB,KAATA,GACjBuvD,EAAQI,QAAQ3vD,GAChB+4D,EAAS/4D,EACF0kE,GAGLzV,GAAmBjvD,IACrB63D,EAAc4M,EACPV,EAAa/jE,IAGlBkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTykE,IAGTlV,EAAQI,QAAQ3vD,GAChB+4D,OAASjzD,EACF6+D,EACR,CAGD,SAASD,EAA4B1kE,GACnC,OAAIA,IAAS+4D,GACXxJ,EAAQI,QAAQ3vD,GACT4kE,GAGI,OAAT5kE,EACK8yD,EAAI9yD,GAGTivD,GAAmBjvD,IACrB63D,EAAc6M,EACPX,EAAa/jE,KAGtBuvD,EAAQI,QAAQ3vD,GACT0kE,EACR,CAGD,SAASE,EAAiC5kE,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAegvD,GAA0BhvD,GACnDskE,EAAetkE,GAGjB8yD,EAAI9yD,EACZ,CAGD,SAAS2kE,EAA8B3kE,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8yD,EAAI9yD,GAGA,KAATA,GAAegvD,GAA0BhvD,GACpCskE,EAAetkE,IAGxBuvD,EAAQI,QAAQ3vD,GACT2kE,EACR,CAKD,SAASZ,EAAa/jE,GAKpB,OAJAuvD,EAAQK,KAAK,gBACbL,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNN,GACLC,EACA2K,EACA,aACAl0D,EAAK0Z,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,qBACzCntD,EACA,EAEP,CAGD,SAASo0D,EAAYl6D,GAEnB,OADAuvD,EAAQttC,MAAM,gBACP41C,EAAY73D,EACpB,CAGD,SAAS6I,EAAI7I,GACX,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,gBACbL,EAAQK,KAAK,YACN51C,GAGF84C,EAAI9yD,EACZ,CACF,CCtdM,MAAM6kE,GAAiB,CAC5B9kE,KAAM,iBACN8vD,SAAUiV,GACVtP,WAAYmL,GAASnL,YAIvB,SAASsP,GAAuBvV,EAASv1C,EAAI84C,GAC3C,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GAMb,OALAuvD,EAAQttC,MAAM,aACdstC,EAAQttC,MAAM,eACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,eACbL,EAAQK,KAAK,aACN//C,CACR,CAGD,SAASA,EAAM7P,GAQb,OAAgB,KAATA,GAAe,2BAA4BgG,EAAK0Z,OAAO2uC,WAC1DyE,EAAI9yD,GACJga,EAAGha,EACR,CACF,CClCM,MAAM+kE,GAAkB,CAC7BhlE,KAAM,kBACN8vD,SAAUmV,IAIZ,SAASA,GAAwBzV,EAASv1C,EAAI84C,GAC5C,OAAOhqD,EAGP,SAASA,EAAM9I,GAIb,OAHAuvD,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,gBACdstC,EAAQI,QAAQ3vD,GACTd,CACR,CAGD,SAASA,EAAKc,GACZ,OAAIivD,GAAmBjvD,IACrBuvD,EAAQK,KAAK,gBACbL,EAAQK,KAAK,mBACN51C,EAAGha,IAGL8yD,EAAI9yD,EACZ,CACF,CCxBM,MAAMilE,GAAW,CACtBllE,KAAM,WACN8vD,SAAUqV,GACVl0D,QAASm0D,GACT/U,aAIF,SAAS+U,GAAgB5T,GACvB,IAIIpnD,EAGA8X,EAPAmjD,EAAgB7T,EAAO3rD,OAAS,EAChCy/D,EAAiB,EAQrB,IACsC,eAAnC9T,EAAO8T,GAAgB,GAAG97D,MACU,UAAnCgoD,EAAO8T,GAAgB,GAAG97D,QACO,eAAlCgoD,EAAO6T,GAAe,GAAG77D,MACU,UAAlCgoD,EAAO6T,GAAe,GAAG77D,MAC3B,CACAY,EAAQk7D,EAER,QAASl7D,EAAQi7D,EACf,GAA8B,iBAA1B7T,EAAOpnD,GAAO,GAAGZ,KAAyB,CAE5CgoD,EAAO8T,GAAgB,GAAG97D,KAAO,kBACjCgoD,EAAO6T,GAAe,GAAG77D,KAAO,kBAChC87D,GAAkB,EAClBD,GAAiB,EACjB,KACD,CAEJ,CAEDj7D,EAAQk7D,EAAiB,EACzBD,IAEA,QAASj7D,GAASi7D,OACFt/D,IAAVmc,EACE9X,IAAUi7D,GAA2C,eAA1B7T,EAAOpnD,GAAO,GAAGZ,OAC9C0Y,EAAQ9X,GAGVA,IAAUi7D,GACgB,eAA1B7T,EAAOpnD,GAAO,GAAGZ,OAEjBgoD,EAAOtvC,GAAO,GAAG1Y,KAAO,eAEpBY,IAAU8X,EAAQ,IACpBsvC,EAAOtvC,GAAO,GAAGpZ,IAAM0oD,EAAOpnD,EAAQ,GAAG,GAAGtB,IAC5C0oD,EAAOnrD,OAAO6b,EAAQ,EAAG9X,EAAQ8X,EAAQ,GACzCmjD,GAAiBj7D,EAAQ8X,EAAQ,EACjC9X,EAAQ8X,EAAQ,GAGlBA,OAAQnc,GAIZ,OAAOyrD,CACR,CAGD,SAASnB,GAASpwD,GAEhB,OACW,KAATA,GACgD,oBAAhD5B,KAAKmzD,OAAOnzD,KAAKmzD,OAAO3rD,OAAS,GAAG,GAAG2D,IAE1C,CAGD,SAAS27D,GAAiB3V,EAASv1C,EAAI84C,GAErC,IAGIhsD,EAGAwpD,EANAsP,EAAW,EAOf,OAAO92D,EAGP,SAASA,EAAM9I,GAGb,OAFAuvD,EAAQttC,MAAM,YACdstC,EAAQttC,MAAM,oBACPmgD,EAAgBpiE,EACxB,CAGD,SAASoiE,EAAgBpiE,GACvB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GAChB4/D,IACOwC,IAGT7S,EAAQK,KAAK,oBACNxkC,EAAIprB,GACZ,CAGD,SAASorB,EAAIprB,GAEX,OAAa,OAATA,EACK8yD,EAAI9yD,GAIA,KAATA,GACFswD,EAAQf,EAAQttC,MAAM,oBACtBnb,EAAO,EACAo2D,EAAgBl9D,IAGZ,KAATA,GACFuvD,EAAQttC,MAAM,SACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,SACNxkC,GAGL6jC,GAAmBjvD,IACrBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNxkC,IAGTmkC,EAAQttC,MAAM,gBACP+5B,EAAKh8C,GACb,CAID,SAASg8C,EAAKh8C,GACZ,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAivD,GAAmBjvD,IAEnBuvD,EAAQK,KAAK,gBACNxkC,EAAIprB,KAGbuvD,EAAQI,QAAQ3vD,GACTg8C,EACR,CAID,SAASkhB,EAAgBl9D,GAEvB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GAChB8G,IACOo2D,GAGLp2D,IAAS84D,GACXrQ,EAAQK,KAAK,oBACbL,EAAQK,KAAK,YACN51C,EAAGha,KAGZswD,EAAM/mD,KAAO,eACNyyC,EAAKh8C,GACb,CACF,CC7JM,MAAMqmB,GAAW,CACtB,CAAC,IAAKsnC,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKA,GACN,CAAC,IAAKwM,IAIKlK,GAAiB,CAC5B,CAAC,IAAK2L,IAIKvG,GAAc,CACzB,EAAE,GAAI8G,GACN,EAAE,GAAIA,GACN,CAAC,IAAKA,IAIK9J,GAAO,CAClB,CAAC,IAAKmK,GACN,CAAC,IAAK3D,GACN,CAAC,IAAK,CAACgE,GAAiBhE,IACxB,CAAC,IAAKyE,GACN,CAAC,IAAKT,GACN,CAAC,IAAKhE,GACN,CAAC,IAAKwG,GACN,CAAC,KAAMA,IAII7rD,GAAS,CACpB,CAAC,IAAK2sD,GACN,CAAC,IAAKI,IAIK34D,GAAO,CAClB,EAAE,GAAI64D,GACN,EAAE,GAAIA,GACN,EAAE,GAAIA,GACN,CAAC,IAAKqB,GACN,CAAC,IAAK3B,GACN,CAAC,IAAK8B,GACN,CAAC,IAAK,CAACS,GAAUS,IACjB,CAAC,IAAK0B,GACN,CAAC,IAAK,CAACE,GAAiBxE,IACxB,CAAC,IAAKI,GACN,CAAC,IAAKsB,GACN,CAAC,IAAKgD,IAIKzD,GAAa,CACxBxO,KAAM,CAACiP,GAAWqD,KAIP7C,GAAmB,CAC9BzP,KAAM,CAAC,GAAI,KAIAD,GAAU,CACrBC,KAAM,ICpFD,SAASt5C,GAAMV,EAAU,CAAC,GAG/B,MAAMq1C,EAAaN,GAEjB,CAACwX,GAAmBj/D,OAAO0S,EAAQg1C,YAAc,KAI7CtuC,EAAS,CACbw8C,QAAS,GACThK,KAAM,CAAC,EACP7D,aACA5oD,QAAS0G,EAAO1G,IAChB4gB,SAAUla,EAAOka,IACjBgsC,KAAMlmD,EAAOkmD,IACb7+C,OAAQrH,EAAOqH,IACf5L,KAAMuE,EAAOvE,KAEf,OAAO8X,EAKP,SAASvT,EAAOgpD,GACd,OAAOqQ,EAGP,SAASA,EAAQ3+D,GACf,OAAO4vD,GAAgB/2C,EAAQy1C,EAAStuD,EACzC,CACF,CACF,CCrCD,MAAM4N,GAAS,cAKR,SAASgxD,KACd,IAOIC,EAPArP,EAAS,EACTuH,EAAS,GAGT90D,GAAQ,EAIZ,OAAO68D,EAGP,SAASA,EAAa9mE,EAAO+mE,EAAU/8D,GAErC,MAAMotD,EAAS,GAGf,IAAI3jD,EAGAlC,EAGA6jD,EAGA4R,EAGA7lE,EAEJnB,EAAQ++D,EAAS/+D,EAAM6C,SAASkkE,GAChC3R,EAAgB,EAChB2J,EAAS,GAEL90D,IAC0B,QAAxBjK,EAAM2c,WAAW,IACnBy4C,IAGFnrD,OAAQhD,GAGV,MAAOmuD,EAAgBp1D,EAAM+G,OAAQ,CAOnC,GANA6O,GAAOqxD,UAAY7R,EACnB3hD,EAAQmC,GAAOuK,KAAKngB,GACpBgnE,EACEvzD,QAAyBxM,IAAhBwM,EAAMnI,MAAsBmI,EAAMnI,MAAQtL,EAAM+G,OAC3D5F,EAAOnB,EAAM2c,WAAWqqD,IAEnBvzD,EAAO,CACVsrD,EAAS/+D,EAAMqH,MAAM+tD,GACrB,KACD,CAED,GAAa,KAATj0D,GAAei0D,IAAkB4R,GAAeH,EAClDzP,EAAO9vD,MAAM,GACbu/D,OAAmB5/D,OAYnB,OAVI4/D,IACFzP,EAAO9vD,MAAM,GACbu/D,OAAmB5/D,GAGjBmuD,EAAgB4R,IAClB5P,EAAO9vD,KAAKtH,EAAMqH,MAAM+tD,EAAe4R,IACvCxP,GAAUwP,EAAc5R,GAGlBj0D,GACN,KAAK,EACHi2D,EAAO9vD,KAAK,OACZkwD,IACA,MAGF,KAAK,EACHjmD,EAA+B,EAAxB9H,KAAKy9D,KAAK1P,EAAS,GAC1BJ,EAAO9vD,MAAM,GAEb,MAAOkwD,IAAWjmD,EAAM6lD,EAAO9vD,MAAM,GAErC,MAGF,KAAK,GACH8vD,EAAO9vD,MAAM,GACbkwD,EAAS,EACT,MAGF,QACEqP,GAAmB,EACnBrP,EAAS,EAKfpC,EAAgB4R,EAAc,CAC/B,CAQD,OANIh9D,IACE68D,GAAkBzP,EAAO9vD,MAAM,GAC/By3D,GAAQ3H,EAAO9vD,KAAKy3D,GACxB3H,EAAO9vD,KAAK,OAGP8vD,CACR,CACF,CCvHM,SAAS+P,GAAYzU,GAC1B,OAAQ+B,GAAY/B,IAIpB,OAAOA,CACR,CCLM,SAAS0U,GAAgCpnE,EAAOwU,GACrD,MAAMrT,EAAOwW,OAAO0vD,SAASrnE,EAAOwU,GAEpC,OAEErT,EAAO,GACE,KAATA,GACCA,EAAO,IAAMA,EAAO,IACpBA,EAAO,KAAOA,EAAO,KACrBA,EAAO,OAASA,EAAO,OACvBA,EAAO,OAASA,EAAO,OACL,SAAX,MAAPA,IACkB,SAAX,MAAPA,IACDA,EAAO,QAEA,IAGF25C,OAAOC,aAAa55C,EAC5B,CC3BD,MAAMmmE,GACJ,oEAWK,SAASC,GAAavnE,GAC3B,OAAOA,EAAM0O,QAAQ44D,GAA4BE,GAClD,CAQD,SAASA,GAAOC,EAAIC,EAAIC,GACtB,GAAID,EAEF,OAAOA,EAGT,MAAMxoD,EAAOyoD,EAAGhrD,WAAW,GAE3B,GAAa,KAATuC,EAAa,CACf,MAAMA,EAAOyoD,EAAGhrD,WAAW,GACrBirD,EAAe,MAAT1oD,GAAyB,KAATA,EAC5B,OAAOkoD,GAAgCO,EAAGtgE,MAAMugE,EAAM,EAAI,GAAIA,EAAM,GAAK,GAC1E,CAED,OAAOvG,GAA8BsG,IAAOF,CAC7C,CCzBM,SAASI,GAAkB7nE,GAEhC,OAAKA,GAA0B,kBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5B8nE,GAAS9nE,EAAM8nE,UAIpB,UAAW9nE,GAAS,QAASA,EACxB8nE,GAAS9nE,GAId,SAAUA,GAAS,WAAYA,EAC1BmzB,GAAMnzB,GAIR,GAnBE,EAoBV,CAMD,SAASmzB,GAAMA,GACb,OAAO7nB,GAAM6nB,GAASA,EAAMmgC,MAAQ,IAAMhoD,GAAM6nB,GAASA,EAAMqkC,OAChE,CAMD,SAASsQ,GAASt/D,GAChB,OAAO2qB,GAAM3qB,GAAOA,EAAIyB,OAAS,IAAMkpB,GAAM3qB,GAAOA,EAAIwB,IACzD,CAMD,SAASsB,GAAMtL,GACb,OAAOA,GAA0B,kBAAVA,EAAqBA,EAAQ,CACrD,CC+BD,MAAM+nE,GAAM,CAAC,EAAE3tD,eAOF4tD,GAcX,SAAUhoE,EAAO+mE,EAAU5sD,GAMzB,MALwB,kBAAb4sD,IACT5sD,EAAU4sD,EACVA,OAAW9/D,GAGNghE,GAAS9tD,EAAT8tD,CACLd,GACEtsD,GAAMV,GAASqN,WAAWusC,MAAM6S,KAAa5mE,EAAO+mE,GAAU,KAGnE,EAOH,SAASkB,GAAS9tD,EAAU,CAAC,GAG3B,MAAMue,EAASwvC,GACb,CACEC,WAAY,GACZC,eAAgB,CACd,WACA,WACA,UACA,YACA,UAEFhlD,MAAO,CACLygD,SAAUwE,EAAOC,IACjBC,iBAAkBC,EAClBC,cAAeD,EACfE,WAAYL,EAAOlK,GACnB7C,WAAY+M,EAAO/M,GACnBoG,gBAAiB8G,EACjBlH,mBAAoBkH,EACpBhI,WAAY6H,EAAOM,GACnBC,oBAAqB7J,EACrB8J,oBAAqB9J,EACrBzB,aAAc+K,EAAOM,EAAU5J,GAC/BqH,SAAUiC,EAAOjC,EAAUrH,GAC3B+J,aAAcN,EACdrrB,KAAMqrB,EACNO,cAAeP,EACfzL,WAAYsL,EAAOtL,GACnBiM,4BAA6BjK,EAC7BkK,sBAAuBlK,EACvBmK,sBAAuBnK,EACvBoK,SAAUd,EAAOc,GACjBjD,gBAAiBmC,EAAOe,IACxBC,kBAAmBhB,EAAOe,IAC1B3K,SAAU4J,EAAOvzB,GAAMiqB,GACvBuK,aAAcd,EACdlE,SAAU+D,EAAOvzB,GAAMiqB,GACvBwK,aAAcf,EACdgB,MAAOnB,EAAOmB,IACdlN,MAAOyC,EACPuJ,KAAMD,EAAOC,IACbmB,SAAUpB,EAAOoB,IACjBC,cAAeC,EACfC,YAAavB,EAAOvZ,GAAM+a,GAC1BC,cAAezB,EAAOvZ,IACtBsP,UAAWiK,EAAOjK,IAClB2L,UAAWC,EACXC,gBAAiBlL,EACjBmL,0BAA2BnL,EAC3BoL,oBAAqBpL,EACrBqL,cAAe/B,EAAOlK,GACtBkM,OAAQhC,EAAOgC,IACfrQ,cAAeqO,EAAOrO,KAExBjJ,KAAM,CACJ2X,WAAY4B,IACZC,mBAAoBC,EACpB3G,SAAUyG,IACV7B,cAAegC,EACflC,iBAAkBmC,EAClBpP,WAAYgP,IACZK,qBAAsBC,EACtBC,oCAAqCC,EACrCC,gCAAiCD,EACjCE,wBAAyBC,EACzBzK,WAAY8J,EAAOY,GACnBC,gBAAiBC,EACjBxC,oBAAqByC,EACrBxC,oBAAqByC,EACrBvC,cAAe6B,EACftN,aAAcgN,EAAOiB,GACrBnF,SAAUkE,EAAOkB,GACjB1C,aAAc8B,EACdztB,KAAMytB,EACN7N,WAAYuN,IACZtB,4BAA6ByC,EAC7BxC,sBAAuByC,EACvBxC,sBAAuByC,EACvBxC,SAAUmB,IACVpE,gBAAiBoE,EAAOsB,GACxBvC,kBAAmBiB,EAAOsB,GAC1BnN,SAAU6L,EAAOuB,GACjBvC,aAAcsB,EACdtG,SAAUgG,EAAOwB,GACjBvC,aAAcqB,EACdpB,MAAOc,EAAOyB,GACdzP,MAAO0P,EACPC,UAAWC,EACXtK,WAAYuK,EACZ7D,KAAMgC,EAAO8B,GACb3C,SAAUa,IACVV,YAAaU,IACbR,cAAeQ,IACflM,UAAWkM,IACXL,gBAAiBoC,EACjBnC,0BAA2BoC,EAC3BnC,oBAAqBoC,EACrBC,SAAUC,EACVrC,cAAeE,EAAOoC,GACtBC,0BAA2BC,EAC3BC,kBAAmBC,EACnBzC,OAAQC,IACRtQ,cAAesQ,MAGnBnwD,EAAQ4yD,iBAAmB,IAIvB5vB,EAAO,CAAC,EACd,OAAOplC,EAMP,SAASA,EAAQ26C,GAEf,IAAIsa,EAAO,CACTtiE,KAAM,OACN47B,SAAU,IAIZ,MAAM1F,EAAQ,CAACosC,GAGTC,EAAa,GAGbC,EAAY,GAGZpxD,EAAU,CACd8kB,QACAqsC,aACAv0C,SACAtV,QACA2tC,OACAgO,SACAoO,SACA7vB,UACAE,WAEF,IAAIlyC,GAAS,EAEb,QAASA,EAAQonD,EAAO3rD,OAGtB,GAC4B,gBAA1B2rD,EAAOpnD,GAAO,GAAGZ,MACS,kBAA1BgoD,EAAOpnD,GAAO,GAAGZ,KAEjB,GAAyB,UAArBgoD,EAAOpnD,GAAO,GAChB4hE,EAAU5lE,KAAKgE,OACV,CACL,MAAM6qD,EAAO+W,EAAUl2D,MACvB1L,EAAQ8hE,EAAY1a,EAAQyD,EAAM7qD,EACnC,CAILA,GAAS,EAET,QAASA,EAAQonD,EAAO3rD,OAAQ,CAC9B,MAAMuxC,EAAU5f,EAAOg6B,EAAOpnD,GAAO,IAEjCy8D,GAAI1tD,KAAKi+B,EAASoa,EAAOpnD,GAAO,GAAGZ,OACrC4tC,EAAQoa,EAAOpnD,GAAO,GAAGZ,MAAM2P,KAC7B/H,OAAOm4C,OACL,CACE2L,eAAgB1D,EAAOpnD,GAAO,GAAG8qD,gBAEnCt6C,GAEF42C,EAAOpnD,GAAO,GAGnB,CAED,GAAI2hE,EAAWlmE,OAAS,EAAG,CACzB,MAAMovD,EAAO8W,EAAWA,EAAWlmE,OAAS,GACtCuxC,EAAU6d,EAAK,IAAMkX,GAC3B/0B,EAAQj+B,KAAKyB,OAAS7U,EAAWkvD,EAAK,GACvC,CAED6W,EAAKlF,SAAW,CACd79D,MAAOkpB,EACLu/B,EAAO3rD,OAAS,EACZ2rD,EAAO,GAAG,GAAGzoD,MACb,CACEqpD,KAAM,EACNkE,OAAQ,EACR/qD,OAAQ,IAGhBzC,IAAKmpB,EACHu/B,EAAO3rD,OAAS,EACZ2rD,EAAOA,EAAO3rD,OAAS,GAAG,GAAGiD,IAC7B,CACEspD,KAAM,EACNkE,OAAQ,EACR/qD,OAAQ,KAIlBnB,GAAS,EAET,QAASA,EAAQotB,EAAOyvC,WAAWphE,OACjCimE,EAAOt0C,EAAOyvC,WAAW78D,GAAO0hE,IAASA,EAG3C,OAAOA,CACR,CAQD,SAASI,EAAY1a,EAAQzoD,EAAOlD,GAClC,IAKI0iE,EAGA9U,EAGA2Y,EAGAzS,EAdAvvD,EAAQrB,EAAQ,EAChBsjE,GAAoB,EACpBC,GAAa,EAcjB,QAASliE,GAASvE,EAAQ,CACxB,MAAM+2B,EAAQ40B,EAAOpnD,GAuCrB,GApCoB,kBAAlBwyB,EAAM,GAAGpzB,MACS,gBAAlBozB,EAAM,GAAGpzB,MACS,eAAlBozB,EAAM,GAAGpzB,MAEQ,UAAbozB,EAAM,GACRyvC,IAEAA,IAGF1S,OAAW5zD,GACgB,oBAAlB62B,EAAM,GAAGpzB,KACD,UAAbozB,EAAM,MAEN2rC,GACC5O,GACA0S,GACAD,IAEDA,EAAsBhiE,GAGxBuvD,OAAW5zD,GAGK,eAAlB62B,EAAM,GAAGpzB,MACS,kBAAlBozB,EAAM,GAAGpzB,MACS,mBAAlBozB,EAAM,GAAGpzB,MACS,mBAAlBozB,EAAM,GAAGpzB,MACS,6BAAlBozB,EAAM,GAAGpzB,OAITmwD,OAAW5zD,IAITsmE,GACa,UAAbzvC,EAAM,IACY,mBAAlBA,EAAM,GAAGpzB,OACY,IAAtB6iE,GACc,SAAbzvC,EAAM,KACa,kBAAlBA,EAAM,GAAGpzB,MACU,gBAAlBozB,EAAM,GAAGpzB,MACb,CACA,GAAI++D,EAAU,CACZ,IAAIgE,EAAYniE,EAChBqpD,OAAY1tD,EAEZ,MAAOwmE,IAAa,CAClB,MAAMC,EAAYhb,EAAO+a,GAEzB,GACwB,eAAtBC,EAAU,GAAGhjE,MACS,oBAAtBgjE,EAAU,GAAGhjE,KACb,CACA,GAAqB,SAAjBgjE,EAAU,GAAe,SAEzB/Y,IACFjC,EAAOiC,GAAW,GAAGjqD,KAAO,kBAC5B8iE,GAAa,GAGfE,EAAU,GAAGhjE,KAAO,aACpBiqD,EAAY8Y,CACb,MAAM,GACiB,eAAtBC,EAAU,GAAGhjE,MACS,qBAAtBgjE,EAAU,GAAGhjE,MACS,+BAAtBgjE,EAAU,GAAGhjE,MACS,qBAAtBgjE,EAAU,GAAGhjE,MACS,mBAAtBgjE,EAAU,GAAGhjE,KAIb,KAEH,CAGC4iE,KACE3Y,GAAa2Y,EAAsB3Y,KAGrC8U,EAASkE,SAAU,GAGrBlE,EAASz/D,IAAMsI,OAAOm4C,OACpB,CAAC,EACDkK,EAAYjC,EAAOiC,GAAW,GAAG1qD,MAAQ6zB,EAAM,GAAG9zB,KAEpD0oD,EAAOnrD,OAAOotD,GAAarpD,EAAO,EAAG,CAAC,OAAQm+D,EAAU3rC,EAAM,KAC9DxyB,IACAvE,GACD,CAEqB,mBAAlB+2B,EAAM,GAAGpzB,OACX++D,EAAW,CACT/+D,KAAM,WAENijE,SAAS,EACT1jE,MAAOqI,OAAOm4C,OAAO,CAAC,EAAG3sB,EAAM,GAAG7zB,QAGpCyoD,EAAOnrD,OAAO+D,EAAO,EAAG,CAAC,QAASm+D,EAAU3rC,EAAM,KAClDxyB,IACAvE,IACAumE,OAAsBrmE,EACtB4zD,GAAW,EAEd,CACF,CAGD,OADAnI,EAAOzoD,GAAO,GAAG0jE,QAAUH,EACpBzmE,CACR,CAMD,SAASu2C,EAAQx2C,EAAK9G,GACpBm9C,EAAKr2C,GAAO9G,CACb,CAQD,SAASw9C,EAAQ12C,GACf,OAAOq2C,EAAKr2C,EACb,CAMD,SAASqsB,EAAMtxB,GACb,MAAO,CACLyxD,KAAMzxD,EAAEyxD,KACRkE,OAAQ31D,EAAE21D,OACV/qD,OAAQ5K,EAAE4K,OAEb,CAOD,SAAS47D,EAAO/6D,EAAQsgE,GACtB,OAAOvtE,EAOP,SAASA,EAAKoxD,GACZruC,EAAM/I,KAAK9a,KAAM+N,EAAOmkD,GAAQA,GAC5Bmc,GAAKA,EAAIvzD,KAAK9a,KAAMkyD,EACzB,CACF,CAGD,SAASsN,IACPx/D,KAAKqhC,MAAMt5B,KAAK,CACdoD,KAAM,WACN47B,SAAU,IAEb,CAWD,SAASljB,EAAM5Y,EAAMinD,EAAOoc,GAC1B,MAAM9jE,EAASxK,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAS9C,OAPAgD,EAAOu8B,SAASh/B,KAAKkD,GACrBjL,KAAKqhC,MAAMt5B,KAAKkD,GAChBjL,KAAK0tE,WAAW3lE,KAAK,CAACmqD,EAAOoc,IAE7BrjE,EAAKs9D,SAAW,CACd79D,MAAOkpB,EAAMs+B,EAAMxnD,QAEdO,CACR,CAMD,SAAS8/D,EAAOsD,GACd,OAAO5+D,EAOP,SAASA,EAAMyiD,GACTmc,GAAKA,EAAIvzD,KAAK9a,KAAMkyD,GACxBV,EAAK12C,KAAK9a,KAAMkyD,EACjB,CACF,CASD,SAASV,EAAKU,EAAOqc,GACnB,MAAMtjE,EAAOjL,KAAKqhC,MAAM5pB,MAClB3W,EAAOd,KAAK0tE,WAAWj2D,MAE7B,IAAK3W,EACH,MAAM,IAAIQ,MACR,iBACE4wD,EAAM/mD,KACN,MACAm9D,GAAkB,CAChB59D,MAAOwnD,EAAMxnD,MACbD,IAAKynD,EAAMznD,MAEb,oBAEC,GAAI3J,EAAK,GAAGqK,OAAS+mD,EAAM/mD,KAChC,GAAIojE,EACFA,EAAYzzD,KAAK9a,KAAMkyD,EAAOpxD,EAAK,QAC9B,CACL,MAAMi4C,EAAUj4C,EAAK,IAAMgtE,GAC3B/0B,EAAQj+B,KAAK9a,KAAMkyD,EAAOpxD,EAAK,GAChC,CAIH,OADAmK,EAAKs9D,SAAS99D,IAAMmpB,EAAMs+B,EAAMznD,KACzBQ,CACR,CAMD,SAAS2iE,IACP,OAAOtqE,GAAStD,KAAKqhC,MAAM5pB,MAC5B,CAMD,SAAS6yD,IACPvsB,EAAQ,+BAA+B,EACxC,CAGD,SAASqsB,EAAqBlY,GAC5B,GAAIjU,EAAQ,+BAAgC,CAC1C,MAAMuwB,EAEJxuE,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCgnE,EAAS9jE,MAAQ0N,OAAO0vD,SAAS9nE,KAAK62D,eAAe3E,GAAQ,IAC7DnU,EAAQ,8BACT,CACF,CAGD,SAAS+tB,IACP,MAAMluB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKwjE,KAAO7wB,CACb,CAGD,SAASmuB,IACP,MAAMnuB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKwsB,KAAOmmB,CACb,CAGD,SAASiuB,IAEH5tB,EAAQ,oBACZj+C,KAAKw/D,SACLzhB,EAAQ,kBAAkB,GAC3B,CAGD,SAAS4tB,IACP,MAAM/tB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKxK,MAAQm9C,EAAKzuC,QAAQ,2BAA4B,IACtD4uC,EAAQ,iBACT,CAGD,SAASiuB,IACP,MAAMpuB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKxK,MAAQm9C,EAAKzuC,QAAQ,eAAgB,GAC3C,CAGD,SAASg9D,EAA4Bja,GAEnC,MAAM6K,EAAQ/8D,KAAK4tE,SACb3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAK8xD,MAAQA,EACb9xD,EAAK2yD,WAAaN,GAChBt9D,KAAK62D,eAAe3E,IACpB7wC,aACH,CAGD,SAAS+qD,IACP,MAAMxuB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAK6U,MAAQ89B,CACd,CAGD,SAASsuB,IACP,MAAMtuB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKyjE,IAAM9wB,CACZ,CAGD,SAASqtB,EAAyB/Y,GAChC,MAAMjnD,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAEjC,IAAKyD,EAAKqE,MAAO,CACf,MAAMA,EAAQtP,KAAK62D,eAAe3E,GAAO1qD,OACzCyD,EAAKqE,MAAQA,CACd,CACF,CAGD,SAASi+D,IACPxvB,EAAQ,gCAAgC,EACzC,CAGD,SAASsvB,EAAgCnb,GACvC,MAAMjnD,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKqE,MAAqD,KAA7CtP,KAAK62D,eAAe3E,GAAO90C,WAAW,GAAY,EAAI,CACpE,CAGD,SAAS+vD,IACPpvB,EAAQ,+BACT,CAGD,SAASkrB,EAAY/W,GACnB,MAAM1nD,EAEJxK,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAGjC,IAAIovD,EAAOpsD,EAAOu8B,SAASv8B,EAAOu8B,SAASv/B,OAAS,GAE/CovD,GAAsB,SAAdA,EAAKzrD,OAEhByrD,EAAOptD,KAEPotD,EAAK2R,SAAW,CACd79D,MAAOkpB,EAAMs+B,EAAMxnD,QAGrBF,EAAOu8B,SAASh/B,KAAK6uD,IAGvB52D,KAAKqhC,MAAMt5B,KAAK6uD,EACjB,CAGD,SAASyU,EAAWnZ,GAClB,MAAM0E,EAAO52D,KAAKqhC,MAAM5pB,MACxBm/C,EAAKn2D,OAAST,KAAK62D,eAAe3E,GAClC0E,EAAK2R,SAAS99D,IAAMmpB,EAAMs+B,EAAMznD,IACjC,CAGD,SAASmiE,EAAiB1a,GACxB,MAAM31C,EAAUvc,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAG/C,GAAIy2C,EAAQ,eAAgB,CAC1B,MAAM2Y,EAAOr6C,EAAQwqB,SAASxqB,EAAQwqB,SAASv/B,OAAS,GAGxD,OAFAovD,EAAK2R,SAAS99D,IAAMmpB,EAAMs+B,EAAMznD,UAChCszC,EAAQ,cAET,EAGEE,EAAQ,iCACT9kB,EAAO0vC,eAAehU,SAASt4C,EAAQpR,QAEvC89D,EAAYnuD,KAAK9a,KAAMkyD,GACvBmZ,EAAWvwD,KAAK9a,KAAMkyD,GAEzB,CAGD,SAASma,IACPtuB,EAAQ,eAAe,EACxB,CAGD,SAASuuB,IACP,MAAM1uB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKxK,MAAQm9C,CACd,CAGD,SAAS2uB,IACP,MAAM3uB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKxK,MAAQm9C,CACd,CAGD,SAASquB,IACP,MAAMruB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKxK,MAAQm9C,CACd,CAGD,SAASivB,IACP,MAAMtwD,EAEJvc,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAE7By2C,EAAQ,gBACV1hC,EAAQpR,MAAQ,YAEhBoR,EAAQoyD,cAAgB1wB,EAAQ,kBAAoB,kBAE7C1hC,EAAQmyD,WACRnyD,EAAQuD,eAGRvD,EAAQqhD,kBAERrhD,EAAQwgD,OAGjBhf,EAAQ,gBACT,CAGD,SAASyuB,IACP,MAAMjwD,EAEJvc,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAE7By2C,EAAQ,gBACV1hC,EAAQpR,MAAQ,YAEhBoR,EAAQoyD,cAAgB1wB,EAAQ,kBAAoB,kBAE7C1hC,EAAQmyD,WACRnyD,EAAQuD,eAGRvD,EAAQqhD,kBAERrhD,EAAQwgD,OAGjBhf,EAAQ,gBACT,CAGD,SAAS4uB,EAAgBza,GACvB,MAAMsc,EAEJxuE,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAC3B4N,EAASpV,KAAK62D,eAAe3E,GACnCsc,EAASzR,MAAQiL,GAAa5yD,GAC9Bo5D,EAAS5Q,WAAaN,GAAoBloD,GAAQiM,aACnD,CAGD,SAASorD,IACP,MAAMl+D,EAEJvO,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAC3B/G,EAAQT,KAAK4tE,SACb3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAEjCu2C,EAAQ,eAAe,GAEL,SAAd9yC,EAAKE,KAEPF,EAAK87B,SAAWx4B,EAASw4B,SAEzB97B,EAAK4kC,IAAMpvC,CAEd,CAGD,SAASssE,IACP,MAAMnvB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKyjE,IAAM9wB,CACZ,CAGD,SAASovB,IACP,MAAMpvB,EAAO59C,KAAK4tE,SACZ3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAK6U,MAAQ89B,CACd,CAGD,SAASsvB,IACPnvB,EAAQ,cACT,CAGD,SAAS0sB,IACP1sB,EAAQ,gBAAiB,YAC1B,CAGD,SAAS+uB,EAAsB5a,GAC7B,MAAM6K,EAAQ/8D,KAAK4tE,SACb3iE,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAK8xD,MAAQA,EACb9xD,EAAK2yD,WAAaN,GAChBt9D,KAAK62D,eAAe3E,IACpB7wC,cACF08B,EAAQ,gBAAiB,OAC1B,CAGD,SAASwtB,EAA+BrZ,GACtCnU,EAAQ,yBAA0BmU,EAAM/mD,KACzC,CAGD,SAASugE,EAA8BxZ,GACrC,MAAMtU,EAAO59C,KAAK62D,eAAe3E,GAC3B/mD,EAAO8yC,EAAQ,0BAGrB,IAAIx9C,EAEA0K,GACF1K,EAAQonE,GACNjqB,EACS,oCAATzyC,EAA6C,GAAK,IAEpD4yC,EAAQ,2BAKRt9C,EAAQqhE,GAA8BlkB,GAGxC,MAAMgZ,EAAO52D,KAAKqhC,MAAM5pB,MACxBm/C,EAAKn2D,OAASA,EACdm2D,EAAK2R,SAAS99D,IAAMmpB,EAAMs+B,EAAMznD,IACjC,CAGD,SAAS0gE,EAAuBjZ,GAC9BmZ,EAAWvwD,KAAK9a,KAAMkyD,GACtB,MAAMjnD,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKyjE,IAAM1uE,KAAK62D,eAAe3E,EAChC,CAGD,SAASgZ,EAAoBhZ,GAC3BmZ,EAAWvwD,KAAK9a,KAAMkyD,GACtB,MAAMjnD,EAEJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjCyD,EAAKyjE,IAAM,UAAY1uE,KAAK62D,eAAe3E,EAC5C,CAMD,SAAS6J,IACP,MAAO,CACL5wD,KAAM,aACN47B,SAAU,GAEb,CAGD,SAASqiC,IACP,MAAO,CACLj+D,KAAM,OACNsjE,KAAM,KACNh3C,KAAM,KACNh3B,MAAO,GAEV,CAGD,SAASomE,IACP,MAAO,CACL17D,KAAM,aACN1K,MAAO,GAEV,CAGD,SAAS+8D,IACP,MAAO,CACLryD,KAAM,aACNyyD,WAAY,GACZb,MAAO,KACPj9C,MAAO,KACP4uD,IAAK,GAER,CAGD,SAAS9E,IACP,MAAO,CACLz+D,KAAM,WACN47B,SAAU,GAEb,CAGD,SAAS63B,IAEP,MAAO,CACLzzD,KAAM,UACNmE,WAAO5H,EACPq/B,SAAU,GAEb,CAGD,SAAS8iC,KACP,MAAO,CACL1+D,KAAM,QAET,CAGD,SAASoqC,KACP,MAAO,CACLpqC,KAAM,OACN1K,MAAO,GAEV,CAGD,SAASwpE,KACP,MAAO,CACL9+D,KAAM,QACN2U,MAAO,KACP4uD,IAAK,GACL7+B,IAAK,KAER,CAGD,SAASk5B,KACP,MAAO,CACL59D,KAAM,OACN2U,MAAO,KACP4uD,IAAK,GACL3nC,SAAU,GAEb,CAMD,SAASwoB,GAAK2C,GACZ,MAAO,CACL/mD,KAAM,OACNyjE,QAAwB,gBAAf1c,EAAM/mD,KACfT,MAAO,KAEPmkE,OAAQ3c,EAAMkc,QACdrnC,SAAU,GAEb,CAMD,SAASmjC,GAAShY,GAChB,MAAO,CACL/mD,KAAM,WAEN0jE,OAAQ3c,EAAMkc,QACdU,QAAS,KACT/nC,SAAU,GAEb,CAGD,SAAS83B,KACP,MAAO,CACL1zD,KAAM,YACN47B,SAAU,GAEb,CAGD,SAAS+jC,KACP,MAAO,CACL3/D,KAAM,SACN47B,SAAU,GAEb,CAGD,SAASv9B,KACP,MAAO,CACL2B,KAAM,OACN1K,MAAO,GAEV,CAGD,SAASg6D,KACP,MAAO,CACLtvD,KAAM,gBAET,CACF,CAOD,SAASw9D,GAAUoG,EAAUnf,GAC3B,IAAI7jD,GAAS,EAEb,QAASA,EAAQ6jD,EAAWpoD,OAAQ,CAClC,MAAM/G,EAAQmvD,EAAW7jD,GAErBjJ,MAAMC,QAAQtC,GAChBkoE,GAAUoG,EAAUtuE,GAEpBqvD,GAAUif,EAAUtuE,EAEvB,CAED,OAAOsuE,CACR,CAOD,SAASjf,GAAUif,EAAUjf,GAE3B,IAAIvoD,EAEJ,IAAKA,KAAOuoD,EACV,GAAI0Y,GAAI1tD,KAAKg1C,EAAWvoD,GAAM,CAC5B,MAAMgoD,EAAe,mBAARhoD,GAAoC,eAARA,EACnCyoD,EAAQwY,GAAI1tD,KAAKi0D,EAAUxnE,GAAOwnE,EAASxnE,QAAOG,EAGlDi3B,EAAOqxB,IAAU+e,EAASxnE,GAAOgoD,EAAO,GAAK,CAAC,GAC9C3wB,EAAQkxB,EAAUvoD,GAEpBq3B,IACE2wB,EAEFwf,EAASxnE,GAAO,IAAIo3B,KAASC,GAE7B7rB,OAAOm4C,OAAOvsB,EAAMC,GAGzB,CAEJ,CAGD,SAASkvC,GAAenvC,EAAMC,GAC5B,MAAID,EACI,IAAIr9B,MACR,iBACEq9B,EAAKxzB,KACL,MACAm9D,GAAkB,CAChB59D,MAAOi0B,EAAKj0B,MACZD,IAAKk0B,EAAKl0B,MAEZ,0BACAm0B,EAAMzzB,KACN,MACAm9D,GAAkB,CAChB59D,MAAOk0B,EAAMl0B,MACbD,IAAKm0B,EAAMn0B,MAEb,aAGE,IAAInJ,MACR,oCACEs9B,EAAMzzB,KACN,MACAm9D,GAAkB,CAChB59D,MAAOk0B,EAAMl0B,MACbD,IAAKm0B,EAAMn0B,MAEb,kBAGP,CCltCc,SAASukE,GAAYp0D,GAElC,MAAM0G,EAAUhQ,IAEd,MAAM29D,EAAmCjvE,KAAK49C,KAAK,YAEnD,OAAO6qB,GACLn3D,EACAyB,OAAOm4C,OAAO,CAAC,EAAG+jB,EAAUr0D,EAAS,CAInCg1C,WAAY5vD,KAAK49C,KAAK,wBAA0B,GAChD4vB,gBAAiBxtE,KAAK49C,KAAK,2BAA6B,KAP5D,EAYF7qC,OAAOm4C,OAAOlrD,KAAM,CAACkvE,OAAQ5tD,GAC9B,CCzBD,UCFIknD,GAAM,CAAC,EAAE3tD,eAqBN,SAASs0D,GAAO5nE,EAAKqT,GAC1B,IAAIq0D,EAAWr0D,GAAW,CAAC,EAoB3B,SAAStG,EAAI7T,GACX,IAAI2uE,EAAK96D,EAAI+6D,QACT33B,EAAWpjC,EAAIojC,SAMnB,GAJIj3C,GAAS+nE,GAAI1tD,KAAKra,EAAO8G,KAC3B6nE,EAAK5G,GAAI1tD,KAAK48B,EAAUj3C,EAAM8G,IAAQmwC,EAASj3C,EAAM8G,IAAQ+M,EAAIg7D,SAG/DF,EACF,OAAOA,EAAGjjD,MAAMnsB,KAAMuvE,UAEzB,CAMD,OAJAj7D,EAAIojC,SAAWu3B,EAASv3B,UAAY,CAAC,EACrCpjC,EAAI+6D,QAAUJ,EAASI,QACvB/6D,EAAIg7D,QAAUL,EAASK,QAEhBh7D,CACR,CClDM,SAASq0D,GAAU1zD,EAAM66C,GAC9B,IAEIvoD,EAFAwE,GAAS,EAKb,GAAI+jD,EAAUF,WACZ,QAAS7jD,EAAQ+jD,EAAUF,WAAWpoD,OACpCmhE,GAAU1zD,EAAM66C,EAAUF,WAAW7jD,IAIzC,IAAKxE,KAAOuoD,EACE,eAARvoD,IAEe,WAARA,GAA4B,SAARA,EAG7B0N,EAAK1N,GAAO,IAAK0N,EAAK1N,IAAQ,MAASuoD,EAAUvoD,IAAQ,IACxC,aAARA,EACT0N,EAAK1N,GAAOwL,OAAOm4C,OAAOj2C,EAAK1N,GAAMuoD,EAAUvoD,IAAQ,CAAC,GAGxD0N,EAAK2F,QAAQrT,GAAOuoD,EAAUvoD,IAIlC,OAAO0N,CACR,CC1BM,SAASu6D,GAAMC,GAIpB,MAAM70D,EAAU60D,GAAY,CAAC,EACvB73C,EAAMhd,EAAQgd,KAAO,CAAC,EAC5B,IAAI83C,EAAY90D,EAAQ80D,WAAa,EACjC3b,EAAOn8B,EAAIm8B,MAAQ,EACnBkE,EAASrgC,EAAIqgC,QAAU,EAE3B,MAAO,CAAC9lC,OAAMnmB,UAASgL,SAOvB,SAAShL,IACP,MAAO,CAAC4rB,IAAK,CAACm8B,OAAMkE,UAASyX,YAC9B,CAOD,SAAS14D,EAAMvW,GACbivE,GAAajvE,CACd,CAQD,SAAS0xB,EAAK1xB,EAAQ,IACpB,MAAMo3D,EAASp3D,EAAM+W,MAAM,aACrBo/C,EAAOiB,EAAOA,EAAOrwD,OAAS,GAIpC,OAHAusD,GAAQ8D,EAAOrwD,OAAS,EACxBywD,EACoB,IAAlBJ,EAAOrwD,OAAeywD,EAASrB,EAAKpvD,OAAS,EAAIovD,EAAKpvD,OAASkoE,EAC1DjvE,CACR,CACF,CCxCM,SAASkvE,GAAcnlE,EAAQ+R,EAASqzD,GAC7C,MAAMC,EAAatzD,EAAQszD,WACrB9oC,EAAWv8B,EAAOu8B,UAAY,GAC9B+oC,EAAUN,GAAMI,GAEhBG,EAAU,GAChB,IAAIhkE,GAAS,EAEb8jE,EAAW9nE,MAAM,GAEjB,QAASgE,EAAQg7B,EAASv/B,OAAQ,CAChC,MAAM4B,EAAQ29B,EAASh7B,GAEvB8jE,EAAWA,EAAWroE,OAAS,GAAKuE,EAEpCgkE,EAAQhoE,KACN+nE,EAAQ39C,KACN5V,EAAQyzD,OAAO5mE,EAAOoB,EAAQ+R,EAAS,CACrC/K,OAAQ,KACRC,MAAO,QACJq+D,EAAQ9jE,cAKE,SAAf5C,EAAM+B,OACRoR,EAAQ0zD,oBAAiBvoE,GAGvBqE,EAAQg7B,EAASv/B,OAAS,GAC5BuoE,EAAQhoE,KAAK+nE,EAAQ39C,KAAKyD,EAAQxsB,EAAO29B,EAASh7B,EAAQ,KAE7D,CAID,OAFA8jE,EAAWp4D,MAEJs4D,EAAQ5sE,KAAK,IAOpB,SAASyyB,EAAQ+I,EAAMC,GACrB,IAAI7yB,EAAQwQ,EAAQpZ,KAAKqE,OAEzB,MAAOuE,IAAS,CACd,MAAMlD,EAAS0T,EAAQpZ,KAAK4I,GAAO4yB,EAAMC,EAAOp0B,EAAQ+R,GAExD,IAAe,IAAX1T,GAA8B,IAAXA,EACrB,MAGF,GAAsB,kBAAXA,EACT,MAAO,KAAKqnE,OAAO,EAAIrnE,GAGzB,IAAe,IAAXA,EACF,MAAO,uBAEV,CAED,MAAO,MACR,CACF,CCxED,MAAMsnE,GAAM,YAOL,SAASC,GAAY3vE,EAAOuC,GAEjC,MAAM6F,EAAS,GACf,IAGIqL,EAHAxJ,EAAQ,EACRqpD,EAAO,EAIX,MAAQ7/C,EAAQi8D,GAAIvvD,KAAKngB,GACvB6T,EAAI7T,EAAMqH,MAAM4C,EAAOwJ,EAAMnI,QAC7BlD,EAAOd,KAAKmM,EAAM,IAClBxJ,EAAQwJ,EAAMnI,MAAQmI,EAAM,GAAG1M,OAC/BusD,IAKF,OAFAz/C,EAAI7T,EAAMqH,MAAM4C,IAET7B,EAAO1F,KAAK,IAKnB,SAASmR,EAAI7T,GACXoI,EAAOd,KAAK/E,EAAIvC,EAAOszD,GAAOtzD,GAC/B,CACF,CC1BM,SAASqd,GAAW7S,EAAM2C,EAAG2O,EAASqzD,GAC3C,MAAMpe,EAAOj1C,EAAQsH,MAAM,cACrBisD,EAAUN,GAAMI,GACtBE,EAAQ39C,KAAK,MACb29C,EAAQ94D,MAAM,GACd,MAAMvW,EAAQ2vE,GACZT,GAAc1kE,EAAMsR,EAASuzD,EAAQ9jE,WACrChJ,IAGF,OADAwuD,IACO/wD,CACR,CAGD,SAASuC,GAAI+wD,EAAMnmD,EAAGyiE,GACpB,MAAO,KAAOA,EAAQ,GAAK,KAAOtc,CACnC,CCrBM,SAASuc,GAAejvC,EAAOkvC,GACpC,OACEC,GAAYnvC,EAAOkvC,EAAQE,aAAa,KACvCD,GAAYnvC,EAAOkvC,EAAQG,gBAAgB,EAE/C,CAQD,SAASF,GAAYnvC,EAAOkuB,EAAMvhD,GAChC,IAAKuhD,EACH,OAAOvhD,EAGW,kBAATuhD,IACTA,EAAO,CAACA,IAGV,IAAIxjD,GAAS,EAEb,QAASA,EAAQwjD,EAAK/nD,OACpB,GAAI65B,EAAMwzB,SAAStF,EAAKxjD,IACtB,OAAO,EAIX,OAAO,CACR,CC7BM,SAAS89D,GAAUj8D,EAAG+iE,EAAIp0D,EAASq0D,GACxC,IAAI7kE,GAAS,EAEb,QAASA,EAAQwQ,EAAQs0D,OAAOrpE,OAG9B,GACsC,OAApC+U,EAAQs0D,OAAO9kE,GAAO+kE,WACtBR,GAAe/zD,EAAQ8kB,MAAO9kB,EAAQs0D,OAAO9kE,IAE7C,MAAO,QAAQoM,KAAKy4D,EAAKp/D,QAAU,GAAK,IAI5C,MAAO,MACR,CChBM,SAASu/D,GAActwE,EAAOqwE,GACnC,MAAME,EAASz1B,OAAO96C,GACtB,IAAIsL,EAAQilE,EAAOt6D,QAAQo6D,GACvBG,EAAWllE,EACXqmB,EAAQ,EACRznB,EAAM,EAEV,GAAyB,kBAAdmmE,GAA+C,IAArBA,EAAUtpE,OAC7C,MAAM,IAAIlG,MAAM,sBAGlB,OAAkB,IAAXyK,EACDA,IAAUklE,IACN7+C,EAAQznB,IACZA,EAAMynB,GAGRA,EAAQ,EAGV6+C,EAAWllE,EAAQ,EACnBA,EAAQilE,EAAOt6D,QAAQo6D,EAAWG,GAGpC,OAAOtmE,CACR,CCzBM,SAASumE,GAAqBjmE,EAAMsR,GACzC,OAAOqyB,SACJryB,EAAQ3B,QAAQu2D,QACflmE,EAAKxK,QAEJwK,EAAKwjE,MAEN,WAAWt2D,KAAKlN,EAAKxK,SAEpB,0CAA0C0X,KAAKlN,EAAKxK,OAE1D,CCZM,SAAS2wE,GAAW70D,GACzB,MAAMo+C,EAASp+C,EAAQ3B,QAAQy2D,OAAS,IAExC,GAAe,MAAX1W,GAA6B,MAAXA,EACpB,MAAM,IAAIr5D,MACR,+BACEq5D,EACA,kDAIN,OAAOA,CACR,CCbM,SAAS2W,GAAef,GAC7B,IAAKA,EAAQgB,UAAW,CACtB,MAAM//D,GACH++D,EAAQ7Y,QAAU,kBAAoB,KACtC6Y,EAAQ/+D,OAAS,MAAQ++D,EAAQ/+D,OAAS,IAAM,IAEnD++D,EAAQgB,UAAY,IAAIC,QACrBhgE,EAAS,IAAMA,EAAS,IAAM,KAC5B,sBAAsB2G,KAAKo4D,EAAQO,WAAa,KAAO,IACxDP,EAAQO,WACPP,EAAQ9+D,MAAQ,MAAQ8+D,EAAQ9+D,MAAQ,IAAM,IACjD,IAEH,CAED,OAAO8+D,EAAQgB,SAChB,CCVM,SAASX,GAAKr0D,EAASswB,EAAO1T,GACnC,MAAM14B,GAAS04B,EAAO3nB,QAAU,KAAOq7B,GAAS,KAAO1T,EAAO1nB,OAAS,IAEjEggE,EAAY,GAEZ5oE,EAAS,GAET6oE,EAAQ,CAAC,EACf,IAAI3lE,GAAS,EAEb,QAASA,EAAQwQ,EAAQs0D,OAAOrpE,OAAQ,CACtC,MAAM+oE,EAAUh0D,EAAQs0D,OAAO9kE,GAE/B,IAAKukE,GAAe/zD,EAAQ8kB,MAAOkvC,GACjC,SAGF,MAAM1vE,EAAaywE,GAAef,GAElC,IAAIr8D,EAEJ,MAAQA,EAAQrT,EAAW+f,KAAKngB,GAAS,CACvC,MAAM+Q,EAAS,WAAY++D,GAAW3hC,QAAQ2hC,EAAQ7Y,SAChDjmD,EAAQ,UAAW8+D,EACnBhI,EAAWr0D,EAAMnI,OAASyF,EAAS0C,EAAM,GAAG1M,OAAS,GAEvDiqE,EAAU5c,SAAS0T,IACjBmJ,EAAMnJ,GAAU/2D,SAAWA,IAC7BkgE,EAAMnJ,GAAU/2D,QAAS,GAGvBkgE,EAAMnJ,GAAU92D,QAAUA,IAC5BigE,EAAMnJ,GAAU92D,OAAQ,KAG1BggE,EAAU1pE,KAAKwgE,GACfmJ,EAAMnJ,GAAY,CAAC/2D,SAAQC,SAE9B,CACF,CAEDggE,EAAUxjE,KAAK0jE,IAEf,IAAIjnE,EAAQyuB,EAAO3nB,OAAS2nB,EAAO3nB,OAAOhK,OAAS,EACnD,MAAMiD,EAAMhK,EAAM+G,QAAU2xB,EAAO1nB,MAAQ0nB,EAAO1nB,MAAMjK,OAAS,GACjEuE,GAAS,EAET,QAASA,EAAQ0lE,EAAUjqE,OAAQ,CACjC,MAAM+gE,EAAWkJ,EAAU1lE,GAGvBw8D,EAAW79D,GAAS69D,GAAY99D,IAQjC89D,EAAW,EAAI99D,GACdgnE,EAAU1lE,EAAQ,KAAOw8D,EAAW,GACpCmJ,EAAMnJ,GAAU92D,QACfigE,EAAMnJ,EAAW,GAAG/2D,SACpBkgE,EAAMnJ,EAAW,GAAG92D,OACtBggE,EAAU1lE,EAAQ,KAAOw8D,EAAW,GACnCmJ,EAAMnJ,GAAU/2D,SACfkgE,EAAMnJ,EAAW,GAAG/2D,SACpBkgE,EAAMnJ,EAAW,GAAG92D,QAKrB/G,IAAU69D,GAIZ1/D,EAAOd,KAAK6pE,GAAkBnxE,EAAMqH,MAAM4C,EAAO69D,GAAW,OAG9D79D,EAAQ69D,GAGN,iBAAiBpwD,KAAK1X,EAAMoxE,OAAOtJ,KACjCpvC,EAAO24C,QAAW34C,EAAO24C,OAAOjd,SAASp0D,EAAMoxE,OAAOtJ,KAMxD1/D,EAAOd,KACL,MAAQtH,EAAM2c,WAAWmrD,GAAUjlE,SAAS,IAAIi6D,cAAgB,KAElE7yD,KANA7B,EAAOd,KAAK,OAQf,CAID,OAFAc,EAAOd,KAAK6pE,GAAkBnxE,EAAMqH,MAAM4C,EAAOD,GAAM0uB,EAAO1nB,QAEvD5I,EAAO1F,KAAK,GACpB,CAOD,SAASwuE,GAAU/uE,EAAGoG,GACpB,OAAOpG,EAAIoG,CACZ,CAOD,SAAS4oE,GAAkBnxE,EAAOgR,GAChC,MAAM5Q,EAAa,wBAEb4wE,EAAY,GAEZ1B,EAAU,GACVgC,EAAQtxE,EAAQgR,EACtB,IAGIyC,EAHAnI,GAAS,EACTrB,EAAQ,EAIZ,MAAQwJ,EAAQrT,EAAW+f,KAAKmxD,GAC9BN,EAAU1pE,KAAKmM,EAAMnI,OAGvB,QAASA,EAAQ0lE,EAAUjqE,OACrBkD,IAAU+mE,EAAU1lE,IACtBgkE,EAAQhoE,KAAKtH,EAAMqH,MAAM4C,EAAO+mE,EAAU1lE,KAG5CgkE,EAAQhoE,KAAK,MACb2C,EAAQ+mE,EAAU1lE,GAKpB,OAFAgkE,EAAQhoE,KAAKtH,EAAMqH,MAAM4C,IAElBqlE,EAAQ5sE,KAAK,GACrB,CC3IM,SAASvB,GAAKqJ,EAAM2C,EAAG2O,EAASqzD,GACrC,MAAMjV,EAASyW,GAAW70D,GACpButB,EAAM7+B,EAAKxK,OAAS,GACpBuxE,EAAoB,MAAXrX,EAAiB,cAAgB,QAEhD,GAAIuW,GAAqBjmE,EAAMsR,GAAU,CACvC,MAAMi1C,EAAOj1C,EAAQsH,MAAM,gBACrBpjB,EAAQ2vE,GAAYtmC,EAAK9mC,IAE/B,OADAwuD,IACO/wD,CACR,CAED,MAAMqvE,EAAUN,GAAMI,GAChBhV,EAAWD,EAAOuV,OAAOhmE,KAAKS,IAAIomE,GAAcjnC,EAAK6wB,GAAU,EAAG,IAClEnJ,EAAOj1C,EAAQsH,MAAM,cAC3B,IAAIpjB,EAAQqvE,EAAQ39C,KAAKyoC,GAEzB,GAAI3vD,EAAKwjE,KAAM,CACb,MAAMwD,EAAU11D,EAAQsH,MAAM,iBAAmBmuD,GACjDvxE,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKwjE,KAAM,CACvBj9D,OAAQ/Q,EACRgR,MAAO,IACPqgE,OAAQ,CAAC,QACNhC,EAAQ9jE,aAGfimE,GACD,CAED,GAAIhnE,EAAKwjE,MAAQxjE,EAAKwsB,KAAM,CAC1B,MAAMw6C,EAAU11D,EAAQsH,MAAM,iBAAmBmuD,GACjDvxE,GAASqvE,EAAQ39C,KAAK,KACtB1xB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKwsB,KAAM,CACvBjmB,OAAQ/Q,EACRgR,MAAO,KACPqgE,OAAQ,CAAC,QACNhC,EAAQ9jE,aAGfimE,GACD,CAUD,OARAxxE,GAASqvE,EAAQ39C,KAAK,MAElB2X,IACFrpC,GAASqvE,EAAQ39C,KAAK2X,EAAM,OAG9BrpC,GAASqvE,EAAQ39C,KAAKyoC,GACtBpJ,IACO/wD,CACR,CAGD,SAASuC,GAAI+wD,EAAMnmD,EAAGyiE,GACpB,OAAQA,EAAQ,GAAK,QAAUtc,CAChC,CCvDM,SAASme,GAAYjnE,GAC1B,OAAIA,EAAK8xD,QAAU9xD,EAAK2yD,WACf3yD,EAAK8xD,OAAS,GAGhBiL,GAAa/8D,EAAK2yD,WAC1B,CClBM,SAASuU,GAAW51D,GACzB,MAAMo+C,EAASp+C,EAAQ3B,QAAQw3D,OAAS,IAExC,GAAe,MAAXzX,GAA6B,MAAXA,EACpB,MAAM,IAAIr5D,MACR,gCACEq5D,EACA,gDAIN,OAAOA,CACR,CCPM,SAAS6C,GAAWvyD,EAAM2C,EAAG2O,EAASqzD,GAC3C,MAAMwC,EAAQD,GAAW51D,GACnBy1D,EAAmB,MAAVI,EAAgB,QAAU,aACnC5gB,EAAOj1C,EAAQsH,MAAM,cAC3B,IAAIouD,EAAU11D,EAAQsH,MAAM,SAC5B,MAAMisD,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAK,KAsDzB,OArDA1xB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAS21D,GAAYjnE,GAAO,CAC/BuG,OAAQ/Q,EACRgR,MAAO,OACJq+D,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAK,OAEtB8/C,KAIGhnE,EAAKyjE,KAEN,eAAev2D,KAAKlN,EAAKyjE,MAEzBuD,EAAU11D,EAAQsH,MAAM,sBACxBpjB,GAASqvE,EAAQ39C,KAAK,KACtB1xB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKyjE,IAAK,CAACl9D,OAAQ/Q,EAAOgR,MAAO,OAAQq+D,EAAQ9jE,aAEjEvL,GAASqvE,EAAQ39C,KAAK,OAGtB8/C,EAAU11D,EAAQsH,MAAM,kBACxBpjB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKyjE,IAAK,CACtBl9D,OAAQ/Q,EACRgR,MAAOxG,EAAK6U,MAAQ,IAAM,QACvBgwD,EAAQ9jE,cAKjBimE,IAEIhnE,EAAK6U,QACPmyD,EAAU11D,EAAQsH,MAAM,QAAUmuD,GAClCvxE,GAASqvE,EAAQ39C,KAAK,IAAMigD,GAC5B3xE,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAK6U,MAAO,CACxBtO,OAAQ/Q,EACRgR,MAAO2gE,KACJtC,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAKigD,GACtBH,KAGFzgB,IAEO/wD,CACR,CClEM,SAAS4xE,GAAc91D,GAC5B,MAAMo+C,EAASp+C,EAAQ3B,QAAQgvD,UAAY,IAE3C,GAAe,MAAXjP,GAA6B,MAAXA,EACpB,MAAM,IAAIr5D,MACR,mCACEq5D,EACA,kDAIN,OAAOA,CACR,CCNM,SAAS2X,GAAkB9nE,EAAQ+R,EAASqzD,GACjD,MAAMC,EAAatzD,EAAQszD,WACrB9oC,EAAWv8B,EAAOu8B,UAAY,GAE9BgpC,EAAU,GAChB,IAAIhkE,GAAS,EACTyF,EAASo+D,EAAYp+D,OAEzBq+D,EAAW9nE,MAAM,GACjB,IAAI+nE,EAAUN,GAAMI,GAEpB,QAAS7jE,EAAQg7B,EAASv/B,OAAQ,CAChC,MAAM4B,EAAQ29B,EAASh7B,GAEvB,IAAI0F,EAIJ,GAFAo+D,EAAWA,EAAWroE,OAAS,GAAKuE,EAEhCA,EAAQ,EAAIg7B,EAASv/B,OAAQ,CAE/B,IAAIwoE,EAASzzD,EAAQyzD,OAAOt4B,SAAS3Q,EAASh7B,EAAQ,GAAGZ,MACrD6kE,GAAUA,EAAOuC,OAAMvC,EAASA,EAAOuC,MAC3C9gE,EAAQu+D,EACJA,EAAOjpC,EAASh7B,EAAQ,GAAIvB,EAAQ+R,EAAS,CAC3C/K,OAAQ,GACRC,MAAO,MACJq+D,EAAQ9jE,YACV6lE,OAAO,GACV,EACL,MACCpgE,EAAQm+D,EAAYn+D,MAUpBs+D,EAAQvoE,OAAS,IACL,OAAXgK,GAA8B,OAAXA,IACL,SAAfpI,EAAM+B,OAEN4kE,EAAQA,EAAQvoE,OAAS,GAAKuoE,EAAQA,EAAQvoE,OAAS,GAAG2H,QACxD,cACA,KAEFqC,EAAS,IAGTs+D,EAAUN,GAAMI,GAChBE,EAAQ39C,KAAK49C,EAAQ5sE,KAAK,MAG5B4sE,EAAQhoE,KACN+nE,EAAQ39C,KACN5V,EAAQyzD,OAAO5mE,EAAOoB,EAAQ+R,EAAS,IAClCuzD,EAAQ9jE,UACXwF,SACAC,YAKND,EAASu+D,EAAQA,EAAQvoE,OAAS,GAAGM,OAAO,EAC7C,CAID,OAFA+nE,EAAWp4D,MAEJs4D,EAAQ5sE,KAAK,GACrB,CCnEM,SAASymE,GAAS3+D,EAAM2C,EAAG2O,EAASqzD,GACzC,MAAMjV,EAAS0X,GAAc91D,GACvBi1C,EAAOj1C,EAAQsH,MAAM,YACrBisD,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAKwoC,GAUzB,OATAl6D,GAASqvE,EAAQ39C,KACfmgD,GAAkBrnE,EAAMsR,EAAS,CAC/B/K,OAAQ/Q,EACRgR,MAAOkpD,KACJmV,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAKwoC,GACtBnJ,IACO/wD,CACR,CAMD,SAAS+xE,GAAa5kE,EAAG+iE,EAAIp0D,GAC3B,OAAOA,EAAQ3B,QAAQgvD,UAAY,GACpC,CAjCDA,GAAS2I,KAAOC,GCyCT,MA+DMC,GAkBT,SAAUt6D,GACR,QAAazQ,IAATyQ,GAA+B,OAATA,EACxB,OAAOyD,GAGT,GAAoB,kBAATzD,EACT,OAAOu6D,GAAYv6D,GAGrB,GAAoB,kBAATA,EACT,OAAOrV,MAAMC,QAAQoV,GAAQw6D,GAAWx6D,GAAQy6D,GAAaz6D,GAG/D,GAAoB,oBAATA,EACT,OAAO06D,GAAY16D,GAGrB,MAAM,IAAI7W,MAAM,+CACjB,EAML,SAASqxE,GAAWG,GAElB,MAAMC,EAAS,GACf,IAAIhnE,GAAS,EAEb,QAASA,EAAQ+mE,EAAMtrE,OACrBurE,EAAOhnE,GAAS0mE,GAAQK,EAAM/mE,IAGhC,OAAO8mE,GAAYG,GAOnB,SAASA,KAAOvjB,GACd,IAAI1jD,GAAS,EAEb,QAASA,EAAQgnE,EAAOvrE,OACtB,GAAIurE,EAAOhnE,GAAO+O,KAAK9a,QAASyvD,GAAa,OAAO,EAGtD,OAAO,CACR,CACF,CASD,SAASmjB,GAAa/9D,GACpB,OAAOg+D,GAAYvsE,GAMnB,SAASA,EAAI2E,GAEX,IAAI1D,EAEJ,IAAKA,KAAOsN,EAEV,GAAI5J,EAAK1D,KAASsN,EAAMtN,GAAM,OAAO,EAGvC,OAAO,CACR,CACF,CASD,SAASmrE,GAAY79D,GACnB,OAAOg+D,GAAY1nE,GAKnB,SAASA,EAAKF,GACZ,OAAOA,GAAQA,EAAKE,OAAS0J,CAC9B,CACF,CAQD,SAASg+D,GAAYh+D,GACnB,OAAOo+D,EAOP,SAASA,KAAaxjB,GAEpB,OAAO7gB,QAAQ/5B,EAAMiG,KAAK9a,QAASyvD,GACpC,CACF,CAGD,SAAS7zC,KACP,OAAO,CACR,CCtPM,SAASs3D,GAAM5wE,GACpB,OAAOA,CACR,CCWM,MAAM6wE,IAAW,EAIXC,GAAO,OAIPC,IAAO,EAcPC,GAcT,SAAU7F,EAAMt1D,EAAMo7D,EAASt8D,GACT,oBAATkB,GAA0C,oBAAZo7D,IACvCt8D,EAAUs8D,EAEVA,EAAUp7D,EACVA,EAAO,MAGT,MAAMqpC,EAAKixB,GAAQt6D,GACbqV,EAAOvW,GAAW,EAAI,EAS5B,SAASu8D,EAAQvoE,EAAMc,EAAO0nE,GAG5B,MAAMhzE,EAAwB,kBAATwK,GAA8B,OAATA,EAAgBA,EAAO,CAAC,EAElE,IAAItJ,EAkBJ,MAhB0B,kBAAflB,EAAM0K,OACfxJ,EAC2B,kBAAlBlB,EAAM6mB,QACT7mB,EAAM6mB,QACgB,kBAAf7mB,EAAMkB,KACblB,EAAMkB,UACN+F,EAENqL,OAAO2gE,eAAeC,EAAO,OAAQ,CACnClzE,MACE,SACAyyE,GAAMzyE,EAAM0K,MAAQxJ,EAAO,IAAMA,EAAO,IAAM,KAC9C,OAICgyE,EAEP,SAASA,IAEP,IAEIC,EAEA1mE,EAEA2mE,EANAhrE,EAAS,GAQb,KAAKsP,GAAQqpC,EAAGv2C,EAAMc,EAAO0nE,EAAQA,EAAQjsE,OAAS,IAAM,SAC1DqB,EAASirE,GAASP,EAAQtoE,EAAMwoE,IAE5B5qE,EAAO,KAAOwqE,IAChB,OAAOxqE,EAKX,GAAIoC,EAAK87B,UAAYl+B,EAAO,KAAOuqE,GAAM,CAEvClmE,GAAU+J,EAAUhM,EAAK87B,SAASv/B,QAAU,GAAKgmB,EAEjDqmD,EAAeJ,EAAQvrE,OAAO+C,GAG9B,MAAOiC,GAAU,GAAKA,EAASjC,EAAK87B,SAASv/B,OAAQ,CAInD,GAFAosE,EAAYJ,EAAQvoE,EAAK87B,SAAS75B,GAASA,EAAQ2mE,EAAvCL,GAERI,EAAU,KAAOP,GACnB,OAAOO,EAGT1mE,EAC0B,kBAAjB0mE,EAAU,GAAkBA,EAAU,GAAK1mE,EAASsgB,CAC9D,CACF,CAED,OAAO3kB,CACR,CACF,CAzED2qE,EAAQ/F,EAAM,KAAM,GAApB+F,EA0ED,EAOL,SAASM,GAASrzE,GAChB,OAAIqC,MAAMC,QAAQtC,GACTA,EAGY,kBAAVA,EACF,CAAC0yE,GAAU1yE,GAGb,CAACA,EACT,CCrIM,MAAMkzE,GAcT,SAAUlG,EAAMt1D,EAAMo7D,EAASt8D,GAa7B,SAAS88D,EAAS9oE,EAAMwoE,GACtB,MAAMjpE,EAASipE,EAAQA,EAAQjsE,OAAS,GACxC,OAAO+rE,EACLtoE,EACAT,EAASA,EAAOu8B,SAASrwB,QAAQzL,GAAQ,KACzCT,EAEH,CAnBmB,oBAAT2N,GAA0C,oBAAZo7D,IACvCt8D,EAAUs8D,EACVA,EAAUp7D,EACVA,EAAO,MAGTm7D,GAAa7F,EAAMt1D,EAAM47D,EAAU98D,EAcpC,EC5CE,SAAS+8D,GAAsB/oE,EAAMsR,GAC1C,IAAI03D,GAAmB,EAcvB,OAVAN,GAAM1oE,GAAOA,IACX,GACG,UAAWA,GAAQ,WAAWkN,KAAKlN,EAAKxK,QAC3B,UAAdwK,EAAKE,KAGL,OADA8oE,GAAmB,EACZZ,EACR,IAGIzkC,UACH3jC,EAAKqE,OAASrE,EAAKqE,MAAQ,IAC3BhM,GAAS2H,KACRsR,EAAQ3B,QAAQs5D,QAAUD,GAEhC,CCnBM,SAASrV,GAAQ3zD,EAAM2C,EAAG2O,EAASqzD,GACxC,MAAMpiE,EAAOtD,KAAKS,IAAIT,KAAKC,IAAI,EAAGc,EAAKqE,OAAS,GAAI,GAC9CwgE,EAAUN,GAAMI,GAEtB,GAAIoE,GAAsB/oE,EAAMsR,GAAU,CACxC,MAAMi1C,EAAOj1C,EAAQsH,MAAM,iBACrBouD,EAAU11D,EAAQsH,MAAM,YACxBpjB,EAAQ6xE,GAAkBrnE,EAAMsR,EAAS,IAC1CuzD,EAAQ9jE,UACXwF,OAAQ,KACRC,MAAO,OAKT,OAHAwgE,IACAzgB,IAGE/wD,EACA,MACU,IAAT+M,EAAa,IAAM,KAAK0iE,OAEvBzvE,EAAM+G,QAGH0C,KAAKS,IAAIlK,EAAMolB,YAAY,MAAOplB,EAAMolB,YAAY,OAAS,GAGrE,CAED,MAAM+0C,EAAW,IAAIsV,OAAO1iE,GACtBgkD,EAAOj1C,EAAQsH,MAAM,cACrBouD,EAAU11D,EAAQsH,MAAM,YAM9BisD,EAAQ39C,KAAKyoC,EAAW,KAExB,IAAIn6D,EAAQ6xE,GAAkBrnE,EAAMsR,EAAS,CAC3C/K,OAAQ,KACRC,MAAO,QACJq+D,EAAQ9jE,YAqBb,MAlBI,SAASmM,KAAK1X,KAEhBA,EACE,MACAA,EAAM2c,WAAW,GAAG9Z,SAAS,IAAIi6D,cACjC,IACA98D,EAAMqH,MAAM,IAGhBrH,EAAQA,EAAQm6D,EAAW,IAAMn6D,EAAQm6D,EAErCr+C,EAAQ3B,QAAQu5D,WAClB1zE,GAAS,IAAMm6D,GAGjBqX,IACAzgB,IAEO/wD,CACR,CClEM,SAAS80C,GAAKtqC,GACnB,OAAOA,EAAKxK,OAAS,EACtB,CAKD,SAAS2zE,KACP,MAAO,GACR,CCLM,SAASnK,GAAMh/D,EAAM2C,EAAG2O,EAASqzD,GACtC,MAAMwC,EAAQD,GAAW51D,GACnBy1D,EAAmB,MAAVI,EAAgB,QAAU,aACnC5gB,EAAOj1C,EAAQsH,MAAM,SAC3B,IAAIouD,EAAU11D,EAAQsH,MAAM,SAC5B,MAAMisD,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAK,MAmDzB,OAlDA1xB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAK4kC,IAAK,CAACr+B,OAAQ/Q,EAAOgR,MAAO,OAAQq+D,EAAQ9jE,aAEjEvL,GAASqvE,EAAQ39C,KAAK,MAEtB8/C,KAIIhnE,EAAKyjE,KAAOzjE,EAAK6U,OAEnB,eAAe3H,KAAKlN,EAAKyjE,MAEzBuD,EAAU11D,EAAQsH,MAAM,sBACxBpjB,GAASqvE,EAAQ39C,KAAK,KACtB1xB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKyjE,IAAK,CAACl9D,OAAQ/Q,EAAOgR,MAAO,OAAQq+D,EAAQ9jE,aAEjEvL,GAASqvE,EAAQ39C,KAAK,OAGtB8/C,EAAU11D,EAAQsH,MAAM,kBACxBpjB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKyjE,IAAK,CACtBl9D,OAAQ/Q,EACRgR,MAAOxG,EAAK6U,MAAQ,IAAM,OACvBgwD,EAAQ9jE,cAKjBimE,IAEIhnE,EAAK6U,QACPmyD,EAAU11D,EAAQsH,MAAM,QAAUmuD,GAClCvxE,GAASqvE,EAAQ39C,KAAK,IAAMigD,GAC5B3xE,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAK6U,MAAO,CACxBtO,OAAQ/Q,EACRgR,MAAO2gE,KACJtC,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAKigD,GACtBH,KAGFxxE,GAASqvE,EAAQ39C,KAAK,KACtBq/B,IAEO/wD,CACR,CAKD,SAAS4zE,KACP,MAAO,GACR,CCjEM,SAASC,GAAerpE,EAAM2C,EAAG2O,EAASqzD,GAC/C,MAAMzkE,EAAOF,EAAK0jE,cACZnd,EAAOj1C,EAAQsH,MAAM,kBAC3B,IAAIouD,EAAU11D,EAAQsH,MAAM,SAC5B,MAAMisD,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAK,MACzB,MAAM0d,EAAM+gC,GAAKr0D,EAAStR,EAAK4kC,IAAK,CAClCr+B,OAAQ/Q,EACRgR,MAAO,OACJq+D,EAAQ9jE,YAEbvL,GAASqvE,EAAQ39C,KAAK0d,EAAM,MAE5BoiC,IAEA,MAAM5wC,EAAQ9kB,EAAQ8kB,MACtB9kB,EAAQ8kB,MAAQ,GAChB4wC,EAAU11D,EAAQsH,MAAM,aAKxB,MAAM2mD,EAAYoG,GAAKr0D,EAAS21D,GAAYjnE,GAAO,CACjDuG,OAAQ/Q,EACRgR,MAAO,OACJq+D,EAAQ9jE,YAeb,OAbAimE,IACA11D,EAAQ8kB,MAAQA,EAChBmwB,IAEa,SAATrmD,GAAoB0kC,GAAOA,IAAQ26B,EAEnB,aAATr/D,EAET1K,EAAQA,EAAMqH,MAAM,GAAI,GAExBrH,GAASqvE,EAAQ39C,KAAK,KALtB1xB,GAASqvE,EAAQ39C,KAAKq4C,EAAY,KAQ7B/pE,CACR,CAKD,SAAS8zE,KACP,MAAO,GACR,CClDM,SAASC,GAAWvpE,EAAM2C,EAAG2O,GAClC,IAAI9b,EAAQwK,EAAKxK,OAAS,GACtBm6D,EAAW,IACX7uD,GAAS,EAKb,MAAO,IAAIylE,OAAO,WAAa5W,EAAW,YAAYziD,KAAK1X,GACzDm6D,GAAY,IAMZ,WAAWziD,KAAK1X,KACd,WAAW0X,KAAK1X,IAAU,WAAW0X,KAAK1X,IAAW,QAAQ0X,KAAK1X,MAEpEA,EAAQ,IAAMA,EAAQ,KAUxB,QAASsL,EAAQwQ,EAAQs0D,OAAOrpE,OAAQ,CACtC,MAAM+oE,EAAUh0D,EAAQs0D,OAAO9kE,GACzBlL,EAAaywE,GAAef,GAElC,IAAIr8D,EAKJ,GAAKq8D,EAAQ7Y,QAEb,MAAQxjD,EAAQrT,EAAW+f,KAAKngB,GAAS,CACvC,IAAI8nE,EAAWr0D,EAAMnI,MAIY,KAA/BtL,EAAM2c,WAAWmrD,IACkB,KAAnC9nE,EAAM2c,WAAWmrD,EAAW,IAE5BA,IAGF9nE,EAAQA,EAAMqH,MAAM,EAAGygE,GAAY,IAAM9nE,EAAMqH,MAAMoM,EAAMnI,MAAQ,EACpE,CACF,CAED,OAAO6uD,EAAWn6D,EAAQm6D,CAC3B,CAKD,SAAS6Z,KACP,MAAO,GACR,CC/DM,SAASC,GAAqBzpE,EAAMsR,GACzC,MAAMutB,EAAMxmC,GAAS2H,GAErB,OAAO2jC,SACJryB,EAAQ3B,QAAQ+5D,cAEf1pE,EAAKyjE,MAEJzjE,EAAK6U,OAEN7U,EAAK87B,UACoB,IAAzB97B,EAAK87B,SAASv/B,QACY,SAA1ByD,EAAK87B,SAAS,GAAG57B,OAEhB2+B,IAAQ7+B,EAAKyjE,KAAO,UAAY5kC,IAAQ7+B,EAAKyjE,MAE9C,oBAAoBv2D,KAAKlN,EAAKyjE,OAG7B,iBAAiBv2D,KAAKlN,EAAKyjE,KAEjC,CCfM,SAAS3F,GAAK99D,EAAM2C,EAAG2O,EAASqzD,GACrC,MAAMwC,EAAQD,GAAW51D,GACnBy1D,EAAmB,MAAVI,EAAgB,QAAU,aACnCtC,EAAUN,GAAMI,GAEtB,IAAIpe,EAEAygB,EAEJ,GAAIyC,GAAqBzpE,EAAMsR,GAAU,CAEvC,MAAM8kB,EAAQ9kB,EAAQ8kB,MACtB9kB,EAAQ8kB,MAAQ,GAChBmwB,EAAOj1C,EAAQsH,MAAM,YACrB,IAAIpjB,EAAQqvE,EAAQ39C,KAAK,KAWzB,OAVA1xB,GAASqvE,EAAQ39C,KACfmgD,GAAkBrnE,EAAMsR,EAAS,CAC/B/K,OAAQ/Q,EACRgR,MAAO,OACJq+D,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAK,KACtBq/B,IACAj1C,EAAQ8kB,MAAQA,EACT5gC,CACR,CAED+wD,EAAOj1C,EAAQsH,MAAM,QACrBouD,EAAU11D,EAAQsH,MAAM,SACxB,IAAIpjB,EAAQqvE,EAAQ39C,KAAK,KAsDzB,OArDA1xB,GAASqvE,EAAQ39C,KACfmgD,GAAkBrnE,EAAMsR,EAAS,CAC/B/K,OAAQ/Q,EACRgR,MAAO,QACJq+D,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAK,MACtB8/C,KAIIhnE,EAAKyjE,KAAOzjE,EAAK6U,OAEnB,eAAe3H,KAAKlN,EAAKyjE,MAEzBuD,EAAU11D,EAAQsH,MAAM,sBACxBpjB,GAASqvE,EAAQ39C,KAAK,KACtB1xB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKyjE,IAAK,CAACl9D,OAAQ/Q,EAAOgR,MAAO,OAAQq+D,EAAQ9jE,aAEjEvL,GAASqvE,EAAQ39C,KAAK,OAGtB8/C,EAAU11D,EAAQsH,MAAM,kBACxBpjB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAKyjE,IAAK,CACtBl9D,OAAQ/Q,EACRgR,MAAOxG,EAAK6U,MAAQ,IAAM,OACvBgwD,EAAQ9jE,cAKjBimE,IAEIhnE,EAAK6U,QACPmyD,EAAU11D,EAAQsH,MAAM,QAAUmuD,GAClCvxE,GAASqvE,EAAQ39C,KAAK,IAAMigD,GAC5B3xE,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAStR,EAAK6U,MAAO,CACxBtO,OAAQ/Q,EACRgR,MAAO2gE,KACJtC,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAKigD,GACtBH,KAGFxxE,GAASqvE,EAAQ39C,KAAK,KAEtBq/B,IACO/wD,CACR,CAMD,SAASm0E,GAAS3pE,EAAM2C,EAAG2O,GACzB,OAAOm4D,GAAqBzpE,EAAMsR,GAAW,IAAM,GACpD,CC/FM,SAASs4D,GAAc5pE,EAAM2C,EAAG2O,EAASqzD,GAC9C,MAAMzkE,EAAOF,EAAK0jE,cACZnd,EAAOj1C,EAAQsH,MAAM,iBAC3B,IAAIouD,EAAU11D,EAAQsH,MAAM,SAC5B,MAAMisD,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAK,KACzB,MAAM3oB,EAAO8oE,GAAkBrnE,EAAMsR,EAAS,CAC5C/K,OAAQ/Q,EACRgR,MAAO,OACJq+D,EAAQ9jE,YAEbvL,GAASqvE,EAAQ39C,KAAK3oB,EAAO,MAE7ByoE,IAEA,MAAM5wC,EAAQ9kB,EAAQ8kB,MACtB9kB,EAAQ8kB,MAAQ,GAChB4wC,EAAU11D,EAAQsH,MAAM,aAKxB,MAAM2mD,EAAYoG,GAAKr0D,EAAS21D,GAAYjnE,GAAO,CACjDuG,OAAQ/Q,EACRgR,MAAO,OACJq+D,EAAQ9jE,YAeb,OAbAimE,IACA11D,EAAQ8kB,MAAQA,EAChBmwB,IAEa,SAATrmD,GAAoB3B,GAAQA,IAASghE,EAErB,aAATr/D,EAET1K,EAAQA,EAAMqH,MAAM,GAAI,GAExBrH,GAASqvE,EAAQ39C,KAAK,KALtB1xB,GAASqvE,EAAQ39C,KAAKq4C,EAAY,KAQ7B/pE,CACR,CAKD,SAASq0E,KACP,MAAO,GACR,CCvDM,SAASC,GAAYx4D,GAC1B,MAAMo+C,EAASp+C,EAAQ3B,QAAQo6D,QAAU,IAEzC,GAAe,MAAXra,GAA6B,MAAXA,GAA6B,MAAXA,EACtC,MAAM,IAAIr5D,MACR,gCACEq5D,EACA,qDAIN,OAAOA,CACR,CCVM,SAASsa,GAAiB14D,GAC/B,MAAMy4D,EAASD,GAAYx4D,GACrB24D,EAAc34D,EAAQ3B,QAAQs6D,YAEpC,IAAKA,EACH,MAAkB,MAAXF,EAAiB,IAAM,IAGhC,GAAoB,MAAhBE,GAAuC,MAAhBA,GAAuC,MAAhBA,EAChD,MAAM,IAAI5zE,MACR,gCACE4zE,EACA,0DAIN,GAAIA,IAAgBF,EAClB,MAAM,IAAI1zE,MACR,uBACE0zE,EACA,0BACAE,EACA,sBAIN,OAAOA,CACR,CC7BM,SAASC,GAAmB54D,GACjC,MAAMo+C,EAASp+C,EAAQ3B,QAAQw6D,eAAiB,IAEhD,GAAe,MAAXza,GAA6B,MAAXA,EACpB,MAAM,IAAIr5D,MACR,gCACEq5D,EACA,sDAIN,OAAOA,CACR,CCVM,SAAS0a,GAAwB94D,GACtC,MAAM64D,EAAgBD,GAAmB54D,GACnC+4D,EAAqB/4D,EAAQ3B,QAAQ06D,mBAE3C,IAAKA,EACH,MAAyB,MAAlBF,EAAwB,IAAM,IAGvC,GAA2B,MAAvBE,GAAqD,MAAvBA,EAChC,MAAM,IAAIh0E,MACR,gCACEg0E,EACA,iEAIN,GAAIA,IAAuBF,EACzB,MAAM,IAAI9zE,MACR,8BACE8zE,EACA,iCACAE,EACA,sBAIN,OAAOA,CACR,CC7BM,SAASC,GAAUh5D,GACxB,MAAMo+C,EAASp+C,EAAQ3B,QAAQqB,MAAQ,IAEvC,GAAe,MAAX0+C,GAA6B,MAAXA,GAA6B,MAAXA,EACtC,MAAM,IAAIr5D,MACR,gCACEq5D,EACA,mDAIN,OAAOA,CACR,CCLM,SAASpL,GAAKtkD,EAAMT,EAAQ+R,EAASqzD,GAC1C,MAAMpe,EAAOj1C,EAAQsH,MAAM,QACrB2xD,EAAgBj5D,EAAQi5D,cAE9B,IAAIR,EAAS/pE,EAAK2jE,QAAUuG,GAAmB54D,GAAWw4D,GAAYx4D,GAEtE,MAAM24D,EAAcjqE,EAAK2jE,QACrByG,GAAwB94D,GACxB04D,GAAiB14D,GACf0zD,EAAiB1zD,EAAQ0zD,eAC/B,IAAIwF,GAAqB,EAczB,GAXEjrE,IAECS,EAAK2jE,QACFryD,EAAQ3B,QAAQ06D,mBAChB/4D,EAAQ3B,QAAQs6D,cACpBjF,GACA+E,IAAW/E,IAEXwF,GAAqB,IAGlBxqE,EAAK2jE,QAAS,CACjB,MAAM8G,EAAgBzqE,EAAK87B,SAAW97B,EAAK87B,SAAS,QAAKr/B,EAqCzD,GAzBc,MAAXstE,GAA6B,MAAXA,IAEnBU,GACEA,EAAc3uC,UAAa2uC,EAAc3uC,SAAS,IAER,SAA5CxqB,EAAQ8kB,MAAM9kB,EAAQ8kB,MAAM75B,OAAS,IACO,aAA5C+U,EAAQ8kB,MAAM9kB,EAAQ8kB,MAAM75B,OAAS,IACO,SAA5C+U,EAAQ8kB,MAAM9kB,EAAQ8kB,MAAM75B,OAAS,IACO,aAA5C+U,EAAQ8kB,MAAM9kB,EAAQ8kB,MAAM75B,OAAS,IAEiB,IAAtD+U,EAAQszD,WAAWtzD,EAAQszD,WAAWroE,OAAS,IACO,IAAtD+U,EAAQszD,WAAWtzD,EAAQszD,WAAWroE,OAAS,IACO,IAAtD+U,EAAQszD,WAAWtzD,EAAQszD,WAAWroE,OAAS,KAE/CiuE,GAAqB,GAWnBF,GAAUh5D,KAAay4D,GAAUU,EAAe,CAClD,IAAI3pE,GAAS,EAEb,QAASA,EAAQd,EAAK87B,SAASv/B,OAAQ,CACrC,MAAMmrD,EAAO1nD,EAAK87B,SAASh7B,GAE3B,GACE4mD,GACc,aAAdA,EAAKxnD,MACLwnD,EAAK5rB,UACL4rB,EAAK5rB,SAAS,IACY,kBAA1B4rB,EAAK5rB,SAAS,GAAG57B,KACjB,CACAsqE,GAAqB,EACrB,KACD,CACF,CACF,CACF,CAEGA,IACFT,EAASE,GAGX34D,EAAQi5D,cAAgBR,EACxB,MAAMv0E,EAAQkvE,GAAc1kE,EAAMsR,EAASqzD,GAI3C,OAHArzD,EAAQ0zD,eAAiB+E,EACzBz4D,EAAQi5D,cAAgBA,EACxBhkB,IACO/wD,CACR,CCnGM,SAASk1E,GAAoBp5D,GAClC,MAAMJ,EAAQI,EAAQ3B,QAAQg7D,gBAAkB,MAIhD,GAAc,IAAVz5D,GAAyB,MAAVA,EACjB,MAAO,MAGT,GAAc,QAAVA,GAA6B,QAAVA,GAA6B,UAAVA,EACxC,MAAM,IAAI7a,MACR,gCACE6a,EACA,qEAIN,OAAOA,CACR,CCTM,SAAS+tD,GAASj/D,EAAMT,EAAQ+R,EAASqzD,GAC9C,MAAMgG,EAAiBD,GAAoBp5D,GAC3C,IAAIy4D,EAASz4D,EAAQi5D,eAAiBT,GAAYx4D,GAG9C/R,GAA0B,SAAhBA,EAAOW,MAAmBX,EAAOokE,UAC7CoG,GAC2B,kBAAjBxqE,EAAOE,OAAsBF,EAAOE,OAAS,EACjDF,EAAOE,MACP,KACqC,IAAxC6R,EAAQ3B,QAAQi7D,oBACb,EACArrE,EAAOu8B,SAASrwB,QAAQzL,IAC5B+pE,GAGJ,IAAItsE,EAAOssE,EAAOxtE,OAAS,GAGN,QAAnBouE,GACoB,UAAnBA,IACGprE,GAA0B,SAAhBA,EAAOW,MAAmBX,EAAOqkE,QAAW5jE,EAAK4jE,WAE/DnmE,EAA6B,EAAtBwB,KAAKy9D,KAAKj/D,EAAO,IAG1B,MAAMonE,EAAUN,GAAMI,GACtBE,EAAQ39C,KAAK6iD,EAAS,IAAI9E,OAAOxnE,EAAOssE,EAAOxtE,SAC/CsoE,EAAQ94D,MAAMtO,GACd,MAAM8oD,EAAOj1C,EAAQsH,MAAM,YACrBpjB,EAAQ2vE,GACZT,GAAc1kE,EAAMsR,EAASuzD,EAAQ9jE,WACrChJ,GAIF,OAFAwuD,IAEO/wD,EAGP,SAASuC,EAAI+wD,EAAMhoD,EAAOskE,GACxB,OAAItkE,GACMskE,EAAQ,GAAK,IAAIH,OAAOxnE,IAASqrD,GAGnCsc,EAAQ2E,EAASA,EAAS,IAAI9E,OAAOxnE,EAAOssE,EAAOxtE,SAAWusD,CACvE,CACF,CCrDM,SAAS8K,GAAU5zD,EAAM2C,EAAG2O,EAASqzD,GAC1C,MAAMpe,EAAOj1C,EAAQsH,MAAM,aACrBouD,EAAU11D,EAAQsH,MAAM,YACxBpjB,EAAQ6xE,GAAkBrnE,EAAMsR,EAASqzD,GAG/C,OAFAqC,IACAzgB,IACO/wD,CACR,CCPM,SAASygC,GAAKj2B,EAAM2C,EAAG2O,EAASqzD,GACrC,OAAOD,GAAc1kE,EAAMsR,EAASqzD,EACrC,CCJM,SAASkG,GAAYv5D,GAC1B,MAAMo+C,EAASp+C,EAAQ3B,QAAQkwD,QAAU,IAEzC,GAAe,MAAXnQ,GAA6B,MAAXA,EACpB,MAAM,IAAIr5D,MACR,iCACEq5D,EACA,gDAIN,OAAOA,CACR,CCFM,SAASmQ,GAAO7/D,EAAM2C,EAAG2O,EAASqzD,GACvC,MAAMjV,EAASmb,GAAYv5D,GACrBi1C,EAAOj1C,EAAQsH,MAAM,UACrBisD,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAKwoC,EAASA,GAUlC,OATAl6D,GAASqvE,EAAQ39C,KACfmgD,GAAkBrnE,EAAMsR,EAAS,CAC/B/K,OAAQ/Q,EACRgR,MAAOkpD,KACJmV,EAAQ9jE,aAGfvL,GAASqvE,EAAQ39C,KAAKwoC,EAASA,GAC/BnJ,IACO/wD,CACR,CAMD,SAASs1E,GAAWnoE,EAAG+iE,EAAIp0D,GACzB,OAAOA,EAAQ3B,QAAQkwD,QAAU,GAClC,CC/BM,SAASthE,GAAKyB,EAAM2C,EAAG2O,EAASqzD,GACrC,OAAOgB,GAAKr0D,EAAStR,EAAKxK,MAAOmvE,EAClC,CCJM,SAASoG,GAAoBz5D,GAClC,MAAM05D,EAAa15D,EAAQ3B,QAAQs7D,gBAAkB,EAErD,GAAID,EAAa,EACf,MAAM,IAAI30E,MACR,2CACE20E,EACA,wDAIN,OAAOA,CACR,CCTM,SAASxb,GAAc7sD,EAAG+iE,EAAIp0D,GACnC,MAAM9b,GACJ80E,GAAUh5D,IAAYA,EAAQ3B,QAAQu7D,WAAa,IAAM,KACzDjG,OAAO8F,GAAoBz5D,IAE7B,OAAOA,EAAQ3B,QAAQu7D,WAAa11E,EAAMqH,MAAM,GAAI,GAAKrH,CAC1D,CrBbD80C,GAAKg9B,KAAO6B,GCIZnK,GAAMsI,KAAO8B,GCAbC,GAAe/B,KAAOgC,GCFtBC,GAAWjC,KAAOkC,GEKlB1L,GAAKwJ,KAAOqC,GCFZC,GAActC,KAAOuC,GYDrBhK,GAAOyH,KAAOwD,GIWP,MAAM/F,GAAS,CACpBlyD,WADoB,GAEpBs4D,MAAOvM,GACPjoE,KAHoB,GAIpB47D,WAJoB,GAKpBoM,SALoB,GAMpBC,UANoB,GAOpBjL,QAPoB,GAQpBrpB,KARoB,GASpB00B,MAToB,GAUpBqK,eAVoB,GAWpBE,WAXoB,GAYpBzL,KAZoB,GAapB8L,cAboB,GAcpBtlB,KAdoB,GAepB2a,SAfoB,GAgBpBrL,UAhBoB,GAiBpB39B,KAjBoB,GAkBpB4pC,OAlBoB,GAmBpBthE,KAnBoB,GAoBpBixD,cAAaA,IChCFt3D,GAAO,CAACkzE,IAGrB,SAASA,GAAa13C,EAAMC,EAAOp0B,EAAQ+R,GAEzC,GACiB,SAAfqiB,EAAMzzB,MACN+lE,GAAqBtyC,EAAOriB,KACb,SAAdoiB,EAAKxzB,MACHwzB,EAAKxzB,OAASyzB,EAAMzzB,MAAQ+lE,GAAqBvyC,EAAMpiB,IAE1D,OAAO,EAIT,GACgB,SAAdoiB,EAAKxzB,MACLwzB,EAAKxzB,OAASyzB,EAAMzzB,MACpByjC,QAAQjQ,EAAKiwC,WAAahgC,QAAQhQ,EAAMgwC,YACtCjwC,EAAKiwC,QACHryD,EAAQ3B,QAAQ06D,mBAChB/4D,EAAQ3B,QAAQs6D,aAEpB,OAAO,EAKT,GAAI,WAAY1qE,GAAmC,mBAAlBA,EAAOqkE,OAAsB,CAC5D,GACgB,cAAdlwC,EAAKxzB,OAEJwzB,EAAKxzB,OAASyzB,EAAMzzB,MACJ,eAAfyzB,EAAMzzB,MAEU,YAAfyzB,EAAMzzB,MAAsB6oE,GAAsBp1C,EAAOriB,IAE5D,OAGF,OAAO/R,EAAOqkE,OAAS,EAAI,CAC5B,CACF,CCxCD,MAAMyH,GAAoB,CACxB,WACA,qBACA,iBACA,YACA,aACA,mBAIWzF,GAAS,CACpB,CAACC,UAAW,KAAMr/D,MAAO,WAAYg/D,YAAa,YAClD,CAACK,UAAW,KAAMt/D,OAAQ,WAAYi/D,YAAa,YACnD,CACEK,UAAW,KACXL,YAAa,CAAC,4BAA6B,wBAE7C,CACEK,UAAW,KACXL,YAAa,CACX,4BACA,sBACA,4BACA,sBACA,qBACA,eAGJ,CACEK,UAAW,KACXL,YAAa,CACX,4BACA,sBACA,4BACA,sBACA,qBACA,eAGJ,CAACK,UAAW,IAAKr/D,MAAO,WAAYg/D,YAAa,YACjD,CAACK,UAAW,IAAKt/D,OAAQ,WAAYi/D,YAAa,YAClD,CACEK,UAAW,IACXL,YAAa,CAAC,4BAA6B,wBAI7C,CACEK,UAAW,IACXr/D,MAAO,MACPg/D,YAAa,WACbC,eAAgB4F,IAGlB,CAACxF,UAAW,IAAKL,YAAa,cAE9B,CAAC/Y,SAAS,EAAMoZ,UAAW,KAC3B,CAACA,UAAW,IAAKL,YAAa,aAAch/D,MAAO,gBAGnD,CAACq/D,UAAW,IAAKr/D,MAAO,YAAag/D,YAAa,YAElD,CAACK,UAAW,IAAKL,YAAa,mBAE9B,CAACK,UAAW,IAAKL,YAAa,kBAE9B,CACEj/D,OAAQ,MACRs/D,UAAW,IACXL,YAAa,WACbC,eAAgB4F,IAIlB,CAAC5e,SAAS,EAAMlmD,OAAQ,OAAQs/D,UAAW,KAC3C,CAACA,UAAW,IAAKL,YAAa,kBAE9B,CAAC/Y,SAAS,EAAMoZ,UAAW,KAC3B,CAACA,UAAW,IAAKL,YAAa,WAAYC,eAAgB4F,IAE1D,CAAC5e,SAAS,EAAMoZ,UAAW,KAG3B,CAACpZ,SAAS,EAAMoZ,UAAW,KAE3B,CAACpZ,SAAS,EAAMlmD,OAAQ,OAAQs/D,UAAW,IAAKr/D,MAAO,mBAOvD,CAACimD,SAAS,EAAMoZ,UAAW,IAAKr/D,MAAO,eACvC,CACEq/D,UAAW,IACXr/D,MAAO,cACPg/D,YAAa,WACbC,eAAgB4F,IAElB,CAACxF,UAAW,IAAKL,YAAa,sBAE9B,CAAC/Y,SAAS,EAAMoZ,UAAW,KAG3B,CAACpZ,SAAS,EAAMoZ,UAAW,KAC3B,CAACA,UAAW,IAAKL,YAAa,sBAG9B,CAAC/Y,SAAS,EAAMoZ,UAAW,KAC3B,CAACA,UAAW,IAAKL,YAAa,WAAYC,eAAgB4F,IAC1D,CAACxF,UAAW,IAAKL,YAAa,CAAC,QAAS,cAIxC,CAACK,UAAW,KAAMr/D,MAAO,WAAYg/D,YAAa,YAElD,CAACK,UAAW,IAAKL,YAAa,CAAC,QAAS,cAGxC,CAAC/Y,SAAS,EAAMoZ,UAAW,KAC3B,CAACA,UAAW,IAAKL,YAAa,WAAYC,eAAgB4F,IAG1D,CAAC5e,SAAS,EAAMoZ,UAAW,KAC3B,CACEA,UAAW,IACXL,YAAa,CAAC,4BAA6B,8BAE7C,CAACK,UAAW,IAAKL,YAAa,WAAYC,eAAgB4F,IAI1D,CAAC5e,SAAS,EAAMoZ,UAAW,MC1HtB,SAASyF,GAAW9I,EAAM7yD,EAAU,CAAC,GAG1C,MAAM2B,EAAU,CACdsH,QACAwd,MAAO,GACPwvC,OAAQ,GACR1tE,KAAM,GACNu0C,SAAU,CAAC,EACX98B,QAAS,CAAC,EACVi1D,WAAY,IAGdlH,GAAUpsD,EAAS,CAACs0D,OAAD,GAAS1tE,KAAT,GAAeu0C,SAAUs4B,KAC5CrH,GAAUpsD,EAAS3B,GAEf2B,EAAQ3B,QAAQ47D,kBAClB7N,GAAUpsD,EAAS,CAACpZ,KAAM,CAACszE,MAI7Bl6D,EAAQyzD,OAASb,GAAO,OAAQ,CAC9BE,WAEAC,WAEA53B,SAAUn7B,EAAQm7B,WAGpB,IAAI7uC,EAAS0T,EAAQyzD,OAAOvC,EAAM,KAAMlxD,EAAS,CAC/C/K,OAAQ,KACRC,MAAO,KACPmmB,IAAK,CAACm8B,KAAM,EAAGkE,OAAQ,GACvByX,UAAW,IAWb,OAPE7mE,GACyC,KAAzCA,EAAOuU,WAAWvU,EAAOrB,OAAS,IACO,KAAzCqB,EAAOuU,WAAWvU,EAAOrB,OAAS,KAElCqB,GAAU,MAGLA,EAGP,SAASgb,EAAMliB,GAEb,OADA4a,EAAQ8kB,MAAMt5B,KAAKpG,GACZ6vD,EAEP,SAASA,IACPj1C,EAAQ8kB,MAAM5pB,KACf,CACF,CACF,CAMD,SAAS43D,GAAQ5uE,GACf,MAAM,IAAIa,MAAM,wBAA0Bb,EAAQ,mBACnD,CAMD,SAAS6uE,GAAQrkE,GACf,MAAM,IAAI3J,MAAM,+BAAiC2J,EAAKE,KAAO,IAC9D,CAGD,SAASsrE,GAAe93C,EAAMC,GAE5B,GAAkB,eAAdD,EAAKxzB,MAAyBwzB,EAAKxzB,OAASyzB,EAAMzzB,KACpD,OAAO,CAEV,CC1Fc,SAASurE,GAAgB97D,GAEtC,MAAM8tD,EAAY+E,IAEhB,MAAMwB,EAAmCjvE,KAAK49C,KAAK,YAEnD,OAAO24B,GACL9I,EACA16D,OAAOm4C,OAAO,CAAC,EAAG+jB,EAAUr0D,EAAS,CAInCg1C,WAEI5vD,KAAK49C,KAAK,yBACP,KATX,EAcF7qC,OAAOm4C,OAAOlrD,KAAM,CAAC22E,SAAUjO,GAChC,CC5BD,UCKO,SAASkO,GAAKC,GACnB,GAAIA,EACF,MAAMA,CAET,C,0BCXc,SAASC,GAAcr2E,GACrC,GAAqB,kBAAVA,GAAgC,OAAVA,EAChC,OAAO,EAGR,MAAM6G,EAAYyL,OAAOu2C,eAAe7oD,GACxC,OAAsB,OAAd6G,GAAsBA,IAAcyL,OAAOzL,WAAkD,OAArCyL,OAAOu2C,eAAehiD,OAA0B3B,OAAOoxE,eAAet2E,MAAYkF,OAAOqxE,YAAYv2E,EACrK,CCUM,SAASw2E,KAEd,MAAMC,EAAM,GAENC,EAAW,CAACjtB,MAAKnkD,OAEvB,OAAOoxE,EAGP,SAASjtB,KAAOhlD,GACd,IAAIkyE,GAAmB,EAEvB,MAAMz2E,EAAWuE,EAAOuS,MAExB,GAAwB,oBAAb9W,EACT,MAAM,IAAI02E,UAAU,2CAA6C12E,GAWnE,SAASqR,EAAK6kE,KAAUz3D,GACtB,MAAMgwD,EAAK8H,IAAME,GACjB,IAAIrrE,GAAS,EAEb,GAAI8qE,EACFl2E,EAASk2E,OADX,CAMA,QAAS9qE,EAAQ7G,EAAOsC,OACA,OAAlB4X,EAAOrT,SAAqCrE,IAAlB0X,EAAOrT,KACnCqT,EAAOrT,GAAS7G,EAAO6G,IAK3B7G,EAASka,EAGLgwD,EACFzuD,GAAKyuD,EAAIp9D,EAAT2O,IAAkBvB,GAElBze,EAAS,QAASye,EAhBnB,CAkBF,CAjCDpN,EAAK,QAAS9M,EAkCf,CAGD,SAASa,EAAIuxE,GACX,GAA0B,oBAAfA,EACT,MAAM,IAAID,UACR,+CAAiDC,GAKrD,OADAJ,EAAInvE,KAAKuvE,GACFH,CACR,CACF,CAUM,SAASx2D,GAAK42D,EAAY52E,GAE/B,IAAIy3D,EAEJ,OAAO5hB,EAQP,SAASA,KAAWiZ,GAClB,MAAM+nB,EAAoBD,EAAW/vE,OAASioD,EAAWjoD,OAEzD,IAAIqB,EAEA2uE,GACF/nB,EAAW1nD,KAAK7B,GAGlB,IACE2C,EAAS0uE,EAAWprD,MAAMnsB,KAAMyvD,EAajC,CAZC,MAAOonB,GACP,MAAMY,EAAkCZ,EAMxC,GAAIW,GAAqBpf,EACvB,MAAMqf,EAGR,OAAOvxE,EAAKuxE,EACb,CAEID,IACC3uE,aAAkBxC,QACpBwC,EAAO6uE,KAAKA,EAAMxxE,GACT2C,aAAkBvH,MAC3B4E,EAAK2C,GAEL6uE,EAAK7uE,GAGV,CAMD,SAAS3C,EAAK2wE,KAAUz3D,GACjBg5C,IACHA,GAAS,EACTz3D,EAASk2E,KAAUz3D,GAEtB,CAOD,SAASs4D,EAAKj3E,GACZyF,EAAK,KAAMzF,EACZ,CACF,CCtJM,MAAMk3E,WAAqBr2E,MAShCC,YAAYq2E,EAAQvvE,EAAO6oC,GAEzB,MAAM/rB,EAAQ,CAAC,KAAM,MAErB,IAAIojD,EAAW,CAEb79D,MAAO,CAACqpD,KAAM,KAAMkE,OAAQ,MAE5BxtD,IAAK,CAACspD,KAAM,KAAMkE,OAAQ,OAU5B,GAPAv2D,QAEqB,kBAAV2G,IACT6oC,EAAS7oC,EACTA,OAAQX,GAGY,kBAAXwpC,EAAqB,CAC9B,MAAMnlC,EAAQmlC,EAAOx6B,QAAQ,MAEd,IAAX3K,EACFoZ,EAAM,GAAK+rB,GAEX/rB,EAAM,GAAK+rB,EAAOppC,MAAM,EAAGiE,GAC3BoZ,EAAM,GAAK+rB,EAAOppC,MAAMiE,EAAQ,GAEnC,CAEG1D,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAMkgE,WACRA,EAAWlgE,EAAMkgE,UAIZ,UAAWlgE,GAAS,QAASA,EACpCkgE,EAAWlgE,GAGJ,SAAUA,GAAS,WAAYA,KACtCkgE,EAAS79D,MAAQrC,IAKrBrI,KAAK2B,KAAO2mE,GAAkBjgE,IAAU,MACxCrI,KAAK8rB,QAA4B,kBAAX8rD,EAAsBA,EAAO9rD,QAAU8rD,EAC7D53E,KAAKqhC,MAA0B,kBAAXu2C,EAAsBA,EAAOv2C,MAAQ,GAMzDrhC,KAAK43E,OAAS53E,KAAK8rB,QAMnB9rB,KAAK63E,MAKL73E,KAAK+zD,KAAOwU,EAAS79D,MAAMqpD,KAK3B/zD,KAAKi4D,OAASsQ,EAAS79D,MAAMutD,OAK7Bj4D,KAAKgxE,OAAS7rD,EAAM,GAKpBnlB,KAAK83E,OAAS3yD,EAAM,GAMpBnlB,KAAKuoE,SAAWA,EAYhBvoE,KAAK+3E,OAML/3E,KAAKixE,SAKLjxE,KAAKg4E,KAKLh4E,KAAK0uE,IAKL1uE,KAAKi4E,IAEN,EAGHN,GAAarwE,UAAU0wE,KAAO,GAC9BL,GAAarwE,UAAU3F,KAAO,GAC9Bg2E,GAAarwE,UAAUswE,OAAS,GAChCD,GAAarwE,UAAUwkB,QAAU,GACjC6rD,GAAarwE,UAAU+5B,MAAQ,GAC/Bs2C,GAAarwE,UAAUuwE,MAAQ,KAC/BF,GAAarwE,UAAU2wD,OAAS,KAChC0f,GAAarwE,UAAUysD,KAAO,KAC9B4jB,GAAarwE,UAAU0pE,OAAS,KAChC2G,GAAarwE,UAAUwwE,OAAS,KAChCH,GAAarwE,UAAUihE,SAAW,KCtG3B,MAAMp3D,GAAO,CAAC+mE,YAAUC,WAASC,WAASj1E,KAA7B,GAAmCk1E,IAAK,KAS5D,SAASH,GAAS/mE,EAAMmnE,GACtB,QAAY5wE,IAAR4wE,GAAoC,kBAARA,EAC9B,MAAM,IAAIjB,UAAU,mCAGtBkB,GAAWpnE,GACX,IAIIqnE,EAJA9tE,EAAQ,EACRD,GAAO,EACPsB,EAAQoF,EAAK3J,OAIjB,QAAYE,IAAR4wE,GAAoC,IAAfA,EAAI9wE,QAAgB8wE,EAAI9wE,OAAS2J,EAAK3J,OAAQ,CACrE,MAAOuE,IACL,GAA+B,KAA3BoF,EAAKiM,WAAWrR,IAGlB,GAAIysE,EAAc,CAChB9tE,EAAQqB,EAAQ,EAChB,KACD,OACQtB,EAAM,IAGf+tE,GAAe,EACf/tE,EAAMsB,EAAQ,GAIlB,OAAOtB,EAAM,EAAI,GAAK0G,EAAKrJ,MAAM4C,EAAOD,EACzC,CAED,GAAI6tE,IAAQnnE,EACV,MAAO,GAGT,IAAIsnE,GAAoB,EACpBC,EAAWJ,EAAI9wE,OAAS,EAE5B,MAAOuE,IACL,GAA+B,KAA3BoF,EAAKiM,WAAWrR,IAGlB,GAAIysE,EAAc,CAChB9tE,EAAQqB,EAAQ,EAChB,KACD,OAEG0sE,EAAmB,IAGrBD,GAAe,EACfC,EAAmB1sE,EAAQ,GAGzB2sE,GAAY,IAEVvnE,EAAKiM,WAAWrR,KAAWusE,EAAIl7D,WAAWs7D,KACxCA,EAAW,IAGbjuE,EAAMsB,IAKR2sE,GAAY,EACZjuE,EAAMguE,IAYd,OANI/tE,IAAUD,EACZA,EAAMguE,EACGhuE,EAAM,IACfA,EAAM0G,EAAK3J,QAGN2J,EAAKrJ,MAAM4C,EAAOD,EAC1B,CAMD,SAAS0tE,GAAQhnE,GAGf,GAFAonE,GAAWpnE,GAES,IAAhBA,EAAK3J,OACP,MAAO,IAGT,IAGImxE,EAHAluE,GAAO,EACPsB,EAAQoF,EAAK3J,OAKjB,QAASuE,EACP,GAA+B,KAA3BoF,EAAKiM,WAAWrR,IAClB,GAAI4sE,EAAgB,CAClBluE,EAAMsB,EACN,KACD,OACS4sE,IAEVA,GAAiB,GAIrB,OAAOluE,EAAM,EACc,KAAvB0G,EAAKiM,WAAW,GACd,IACA,IACM,IAAR3S,GAAoC,KAAvB0G,EAAKiM,WAAW,GAC7B,KACAjM,EAAKrJ,MAAM,EAAG2C,EACnB,CAMD,SAAS2tE,GAAQjnE,GACfonE,GAAWpnE,GAEX,IASIwnE,EATA5sE,EAAQoF,EAAK3J,OAEbiD,GAAO,EACPmuE,EAAY,EACZC,GAAY,EAGZC,EAAc,EAIlB,MAAO/sE,IAAS,CACd,MAAMnK,EAAOuP,EAAKiM,WAAWrR,GAE7B,GAAa,KAATnK,EAWA6I,EAAM,IAGRkuE,GAAiB,EACjBluE,EAAMsB,EAAQ,GAGH,KAATnK,EAEEi3E,EAAW,EACbA,EAAW9sE,EACc,IAAhB+sE,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAzBf,GAAIH,EAAgB,CAClBC,EAAY7sE,EAAQ,EACpB,KACD,CAwBJ,CAED,OACE8sE,EAAW,GACXpuE,EAAM,GAEU,IAAhBquE,GAEiB,IAAhBA,GAAqBD,IAAapuE,EAAM,GAAKouE,IAAaD,EAAY,EAEhE,GAGFznE,EAAKrJ,MAAM+wE,EAAUpuE,EAC7B,CAMD,SAAStH,MAAQ41E,GACf,IAEIhsE,EAFAhB,GAAS,EAIb,QAASA,EAAQgtE,EAASvxE,OACxB+wE,GAAWQ,EAAShtE,IAEhBgtE,EAAShtE,KACXgB,OACarF,IAAXqF,EAAuBgsE,EAAShtE,GAASgB,EAAS,IAAMgsE,EAAShtE,IAIvE,YAAkBrE,IAAXqF,EAAuB,IAAM6hD,GAAU7hD,EAC/C,CASD,SAAS6hD,GAAUz9C,GACjBonE,GAAWpnE,GAEX,MAAM6nE,EAAkC,KAAvB7nE,EAAKiM,WAAW,GAGjC,IAAI3c,EAAQw4E,GAAgB9nE,GAAO6nE,GAUnC,OARqB,IAAjBv4E,EAAM+G,QAAiBwxE,IACzBv4E,EAAQ,KAGNA,EAAM+G,OAAS,GAA0C,KAArC2J,EAAKiM,WAAWjM,EAAK3J,OAAS,KACpD/G,GAAS,KAGJu4E,EAAW,IAAMv4E,EAAQA,CACjC,CASD,SAASw4E,GAAgB9nE,EAAM+nE,GAC7B,IAMIt3E,EAEAu3E,EARAtwE,EAAS,GACTuwE,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPvtE,GAAS,EAMb,QAASA,GAASoF,EAAK3J,OAAQ,CAC7B,GAAIuE,EAAQoF,EAAK3J,OACf5F,EAAOuP,EAAKiM,WAAWrR,OAClB,IAAa,KAATnK,EACT,MAEAA,EAAO,EACR,CAED,GAAa,KAATA,EAAuB,CACzB,GAAIy3E,IAActtE,EAAQ,GAAc,IAATutE,QAExB,GAAID,IAActtE,EAAQ,GAAc,IAATutE,EAAY,CAChD,GACEzwE,EAAOrB,OAAS,GACM,IAAtB4xE,GACyC,KAAzCvwE,EAAOuU,WAAWvU,EAAOrB,OAAS,IACO,KAAzCqB,EAAOuU,WAAWvU,EAAOrB,OAAS,GAElC,GAAIqB,EAAOrB,OAAS,GAGlB,GAFA2xE,EAAiBtwE,EAAOgd,YAAY,KAEhCszD,IAAmBtwE,EAAOrB,OAAS,EAAG,CACpC2xE,EAAiB,GACnBtwE,EAAS,GACTuwE,EAAoB,IAEpBvwE,EAASA,EAAOf,MAAM,EAAGqxE,GACzBC,EAAoBvwE,EAAOrB,OAAS,EAAIqB,EAAOgd,YAAY,MAG7DwzD,EAAYttE,EACZutE,EAAO,EACP,QACD,OACI,GAAIzwE,EAAOrB,OAAS,EAAG,CAC5BqB,EAAS,GACTuwE,EAAoB,EACpBC,EAAYttE,EACZutE,EAAO,EACP,QACD,CAGCJ,IACFrwE,EAASA,EAAOrB,OAAS,EAAIqB,EAAS,MAAQ,KAC9CuwE,EAAoB,EAEvB,MACKvwE,EAAOrB,OAAS,EAClBqB,GAAU,IAAMsI,EAAKrJ,MAAMuxE,EAAY,EAAGttE,GAE1ClD,EAASsI,EAAKrJ,MAAMuxE,EAAY,EAAGttE,GAGrCqtE,EAAoBrtE,EAAQstE,EAAY,EAG1CA,EAAYttE,EACZutE,EAAO,CACR,MAAmB,KAAT13E,GAAyB03E,GAAQ,EAC1CA,IAEAA,GAAQ,CAEX,CAED,OAAOzwE,CACR,CAKD,SAAS0vE,GAAWpnE,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAIkmE,UACR,mCAAqCt1E,KAAKC,UAAUmP,GAGzD,CCpYM,MAAMooE,GAAO,CAACC,QAErB,SAASA,KACP,MAAO,GACR,CCgBM,SAASC,GAAMC,GACpB,OACoB,OAAlBA,GACyB,kBAAlBA,GAEPA,EAAcC,MAEdD,EAAcxoC,MAEjB,CCvBM,SAAS0oC,GAAUzoE,GACxB,GAAoB,kBAATA,EACTA,EAAO,IAAI0oE,IAAI1oE,QACV,IAAKsoE,GAAMtoE,GAAO,CAEvB,MAAM0lE,EAAQ,IAAIQ,UAChB,+EACElmE,EACA,KAGJ,MADA0lE,EAAMj1E,KAAO,uBACPi1E,CACP,CAED,GAAsB,UAAlB1lE,EAAK2oE,SAAsB,CAE7B,MAAMjD,EAAQ,IAAIQ,UAAU,kCAE5B,MADAR,EAAMj1E,KAAO,yBACPi1E,CACP,CAED,OAAOkD,GAAoB5oE,EAC5B,CAKD,SAAS4oE,GAAoBrL,GAC3B,GAAqB,KAAjBA,EAAIsL,SAAiB,CAEvB,MAAMnD,EAAQ,IAAIQ,UAChB,wDAGF,MADAR,EAAMj1E,KAAO,4BACPi1E,CACP,CAED,MAAMoD,EAAWvL,EAAIuL,SACrB,IAAIluE,GAAS,EAEb,QAASA,EAAQkuE,EAASzyE,OACxB,GACiC,KAA/ByyE,EAAS78D,WAAWrR,IACe,KAAnCkuE,EAAS78D,WAAWrR,EAAQ,GAC5B,CACA,MAAMmuE,EAAQD,EAAS78D,WAAWrR,EAAQ,GAC1C,GAAc,KAAVmuE,GAAoC,MAAVA,EAAyB,CAErD,MAAMrD,EAAQ,IAAIQ,UAChB,uDAGF,MADAR,EAAMj1E,KAAO,4BACPi1E,CACP,CACF,CAGH,OAAOsD,mBAAmBF,EAC3B,CCVD,MAAMG,GAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WAE1D,MAAMC,GAkBX94E,YAAYd,GAEV,IAAIma,EAMFA,EAJGna,EAEuB,kBAAVA,GAAsB++D,GAAO/+D,GAEnC,CAACA,SACFg5E,GAAMh5E,GACL,CAAC0Q,KAAM1Q,GAGPA,EARA,CAAC,EAiBbT,KAAK49C,KAAO,CAAC,EAMb59C,KAAKs6E,SAAW,GAOhBt6E,KAAKu6E,QAAU,GAMfv6E,KAAKw5E,IAAMD,GAAKC,MAOhBx5E,KAAKS,MAULT,KAAK+hC,OASL/hC,KAAK6I,OASL7I,KAAKgD,IAIL,IAcI8F,EAdAiD,GAAS,EAEb,QAASA,EAAQquE,GAAM5yE,OAAQ,CAC7B,MAAMsB,EAAOsxE,GAAMruE,GAIfjD,KAAQ8R,QAA6BlT,IAAlBkT,EAAQ9R,KAE7B9I,KAAK8I,GAAiB,YAATA,EAAqB,IAAI8R,EAAQ9R,IAAS8R,EAAQ9R,GAElE,CAMD,IAAKA,KAAQ8R,EAENw/D,GAAMvlB,SAAS/rD,KAAO9I,KAAK8I,GAAQ8R,EAAQ9R,GAEnD,CAMGqI,WACF,OAAOnR,KAAKu6E,QAAQv6E,KAAKu6E,QAAQ/yE,OAAS,EAC3C,CASG2J,SAAKA,GACHsoE,GAAMtoE,KACRA,EAAOyoE,GAAUzoE,IAGnBqpE,GAAerpE,EAAM,QAEjBnR,KAAKmR,OAASA,GAChBnR,KAAKu6E,QAAQxyE,KAAKoJ,EAErB,CAKGgnE,cACF,MAA4B,kBAAdn4E,KAAKmR,KAAoBA,GAAKgnE,QAAQn4E,KAAKmR,WAAQzJ,CAClE,CAMGywE,YAAQA,GACVI,GAAWv4E,KAAKk4E,SAAU,WAC1Bl4E,KAAKmR,KAAOA,GAAKhO,KAAKg1E,GAAW,GAAIn4E,KAAKk4E,SAC3C,CAKGA,eACF,MAA4B,kBAAdl4E,KAAKmR,KAAoBA,GAAK+mE,SAASl4E,KAAKmR,WAAQzJ,CACnE,CAQGwwE,aAASA,GACXsC,GAAetC,EAAU,YACzBuC,GAAWvC,EAAU,YACrBl4E,KAAKmR,KAAOA,GAAKhO,KAAKnD,KAAKm4E,SAAW,GAAID,EAC3C,CAKGE,cACF,MAA4B,kBAAdp4E,KAAKmR,KAAoBA,GAAKinE,QAAQp4E,KAAKmR,WAAQzJ,CAClE,CAQG0wE,YAAQA,GAIV,GAHAqC,GAAWrC,EAAS,WACpBG,GAAWv4E,KAAKm4E,QAAS,WAErBC,EAAS,CACX,GAA8B,KAA1BA,EAAQh7D,WAAW,GACrB,MAAM,IAAI9b,MAAM,iCAGlB,GAAI82E,EAAQvjB,SAAS,IAAK,GACxB,MAAM,IAAIvzD,MAAM,yCAEnB,CAEDtB,KAAKmR,KAAOA,GAAKhO,KAAKnD,KAAKm4E,QAASn4E,KAAK06E,MAAQtC,GAAW,IAC7D,CAKGsC,WACF,MAA4B,kBAAd16E,KAAKmR,KACfA,GAAK+mE,SAASl4E,KAAKmR,KAAMnR,KAAKo4E,cAC9B1wE,CACL,CAQGgzE,SAAKA,GACPF,GAAeE,EAAM,QACrBD,GAAWC,EAAM,QACjB16E,KAAKmR,KAAOA,GAAKhO,KAAKnD,KAAKm4E,SAAW,GAAIuC,GAAQ16E,KAAKo4E,SAAW,IACnE,CAWD90E,SAASkkE,GACP,OAAQxnE,KAAKS,OAAS,IAAI6C,SAASkkE,EACpC,CAgBD17C,QAAQ8rD,EAAQvvE,EAAO6oC,GACrB,MAAMplB,EAAU,IAAI6rD,GAAaC,EAAQvvE,EAAO6oC,GAWhD,OATIlxC,KAAKmR,OACP2a,EAAQnqB,KAAO3B,KAAKmR,KAAO,IAAM2a,EAAQnqB,KACzCmqB,EAAQksD,KAAOh4E,KAAKmR,MAGtB2a,EAAQ+rD,OAAQ,EAEhB73E,KAAKs6E,SAASvyE,KAAK+jB,GAEZA,CACR,CAeDwtC,KAAKse,EAAQvvE,EAAO6oC,GAClB,MAAMplB,EAAU9rB,KAAK8rB,QAAQ8rD,EAAQvvE,EAAO6oC,GAI5C,OAFAplB,EAAQ+rD,MAAQ,KAET/rD,CACR,CAiBDC,KAAK6rD,EAAQvvE,EAAO6oC,GAClB,MAAMplB,EAAU9rB,KAAK8rB,QAAQ8rD,EAAQvvE,EAAO6oC,GAI5C,MAFAplB,EAAQ+rD,OAAQ,EAEV/rD,CACP,EAUH,SAAS2uD,GAAWl1D,EAAM5jB,GACxB,GAAI4jB,GAAQA,EAAKsvC,SAAS1jD,GAAKknE,KAC7B,MAAM,IAAI/2E,MACR,IAAMK,EAAO,uCAAyCwP,GAAKknE,IAAM,IAGtE,CASD,SAASmC,GAAej1D,EAAM5jB,GAC5B,IAAK4jB,EACH,MAAM,IAAIjkB,MAAM,IAAMK,EAAO,oBAEhC,CASD,SAAS42E,GAAWpnE,EAAMxP,GACxB,IAAKwP,EACH,MAAM,IAAI7P,MAAM,YAAcK,EAAO,kCAExC,CCvYM,MAAMg5E,GAAU1lE,KAAO2lE,SAExBpS,GAAM,CAAC,EAAE3tD,eAMf,SAAS5F,KACP,MAAM4lE,EAAe5D,KAEf6D,EAAY,GAElB,IAEIC,EAFAh+D,EAAY,CAAC,EAGbi+D,GAAe,EA2BnB,OAvBAC,EAAUr9B,KAAOA,EACjBq9B,EAAU/L,YAASxnE,EACnBuzE,EAAUtE,cAAWjvE,EAGrBuzE,EAAUL,OAASA,EAGnBK,EAAUH,UAAYA,EAEtBG,EAAUl1E,IAAMA,EAGhBk1E,EAAU3/D,MAAQA,EAClB2/D,EAAUj5E,UAAYA,EAEtBi5E,EAAU/wB,IAAMA,EAChB+wB,EAAUC,QAAUA,EAEpBD,EAAUE,QAAUA,EACpBF,EAAUG,YAAcA,EAGjBH,EAIP,SAASA,IACP,MAAMI,EAAcpmE,KACpB,IAAIlJ,GAAS,EAEb,QAASA,EAAQ+uE,EAAUtzE,OACzB6zE,EAAYt1E,OAAO+0E,EAAU/uE,IAK/B,OAFAsvE,EAAYz9B,KAAKxU,IAAO,EAAM,CAAC,EAAGrsB,IAE3Bs+D,CACR,CAOD,SAASz9B,EAAKr2C,EAAK9G,GACjB,MAAmB,kBAAR8G,EAEgB,IAArBgoE,UAAU/nE,QACZ8zE,GAAe,OAAQP,GACvBh+D,EAAUxV,GAAO9G,EACVw6E,GAIDzS,GAAI1tD,KAAKiC,EAAWxV,IAAQwV,EAAUxV,IAAS,KAIrDA,GACF+zE,GAAe,OAAQP,GACvBh+D,EAAYxV,EACL0zE,GAIFl+D,CACR,CAGD,SAAS69D,IACP,GAAIG,EACF,OAAOE,EAGT,QAASD,EAAcF,EAAUtzE,OAAQ,CACvC,MAAO+zE,KAAa3gE,GAAWkgE,EAAUE,GAEzC,IAAmB,IAAfpgE,EAAQ,GACV,UAGiB,IAAfA,EAAQ,KACVA,EAAQ,QAAKlT,GAIf,MAAM8zE,EAAcD,EAASzgE,KAAKmgE,KAAcrgE,GAErB,oBAAhB4gE,GACTX,EAAa90E,IAAIy1E,EAEpB,CAKD,OAHAT,GAAS,EACTC,EAAc5iE,OAAOi5C,kBAEd4pB,CACR,CAOD,SAASl1E,EAAItF,KAAUma,GAErB,IAAIq0D,EAIJ,GAFAqM,GAAe,MAAOP,GAER,OAAVt6E,QAA4BiH,IAAVjH,QAEf,GAAqB,oBAAVA,EAChBg7E,EAAUh7E,KAAUma,OACf,IAAqB,kBAAVna,EAOhB,MAAM,IAAI42E,UAAU,+BAAiC52E,EAAQ,KANzDqC,MAAMC,QAAQtC,GAChBi7E,EAAQj7E,GAERk7E,EAAUl7E,EAIb,CAMD,OAJIwuE,IACFlyD,EAAUkyD,SAAWl8D,OAAOm4C,OAAOnuC,EAAUkyD,UAAY,CAAC,EAAGA,IAGxDgM,EAMP,SAASp0D,EAAIpmB,GACX,GAAqB,oBAAVA,EACTg7E,EAAUh7E,OACL,IAAqB,kBAAVA,EAQhB,MAAM,IAAI42E,UAAU,+BAAiC52E,EAAQ,KAP7D,GAAIqC,MAAMC,QAAQtC,GAAQ,CACxB,MAAOk5B,KAAW/e,GAAWna,EAC7Bg7E,EAAU9hD,KAAW/e,EACtB,MACC+gE,EAAUl7E,EAIb,CACF,CAMD,SAASk7E,EAAU9yE,GACjB6yE,EAAQ7yE,EAAO2wB,SAEX3wB,EAAOomE,WACTA,EAAWl8D,OAAOm4C,OAAO+jB,GAAY,CAAC,EAAGpmE,EAAOomE,UAEnD,CAMD,SAASyM,EAAQliD,GACf,IAAIztB,GAAS,EAEb,GAAgB,OAAZytB,QAAgC9xB,IAAZ8xB,OAEjB,KAAI12B,MAAMC,QAAQy2B,GAMvB,MAAM,IAAI69C,UAAU,oCAAsC79C,EAAU,KALpE,QAASztB,EAAQytB,EAAQhyB,OAAQ,CAC/B,MAAMo0E,EAAQpiD,EAAQztB,GACtB8a,EAAI+0D,EACL,CAGF,CACF,CAOD,SAASH,EAAU9hD,EAAQl5B,GACzB,IAEIg0D,EAFA1oD,GAAS,EAIb,QAASA,EAAQ+uE,EAAUtzE,OACzB,GAAIszE,EAAU/uE,GAAO,KAAO4tB,EAAQ,CAClC86B,EAAQqmB,EAAU/uE,GAClB,KACD,CAGC0oD,GACEonB,GAAWpnB,EAAM,KAAOonB,GAAWp7E,KACrCA,EAAQ2oC,IAAO,EAAMqrB,EAAM,GAAIh0D,IAGjCg0D,EAAM,GAAKh0D,GAGXq6E,EAAU/yE,KAAK,IAAIwnE,WAEtB,CACF,CAGD,SAASj0D,EAAMhK,GACb2pE,EAAUL,SACV,MAAM5C,EAAO8D,GAAMxqE,GACb49D,EAAS+L,EAAU/L,OAGzB,OAFA6M,GAAa,QAAS7M,GAElB8M,GAAQ9M,EAAQ,SAEX,IAAIA,EAAO3zB,OAAOy8B,GAAOA,GAAM18D,QAIjC4zD,EAAO3zB,OAAOy8B,GAAOA,EAC7B,CAGD,SAASh2E,EAAUiJ,EAAMqG,GACvB2pE,EAAUL,SACV,MAAM5C,EAAO8D,GAAMxqE,GACbqlE,EAAWsE,EAAUtE,SAI3B,OAHAsF,GAAe,YAAatF,GAC5BuF,GAAWjxE,GAEP+wE,GAAQrF,EAAU,WAEb,IAAIA,EAAS1rE,EAAM+sE,GAAMx/D,UAI3Bm+D,EAAS1rE,EAAM+sE,EACvB,CAQD,SAAS9tB,EAAIj/C,EAAMqG,EAAK3Q,GAStB,GARAu7E,GAAWjxE,GACXgwE,EAAUL,SAELj6E,GAA2B,oBAAR2Q,IACtB3Q,EAAW2Q,EACXA,OAAM5J,IAGH/G,EACH,OAAO,IAAI0F,QAAQ81E,GAUrB,SAASA,EAASvpE,EAASwpE,GAUzB,SAASl2E,EAAK2wE,EAAOpJ,EAAMuK,GACzBvK,EAAOA,GAAQxiE,EACX4rE,EACFuF,EAAOvF,GACEjkE,EACTA,EAAQ66D,GAGR9sE,EAAS,KAAM8sE,EAAMuK,EAExB,CAlBD6C,EAAa3wB,IAAIj/C,EAAM6wE,GAAMxqE,GAAMpL,EAmBpC,CA5BDi2E,EAAS,KAAMx7E,EA6BhB,CAGD,SAASu6E,EAAQjwE,EAAM+sE,GAErB,IAAInvE,EAEAwzE,EAOJ,OALApB,EAAU/wB,IAAIj/C,EAAM+sE,EAAM9xE,GAE1Bo2E,GAAW,UAAW,MAAOD,GAGtBxzE,EAOP,SAAS3C,EAAK2wE,EAAOpJ,GACnBmJ,GAAKC,GACLhuE,EAAS4kE,EACT4O,GAAW,CACZ,CACF,CAOD,SAASlB,EAAQ7pE,EAAK3Q,GAKpB,GAJAs6E,EAAUL,SACVmB,GAAa,UAAWd,EAAU/L,QAClC+M,GAAe,UAAWhB,EAAUtE,WAE/Bh2E,EACH,OAAO,IAAI0F,QAAQ81E,GAUrB,SAASA,EAASvpE,EAASwpE,GACzB,MAAMpE,EAAO8D,GAAMxqE,GA0BnB,SAASpL,EAAK2wE,EAAOmB,GACfnB,IAAUmB,EACZoE,EAAOvF,GACEjkE,EACTA,EAAQolE,GAGRr3E,EAAS,KAAMq3E,EAElB,CAjCDiD,EAAU/wB,IAAI+wB,EAAU3/D,MAAM08D,GAAOA,GAAM,CAACnB,EAAOpJ,EAAMuK,KACvD,IAAInB,GAAUpJ,GAASuK,EAEhB,CAEL,MAAMnvE,EAASoyE,EAAUj5E,UAAUyrE,EAAMuK,QAE1BtwE,IAAXmB,GAAmC,OAAXA,IAEjB0zE,GAAqB1zE,GAC9BmvE,EAAKv3E,MAAQoI,EAEbmvE,EAAKnvE,OAASA,GAGhB3C,EAAK2wE,EAAOmB,EACb,MAdC9xE,EAAK2wE,EAcN,GAkBJ,CA5CDsF,EAAS,KAAMx7E,EA6ChB,CAGD,SAASy6E,EAAY9pE,GAEnB,IAAI+qE,EAEJpB,EAAUL,SACVmB,GAAa,cAAed,EAAU/L,QACtC+M,GAAe,cAAehB,EAAUtE,UAExC,MAAMqB,EAAO8D,GAAMxqE,GAMnB,OAJA2pE,EAAUE,QAAQnD,EAAM9xE,GAExBo2E,GAAW,cAAe,UAAWD,GAE9BrE,EAMP,SAAS9xE,EAAK2wE,GACZwF,GAAW,EACXzF,GAAKC,EACN,CACF,CACF,CASD,SAASmF,GAAQv7E,EAAOkB,GACtB,MACmB,oBAAVlB,GAGPA,EAAM6G,YAKL4zB,GAAKz6B,EAAM6G,YAAc3F,KAAQlB,EAAM6G,UAE3C,CAQD,SAAS4zB,GAAKz6B,GAEZ,IAAI8G,EAEJ,IAAKA,KAAO9G,EACV,GAAI+nE,GAAI1tD,KAAKra,EAAO8G,GAClB,OAAO,EAIX,OAAO,CACR,CASD,SAASw0E,GAAap6E,EAAMlB,GAC1B,GAAqB,oBAAVA,EACT,MAAM,IAAI42E,UAAU,WAAa11E,EAAO,qBAE3C,CASD,SAASs6E,GAAet6E,EAAMlB,GAC5B,GAAqB,oBAAVA,EACT,MAAM,IAAI42E,UAAU,WAAa11E,EAAO,uBAE3C,CASD,SAAS25E,GAAe35E,EAAMo5E,GAC5B,GAAIA,EACF,MAAM,IAAIz5E,MACR,gBACEK,EACA,mHAGP,CAQD,SAASu6E,GAAWjxE,GAGlB,IAAK4wE,GAAW5wE,IAA8B,kBAAdA,EAAKE,KACnC,MAAM,IAAIksE,UAAU,uBAAyBpsE,EAAO,IAGvD,CAUD,SAASqxE,GAAW36E,EAAM66E,EAAWH,GACnC,IAAKA,EACH,MAAM,IAAI/6E,MACR,IAAMK,EAAO,0BAA4B66E,EAAY,YAG1D,CAMD,SAASV,GAAMr7E,GACb,OAAOg8E,GAAgBh8E,GAASA,EAAQ,IAAI45E,GAAM55E,EACnD,CAMD,SAASg8E,GAAgBh8E,GACvB,OAAOmuC,QACLnuC,GACmB,kBAAVA,GACP,YAAaA,GACb,aAAcA,EAEnB,CAMD,SAAS87E,GAAqB97E,GAC5B,MAAwB,kBAAVA,GAAsBi8E,GAASj8E,EAC9C,CC/jBD,SAASk8E,GAAYzgE,GACnB,GAAIA,EAAI0gE,MAEN,OAAO1gE,EAAI0gE,MAMb,IAAK,IAAI/5E,EAAI,EAAGA,EAAIolB,SAAS40D,YAAYr1E,OAAQ3E,IAC/C,GAAIolB,SAAS40D,YAAYh6E,GAAGi6E,YAAc5gE,EAExC,OAAO+L,SAAS40D,YAAYh6E,EAGjC,CAED,SAASk6E,GAAmBniE,GAC1B,IAAIsB,EAAM+L,SAASR,cAAc,SASjC,OARAvL,EAAIyL,aAAa,eAAgB/M,EAAQrT,UAEnBG,IAAlBkT,EAAQoiE,OACV9gE,EAAIyL,aAAa,QAAS/M,EAAQoiE,OAGpC9gE,EAAI8J,YAAYiC,SAASvE,eAAe,KACxCxH,EAAIyL,aAAa,SAAU,IACpBzL,CACR,CAED,IAAI+gE,GAA0B,WAE5B,SAASA,EAAWriE,GAClB,IAAIsiE,EAAQl9E,KAEZA,KAAKm9E,WAAa,SAAUjhE,GAC1B,IAAI1K,EAIAA,EAFsB,IAAtB0rE,EAAMnhE,KAAKvU,OACT01E,EAAME,eACCF,EAAME,eAAe/4D,YACrB64D,EAAM10E,QACN00E,EAAM54B,UAAU74C,WAEhByxE,EAAM1rE,OAGR0rE,EAAMnhE,KAAKmhE,EAAMnhE,KAAKvU,OAAS,GAAG6c,YAG7C64D,EAAM54B,UAAUtW,aAAa9xB,EAAK1K,GAElC0rE,EAAMnhE,KAAKhU,KAAKmU,EACjB,EAEDlc,KAAKq9E,cAA8B31E,IAAnBkT,EAAQ0iE,QAA+D1iE,EAAQ0iE,OAC/Ft9E,KAAK+b,KAAO,GACZ/b,KAAKu9E,IAAM,EACXv9E,KAAKg9E,MAAQpiE,EAAQoiE,MAErBh9E,KAAKuH,IAAMqT,EAAQrT,IACnBvH,KAAKskD,UAAY1pC,EAAQ0pC,UACzBtkD,KAAKwI,QAAUoS,EAAQpS,QACvBxI,KAAKo9E,eAAiBxiE,EAAQwiE,eAC9Bp9E,KAAKwR,OAAS,IACf,CAED,IAAIgsE,EAASP,EAAW31E,UA4DxB,OA1DAk2E,EAAOC,QAAU,SAAiBzwE,GAChCA,EAAMzE,QAAQvI,KAAKm9E,WACpB,EAEDK,EAAOvuE,OAAS,SAAgBgN,GAI1Bjc,KAAKu9E,KAAOv9E,KAAKq9E,SAAW,KAAQ,KAAO,GAC7Cr9E,KAAKm9E,WAAWJ,GAAmB/8E,OAGrC,IAAIkc,EAAMlc,KAAK+b,KAAK/b,KAAK+b,KAAKvU,OAAS,GAcvC,GAAIxH,KAAKq9E,SAAU,CACjB,IAAIT,EAAQD,GAAYzgE,GAExB,IAGE0gE,EAAMc,WAAWzhE,EAAM2gE,EAAMe,SAASn2E,OAKvC,CAJC,MAAOpG,IACH+5E,CAGL,CACF,MACCj/D,EAAI8J,YAAYiC,SAASvE,eAAezH,IAG1Cjc,KAAKu9E,KACN,EAEDC,EAAOpgC,MAAQ,WAEbp9C,KAAK+b,KAAKxT,SAAQ,SAAU2T,GAC1B,OAAOA,EAAIiF,YAAcjF,EAAIiF,WAAWyrB,YAAY1wB,EACrD,IACDlc,KAAK+b,KAAO,GACZ/b,KAAKu9E,IAAM,CAKZ,EAEMN,CACR,CAlG6B,GCjDnB7gC,GAAMlyC,KAAKkyC,IAMX3zC,GAAO8yC,OAAOC,aAMd0P,GAASn4C,OAAOm4C,OAOpB,SAAS0yB,GAAMn9E,EAAO+G,GAC5B,SAAcA,GAAU,EAAKq2E,GAAOp9E,EAAO,KAAO,EAAKo9E,GAAOp9E,EAAO,KAAO,EAAKo9E,GAAOp9E,EAAO,KAAO,EAAKo9E,GAAOp9E,EAAO,EACzH,CAMM,SAAS6lB,GAAM7lB,GACrB,OAAOA,EAAM6lB,MACb,CAOM,SAASpS,GAAOzT,EAAO8vE,GAC7B,OAAQ9vE,EAAQ8vE,EAAQ3vD,KAAKngB,IAAUA,EAAM,GAAKA,CAClD,CAQM,SAAS0O,GAAS1O,EAAO8vE,EAASl8D,GACxC,OAAO5T,EAAM0O,QAAQohE,EAASl8D,EAC9B,CAOM,SAASypE,GAASr9E,EAAO4V,GAC/B,OAAO5V,EAAMiW,QAAQL,EACrB,CAOM,SAASwnE,GAAQp9E,EAAOsL,GAC9B,OAAiC,EAA1BtL,EAAM2c,WAAWrR,EACxB,CAQM,SAASgyE,GAAQt9E,EAAOu9E,EAAOvzE,GACrC,OAAOhK,EAAMqH,MAAMk2E,EAAOvzE,EAC1B,CAMM,SAASwzE,GAAQx9E,GACvB,OAAOA,EAAM+G,MACb,CAMM,SAAS02E,GAAQz9E,GACvB,OAAOA,EAAM+G,MACb,CAOM,SAASoB,GAAQnI,EAAOqM,GAC9B,OAAOA,EAAM/E,KAAKtH,GAAQA,CAC1B,CAOM,SAAS09E,GAASrxE,EAAOnM,GAC/B,OAAOmM,EAAM9J,IAAIrC,GAAUwC,KAAK,GAChC,CChHM,IAAI4wD,GAAO,EACPkE,GAAS,EACTzwD,GAAS,EACT+gE,GAAW,EACXuI,GAAY,EACZsN,GAAa,GAWjB,SAASnzE,GAAMxK,EAAOygC,EAAM12B,EAAQW,EAAM4vB,EAAOgM,EAAUv/B,GACjE,MAAO,CAAC/G,MAAOA,EAAOygC,KAAMA,EAAM12B,OAAQA,EAAQW,KAAMA,EAAM4vB,MAAOA,EAAOgM,SAAUA,EAAUgtB,KAAMA,GAAMkE,OAAQA,GAAQzwD,OAAQA,EAAQ62E,OAAQ,GACpJ,CAOM,SAASpyE,GAAMi1B,EAAMnG,GAC3B,OAAOmwB,GAAOjgD,GAAK,GAAI,KAAM,KAAM,GAAI,KAAM,KAAM,GAAIi2B,EAAM,CAAC15B,QAAS05B,EAAK15B,QAASuzB,EACrF,CAKM,SAASinC,KACf,OAAO8O,EACP,CAKM,SAASx3C,KAMf,OALAw3C,GAAYvI,GAAW,EAAIsV,GAAOO,KAAc7V,IAAY,EAExDtQ,KAAwB,KAAd6Y,KACb7Y,GAAS,EAAGlE,MAEN+c,EACP,CAKM,SAAS9+D,KAMf,OALA8+D,GAAYvI,GAAW/gE,GAASq2E,GAAOO,GAAY7V,MAAc,EAE7DtQ,KAAwB,KAAd6Y,KACb7Y,GAAS,EAAGlE,MAEN+c,EACP,CAKM,SAASyB,KACf,OAAOsL,GAAOO,GAAY7V,GAC1B,CAKM,SAAS+V,KACf,OAAO/V,EACP,CAOM,SAASzgE,GAAOk2E,EAAOvzE,GAC7B,OAAOszE,GAAOK,GAAYJ,EAAOvzE,EACjC,CAMM,SAASynD,GAAO/mD,GACtB,OAAQA,GAEP,KAAK,EAAG,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,KAAK,GACtC,OAAO,EAER,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,IAE3D,KAAK,GAAI,KAAK,IAAK,KAAK,IACvB,OAAO,EAER,KAAK,GACJ,OAAO,EAER,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC/B,OAAO,EAER,KAAK,GAAI,KAAK,GACb,OAAO,EAGT,OAAO,CACP,CAMM,SAASozE,GAAO99E,GACtB,OAAOszD,GAAOkE,GAAS,EAAGzwD,GAASy2E,GAAOG,GAAa39E,GAAQ8nE,GAAW,EAAG,EAC7E,CAMM,SAASiW,GAAS/9E,GACxB,OAAO29E,GAAa,GAAI39E,CACxB,CAMM,SAASg+E,GAAStzE,GACxB,OAAOmb,GAAKxe,GAAMygE,GAAW,EAAGmW,GAAmB,KAATvzE,EAAcA,EAAO,EAAa,KAATA,EAAcA,EAAO,EAAIA,IAC5F,CAcM,SAAS+O,GAAY/O,GAC3B,MAAO2lE,GAAYyB,WACdzB,GAAY,IAGf,MAFA9+D,KAIF,OAAOkgD,GAAM/mD,GAAQ,GAAK+mD,GAAM4e,IAAa,EAAI,GAAK,GACtD,CAwBM,SAAS6N,GAAU5yE,EAAOqmB,GAChC,QAASA,GAASpgB,QAEb8+D,GAAY,IAAMA,GAAY,KAAQA,GAAY,IAAMA,GAAY,IAAQA,GAAY,IAAMA,GAAY,GAC7G,MAEF,OAAOhpE,GAAMiE,EAAOuyE,MAAWlsD,EAAQ,GAAe,IAAVmgD,MAA0B,IAAVvgE,MAC5D,CAMM,SAAS0sE,GAAWvzE,GAC1B,MAAO6G,YACE8+D,IAEP,KAAK3lE,EACJ,OAAOo9D,GAER,KAAK,GAAI,KAAK,GACA,KAATp9D,GAAwB,KAATA,GAClBuzE,GAAU5N,IACX,MAED,KAAK,GACS,KAAT3lE,GACHuzE,GAAUvzE,GACX,MAED,KAAK,GACJ6G,KACA,MAGH,OAAOu2D,EACP,CAOM,SAASqW,GAAWzzE,EAAMY,GAChC,MAAOiG,SAEF7G,EAAO2lE,KAAc,GACxB,MAEI,GAAI3lE,EAAO2lE,KAAc,IAAsB,KAAXyB,KACxC,MAEF,MAAO,KAAOzqE,GAAMiE,EAAOw8D,GAAW,GAAK,IAAM9/D,GAAc,KAAT0C,EAAcA,EAAO6G,KAC3E,CAMM,SAAS4rD,GAAY7xD,GAC3B,OAAQmmD,GAAMqgB,MACbvgE,KAED,OAAOlK,GAAMiE,EAAOw8D,GACpB,CCrPM,IAAIsW,GAAK,OACLC,GAAM,QACNC,GAAS,WAETC,GAAU,OACVC,GAAU,OACVC,GAAc,OAIdC,GAAS,UAMTC,GAAY,aCRhB,SAASC,GAAWt4C,EAAUpmC,GAIpC,IAHA,IAAIye,EAAS,GACT5X,EAAS02E,GAAOn3C,GAEXlkC,EAAI,EAAGA,EAAI2E,EAAQ3E,IAC3Buc,GAAUze,EAASomC,EAASlkC,GAAIA,EAAGkkC,EAAUpmC,IAAa,GAE3D,OAAOye,CACP,CASM,SAASpd,GAAWyhC,EAAS13B,EAAOg7B,EAAUpmC,GACpD,OAAQ8iC,EAAQt4B,MACf,KAAKg0E,GAAQ,KAAKD,GAAa,OAAOz7C,EAAQ46C,OAAS56C,EAAQ46C,QAAU56C,EAAQhjC,MACjF,KAAKu+E,GAAS,MAAO,GACrB,KAAKI,GAAW,OAAO37C,EAAQ46C,OAAS56C,EAAQhjC,MAAQ,IAAM4+E,GAAU57C,EAAQsD,SAAUpmC,GAAY,IACtG,KAAKs+E,GAASx7C,EAAQhjC,MAAQgjC,EAAQ1I,MAAM53B,KAAK,KAGlD,OAAO86E,GAAOl3C,EAAWs4C,GAAU57C,EAAQsD,SAAUpmC,IAAa8iC,EAAQ46C,OAAS56C,EAAQhjC,MAAQ,IAAMsmC,EAAW,IAAM,EAC1H,CC1BM,SAASuqB,GAAQ7wD,EAAO+G,GAC9B,OAAQo2E,GAAKn9E,EAAO+G,IAEnB,KAAK,KACJ,OAAOu3E,GAAS,SAAWt+E,EAAQA,EAEpC,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAEvE,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAE5D,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAE5D,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAC3D,OAAOs+E,GAASt+E,EAAQA,EAEzB,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAChD,OAAOs+E,GAASt+E,EAAQq+E,GAAMr+E,EAAQo+E,GAAKp+E,EAAQA,EAEpD,KAAK,KAAM,KAAK,KACf,OAAOs+E,GAASt+E,EAAQo+E,GAAKp+E,EAAQA,EAEtC,KAAK,KACJ,OAAOs+E,GAASt+E,EAAQo+E,GAAK,QAAUp+E,EAAQA,EAEhD,KAAK,KACJ,OAAOs+E,GAASt+E,EAAQ0O,GAAQ1O,EAAO,iBAAkBs+E,GAAS,WAAaF,GAAK,aAAep+E,EAEpG,KAAK,KACJ,OAAOs+E,GAASt+E,EAAQo+E,GAAK,aAAe1vE,GAAQ1O,EAAO,cAAe,IAAMA,EAEjF,KAAK,KACJ,OAAOs+E,GAASt+E,EAAQo+E,GAAK,iBAAmB1vE,GAAQ1O,EAAO,4BAA6B,IAAMA,EAEnG,KAAK,KACJ,OAAOs+E,GAASt+E,EAAQo+E,GAAK1vE,GAAQ1O,EAAO,SAAU,YAAcA,EAErE,KAAK,KACJ,OAAOs+E,GAASt+E,EAAQo+E,GAAK1vE,GAAQ1O,EAAO,QAAS,kBAAoBA,EAE1E,KAAK,KACJ,OAAOs+E,GAAS,OAAS5vE,GAAQ1O,EAAO,QAAS,IAAMs+E,GAASt+E,EAAQo+E,GAAK1vE,GAAQ1O,EAAO,OAAQ,YAAcA,EAEnH,KAAK,KACJ,OAAOs+E,GAAS5vE,GAAQ1O,EAAO,qBAAsB,KAAOs+E,GAAS,MAAQt+E,EAE9E,KAAK,KACJ,OAAO0O,GAAQA,GAAQA,GAAQ1O,EAAO,eAAgBs+E,GAAS,MAAO,cAAeA,GAAS,MAAOt+E,EAAO,IAAMA,EAEnH,KAAK,KAAM,KAAK,KACf,OAAO0O,GAAQ1O,EAAO,oBAAqBs+E,aAE5C,KAAK,KACJ,OAAO5vE,GAAQA,GAAQ1O,EAAO,oBAAqBs+E,GAAS,cAAgBF,GAAK,gBAAiB,aAAc,WAAaE,GAASt+E,EAAQA,EAE/I,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KACrC,OAAO0O,GAAQ1O,EAAO,kBAAmBs+E,GAAS,QAAUt+E,EAE7D,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KACtC,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KACtC,KAAK,KAAM,KAAK,KAAM,KAAK,KAAM,KAAK,KAErC,GAAIw9E,GAAOx9E,GAAS,EAAI+G,EAAS,EAChC,OAAQq2E,GAAOp9E,EAAO+G,EAAS,IAE9B,KAAK,IAEJ,GAAkC,KAA9Bq2E,GAAOp9E,EAAO+G,EAAS,GAC1B,MAEF,KAAK,IACJ,OAAO2H,GAAQ1O,EAAO,mBAAoB,KAAOs+E,GAAP,UAAiCD,IAAoC,KAA7BjB,GAAOp9E,EAAO+G,EAAS,GAAY,KAAO,UAAY/G,EAEzI,KAAK,IACJ,OAAQq9E,GAAQr9E,EAAO,WAAa6wD,GAAOniD,GAAQ1O,EAAO,UAAW,kBAAmB+G,GAAU/G,EAAQA,EAE7G,MAED,KAAK,KAEJ,GAAkC,MAA9Bo9E,GAAOp9E,EAAO+G,EAAS,GAC1B,MAEF,KAAK,KACJ,OAAQq2E,GAAOp9E,EAAOw9E,GAAOx9E,GAAS,IAAMq9E,GAAQr9E,EAAO,eAAiB,MAE3E,KAAK,IACJ,OAAO0O,GAAQ1O,EAAO,IAAK,IAAMs+E,IAAUt+E,EAE5C,KAAK,IACJ,OAAO0O,GAAQ1O,EAAO,wBAAyB,KAAOs+E,IAAgC,KAAtBlB,GAAOp9E,EAAO,IAAa,UAAY,IAAxD,UAA+Es+E,GAA/E,SAAwGF,GAAK,WAAap+E,EAE3K,MAED,KAAK,KACJ,OAAQo9E,GAAOp9E,EAAO+G,EAAS,KAE9B,KAAK,IACJ,OAAOu3E,GAASt+E,EAAQo+E,GAAK1vE,GAAQ1O,EAAO,qBAAsB,MAAQA,EAE3E,KAAK,IACJ,OAAOs+E,GAASt+E,EAAQo+E,GAAK1vE,GAAQ1O,EAAO,qBAAsB,SAAWA,EAE9E,KAAK,GACJ,OAAOs+E,GAASt+E,EAAQo+E,GAAK1vE,GAAQ1O,EAAO,qBAAsB,MAAQA,EAG5E,OAAOs+E,GAASt+E,EAAQo+E,GAAKp+E,EAAQA,EAGvC,OAAOA,CACP,CC5GM,SAAS82E,GAAY+H,GAC3B,IAAI93E,EAAS02E,GAAOoB,GAEpB,OAAO,SAAU77C,EAAS13B,EAAOg7B,EAAUpmC,GAG1C,IAFA,IAAIye,EAAS,GAEJvc,EAAI,EAAGA,EAAI2E,EAAQ3E,IAC3Buc,GAAUkgE,EAAWz8E,GAAG4gC,EAAS13B,EAAOg7B,EAAUpmC,IAAa,GAEhE,OAAOye,CACP,CACD,CAMM,SAASmgE,GAAW5+E,GAC1B,OAAO,SAAU8iC,GACXA,EAAQvC,OACRuC,EAAUA,EAAQ46C,SACrB19E,EAAS8iC,EACX,CACD,CAQM,SAAS+7C,GAAU/7C,EAAS13B,EAAOg7B,EAAUpmC,GACnD,GAAI8iC,EAAQj8B,QAAU,IAChBi8B,EAAQ46C,OACZ,OAAQ56C,EAAQt4B,MACf,KAAK+zE,GAAaz7C,EAAQ46C,OAAS/sB,GAAO7tB,EAAQhjC,MAAOgjC,EAAQj8B,QAChE,MACD,KAAK43E,GACJ,OAAOC,GAAU,CAACpzE,GAAKw3B,EAAS,CAAChjC,MAAO0O,GAAQs0B,EAAQhjC,MAAO,IAAK,IAAMs+E,OAAYp+E,GACvF,KAAKs+E,GACJ,GAAIx7C,EAAQj8B,OACX,OAAO22E,GAAQ16C,EAAQ1I,OAAO,SAAUt6B,GACvC,OAAQyT,GAAMzT,EAAO,0BAEpB,IAAK,aAAc,IAAK,cACvB,OAAO4+E,GAAU,CAACpzE,GAAKw3B,EAAS,CAAC1I,MAAO,CAAC5rB,GAAQ1O,EAAO,cAAe,IAAMq+E,GAAM,UAAWn+E,GAE/F,IAAK,gBACJ,OAAO0+E,GAAU,CAChBpzE,GAAKw3B,EAAS,CAAC1I,MAAO,CAAC5rB,GAAQ1O,EAAO,aAAc,IAAMs+E,GAAS,eACnE9yE,GAAKw3B,EAAS,CAAC1I,MAAO,CAAC5rB,GAAQ1O,EAAO,aAAc,IAAMq+E,GAAM,SAChE7yE,GAAKw3B,EAAS,CAAC1I,MAAO,CAAC5rB,GAAQ1O,EAAO,aAAco+E,GAAK,gBACvDl+E,GAGL,MAAO,EACP,IAEN,CC5DM,SAAS6X,GAAS/X,GACxB,OAAO+9E,GAAQljE,GAAM,GAAI,KAAM,KAAM,KAAM,CAAC,IAAK7a,EAAQ89E,GAAM99E,GAAQ,EAAG,CAAC,GAAIA,GAC/E,CAcM,SAAS6a,GAAO7a,EAAOygC,EAAM12B,EAAQyR,EAAMH,EAAO2jE,EAAUC,EAAQC,EAAQC,GAClF,IAAI7zE,EAAQ,EACRmB,EAAS,EACT1F,EAASk4E,EACTG,EAAS,EACTC,EAAW,EACX9tB,EAAW,EACX+tB,EAAW,EACXC,EAAW,EACXC,EAAY,EACZnP,EAAY,EACZ3lE,EAAO,GACP4vB,EAAQjf,EACRirB,EAAW04C,EACXjV,EAAYvuD,EACZmiE,EAAajzE,EAEjB,MAAO60E,SACEhuB,EAAW8e,EAAWA,EAAY9+D,MAEzC,KAAK,GACJ,GAAgB,KAAZggD,GAAwD,IAArCosB,EAAWhhE,WAAW5V,EAAS,GAAU,EACe,GAA1Es2E,GAAQM,GAAcjvE,GAAQsvE,GAAQ3N,GAAY,IAAK,OAAQ,SAClEmP,GAAa,GACd,KACA,CAEF,KAAK,GAAI,KAAK,GAAI,KAAK,GACtB7B,GAAcK,GAAQ3N,GACtB,MAED,KAAK,EAAG,KAAK,GAAI,KAAK,GAAI,KAAK,GAC9BsN,GAAclkE,GAAW83C,GACzB,MAED,KAAK,GACJosB,GAAcO,GAASL,KAAU,EAAG,GACpC,SAED,KAAK,GACJ,OAAQ/L,MACP,KAAK,GAAI,KAAK,GACb3pE,GAAO68D,GAAQmZ,GAAU5sE,KAAQssE,MAAUp9C,EAAM12B,GAASo1E,GAC1D,MACD,QACCxB,GAAc,IAEhB,MAED,KAAK,IAAM2B,EACVJ,EAAO5zE,KAAWkyE,GAAOG,GAAc6B,EAExC,KAAK,IAAMF,EAAU,KAAK,GAAI,KAAK,EAClC,OAAQjP,GAEP,KAAK,EAAG,KAAK,IAAKkP,EAAW,EAE7B,KAAK,GAAK9yE,EACL4yE,EAAW,GAAM7B,GAAOG,GAAc52E,GACzCoB,GAAOk3E,EAAW,GAAKxa,GAAY8Y,EAAa,IAAKniE,EAAMzR,EAAQhD,EAAS,GAAK89D,GAAYn2D,GAAQivE,EAAY,IAAK,IAAM,IAAKniE,EAAMzR,EAAQhD,EAAS,GAAIo4E,GAC7J,MAED,KAAK,GAAIxB,GAAc,IAEvB,QAGC,GAFAx1E,GAAO4hE,EAAY0V,GAAQ9B,EAAYl9C,EAAM12B,EAAQuB,EAAOmB,EAAQ4O,EAAO6jE,EAAQx0E,EAAM4vB,EAAQ,GAAIgM,EAAW,GAAIv/B,GAASi4E,GAE3G,MAAd3O,EACH,GAAe,IAAX5jE,EACHoO,GAAM8iE,EAAYl9C,EAAMspC,EAAWA,EAAWzvC,EAAO0kD,EAAUj4E,EAAQm4E,EAAQ54C,QAE/E,OAAQ84C,GAEP,KAAK,IAAK,KAAK,IAAK,KAAK,IACxBvkE,GAAM7a,EAAO+pE,EAAWA,EAAWvuD,GAAQrT,GAAOs3E,GAAQz/E,EAAO+pE,EAAWA,EAAW,EAAG,EAAG1uD,EAAO6jE,EAAQx0E,EAAM2Q,EAAOif,EAAQ,GAAIvzB,GAASu/B,GAAWjrB,EAAOirB,EAAUv/B,EAAQm4E,EAAQ1jE,EAAO8e,EAAQgM,GACzM,MACD,QACCzrB,GAAM8iE,EAAY5T,EAAWA,EAAWA,EAAW,CAAC,IAAKzjC,EAAU,EAAG44C,EAAQ54C,IAIpFh7B,EAAQmB,EAAS4yE,EAAW,EAAGC,EAAWE,EAAY,EAAG90E,EAAOizE,EAAa,GAAI52E,EAASk4E,EAC1F,MAED,KAAK,GACJl4E,EAAS,EAAIy2E,GAAOG,GAAa0B,EAAW9tB,EAC7C,QACC,GAAI+tB,EAAW,EACd,GAAiB,KAAbjP,IACDiP,OACE,GAAiB,KAAbjP,GAAkC,GAAdiP,KAA6B,KAAVzmD,KAC/C,SAEF,OAAQ8kD,GAAc31E,GAAKqoE,GAAYA,EAAYiP,GAElD,KAAK,GACJE,EAAY/yE,EAAS,EAAI,GAAKkxE,GAAc,MAAO,GACnD,MAED,KAAK,GACJuB,EAAO5zE,MAAYkyE,GAAOG,GAAc,GAAK6B,EAAWA,EAAY,EACpE,MAED,KAAK,GAEW,KAAX1N,OACH6L,GAAcK,GAAQzsE,OAEvB6tE,EAAStN,KAAQrlE,EAAS1F,EAASy2E,GAAO9yE,EAAOizE,GAAcxgB,GAAW0gB,OAAWxN,IACrF,MAED,KAAK,GACa,KAAb9e,GAAyC,GAAtBisB,GAAOG,KAC7B2B,EAAW,IAIjB,OAAON,CACP,CAgBM,SAASS,GAASz/E,EAAOygC,EAAM12B,EAAQuB,EAAOmB,EAAQ4O,EAAO6jE,EAAQx0E,EAAM4vB,EAAOgM,EAAUv/B,GAKlG,IAJA,IAAI24E,EAAOjzE,EAAS,EAChB+O,EAAkB,IAAX/O,EAAe4O,EAAQ,CAAC,IAC/BpT,EAAOw1E,GAAOjiE,GAETpZ,EAAI,EAAG6C,EAAI,EAAG06E,EAAI,EAAGv9E,EAAIkJ,IAASlJ,EAC1C,IAAK,IAAI2B,EAAI,EAAGR,EAAI+5E,GAAOt9E,EAAO0/E,EAAO,EAAGA,EAAO/jC,GAAI12C,EAAIi6E,EAAO98E,KAAMiC,EAAIrE,EAAO+D,EAAIkE,IAAQlE,GAC1FM,EAAIwhB,GAAK5gB,EAAI,EAAIuW,EAAKzX,GAAK,IAAMR,EAAImL,GAAQnL,EAAG,OAAQiY,EAAKzX,QAChEu2B,EAAMqlD,KAAOt7E,GAEhB,OAAOmG,GAAKxK,EAAOygC,EAAM12B,EAAmB,IAAX0C,EAAe+xE,GAAU9zE,EAAM4vB,EAAOgM,EAAUv/B,EACjF,CAQM,SAASi+D,GAAShlE,EAAOygC,EAAM12B,GACrC,OAAOS,GAAKxK,EAAOygC,EAAM12B,EAAQw0E,GAASv2E,GAAKu5D,MAAS+b,GAAOt9E,EAAO,GAAI,GAAI,EAC9E,CASM,SAAS6kE,GAAa7kE,EAAOygC,EAAM12B,EAAQhD,GACjD,OAAOyD,GAAKxK,EAAOygC,EAAM12B,EAAQ00E,GAAanB,GAAOt9E,EAAO,EAAG+G,GAASu2E,GAAOt9E,EAAO+G,EAAS,GAAI,GAAIA,EACvG,CCzLD,IAAI64E,GAA8B,SAAqCrC,EAAO2B,EAAQ5zE,GACpF,IAAIimD,EAAW,EACX8e,EAAY,EAEhB,MAAO,EAAM,CAQX,GAPA9e,EAAW8e,EACXA,EAAYyB,KAEK,KAAbvgB,GAAiC,KAAd8e,IACrB6O,EAAO5zE,GAAS,GAGdmmD,GAAM4e,GACR,MAGF9+D,IACD,CAED,OAAOlK,GAAMk2E,EAAOzV,GACrB,EAEG+X,GAAU,SAAiB3qC,EAAQgqC,GAErC,IAAI5zE,GAAS,EACT+kE,EAAY,GAEhB,GACE,OAAQ5e,GAAM4e,IACZ,KAAK,EAEe,KAAdA,GAA+B,KAAXyB,OAKtBoN,EAAO5zE,GAAS,GAGlB4pC,EAAO5pC,IAAUs0E,GAA4B9X,GAAW,EAAGoX,EAAQ5zE,GACnE,MAEF,KAAK,EACH4pC,EAAO5pC,IAAU0yE,GAAQ3N,GACzB,MAEF,KAAK,EAEH,GAAkB,KAAdA,EAAkB,CAEpBn7B,IAAS5pC,GAAoB,KAAXwmE,KAAgB,MAAQ,GAC1CoN,EAAO5zE,GAAS4pC,EAAO5pC,GAAOvE,OAC9B,KACD,CAIH,QACEmuC,EAAO5pC,IAAUtD,GAAKqoE,UAEnBA,EAAY9+D,MAErB,OAAO2jC,CACR,EAEG4qC,GAAW,SAAkB9/E,EAAOk/E,GACtC,OAAOnB,GAAQ8B,GAAQ/B,GAAM99E,GAAQk/E,GACtC,EAGGa,GAA+B,IAAIt7B,QACnCu7B,GAAS,SAAgBh9C,GAC3B,GAAqB,SAAjBA,EAAQt4B,MAAoBs4B,EAAQj5B,UAExCi5B,EAAQj8B,OAAS,GAFjB,CAMA,IAAI/G,EAAQgjC,EAAQhjC,MAChB+J,EAASi5B,EAAQj5B,OACjBk2E,EAAiBj9C,EAAQw0B,SAAWztD,EAAOytD,QAAUx0B,EAAQswB,OAASvpD,EAAOupD,KAEjF,MAAuB,SAAhBvpD,EAAOW,KAEZ,GADAX,EAASA,EAAOA,QACXA,EAAQ,OAIf,IAA6B,IAAzBi5B,EAAQ1I,MAAMvzB,QAAwC,KAAxB/G,EAAM2c,WAAW,IAE/CojE,GAAcp7E,IAAIoF,MAMlBk2E,EAAJ,CAIAF,GAAc56E,IAAI69B,GAAS,GAK3B,IAJA,IAAIk8C,EAAS,GACT7jE,EAAQykE,GAAS9/E,EAAOk/E,GACxBgB,EAAcn2E,EAAOuwB,MAEhBl4B,EAAI,EAAGu9E,EAAI,EAAGv9E,EAAIiZ,EAAMtU,OAAQ3E,IACvC,IAAK,IAAI6C,EAAI,EAAGA,EAAIi7E,EAAYn5E,OAAQ9B,IAAK06E,IAC3C38C,EAAQ1I,MAAMqlD,GAAKT,EAAO98E,GAAKiZ,EAAMjZ,GAAGsM,QAAQ,OAAQwxE,EAAYj7E,IAAMi7E,EAAYj7E,GAAK,IAAMoW,EAAMjZ,EAT1G,CAtBA,CAkCF,EACG+9E,GAAc,SAAqBn9C,GACrC,GAAqB,SAAjBA,EAAQt4B,KAAiB,CAC3B,IAAI1K,EAAQgjC,EAAQhjC,MAGI,MAAxBA,EAAM2c,WAAW,IACO,KAAxB3c,EAAM2c,WAAW,KAEfqmB,EAAQ,UAAY,GACpBA,EAAQhjC,MAAQ,GAEnB,CACF,EA8GGogF,GAAuB,CAACrB,IAExBsB,GAAc,SAAqBlmE,GACrC,IAAIrT,EAAMqT,EAAQrT,IAMlB,GAAa,QAARA,EAAe,CAClB,IAAIw5E,EAAY94D,SAASwvB,iBAAiB,qCAK1C30C,MAAMwE,UAAUiB,QAAQuS,KAAKimE,GAAW,SAAU91E,GAOhD,IAAI+1E,EAAuB/1E,EAAK+W,aAAa,iBAEF,IAAvCg/D,EAAqBtqE,QAAQ,OAGjCuR,SAAStI,KAAKqG,YAAY/a,GAC1BA,EAAK0c,aAAa,SAAU,IAC7B,GACF,CAED,IAAIs5D,EAAgBrmE,EAAQqmE,eAAiBJ,GAS7C,IACIv8B,EAkBA48B,EAnBAj0D,EAAW,CAAC,EAEZk0D,EAAiB,GAGnB78B,EAAY1pC,EAAQ0pC,WAAar8B,SAAStI,KAC1C7c,MAAMwE,UAAUiB,QAAQuS,KAExBmN,SAASwvB,iBAAiB,wBAA2BlwC,EAAM,QAAS,SAAU0D,GAG5E,IAFA,IAAIm2E,EAASn2E,EAAK+W,aAAa,gBAAgBxK,MAAM,KAE5C3U,EAAI,EAAGA,EAAIu+E,EAAO55E,OAAQ3E,IACjCoqB,EAASm0D,EAAOv+E,KAAM,EAGxBs+E,EAAep5E,KAAKkD,EACrB,IAKH,IAAIo2E,EAAqB,CAACZ,GAAQG,IAYhC,IAAIU,EACAC,EAAoB,CAACv/E,GAUrBu9E,IAAU,SAAUtjE,GACtBqlE,EAAaryE,OAAOgN,EACrB,KACGg5B,EAAasiC,GAAW8J,EAAmBn5E,OAAO+4E,EAAeM,IAEjEC,EAAS,SAAgBxlE,GAC3B,OAAOqjE,GAAU7mE,GAAQwD,GAASi5B,EACnC,EAEDisC,EAAU,SAAgBj7D,EAAUw7D,EAAY7E,EAAO8E,GACrDJ,EAAe1E,EAUf4E,EAAOv7D,EAAWA,EAAW,IAAMw7D,EAAWzlE,OAAS,IAAMylE,EAAWzlE,QAEpE0lE,IACFC,EAAM10D,SAASw0D,EAAW9/E,OAAQ,EAErC,EAGH,IAAIggF,EAAQ,CACVp6E,IAAKA,EACLq1E,MAAO,IAAIK,GAAW,CACpB11E,IAAKA,EACL+8C,UAAWA,EACX04B,MAAOpiE,EAAQoiE,MACfM,OAAQ1iE,EAAQ0iE,OAChB90E,QAASoS,EAAQpS,QACjB40E,eAAgBxiE,EAAQwiE,iBAE1BJ,MAAOpiE,EAAQoiE,MACf/vD,SAAUA,EACV20D,WAAY,CAAC,EACb3yE,OAAQiyE,GAGV,OADAS,EAAM/E,MAAMa,QAAQ0D,GACbQ,CACR,EAED,M,iVC/WA,SAAS,GAAQtgF,GAYf,IAAK,IAJDa,EAFAd,EAAI,EAGJU,EAAI,EACJL,EAAMJ,EAAImG,OAEP/F,GAAO,IAAKK,EAAGL,GAAO,EAC3BS,EAAwB,IAApBb,EAAI+b,WAAWtb,IAAmC,IAAtB,EAAIsb,aAAatb,KAAc,GAA2B,IAAtB,EAAIsb,aAAatb,KAAc,IAA4B,IAAtB,EAAIsb,aAAatb,KAAc,GACxII,EAEe,YAAV,MAAJ,IAAyC,OAAZ,IAAM,KAAgB,IACpDA,GAEAA,IAAM,GACNd,EAEe,YAAV,MAAJ,IAAyC,OAAZ,IAAM,KAAgB,IAErC,YAAV,MAAJ,IAAyC,OAAZ,IAAM,KAAgB,IAItD,OAAQK,GAAA,KACD,EACHL,IAA8B,IAAxB,EAAIgc,WAAWtb,EAAI,KAAc,QAEpC,EACHV,IAA8B,IAAxB,EAAIgc,WAAWtb,EAAI,KAAc,OAEpC,EACHV,GAAyB,IAApBC,EAAI+b,WAAWtb,GACpBV,EAEe,YAAV,MAAJ,IAAyC,OAAZ,IAAM,KAAgB,IAKxD,UAAKA,IAAM,GACXA,EAEe,YAAV,MAAJ,IAAyC,OAAZ,IAAM,KAAgB,MAC3C,EAAIA,IAAM,MAAQ,GAAGkC,SAAS,GACzC,CCpDA,IAAIu+E,GAAe,CACjBC,wBAAyB,EACzBC,kBAAmB,EACnBC,iBAAkB,EAClBC,iBAAkB,EAClBC,QAAS,EACTC,aAAc,EACdC,gBAAiB,EACjBC,YAAa,EACbC,QAAS,EACTC,KAAM,EACNC,SAAU,EACVC,aAAc,EACdC,WAAY,EACZC,aAAc,EACdC,UAAW,EACXC,QAAS,EACTC,WAAY,EACZC,YAAa,EACbC,aAAc,EACdC,WAAY,EACZC,cAAe,EACfC,eAAgB,EAChBC,gBAAiB,EACjBC,UAAW,EACXC,cAAe,EACfC,aAAc,EACdC,iBAAkB,EAClBC,WAAY,EACZC,WAAY,EACZC,QAAS,EACTvJ,MAAO,EACPwJ,QAAS,EACTC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EACRC,KAAM,EACNC,gBAAiB,EAEjBC,YAAa,EACbC,aAAc,EACdC,YAAa,EACbC,gBAAiB,EACjBC,iBAAkB,EAClBC,iBAAkB,EAClBC,cAAe,EACfC,YAAa,GC9Cf,SAAS,GAAQpjF,GACf,IAAID,EAAQ2R,OAAOhF,OAAO,MAC1B,OAAO,SAAU7L,GACf,YAAmB,IAAfd,EAAMc,KAAoBd,EAAMc,GAAOb,EAAGa,IACvCd,EAAMc,EACjB,CACA,CCFA,IAEIwiF,GAAiB,aACjBn+E,GAAiB,8BAEjBo+E,GAAmB,SAA0BvjF,GAC/C,OAAkC,KAA3BA,EAASgc,WAAW,EAC7B,EAEIwnE,GAAqB,SAA4BxjF,GACnD,OAAgB,MAATA,GAAkC,kBAAVA,CACjC,EAEIkD,GAAkC,IAAQ,SAAUjD,GACtD,OAAOsjF,GAAiBtjF,GAAaA,EAAYA,EAAU8N,QAAQu1E,GAAgB,OAAOrjE,aAC3F,IAEG3d,GAAoB,SAA2BtC,EAAKc,GACtD,OAAQd,GAAA,IACD,gBACA,gBAED,GAAqB,iBAAVc,EACT,OAAOA,EAAMiN,QAAQ5I,IAAgB,SAAUzE,EAAOL,EAAID,GACxD,UAAS,CACPG,KAAMF,EACNua,OAAQxa,EACRwQ,KAAMxP,IAEDf,CACR,IAKT,OAAsB,IAAlBojF,GAASzjF,IAAeujF,GAAiBvjF,IAAyB,iBAAVc,GAAgC,IAAVA,EAI3EA,EAHEA,EAAQ,IAInB,EAgCA,SAAS,GAAoBb,EAAaD,EAAYc,GACpD,GAAqB,MAAjBA,EACF,MAAO,GAGT,QAAuC,IAAnCA,EAAc4iF,iBAKhB,OAAO5iF,EAGT,cAAeA,GAAA,IACR,UAED,MAAO,OAGN,SAED,GAA2B,IAAvBA,EAAc6iF,KAChB,UAAS,CACPpjF,KAAMO,EAAcP,KACpBqa,OAAQ9Z,EAAc8Z,OACtBhK,KAAMxP,IAEDN,EAAcP,KAGvB,QAA6B,IAAzBO,EAAc8Z,OAAsB,CACtC,IAAIla,EAAOI,EAAc8P,KAEzB,QAAa,IAATlQ,EAGF,UAAgB,IAATA,GACLU,GAAS,CACPb,KAAMG,EAAKH,KACXqa,OAAQla,EAAKka,OACbhK,KAAMxP,IAERV,EAAOA,EAAKkQ,KAIhB,IAAIvQ,EAASS,EAAc8Z,OAAS,IAEpC,OAIOva,CACR,CAED,OAAOujF,GAAuB3jF,EAAaD,EAAYc,GACxD,IAEE,WAED,QAAoB,IAAhBb,EAA2B,CAC7B,IAAIG,EAAiBgB,GACjBK,EAASX,EAAcb,GAC3B,UAASG,EACFwC,GAAoB3C,EAAaD,EAAYyB,EACrD,CAID,MACD,IAEE,SAcH,MAIJ,GAAkB,MAAdzB,EACF,OAAOc,EAGT,IAAIL,EAAST,EAAWc,GACxB,YAAkB,IAAXL,EAAuBA,EAASK,CACzC,CAEA,SAAS,GAAuBb,EAAaD,EAAYc,GACvD,IAAIJ,EAAS,GAEb,GAAIgB,MAAMC,QAAQb,GAChB,IAAK,IAAIT,EAAI,EAAGA,EAAIS,EAAIsF,OAAQ/F,IAC9BK,GAAUkC,GAAoB3C,EAAaD,EAAYc,EAAIT,IAAM,SAGnE,IAAK,IAAID,KAAQU,EAAK,CACpB,IAAIW,EAAQX,EAAIV,GAEhB,GAAqB,iBAAVqB,EACS,MAAdzB,QAA4C,IAAtBA,EAAWyB,GACnCf,GAAUN,EAAO,IAAMJ,EAAWyB,GAAS,IAClC+hF,GAAmB/hF,KAC5Bf,GAAUwC,GAAiB9C,GAAQ,IAAMkC,GAAkBlC,EAAMqB,GAAS,UAO5E,IAAIC,MAAMC,QAAQF,IAA8B,iBAAbA,EAAM,IAAkC,MAAdzB,QAA+C,IAAzBA,EAAWyB,EAAM,IAM7F,CACL,IAAIW,EAAeQ,GAAoB3C,EAAaD,EAAYyB,GAEhE,OAAQrB,GAAA,IACD,gBACA,gBAEDM,GAAUwC,GAAiB9C,GAAQ,IAAMgC,EAAe,IACxD,MACD,QAQC1B,GAAUN,EAAO,IAAMgC,EAAe,IAG7C,MAzBC,IAAK,IAAIN,EAAK,EAAGA,EAAKL,EAAM2E,OAAQtE,IAC9B0hF,GAAmB/hF,EAAMK,MAC3BpB,GAAUwC,GAAiB9C,GAAQ,IAAMkC,GAAkBlC,EAAMqB,EAAMK,IAAO,IAyBvF,CAGH,OAAOpB,CACT,CAEA,IASIU,GATAoB,GAAe,iCAUfgD,GAAkB,SAAyBxF,EAAMc,EAAYJ,GAC/D,GAAoB,IAAhBV,EAAKoG,QAAmC,iBAAZpG,EAAK,IAA+B,OAAZA,EAAK,SAAkC,IAAnBA,EAAK,GAAG4a,OAClF,OAAO5a,EAAK,GAGd,IAAIK,GAAa,EACbD,EAAS,GACbgB,QAAS,EACT,IAAIK,EAAUzB,EAAK,GAEJ,MAAXyB,QAAmC,IAAhBA,EAAQinC,KAC7BroC,GAAa,EACbD,GAAUwC,GAAoBlC,EAAaI,EAAYW,IAMvDrB,GAAUqB,EAAQ,GAIpB,IAAK,IAAIK,EAAI,EAAGA,EAAI9B,EAAKoG,OAAQtE,IAC/B1B,GAAUwC,GAAoBlC,EAAaI,EAAYd,EAAK8B,IAExDzB,IAKFD,GAAUqB,EAAQK,IActBU,GAAa8jE,UAAY,EAIzB,QAFI9kE,EADAf,EAAiB,GAG0B,QAAvC,EAAQ+B,GAAagd,KAAKpf,KAChCK,GAAkB,IAClBe,EAAM,GAGR,IAAIR,EAAO6iF,GAAWzjF,GAAUK,EAEhC,MAaO,CACLF,KAAMS,EACN4Z,OAAQxa,EACRwQ,KAAMxP,GAEV,ECzTI0iF,IAAY,EAChB,SAAS,GAAoB7jF,EAAYD,EAAkBc,GACzD,IAAIJ,EAAe,GACnB,SAAW0V,MAAM,KAAKjP,SAAQ,SAAU9G,QACR,IAA1BJ,EAAWI,GACbL,EAAiB2G,KAAK1G,EAAWI,GAAa,KAE9CK,GAAgBL,EAAY,GAE/B,IACMK,CACT,CACA,IAAIukB,GAAiB,SAAwBjlB,EAAOc,EAAYJ,GAC9D,IAAIL,EAAYL,EAAMmG,IAAM,IAAMrF,EAAWP,OAO5B,IAAhB,IAIa,IAAdujF,UAAyD,IAAhC9jF,EAAMwgF,WAAWngF,KACxCL,EAAMwgF,WAAWngF,GAAaS,EAAW8Z,OAE7C,EACImpE,GAAe,SAAsB/jF,EAAOc,EAAYJ,GAC1DukB,GAAejlB,EAAOc,EAAYJ,GAClC,IAAIL,EAAYL,EAAMmG,IAAM,IAAMrF,EAAWP,KAE7C,QAAwC,IAApCP,EAAM6rB,SAAS/qB,EAAWP,MAAqB,CACjD,IAAIH,EAAUU,EAEd,GACoBd,EAAM6N,OAAO/M,IAAeV,EAAU,IAAMC,EAAY,GAAID,EAASJ,EAAMw7E,OAAO,GAEpGp7E,EAAUA,EAAQwQ,gBACC,IAAZxQ,EACV,CACH,ECrCA,SAAS,GAAqBH,EAAOD,GACnC,QAAwC,IAApCC,EAAM4rB,SAAS7rB,EAAWO,MAC5B,OAAON,EAAM4N,OAAO,GAAI7N,EAAYC,EAAMu7E,OAAO,EAErD,CAEA,SAAS,GAAMv7E,EAAYD,EAAKc,GAC9B,IAAIJ,EAAmB,GACnBL,EAAe2jF,GAAoB/jF,EAAYS,EAAkBI,GAErE,OAAIJ,EAAiB0F,OAAS,EACrBtF,EAGFT,EAAeL,EAAIU,EAC5B,CAEA,IAAIujF,GAAgB,SAAuBjkF,GACzC,IAAIc,EAAQojF,GAAYlkF,GAExBc,EAAM06E,MAAMU,OAAS,SAAUp6E,GAK7BlD,KAAKq9E,SAAWn6E,CACpB,EAEEhB,EAAMu+E,QAAS,EAEf,IAAI3+E,EAAM,WACR,IAAK,IAAI0B,EAAO+rE,UAAU/nE,OAAQ3F,EAAO,IAAIiB,MAAMU,GAAOZ,EAAO,EAAGA,EAAOY,EAAMZ,IAC/Ef,EAAKe,GAAQ2sE,UAAU3sE,GAGzB,IAAIR,EAAawE,GAAgB/E,EAAMK,EAAM0/E,gBAAY,GACzD,UAAa1/E,EAAOE,GAAY,GACzBF,EAAMqF,IAAM,IAAMnF,EAAWT,IACxC,EAEMF,EAAY,WACd,IAAK,IAAI+B,EAAQ+rE,UAAU/nE,OAAQ3F,EAAO,IAAIiB,MAAMU,GAAQZ,EAAQ,EAAGA,EAAQY,EAAOZ,IACpFf,EAAKe,GAAS2sE,UAAU3sE,GAG1B,IAAIR,EAAawE,GAAgB/E,EAAMK,EAAM0/E,YACzC3/E,EAAY,aAAeG,EAAWT,KAC1C,UAAqBO,EAAO,CAC1BP,KAAMS,EAAWT,KACjBqa,OAAQ,cAAgB/Z,EAAY,IAAMG,EAAW4Z,OAAS,MAEzD/Z,CACX,EAEMT,EAAe,WACjB,IAAK,IAAIgC,EAAQ+rE,UAAU/nE,OAAQ3F,EAAO,IAAIiB,MAAMU,GAAQZ,EAAQ,EAAGA,EAAQY,EAAOZ,IACpFf,EAAKe,GAAS2sE,UAAU3sE,GAG1B,IAAIR,EAAawE,GAAgB/E,EAAMK,EAAM0/E,YAC7Cl8E,GAAqBxD,EAAOE,EAChC,EAEMS,EAAK,WACP,IAAK,IAAIW,EAAQ+rE,UAAU/nE,OAAQ3F,EAAO,IAAIiB,MAAMU,GAAQZ,EAAQ,EAAGA,EAAQY,EAAOZ,IACpFf,EAAKe,GAAS2sE,UAAU3sE,GAG1B,OAAO2iF,GAAMrjF,EAAM0/E,WAAY9/E,EAAK65B,GAAW95B,GACnD,EAEE,MAAO,CACL2jF,IAAK1jF,EACL0iB,GAAI3hB,EACJ4iF,aAAcjkF,EACdkkF,UAAWjkF,EACXg8E,QAAS,SAAiBj6E,GACxBA,EAAI+E,SAAQ,SAAU1G,GACpBK,EAAM+qB,SAASprB,IAAO,CACvB,GACF,EACDu7C,MAAO,WACLl7C,EAAM0/E,WAAa,CAAC,EACpB1/E,EAAM+qB,SAAW,CAAC,EAClB/qB,EAAM06E,MAAMx/B,OACb,EAEDw/B,MAAO16E,EAAM06E,MACb+E,MAAOz/E,EACPyjF,oBAAqBP,GAAoB3pE,KAAK,KAAMvZ,EAAM0/E,YAC1Dp2D,MAAO+5D,GAAM9pE,KAAK,KAAMvZ,EAAM0/E,WAAY9/E,GAE9C,EAEI65B,GAAa,SAAS,EAAWv6B,GAGnC,IAAK,IAFDc,EAAM,GAEDJ,EAAI,EAAGA,EAAIV,EAAKoG,OAAQ1F,IAAK,CACpC,IAAIL,EAAML,EAAKU,GACf,GAAW,MAAPL,EACJ,KAAID,OAAQ,EAEZ,cAAeC,GAAA,IACR,UACH,UAEG,SAED,GAAIqB,MAAMC,QAAQtB,GAChBD,EAAQH,EAAWI,QAInB,IAAK,IAAIoB,KAFTrB,EAAQ,GAEMC,EACRA,EAAIoB,IAAMA,IACZrB,IAAUA,GAAS,KACnBA,GAASqB,GAKf,MACD,QAICrB,EAAQC,EAIVD,IACFU,IAAQA,GAAO,KACfA,GAAOV,EAAA,CAEV,CAED,OAAOU,CACT,ECvIO,MAAM0jF,GAAevkF,GAA+BgkF,GAAchkF,GAE5DwkF,GAAmB/hF,EAAsC,CAAEyD,IAAK,YAAc,iBAC9EqG,GAAa9J,EAAgC,CAAC,EAAc,WCA5DxB,GAAsEjB,GAC/EyC,GAAa,IAAM,MAA+CzC,G,gBAS/D,MAAMykF,GAANvkF,cACHyH,GAAAA,KAAAA,GAAa+8E,KACb/8E,GAAAA,KAAAA,GAAAA,IAAsChE,KACtCgE,GAAAA,KAAAA,GAAAA,IAAsCg9E,KACtCh9E,GAAAA,KAAAA,IAAwB,QAAM,CAI9BxC,OAAqCpF,GAC7BA,EAAAA,GAAAA,KAAKsB,IAAW8C,SACxB,CAEA8pC,IAAIluC,GACA,MAAMc,EAAsB,iBAARd,EAAmBA,EAAMA,EAAIkE,UACjD,QAAIrC,GAAAA,KAAKyB,IAAO4qC,IAAIptC,IAMgB,MAA7Be,GAFMjD,KAAK0C,IAAWuC,SAAS7D,GAE1BgE,KAALnC,CAAW,KACtB,CAUA2C,IAAIxE,EAA6Bc,GAC7B,MAAMJ,EAAsB,iBAARV,EAAmBA,EAAMA,EAAIkE,UAC5CrC,GAAAA,KAAAA,IAAO2C,IAAI9D,EAAMI,EAC1B,CAEAkD,IAMEhE,EAAyBc,GACvB,MAAMJ,EAAsB,iBAARV,EAAmBA,EAAOA,EAAYkE,UACpD7D,EAAUwB,GAAAA,KAAKyB,IAAOU,IAAItD,GAChC,OAAIL,IACawB,GAAAA,KAAKP,IAAWuC,SAAS7D,GACjCwE,IAAInE,GACJwB,GAAAA,KAAAA,IAAO6wB,OAAO1yB,IAIhB6B,GAFMjD,KAAK0C,IAAWuC,SAAS7D,GAE1BgE,KAALnC,CAAWf,EACtB,CAEA+jF,QAAQ7kF,EAAgBc,GAAmB,GAClCe,GAAAA,KAAKsC,IAAe+pC,IAAIluC,IACpB6B,GAAAA,KAAAA,IAAe4jB,IAAIzlB,GAExBc,GACGd,GAEX,CAEM,aAAOA,EAAUc,GACHd,EAAIgE,IAAIwI,IAChBwvC,cACF,EAAMh8C,EAAN,CAA6BA,GACnCpB,KAAKkmF,cACLjjF,GAAAA,KAAKsC,IAAegD,SAAS9G,GAAMA,KACvC,CAEA27C,MAAMh8C,GACcA,EAAIgE,IAAIwI,IAChBwvC,QACRp9C,KAAKkmF,cACLjjF,GAAAA,KAAKsC,IAAegD,SAASzG,GAAMA,KACvC,CAEAqkF,YAAY/kF,GACCA,IACTuF,GAAAA,KAAKnC,GAAYpD,EACrB,CAEA8kF,cACIjjF,GAAAA,KAAKuB,IAAL,KAAAxE,KACJ,EArFA0C,GAAAA,IAAAA,QACAgC,GAAAA,IAAAA,QACAa,GAAAA,IAAAA,QACAf,GAAAA,IAAAA,QAqFG,MAAM4hF,GAAkBtiF,EAAY,IAAIgiF,GAAgB,gBAElDO,GAAqB,IAAM,IAAIP,GC3G/BQ,GAAchkF,GACvB,UCASmD,GAAanD,GAA4D,SCAzEikF,GAAYjkF,GAA0C,QCDtDkkF,GAAclkF,GAA+C,UCC7DmkF,GAAYnkF,GAA6C,QCczDokF,GAAiBpkF,GAA+D,cCFhFqkF,GAAarkF,GAA0D,SCKvEskF,GAAmBtkF,GAC5B,gBCCSukF,GAAiBvkF,GAAuE,cCTxFwkF,GAAoBxkF,GAAmE,kBCXvFykF,GAAiBzkF,GAI5B,aCJW0kF,GAAc1kF,GAAiD,UCC/D2kF,GAAY3kF,GAA0C,QCQtD4kF,GAAoB,CAE7BzhF,GACAwhF,GACAV,GACAQ,GACAC,GACAV,GACAG,GACAD,GAGAE,GACAC,GACAC,GACAE,GACAD,ICtBSM,GAAW9lF,IACpB,MAAMD,EAAoB,iCACpBc,EAAW,0CACXJ,EAAWD,GAAcimE,SAASjmE,EAAG,IAErCJ,EAAUJ,EAAIyG,MAAM,GAAGqH,QAAQ/N,GAAmB,CAACS,EAAGe,EAAGR,EAAGH,IACvDW,EAAIA,EAAIR,EAAIA,EAAIH,EAAIA,KAGxBT,EAAIqB,EAAI,IAAKK,EAAI,IAAKM,EAAI,KAAO/B,EAAQyS,MAAMhS,IAAa,GAE5D,OAAAV,EAAM,CAACqB,EAAGK,EAAGM,GAAGR,IAAIlB,GAAmB,IAAvC,EAGEslF,GACR/lF,GACD,CAACD,EAAcc,EAAU,IACrBb,EAAQ+D,IAAIK,GAAY,CAACrE,EAAOc,I,oPCZjC,MAAMwB,GAAe,KACxB,MAAMtC,EAAQI,GAAqBA,EAAI6lF,SAAS7/E,OAE1CnG,EAAOG,GAA6BA,EAAI6lF,SAASjmF,EAAKI,GAAO,GAqB5D,OACHkH,KAAAA,EACAmZ,IAAAA,EACA9Z,KArBCvG,GACA0B,I,MACO,kBAAM6E,KAAK7E,EAAX,EAoBRpC,KAhBCU,GACA0B,IACO1B,EAAAA,SAASuG,KAAK7E,EAAd,EAeRuM,MAZWjO,IACL,QAAKA,EAAI6lF,SAAS5vE,MACxB,IAAKvU,EAAI,MAAMwB,IAER,UAGJ,ECtBL4iF,GAAc,CAAClmF,EAAuBC,KAAeI,KACvDL,EAAQiG,QAAQU,KAAK1G,KAASI,EAA9B,EAGE8lF,GAAcnmF,GAA4CA,EAAQiG,QAAQoQ,MAEnEgQ,GAAgB,CAACrmB,EAAgBC,EAAiBI,KAC3D,MAAMS,EAAwB,CAC1BiJ,KAAAA,EACA9D,QAAAA,EACA9G,MAAAA,EACAwH,KAAM,IAAIjG,IAASwlF,GAAYplF,KAAYJ,GAC3C2V,IAAK,IAAM8vE,GAAWrlF,IAEnB,WCbHwG,KAAAA,GAAMX,KAAAA,GAAM8Z,IAAAA,GAAK/gB,KAAAA,GAAA2O,MAAMA,IAAU/L,KAEnCI,GAAW1C,GAAgDA,EAAKmI,OAEhEq7E,GAAa,CAACxjF,EAAgBC,EAASI,KACzC,GAAIqC,GAAQzC,IAAMyC,GAAQrC,IAAMqkF,EAAKzyE,QAAQhS,EAAEyM,MAAOrM,EAAEqM,OACpD,OAAO1M,EAAOoI,KAAKnI,EAAEmI,KAAO/H,EAAE+H,KAAMnI,EAAEyM,MAAtC,EAKF05E,GAAYpmF,GAAa,CAACC,EAAoBI,IAAkBX,GAAKM,EAALN,CAAU2mB,GAAcpmB,EAAU,GAAII,IAEtG2O,GACDhP,GACD,CAACC,EAAoBI,EAAeS,KAChC,MAAMJ,EAAOT,EAASoV,cAAchV,EAAOS,EAASd,EAAI0M,OAExD,IAAKhM,EAAY,QAAuBT,EAAUI,EAAOS,GAEpD6F,OAAAA,GAAAA,EAAAA,CAAKjG,GAEHA,CAFFiG,EAKP0/E,GAAarmF,GAAa,KAC5BA,EAAI0M,MAAQg4E,EAAK93E,KACX,QAAUyB,GAAMrO,GAEf,UAAQA,EAAR,CAAaC,EAAQ8J,KAAM9J,EAAQd,MAAOc,EAAQgG,QAAlD+I,EAGLs3E,GACDtmF,GACD,CAACC,EAAoBI,KACX,QAAOJ,EAAS0M,OAAOtM,GAE7BL,EAAI0M,MAAQ5L,EAAKmL,SAASjM,EAAI0M,MAA9B,EAGF65E,GACDvmF,GACAC,IACGD,EAAI0M,MAAQzM,EAASoM,cAAcrM,EAAI0M,MAAvC,EAGF85E,GACDxmF,GACAC,IACS,QAAawmF,GAAIzmF,GACvB,IAAKK,EAAY,MAAMiD,IAEjB,QAAWjD,EAAWgW,MACtB3V,EAAWV,EAAIwL,OAAOpD,KAAKnI,EAAMD,EAAI0M,OAE3C,IAAK5L,EAED,YADAT,EAAWsG,KAAKjG,GAIpB,MAAMN,EAASojF,GAAWxjF,EAAIwL,OAAQ1K,EAAUJ,GAC5CN,EACAC,EAAWsG,KAAKvG,GAGTC,EAAAA,KAAKS,EAAUJ,EAAf,EAGbgmF,GAAS1mF,GAAa,KACxB,IAAIC,EACD,GACOA,EAAAA,GAAUD,EAAVC,SACDqH,GAAKtH,IAEP,UAGE2mF,GAAe3mF,IACxB,MAAMC,EAAW,CACbyM,MAAO,GACPu5E,SAAU,GACVz6E,OAAAA,GAGG,OACHk7E,MAAOA,GAAMzmF,GACbqmF,SAAUA,GAASrmF,GACnBsmF,UAAWA,GAAUtmF,GACrB2mF,QAASJ,GAAQvmF,GACjBmmF,SAAUA,GAASnmF,GACnB+O,QAASA,GAAQ/O,GACjBomF,UAAWA,GAAUpmF,GAPlB,E,gBCpFJ,MAAM4mF,GACT1mF,YACqBF,EACDI,EACCS,GAGrBM,GAAAA,KAAAA,IAQAA,GAAAA,KAAAA,IAbqB,KAAA6+B,MAAA,EACD,KAAAz0B,OAAAnL,EACC,KAAAymF,QAAA,EA4Bf,UAACpmF,EAAsBN,KACzB,MAAM0B,EAAOpB,EAAOo5E,QAAQp5E,EAAOwZ,MAAM9Z,GAAWA,GACpD,OAAAxB,KAAKgS,KAAK9O,GAEHlD,IAFP,EAYG,WAAC8B,EAAuC,MAC1C,IAAOqmF,OAAO5/E,SAAS/G,GAASoB,GAAAA,KAAKK,GAAAwC,IAAL,KAAAzF,KAAcwB,KACxCxB,MAQH,eAAYA,KAAKqhC,MAAMymD,QAUlB,iBAAChmF,EAAoBN,EAAoB0B,KAC7C,KAAAm+B,MAAMmmD,SAAShmF,EAAU0B,GACzB,KAAA8O,KAAKlQ,EAAKilC,UAER/mC,MASD,cAAC8B,EAAO,MACT,KAAAu/B,MAAM2mD,QAAQlmF,GACZ9B,MAeX,KAAAoQ,QAAU,IAAItO,KACL,KAAAu/B,MAAMjxB,WAAWtO,GACf9B,MAcX,KAAAwnF,SAAW,IAAI1lF,KACN,KAAAu/B,MAAMmmD,YAAY1lF,GAChB9B,MAQX,KAAAynF,UAAY,IAAI3lF,KACP,KAAAu/B,MAAMomD,aAAa3lF,GACjB9B,MAcX,KAAA0nF,SAAW,IAAI5lF,KACN,KAAAu/B,MAAMqmD,YAAY5lF,GAChB9B,MAUX,KAAA2nF,UAAY,IAAI7lF,KACP,KAAAu/B,MAAMsmD,aAAa7lF,GACjB9B,KAnJR,EAEHogF,GAAAA,IAAAA,QAAAA,GAAAA,SAAa/+E,GACT,MAAMI,EAASsR,OAAO7N,OAAOlF,KAAKkoF,SAAS/iF,MAAMjD,GAAMA,EAAEgS,MAAM7S,KAE/D,IAAKI,EAAQ,MAAMmF,EAAiBvF,GAE7B,QACX,EAEA4B,GAAAA,IAAAA,QAAAwC,GAAAA,SAASpE,GACL,MAAQkG,IAAAA,EAAK6gF,OAAAA,EAAQ5mC,GAAAA,GAAO5+C,GAAAA,KAAKw9E,GAAAp3E,IAAL,KAAAhJ,KAAkBqB,GAExCG,EAAiCxB,KAAK4M,OAAc,SAAP9K,EAAgB,QAAU,SAASL,GAI/ES,EAAAA,KAAMb,EAAMG,EACvB,EC7BG,MAAM6mF,GAAe,CAACjnF,EAAgBC,EAA6BI,KACtE,MAAMS,EAAQ,IAAI+lF,GAAMF,GAAY3mF,GAASA,EAAQC,GACrD,OAAQS,IACEI,EAAAA,IAAIT,EAAQK,GACXI,EAAMomF,QAFjB,ECGEC,GAAc,CAACnnF,EAAuBC,KAAuBI,KAC1DL,EAAQ2lC,WACT3lC,EAAQ2lC,SAAW,IAEvB3lC,EAAQ2lC,SAASh/B,KAAK1G,KAASI,EAH1B,EAMH+mF,GAAcpnF,I,MAAoD,gBAAAA,EAAQ2lC,eAAR,IAAkBtvB,KAAlB,EAE3D3S,GAAgB,CACzB1D,EACAC,EACAI,EACAS,EAAoB,CAAC,KAErB,MAAMJ,EAAwB,CAC1BqJ,KAAAA,EACA47B,SAAAA,EACAhM,MAAAA,EACAt6B,MAAAA,EACAsH,KAAM,IAAIvG,IAAS+mF,GAAYzmF,KAAYN,GAC3CiW,IAAK,IAAM+wE,GAAW1mF,IAEnB,WCvBH4G,KAAAA,GAAMX,KAAAA,GAAMjH,KAAAA,GAAM2O,MAAAA,IAAU/L,KAE9BypD,GAAa,CAAC/rD,EAAqBC,K,MAKjC,GAJAD,EAAM+J,OAAS9J,GAIY,KAA3B,OAAA6B,EAAA,EAAM6jC,eAAN,EAAA7jC,EAAgBsE,QACT,SAGL,MAAA/F,EAAcoB,I,MACZ,KAAKsI,OAAS9J,EACP,SAGP,GAA0B,KAA1B,WAAK0lC,eAAL,IAAev/B,QACR,YAGL,MAACpF,GAAcS,EAAKkkC,SAC1B,OAAK3kC,EAEEX,EAAWW,GAFM,IAAxB,EAKEF,EAAST,EAAWL,GAE1B,IAAKc,EAAe,SAEpB,MAAMJ,EAAMI,EAAO6kC,SAAW,IAAI7kC,EAAO6kC,eAAY,EAC/CvlC,EAAO,IAAKJ,EAAO2lC,SAAUjlC,GACnC,SAAKilC,SAAWjlC,EACTI,EAAAA,SAAW,CAACV,GAEZU,CAHP,EAMEyiF,GAAsBvjF,IACxB,MAAQ2lC,SAAAA,GAAa3lC,EACrB,OAAKC,IAELD,EAAQ2lC,SAAW1lC,EAASsB,QAAO,CAAClB,EAAcS,EAAOJ,KACrD,GAAc,IAAVA,EACA,MAAO,CAACI,GAEN,QAAOT,EAAaA,EAAa+F,OAAS,GAChD,GAAIhG,GAAQA,EAAKinF,QAAavmF,EAAMumF,OAAW,CACnCvmF,EAAAA,GAAWA,EAAOV,EAAK2J,MACzB,MAAE47B,SAAU7jC,KAAiBL,GAAaX,GACxC6kC,SAAU3kC,KAAiBH,GAAaT,EAChD,GACIU,EAAMiJ,OAAS3J,EAAK2J,MACpBjI,GACAd,GACAL,KAAKC,UAAUa,KAAcd,KAAKC,UAAUC,GAC9C,CACE,MAAMymF,EAAO,IACNzmF,EACH8kC,SAAU,IAAI3kC,KAAiBc,IAE5B,SAAa4E,MAAM,GAAI,GAAGI,OAAOy8E,GAAmB+D,GAC/D,CACJ,CACO,SAAaxgF,OAAOhG,EAApB,GACR,KAEId,CA3BP,EA8BEunF,GAAsBvnF,IACxB,MAAMC,EAAqB,IACpBD,EAAQ25B,MACX5vB,KAAM/J,EAAQ+J,MAGlB,OAAI/J,EAAQ2lC,WACR1lC,EAAK0lC,SAAW3lC,EAAQ2lC,UAGxB3lC,EAAQX,QACRY,EAAKZ,MAAWW,EAAQX,OAGrBY,CARP,EAWE6C,GACD9C,GACD,CAACC,EAAcI,EAAgBS,IAC3B0mF,GAAKxnF,EAALwnF,CAAU9jF,GAAczD,EAAM,GAAII,EAAOS,IAE3CkC,GACDhD,GACD,CAACC,EAAcI,EAA2BS,EAAgBJ,KACtD,MAAMN,EAAUsD,GAAczD,EAAMI,EAAUS,EAAOJ,GAC/CoB,EAAqByhF,GAAmBgE,GAAmBnnF,IAE5D,aAAK0B,GAEHA,CAFF,EAKPR,GAAatB,GAAa,KACtB,QAAUynF,GAAMznF,GAEf,UAAQA,EAAR,CAAaC,EAAQ8J,KAAM9J,EAAQ0lC,SAAU1lC,EAAQZ,MAAOY,EAAQ05B,MAApE,EAGL+tD,GACD1nF,GACD,CAACC,EAAYI,EAAcS,EAAgBJ,KAC1BT,EAAKqM,QAAQtM,EAAI0M,SAK9B1M,EAAI0M,MAAQzM,EAAKgM,SAASjM,EAAI0M,OACrB5J,GAAAA,EAAAA,CAAKzC,EAAMS,EAAO,IAAKJ,EAAO2mF,QAAQ,IANlC,EASfM,GACD3nF,GACAC,GACQA,EAAKqM,QAAQtM,EAAI0M,QACtB1M,EAAI0M,MAAQzM,EAAK8J,KAAKsC,cAAcrM,EAAI0M,OACjCpL,GAAUtB,EAAVsB,IAF8B,KAKvCsmF,GAAS5nF,GAAa,KACxB,IAAIC,EAAmB,KACpB,GACOA,EAAAA,GAAUD,EAAVC,SACD4nF,GAAK7nF,IAEP,UA8DE8nF,GAAc,KACvB,MAAM9nF,EAAW,CACb0M,MAAO,GACPu5E,SAAU,IAGP,OACHS,MAAOkB,GAAM5nF,GACbsmF,SAAUoB,GAAS1nF,GACnBumF,UAAWoB,GAAU3nF,GACrBomF,SAAUtjF,GAAS9C,GACnBgP,QAAShM,GAAQhD,GACjBqmF,UAAW/kF,GAAUtB,GANlB,EChNL+nF,GAAc/nF,GAA2C2R,OAAOzL,UAAUuT,eAAeC,KAAK1Z,EAAG,Q,4BAQhG,MAAMgoF,GACT7nF,YACqBF,EACDI,EACCS,GAGrBM,GAAAA,KAAAA,IAeAA,GAAAA,KAAAA,IAKAA,GAAAA,KAAAA,IAKAA,GAAAA,KAAAA,IA9BqB,KAAA6+B,MAAA,EACD,KAAAz0B,OAAAnL,EACC,KAAAymF,QAAA,EA0DrB,KAAA5kF,SAAYxB,GAAiCA,EAAOE,UAAUhC,KAAKqhC,MAAMymD,SASzE,KAAA91E,KAAQlQ,GACAqnF,GAAWrnF,IACLA,EAAAA,SAASN,IACXoB,GAAAA,KAAKf,GAAAmC,IAAL,KAAAhE,KAAcwB,EAAd,IAEGxB,OAEX4C,GAAAA,KAAKf,GAAAmC,IAAL,KAAAhE,KAAc8B,GACP9B,MAgBX,KAAAoQ,QAAkC,IAAItO,KAC7B,KAAAu/B,MAAMjxB,WAAWtO,GACf9B,MAeX,KAAAwnF,SAAoC,IAAI1lF,KAC/B,KAAAu/B,MAAMmmD,YAAY1lF,GAChB9B,MAQX,KAAAynF,UAAsC,IAAI3lF,KACjC,KAAAu/B,MAAMomD,aAAa3lF,GACjB9B,MAaX,KAAAqpF,SAAoC,IAAIvnF,KAC/B,KAAAu/B,MAAMqmD,YAAY5lF,GAChB9B,KAtIR,CA6CHkqD,IAAI7oD,GACA,OAAArB,KAAKgS,KAAK3Q,GAEHrB,IACX,EA/CAsC,GAAAA,IAAAA,QAAAA,GAAAA,SACIjB,GAEM,QAAS0R,OAAOu2E,QAAQtpF,KAAKkoF,SAC9BllF,KAAI,EAAEd,EAAKJ,MAAP,CACDyF,IAAAA,KACGzF,MAENqD,MAAMjD,GAAMA,EAAEgS,MAAM7S,KAEzB,IAAKI,EAAc,QAAqBJ,EAAK8J,MAEtC,QACX,EAEA3H,GAAAA,IAAAA,QAAAkC,GAAAA,SAAcrE,GACV,MAAQ+mF,OAAAA,GAAWxlF,GAAAA,KAAKN,GAAAsB,IAAL,KAAA5D,KAAkBqB,GACrCI,EAAOzB,KAAMqB,EACjB,EAEAiD,GAAAA,IAAAA,QAAAilF,GAAAA,SAAcloF,EAAiBI,GAC3B,MAAQ2mF,OAAAA,GAAWxlF,GAAAA,KAAKN,GAAAsB,IAAL,KAAA5D,KAAkBqB,GAC9B,SAAOrB,KAAMqB,EAAMI,EAC9B,EAEAI,GAAAA,IAAAA,QAAAmC,GAAAA,SAAS3C,GACL,MAAQyM,MAAAA,GAAUzM,EACZa,EAAegB,I,MAAiB,kBAAEiI,KAAK9H,KAAKga,UAAZ,EAA2B,EAA3B,EAGlC,IAFY5b,GAAOwM,MAAK,CAAC/K,EAAGL,IAAMX,EAAYgB,GAAKhB,EAAYW,KACzC2mF,OAAOtmF,IAAUN,GAAAA,KAAK0B,GAAAilF,IAAL,KAAAvpF,KAAmBkD,EAAM7B,MAEhEuB,GAAAA,KAAKY,GAAAkC,IAAL,KAAA1F,KAAmBqB,GAEvBI,EAAM8G,SAASrF,GAASlD,KAAKqhC,MAAMsmD,UAAUzkF,IACjD,ECjDG,MAAMumF,GACT,CAACroF,EAAgBC,EAAiCI,IAA0BS,IACxE,MAAMJ,EAAQ,IAAIsnF,GAAMF,KAAe9nF,EAAQC,GAC/C,SAAM6oD,IAAIhoD,GACHJ,EAAMwB,SAAS7B,EADtB,E,qVCRK,SAAciB,EAAY,eAE1BgnF,GACRxnF,GACAd,IACGA,EAAIqF,OAAOE,IAEJP,gBACGlE,EAAUb,GAChBA,EAAI6E,KAAKS,GADT,GCQCgjF,GAAgB7nF,EAAY,GAAe,cAC3CikF,GAAwBrjF,EAAY,yBACpCojF,GAAapjF,EAAY,cAEhC6E,GAAM,IAAI+9E,GAAU,wBAEbsE,GAAoC1nF,IAC7C,MAAMd,EAAeyoF,KAEjB,SAAArjF,OAAOhC,IACNgC,OAAOD,IACPC,OAAOsjF,GAAiB1oF,GACxBoF,OAAOmjF,GAAe,CAAChjF,KACvBF,OAAOq/E,IACPr/E,OAAOs/E,IAEL3/E,gBACG,EAAID,WAAWwjF,IACrB,MAAMnoF,EAAUuoF,GAAY1oF,EAAI+D,IAAIZ,KAElB6hF,GAAAA,SAASxjF,IACvBzB,EAAaoF,OAAO3D,EAApB,IAGAxB,EAAAA,IAAIkF,GAAY/E,GAEpBH,EAAI6E,KAAK6/E,IACT1kF,EAAI6E,KAAK4/E,UAEH,EAAI7/E,KAAKnC,IACfzC,EAAIwE,OAAO8+E,IAAkB9hF,GACzBA,EAAGqF,OACC,IAAI8hF,GAAO,CAAAziF,IACPA,GACAo4B,KAAM,KACFv+B,EAAa8kF,cACN,CACHx+C,QAAS,KACLlmC,EAAQ47C,OAAR,QAlBN,CAXlB,EA4CK6sC,GAAgB/nF,IACzB,IAAId,EAAqC,KACnC,MAAAC,EAAqB,IAAM+E,gBACvB,EAAIH,KAAK8/E,IACT,QAAUvkF,EAAI4D,IAAImB,IAClB3D,EAAepB,EAAI4D,IAAI0kF,IAE7BlnF,EAAaujF,aAAY,KACrBjkF,MAAAA,GAAAA,EAAkBW,EAASD,GAC3BxB,MAAAA,GAAAA,EAAayB,EAASD,GAEJyjF,GAAAA,SAASpkF,IAClBW,EAAa0sC,IAAIrtC,IACV+zB,QAAAA,KAAK,wBAAyB/zB,EAAIqD,UADzC,IAKI1C,EAAAA,IAAIsnF,QAAa,EAT9B,GADJ,EAaE,SAAAC,SAAY3oF,IACDJ,EAAAA,EACNC,GAEJA,CAJD,EC/EGyC,GAAYpB,EAAY,aAExBwiF,GAAepjF,EAAY,GAAe,aAC1CsoF,GAAYtoF,EAAY,CAAC,EAAa,UAEtC0kF,GAAgB1kF,EAAY,GAAmB,cAC/C6iF,GAAkB7iF,EAAY,GAAgB,gBAC9CuoF,GAAmBvoF,EAAY,GAAsB,iBAGrDqlF,GAAcrlF,EAAY,GAAkB,YAE5CwoF,GAAcxoF,EAAY,GAAkB,YAE5CynF,GAAiCznF,EAAY8L,KAAU7H,IAAIjB,IAAaiB,IAAI3B,IAAkB,UAC9FmmF,GAAyC,CAAC,EAC1CvF,GAA4BljF,EAAYyoF,GAA+B,0BAEvEC,GACRtoF,GACAd,IACGA,EAAIoF,OAAO4jF,GAAWloF,GACjBsE,OAAOm+E,IACPn+E,OAAO6jF,IACP7jF,OAAOggF,IACPhgF,OAAO2gF,IACP3gF,OAAO8jF,IACP9jF,OAAOw+E,IACPx+E,OAAO+iF,GAAW37E,KAAU7H,IAAIjB,IAAaiB,IAAI3B,KACjDoC,OAAO0+E,GAAc,CAACY,KACtBr/E,OAAO3C,IAELsC,gBACG,EAAID,WAAW++E,IACf,MAAA1jF,EAAUH,EAAI+D,IAAI4/E,IACpB3jF,EAAAA,IAAIkoF,GAAW37E,KAAU7H,IAAIjB,IAAaiB,IAAI3B,GAAiB5C,IAEnEH,EAAI6E,KAAKpC,GAFL,GClCHF,GAAclB,EAAY,eAE1B+C,GAAY3D,EAAY,CAAC,EAAa,UACtCukB,GAAiBvkB,EAAY,GAAe,eAQ5CkH,GAAWlH,EAAY,GAAmC,SAM1D+lF,GAAW/lF,EAAY,GAAmC,SAEjEqjF,GAAqDjjF,I,MAChD,UACAA,EACHqb,SAAU,WAAEA,eAAF,IAAYva,KAAK3B,IAAD,CAAagc,SAAUnb,EAAEmb,YAAahc,MAF7D,EAMEopF,GAA0BvoF,IACnCA,EAAIsE,OAAOf,IAAWe,OAAOwC,IAAUxC,OAAOqhF,IAAUrhF,OAAO6f,GAAgB,CAACviB,KAAY2C,OAAO7C,IAE5FwC,gBACG,EAAID,WAAWkgB,IAEf,QAASjlB,EAAIgE,IAAImkF,IAGjB1mF,EAAYzB,EAFQgE,IAAIilF,IAEE1nF,QAAO,CAACL,EAAmBb,IAASa,EAAIyD,IAAItE,IAAOJ,GAC/ED,EAAAA,IAAImoF,GAAW1mF,GAEnB,MAAMD,EAAQmQ,OAAO23E,YAAYtpF,EAAIgE,IAAI4D,IAAUhG,KAAI,EAAEV,EAAKb,KAAO,CAACa,EAAK6iF,GAAe1jF,OACpFQ,EAAQ8Q,OAAO23E,YAAYtpF,EAAIgE,IAAIyiF,IAAU7kF,KAAI,EAAEV,EAAKb,KAAO,CAACa,EAAK6iF,GAAe1jF,OAEtFL,EAAAA,IACAqE,GACA,IAAIklF,GAAO,CACP39E,MAAAA,EACAc,MAAAA,KAIR1M,EAAI8E,KAAKtC,GARL,GC5CCgnF,GAAY9oF,GAAa,QAA4B,UACrDujF,GAAiBvjF,EAAY,GAAe,eAE5C+/E,GAAcn/E,EAAY,eAE1BmoF,GAA0B3oF,IAC/BA,EAAAA,OAAO0oF,IAAWpkF,OAAO6+E,GAAgB,CAACzhF,KAAc6C,OAAOo7E,IAE5Dz7E,gBACG,EAAID,WAAWk/E,IACf,QAAQjkF,EAAIgE,IAAI4D,IAChBxH,EAAQJ,EAAIgE,IAAIyiF,IAChBhlF,EAASzB,EAAIgE,IAAImkF,IACjB3mF,EAASxB,EAAIgE,IAAIK,IAEjBxD,EAAW,IACVZ,EAAM2B,KAAI,EAAEvB,EAAIe,MAAN,CAAgB6C,GAAAA,KAAO7C,MAAMQ,KAAKvB,IAAD,IAAgBA,EAAM+/C,GAAI,cACrEhgD,EAAMwB,KAAI,EAAEvB,EAAIe,MAAN,CAAgB6C,GAAAA,KAAO7C,MAAMQ,KAAKvB,IAAD,IAAgBA,EAAM+/C,GAAI,YAEtEl/C,EAA2ByQ,OAAO23E,YACpCzoF,EAASe,KAAI,EAAGqC,GAAAA,EAAIylF,cAAAA,EAAetpC,GAAAA,KAAS,CAAC//C,EAAI,IAAKe,EAAeg/C,GAAAA,EAAIj6C,IAAK9F,OAGlFL,EAAIwE,IAAIglF,GAAWG,GAAanoF,EAAQN,EAAMO,IAC9CzB,EAAI8E,KAAK27E,GADT,GC1BKlmD,GAAgB75B,GAA6D,IAAM,IAAI,cACvFwkF,GAAqBxkF,EAAY,GAAe,mBAEhDyjF,GAAkB7iF,EAAY,mBAE9BsoF,GAA8B9oF,IACnCA,EAAAA,OAAOy5B,IAAen1B,OAAO8/E,GAAoB,CAAC1iF,KAAc6C,OAAO8+E,IAEpEn/E,gBACG,EAAID,WAAWmgF,IACf,QAAQllF,EAAIgE,IAAI4D,IAChBxH,EAAQJ,EAAIgE,IAAIyiF,IAChBhlF,EAASzB,EAAIgE,IAAImkF,IACjB3mF,EAASxB,EAAIgE,IAAIK,IAEjBxD,EAAW,IAAIZ,KAAUG,GACzBc,EAAOyQ,OAAO23E,YAAYzoF,EAASe,KAAI,EAAEvB,EAAIe,KAAW,CAACf,EAAIe,EAAM+zE,eAEzEn1E,EAAIwE,IAAI+1B,GAAesvD,GAAiBroF,EAAQN,EAAMO,IACtDzB,EAAI8E,KAAKq/E,GADT,GCNKgB,GAAkBzkF,EAAY,GAAoB,gBAClD4mF,GAAiB5mF,EAAY,CAAC,EAAkB,eAChD6kF,GAAwB7kF,GAAmCI,GAAMA,GAAG,gBACpE0kF,GAAsB9kF,EAAY,GAAe,oBAEjD4iF,GAAmBhiF,EAAY,oBAEtC6E,GAAM,IAAI+9E,GAAU,0BAEb4F,GAAS,CAAChpF,EAA4Bd,EAAgBC,KAC3D,GAAwB,iBAAjBa,EACP,OAAOd,EAAOc,GAGd,GAAsB,SAAtB,EAAaiJ,KACb,OAAOggF,GAAAA,WAAqB9pF,GAAQia,MAAMpZ,EAAaoa,KAGvD,GAAsB,SAAtB,EAAanR,KACb,OAAOigF,GAAAA,SAAc/pF,EAAQa,EAAazB,OAG9C,MAAM4qF,EAAanpF,EAAnB,EAGSopF,GAA+BppF,IACxCA,EAAIsE,OAAO+/E,IACN//E,OAAOkiF,IACPliF,OAAOmgF,IACPngF,OAAOogF,GAAqB,CAAC/E,GAAa0D,GAAiBgG,KAC3D9kF,OAAOi+E,IAELt+E,gBACG,EAAID,WAAWygF,IAEf,QAASxlF,EAAIgE,IAAIK,IACjBjE,EAASJ,EAAIgE,IAAIwlF,IACjB/nF,EAAQzB,EAAIgE,IAAIohF,IAChB5jF,EAAkBxB,EAAIgE,IAAIuhF,IAC1B1kF,EAAeb,EAAIgE,IAAIu/E,IACvBriF,EAAelB,EAAIgE,IAAImhF,IACvB9kF,EAAMypF,GAAO5oF,EAAcd,EAAQH,GAEnCmB,EAAU,IACTP,EACH,IAAI+nF,GAAO,CAAAziF,IACPA,GACA0R,MAAO,CACHggB,KAAM,OAGN9M,MAAO,CAACi7D,EAAK9iF,EAAQ8kF,EAAWvD,KACxBzkF,EAAAA,IAAIsnF,GAAgB7C,EAApB,KAIhB2F,GAAiB,CAAE1vE,MAAAA,IACnB2vE,GAAarF,KAGbhlF,EAAAA,IAAIujF,GAAiBniF,GAEzB,MAAMoE,EAAUhE,EAAgB,CAC5BgK,OAAAA,EACA0E,IAAAA,EACAkoB,QAAAA,IAGEv2B,EAAQyoF,GAAY39E,OAAOnH,GAC7BxF,EAAAA,IAAIsnF,GAAgBzlF,GACxB7B,EAAI8E,KAAKw+E,GADL,GC7ECiH,GAAgB7pF,EAAY,CAAC,EAAiB,cAC9CglF,GAAuBhlF,EAAY,CAAC,EAA6B,qBACjE+kF,GAAU/kF,EAAY,KAAkB,QACxC2kF,GAAqB3kF,EAAY,GAAe,mBAChDmlF,GAAanlF,EAAY,KAAgC,WAEzDoC,GAAkBxB,EAAY,mBAErCumF,GAAsB,CAAC/mF,EAAYd,KAC/B,QAAY6mB,SAASR,cAAc,OACzC,SAAUmoB,UAAY,WACtB1tC,EAAK8jB,YAAY3kB,GACbD,EAAAA,IAAI6lF,GAAY5lF,GAEbA,CAJP,EAOEmnF,GAAkBtmF,IAChBA,EAAAA,UAAU2kB,IAAI,UACd3kB,EAAAA,aAAa,OAAQ,UADrB,EAIF0pF,GAAM,IAAItG,GAAU,uBAEbiD,GAA8BrmF,IACnCA,EAAAA,OAAO2kF,GAAS5+D,SAASiY,MACxB15B,OAAOmlF,IACPnlF,OAAOsgF,IACPtgF,OAAOygF,IACPzgF,OAAOigF,GAAoB,CAAC/B,KAC5Bj+E,OAAOvC,IAELkC,gBACG,EAAIH,KAAKnC,IAEf,MAAMzC,EAAOD,EAAIgE,IAAIyhF,KAAY5+D,SAASiY,KACpC1+B,EAAqB,iBAATH,EAAoB4mB,SAAS/D,cAAc7iB,GAAQA,EAEjED,EAAAA,OAAOujF,IAAkBniF,GAAO,CAChC,IAAIwnF,GAAO,CACPziF,IAAAA,GACAo4B,KAAO/4B,IACH,MAAM3D,EAAYzB,EAAKynF,GAAoBznF,EAAIJ,QAAO,EAS5C,MAPQ,MACd,GAAI6B,GAAazB,EAAI,CACjB,MAAM8C,EAASsC,EAAW0V,IACvB9a,EAAAA,aAAayB,EAAWqB,GAC3BrB,EAAU+iB,YAAY1hB,EAC1B,CALc,KAQX,CACHojC,QAAS,KACDzkC,MAAAA,GAAAA,EAAWke,aACXle,MAAAA,GAAAA,EAAWke,WAAWrV,aAAalF,EAAW0V,IAAKrZ,IAEvDA,MAAAA,GAAAA,EAAW4E,QAHP,EAHF,OAWfrF,WAGD,EAAI2D,WAAWsgF,IAEf,QAAQrlF,EAAIgE,IAAIsjF,IAChB9lF,EAAUxB,EAAIgE,IAAI0hF,IAClB7kF,EAAY8Q,OAAO23E,YAAYtpF,EAAIgE,IAAI+hF,KACvC7kF,EAAYyQ,OAAO23E,YAAYtpF,EAAIgE,IAAIklF,KACvC7oF,EAAO,IAAIoqF,GAAWrqF,EAAY,CACpCyX,MAAAA,EACAuxB,UAAAA,EACAshD,UAAAA,KACGlpF,IAEP4lF,GAAe/mF,EAAK6a,KAChBlb,EAAAA,IAAIuqF,GAAelqF,GACvBL,EAAI8E,KAAKhC,GAFT,G,UC5ED,MAAM2kF,GAANtnF,cACHa,GAAAA,KAAAA,QAAAA,GACAA,GAAAA,KAAAA,QAAAA,GADAP,GAAAA,KAAAA,GAAa+jF,KACM/jF,GAAAA,KAAAA,GAAAA,MAEnB,KAAAkqF,OAAU3qF,IACNS,GAAAA,KAAK6B,GAAOtC,EAAZ,CACJ,CAQA2M,OAAU3M,EAAiBC,GACvB,OAAOD,EAAK8B,GAAAA,KAAKM,IAAWgC,SAAUnE,EAC1C,CASA+D,IAAIhE,GACA,OAAO8B,GAAAA,KAAKM,IAAWyB,SAAS7D,GAAOgE,KAC3C,CAQA0V,KAAK1Z,EAA6BC,GAC1B,GAAa,MAAb,GAAArB,KAAK0D,IACL,MAAMsjF,IAGJ,QAAU,KADC5hF,IAAIhE,EACL,CAAIC,GACduB,EAAOM,GAAAA,KAAKQ,IAAK0B,IAAIumF,IAC3B,OAAO9oF,EAAQD,EAAKqW,MAAOrW,EAAK4wC,SAAU5wC,EAC9C,EA1CAY,GAAAA,IAAAA,QACAE,GAAAA,IAAAA,QA8CG,MAAMsoF,GAAY,CAAI9pF,EAAgBd,IAA4B,CAACc,EAAKd,GAClE6qF,GAAe,CAAgB/pF,EAAM,WAC9CJ,GAAa,IAAM,KAAM,GAAkBI,GAElCirD,GAAcrrD,EAAY,CAAC,EAAqB,YAEhD4kF,GAAmB5kF,EAAY,GAAe,iBAC9CypF,GAAgB7oF,EAAY,iBAE5BkmF,GAA4B1mF,IAC/B,QAAiB,IAAI2mF,GACvB,SAAAriF,OAAO2mD,GAAa/rD,GAAgBoF,OAAOkgF,GAAkB,CAAC9iF,KAAc6C,OAAO8kF,IAChFnlF,gBACG,EAAID,WAAWugF,IAErBrlF,EAAI6E,KAAKqlF,UACH,EAAItlF,KAAK/B,IACf9C,EAAe2qF,OAAO1qF,EAJhB,CAFN,E,yBCtDD,MAAM+jF,GAAN,MAAA7jF,cAUHa,GAAAA,KAAAA,QAAAA,GACAA,GAAAA,KAAAA,QAAAA,GAEAA,GAAAA,KAAAA,QAAAA,GACAA,GAAAA,KAAAA,QAAAA,GAEAA,GAAAA,KAAAA,QAAAA,GACAA,GAAAA,KAAAA,QAAAA,GAEAA,GAAAA,KAAAA,QAAAA,GATAP,GAAAA,KAAS6D,GAAakgF,KACtB/jF,GAAAA,KAAS+C,GAASsiF,KAETrlF,GAAAA,KAAAA,GAAAA,IAAgCmkF,KACzCnkF,GAAAA,KAAS0D,GAA+B,IAExC1D,GAAAA,KAASmC,GAAO,IAAIkoF,EAAIhpF,GAAAA,KAAKwC,IAAYxC,GAAAA,KAAK0B,MAC9C/C,GAAAA,KAAS+iF,GAAO,IAAIuH,EAAIjpF,GAAAA,KAAKwC,IAAYxC,GAAAA,KAAK0B,MAE9C/C,GAAAA,KAAS6C,IAAgB,KACrB,MAAMtD,EAAkB,CACpBwoF,GACAa,GACAI,GACAG,GACApC,GACA0C,GACA/C,GACAiC,GAAKxqF,OAEHqB,EAAeqoF,IAAOtjF,gBAClBC,QAAQC,IAAIpD,GAAAA,KAAKqC,IAAevC,KAAKH,GAAOA,EAAGrB,KAA/C,IAEVxB,KAAK+F,IAAI3E,EAAgB8G,OAAO7G,GAAhC,IAyBK,KAAA0E,IAAO3E,IACZ,CAACA,GAAS+mF,OAAO5/E,SAASlH,IACtB6B,GAAAA,KAAKk9E,IAASv5D,IAAIxlB,EAAO6B,GAAAA,KAAK0hF,KAA9B,IAEG5kF,MASF,KAAAm5B,OAAU/3B,IACV8B,GAAAA,KAAAA,IAAe6E,KAAK3G,GAClBpB,MAaX,KAAS+N,OAAS3H,UACdlD,GAAAA,KAAKwB,IAAL,KAAA1E,YACMqG,QAAQC,IAAI,IAAIpD,GAAAA,KAAKk9E,KAAUp9E,KAAK5B,GAAWA,EAAO8B,GAAAA,KAAKc,QAC1DhE,MA2BX,KAASosF,OAAahrF,GAA4BA,EAAO8B,GAAAA,KAAKc,IAAI,CA9G3D,cACH,OAAO,IAAIohF,EACf,CAiCIiH,UACA,OAAOnpF,GAAAA,KAAKc,GAChB,GA3CG,IAAM+iF,GAAN3B,GAUH1/E,GAAAA,IAAAA,QACAd,GAAAA,IAAAA,QAEAw7E,GAAAA,IAAAA,QACA76E,GAAAA,IAAAA,QAEAvB,GAAAA,IAAAA,QACA4gF,GAAAA,IAAAA,QAEAlgF,GAAAA,IAAAA,QCrCJ,IAAI4nF,GAAiB,IAKjBC,GAAe,WAA2B,EAE9CA,GAAajlF,UAAUsB,OAAS,SAAiByC,GAC/C,OAAKA,EAAM7D,QACX6D,EAAQkhF,GAAa9jF,KAAK4C,IAEjBrL,KAAKwH,QAAU6D,GACrBA,EAAM7D,OAAS8kF,IAAkBtsF,KAAKwsF,WAAWnhF,IACjDrL,KAAKwH,OAAS8kF,IAAkBjhF,EAAMohF,YAAYzsF,OACnDA,KAAK0sF,YAAYrhF,IANSrL,IAO7B,EAIDusF,GAAajlF,UAAUkB,QAAU,SAAkB6C,GACjD,OAAKA,EAAM7D,OACJ+kF,GAAa9jF,KAAK4C,GAAOzC,OAAO5I,MADXA,IAE7B,EAEDusF,GAAajlF,UAAUolF,YAAc,SAAsBrhF,GACzD,OAAO,IAAIshF,GAAO3sF,KAAMqL,EACzB,EAIDkhF,GAAajlF,UAAUQ,MAAQ,SAAgBW,EAAM6B,GAInD,YAHgB,IAAT7B,IAAkBA,EAAO,QAClB,IAAP6B,IAAgBA,EAAKtK,KAAKwH,QAE7BiB,GAAQ6B,EAAaiiF,GAAa1gF,MAC/B7L,KAAK4sF,WAAW1iF,KAAKS,IAAI,EAAGlC,GAAOyB,KAAKC,IAAInK,KAAKwH,OAAQ8C,GACjE,EAIDiiF,GAAajlF,UAAUlC,IAAM,SAAcvC,GACzC,KAAIA,EAAI,GAAKA,GAAK7C,KAAKwH,QACvB,OAAOxH,KAAK6sF,SAAShqF,EACtB,EAOD0pF,GAAajlF,UAAUiB,QAAU,SAAkB/E,EAAGiF,EAAM6B,QAC1C,IAAT7B,IAAkBA,EAAO,QAClB,IAAP6B,IAAgBA,EAAKtK,KAAKwH,QAE7BiB,GAAQ6B,EACRtK,KAAK8sF,aAAatpF,EAAGiF,EAAM6B,EAAI,GAE/BtK,KAAK+sF,qBAAqBvpF,EAAGiF,EAAM6B,EAAI,EAC5C,EAKDiiF,GAAajlF,UAAUtE,IAAM,SAAcQ,EAAGiF,EAAM6B,QAClC,IAAT7B,IAAkBA,EAAO,QAClB,IAAP6B,IAAgBA,EAAKtK,KAAKwH,QAEjC,IAAIqB,EAAS,GAEb,OADA7I,KAAKuI,SAAQ,SAAUy3B,EAAKn9B,GAAK,OAAOgG,EAAOd,KAAKvE,EAAEw8B,EAAKn9B,GAAM,GAAE4F,EAAM6B,GAClEzB,CACR,EAKD0jF,GAAa9jF,KAAO,SAAevD,GACjC,OAAIA,aAAkBqnF,GAAuBrnF,EACtCA,GAAUA,EAAOsC,OAAS,IAAIwlF,GAAK9nF,GAAUqnF,GAAa1gF,KAClE,EAED,IAAImhF,GAAqB,SAAUT,GACjC,SAASS,EAAK9nF,GACZqnF,EAAazxE,KAAK9a,MAClBA,KAAKkF,OAASA,CACf,CAEIqnF,IAAeS,EAAK/4D,UAAYs4D,GACrCS,EAAK1lF,UAAYyL,OAAOhF,OAAQw+E,GAAgBA,EAAajlF,WAC7D0lF,EAAK1lF,UAAU/F,YAAcyrF,EAE7B,IAAIC,EAAqB,CAAEzlF,OAAQ,CAAE0lF,cAAc,GAAO59E,MAAO,CAAE49E,cAAc,IAyCjF,OAvCAF,EAAK1lF,UAAU6lF,QAAU,WACvB,OAAOntF,KAAKkF,MACb,EAED8nF,EAAK1lF,UAAUslF,WAAa,SAAqBnkF,EAAM6B,GACrD,OAAY,GAAR7B,GAAa6B,GAAMtK,KAAKwH,OAAiBxH,KACtC,IAAIgtF,EAAKhtF,KAAKkF,OAAO4C,MAAMW,EAAM6B,GACzC,EAED0iF,EAAK1lF,UAAUulF,SAAW,SAAmBhqF,GAC3C,OAAO7C,KAAKkF,OAAOrC,EACpB,EAEDmqF,EAAK1lF,UAAUwlF,aAAe,SAAuBtpF,EAAGiF,EAAM6B,EAAII,GAChE,IAAK,IAAI7H,EAAI4F,EAAM5F,EAAIyH,EAAIzH,IACvB,IAAqC,IAAjCW,EAAExD,KAAKkF,OAAOrC,GAAI6H,EAAQ7H,GAAgB,OAAO,CAC1D,EAEDmqF,EAAK1lF,UAAUylF,qBAAuB,SAA+BvpF,EAAGiF,EAAM6B,EAAII,GAChF,IAAK,IAAI7H,EAAI4F,EAAO,EAAG5F,GAAKyH,EAAIzH,IAC5B,IAAqC,IAAjCW,EAAExD,KAAKkF,OAAOrC,GAAI6H,EAAQ7H,GAAgB,OAAO,CAC1D,EAEDmqF,EAAK1lF,UAAUklF,WAAa,SAAqBnhF,GAC/C,GAAIrL,KAAKwH,OAAS6D,EAAM7D,QAAU8kF,GAC9B,OAAO,IAAIU,EAAKhtF,KAAKkF,OAAOgD,OAAOmD,EAAM8hF,WAC9C,EAEDH,EAAK1lF,UAAUmlF,YAAc,SAAsBphF,GACjD,GAAIrL,KAAKwH,OAAS6D,EAAM7D,QAAU8kF,GAC9B,OAAO,IAAIU,EAAK3hF,EAAM8hF,UAAUjlF,OAAOlI,KAAKkF,QACjD,EAED+nF,EAAmBzlF,OAAOpC,IAAM,WAAc,OAAOpF,KAAKkF,OAAOsC,MAAQ,EAEzEylF,EAAmB39E,MAAMlK,IAAM,WAAc,OAAO,CAAG,EAEvD2N,OAAOq6E,iBAAkBJ,EAAK1lF,UAAW2lF,GAElCD,CACR,CApDwB,CAoDvBT,IAIFA,GAAa1gF,MAAQ,IAAImhF,GAAK,IAE9B,IAAIL,GAAuB,SAAUJ,GACnC,SAASI,EAAOhuD,EAAMC,GACpB2tD,EAAazxE,KAAK9a,MAClBA,KAAK2+B,KAAOA,EACZ3+B,KAAK4+B,MAAQA,EACb5+B,KAAKwH,OAASm3B,EAAKn3B,OAASo3B,EAAMp3B,OAClCxH,KAAKsP,MAAQpF,KAAKS,IAAIg0B,EAAKrvB,MAAOsvB,EAAMtvB,OAAS,CAClD,CA0DD,OAxDKi9E,IAAeI,EAAO14D,UAAYs4D,GACvCI,EAAOrlF,UAAYyL,OAAOhF,OAAQw+E,GAAgBA,EAAajlF,WAC/DqlF,EAAOrlF,UAAU/F,YAAcorF,EAE/BA,EAAOrlF,UAAU6lF,QAAU,WACzB,OAAOntF,KAAK2+B,KAAKwuD,UAAUjlF,OAAOlI,KAAK4+B,MAAMuuD,UAC9C,EAEDR,EAAOrlF,UAAUulF,SAAW,SAAmBhqF,GAC7C,OAAOA,EAAI7C,KAAK2+B,KAAKn3B,OAASxH,KAAK2+B,KAAKv5B,IAAIvC,GAAK7C,KAAK4+B,MAAMx5B,IAAIvC,EAAI7C,KAAK2+B,KAAKn3B,OAC/E,EAEDmlF,EAAOrlF,UAAUwlF,aAAe,SAAuBtpF,EAAGiF,EAAM6B,EAAII,GAClE,IAAI2iF,EAAUrtF,KAAK2+B,KAAKn3B,OACxB,QAAIiB,EAAO4kF,IAC2D,IAAlErtF,KAAK2+B,KAAKmuD,aAAatpF,EAAGiF,EAAMyB,KAAKC,IAAIG,EAAI+iF,GAAU3iF,QAEvDJ,EAAK+iF,IAC6G,IAAlHrtF,KAAK4+B,MAAMkuD,aAAatpF,EAAG0G,KAAKS,IAAIlC,EAAO4kF,EAAS,GAAInjF,KAAKC,IAAInK,KAAKwH,OAAQ8C,GAAM+iF,EAAS3iF,EAAQ2iF,UADzG,EAGD,EAEDV,EAAOrlF,UAAUylF,qBAAuB,SAA+BvpF,EAAGiF,EAAM6B,EAAII,GAClF,IAAI2iF,EAAUrtF,KAAK2+B,KAAKn3B,OACxB,QAAIiB,EAAO4kF,IACkG,IAAzGrtF,KAAK4+B,MAAMmuD,qBAAqBvpF,EAAGiF,EAAO4kF,EAASnjF,KAAKS,IAAIL,EAAI+iF,GAAWA,EAAS3iF,EAAQ2iF,QAE5F/iF,EAAK+iF,IACqE,IAA1ErtF,KAAK2+B,KAAKouD,qBAAqBvpF,EAAG0G,KAAKC,IAAI1B,EAAM4kF,GAAU/iF,EAAII,UADnE,EAGD,EAEDiiF,EAAOrlF,UAAUslF,WAAa,SAAqBnkF,EAAM6B,GACvD,GAAY,GAAR7B,GAAa6B,GAAMtK,KAAKwH,OAAU,OAAOxH,KAC7C,IAAIqtF,EAAUrtF,KAAK2+B,KAAKn3B,OACxB,OAAI8C,GAAM+iF,EAAkBrtF,KAAK2+B,KAAK72B,MAAMW,EAAM6B,GAC9C7B,GAAQ4kF,EAAkBrtF,KAAK4+B,MAAM92B,MAAMW,EAAO4kF,EAAS/iF,EAAK+iF,GAC7DrtF,KAAK2+B,KAAK72B,MAAMW,EAAM4kF,GAASzkF,OAAO5I,KAAK4+B,MAAM92B,MAAM,EAAGwC,EAAK+iF,GACvE,EAEDV,EAAOrlF,UAAUklF,WAAa,SAAqBnhF,GACjD,IAAI5B,EAAQzJ,KAAK4+B,MAAM4tD,WAAWnhF,GAClC,GAAI5B,EAAS,OAAO,IAAIkjF,EAAO3sF,KAAK2+B,KAAMl1B,EAC3C,EAEDkjF,EAAOrlF,UAAUmlF,YAAc,SAAsBphF,GACnD,IAAI5B,EAAQzJ,KAAK2+B,KAAK8tD,YAAYphF,GAClC,GAAI5B,EAAS,OAAO,IAAIkjF,EAAOljF,EAAOzJ,KAAK4+B,MAC5C,EAED+tD,EAAOrlF,UAAUolF,YAAc,SAAsBrhF,GACnD,OAAIrL,KAAK2+B,KAAKrvB,OAASpF,KAAKS,IAAI3K,KAAK4+B,MAAMtvB,MAAOjE,EAAMiE,OAAS,EACtD,IAAIq9E,EAAO3sF,KAAK2+B,KAAM,IAAIguD,EAAO3sF,KAAK4+B,MAAOvzB,IACjD,IAAIshF,EAAO3sF,KAAMqL,EACzB,EAEMshF,CACR,CAlE0B,CAkEzBJ,IAEEe,GAAef,GAEnB,MC5LA,MAAMgB,GAAkB,IACxB,MAAMC,GACFjsF,YAAYiuD,EAAOi+B,GACfztF,KAAKwvD,MAAQA,EACbxvD,KAAKytF,WAAaA,CACrB,CAGDC,SAASz0E,EAAO00E,GACZ,GAAuB,GAAnB3tF,KAAKytF,WACL,OAAO,KACX,IAQIG,EAAO3+D,EARPxkB,EAAMzK,KAAKwvD,MAAMhoD,OACrB,MAAQiD,IAAO,CACX,IAAIuH,EAAOhS,KAAKwvD,MAAMpqD,IAAIqF,EAAM,GAChC,GAAIuH,EAAK4kB,UAAW,GACdnsB,EACF,KACH,CACJ,CAEGkjF,IACAC,EAAQ5tF,KAAK6tF,UAAUpjF,EAAKzK,KAAKwvD,MAAMhoD,QACvCynB,EAAU2+D,EAAMrjE,KAAK/iB,QAEzB,IACIovB,EAAWk3D,EADX1jC,EAAYnxC,EAAMkU,GAElB4gE,EAAW,GAAI3lF,EAAY,GA+B/B,OA9BApI,KAAKwvD,MAAMjnD,SAAQ,CAACoqD,EAAM9vD,KACtB,IAAK8vD,EAAKnlC,KAON,OANKogE,IACDA,EAAQ5tF,KAAK6tF,UAAUpjF,EAAK5H,EAAI,GAChCosB,EAAU2+D,EAAMrjE,KAAK/iB,QAEzBynB,SACA7mB,EAAUL,KAAK4qD,GAGnB,GAAIi7B,EAAO,CACPxlF,EAAUL,KAAK,IAAIimF,GAAKr7B,EAAK3vD,MAC7B,IAAgDA,EAA5CwqB,EAAOmlC,EAAKnlC,KAAKxqB,IAAI4qF,EAAM9lF,MAAMmnB,IACjCzB,GAAQ48B,EAAUh2B,UAAU5G,GAAMlc,MAClCtO,EAAMonD,EAAUv/B,QAAQN,KAAK6/B,EAAUv/B,QAAQN,KAAK/iB,OAAS,GAC7DumF,EAAShmF,KAAK,IAAIimF,GAAKhrF,OAAK0E,OAAWA,EAAWqmF,EAASvmF,OAASY,EAAUZ,UAElFynB,IACIjsB,GACA4qF,EAAMnjE,UAAUznB,EAAKisB,EAC5B,MAEGm7B,EAAUh2B,UAAUu+B,EAAKnlC,MAE7B,OAAImlC,EAAK/7B,WACLA,EAAYg3D,EAAQj7B,EAAK/7B,UAAU5zB,IAAI4qF,EAAM9lF,MAAMmnB,IAAY0jC,EAAK/7B,UACpEk3D,EAAY,IAAIN,GAAOxtF,KAAKwvD,MAAM1nD,MAAM,EAAG2C,GAAK7B,OAAOR,EAAU6O,UAAU/O,OAAO6lF,IAAY/tF,KAAKytF,WAAa,IACzG,QAHX,CAIC,GACFztF,KAAKwvD,MAAMhoD,OAAQ,GACf,CAAEsmF,UAAWA,EAAW1jC,YAAWxzB,UAAWA,EACxD,CAEDq3D,aAAa7jC,EAAWxzB,EAAWs3D,EAAaP,GAC5C,IAAIQ,EAAW,GAAIV,EAAaztF,KAAKytF,WACjCW,EAAWpuF,KAAKwvD,MAAO6+B,GAAYV,GAAiBS,EAAS5mF,OAAS4mF,EAAShpF,IAAIgpF,EAAS5mF,OAAS,GAAK,KAC9G,IAAK,IAAI3E,EAAI,EAAGA,EAAIunD,EAAUl7B,MAAM1nB,OAAQ3E,IAAK,CAC7C,IACiEyrF,EAD7D9gE,EAAO48B,EAAUl7B,MAAMrsB,GAAGwnB,OAAO+/B,EAAUj2B,KAAKtxB,IAChD8vD,EAAO,IAAIq7B,GAAK5jC,EAAUv/B,QAAQN,KAAK1nB,GAAI2qB,EAAMoJ,IACjD03D,EAASD,GAAYA,EAAS7iE,MAAMmnC,MACpCA,EAAO27B,EACHzrF,EACAsrF,EAAS12E,MAET22E,EAAWA,EAAStmF,MAAM,EAAGsmF,EAAS5mF,OAAS,IAEvD2mF,EAASpmF,KAAK4qD,GACV/7B,IACA62D,IACA72D,OAAYlvB,GAEXimF,IACDU,EAAW17B,EAClB,CACD,IAAI47B,EAAWd,EAAaS,EAAY5+E,MAKxC,OAJIi/E,EAAWC,KACXJ,EAAWK,GAAaL,EAAUG,GAClCd,GAAcc,GAEX,IAAIf,GAAOY,EAASxlF,OAAOulF,GAAWV,EAChD,CACDI,UAAUplF,EAAM6B,GACZ,IAAIigB,EAAO,IAAID,GAMf,OALAtqB,KAAKwvD,MAAMjnD,SAAQ,CAACoqD,EAAM9vD,KACtB,IAAI6rF,EAAiC,MAArB/7B,EAAKg8B,cAAwB9rF,EAAI8vD,EAAKg8B,cAAgBlmF,EAChE8hB,EAAKA,KAAK/iB,OAASmrD,EAAKg8B,kBAAejnF,EAC7C6iB,EAAKE,UAAUkoC,EAAK3vD,IAAK0rF,EAAzB,GACDjmF,EAAM6B,GACFigB,CACV,CACDqkE,QAAQ9hF,GACJ,OAAuB,GAAnB9M,KAAKytF,WACEztF,KACJ,IAAIwtF,GAAOxtF,KAAKwvD,MAAM5mD,OAAOkE,EAAM9J,KAAIA,GAAO,IAAIgrF,GAAKhrF,MAAQhD,KAAKytF,WAC9E,CAKDoB,QAAQC,EAAkBC,GACtB,IAAK/uF,KAAKytF,WACN,OAAOztF,KACX,IAAIgvF,EAAe,GAAItkF,EAAQR,KAAKS,IAAI,EAAG3K,KAAKwvD,MAAMhoD,OAASunF,GAC3DlkE,EAAUikE,EAAiBjkE,QAC3BokE,EAAWH,EAAiB5/D,MAAM1nB,OAClCimF,EAAaztF,KAAKytF,WACtBztF,KAAKwvD,MAAMjnD,SAAQoqD,IAAcA,EAAK/7B,WAClC62D,GAAY,GAAK/iF,GACrB,IAAIwkF,EAAWH,EACf/uF,KAAKwvD,MAAMjnD,SAAQoqD,IACf,IAAI1pD,EAAM4hB,EAAQG,YAAYkkE,GAC9B,GAAW,MAAPjmF,EACA,OACJgmF,EAAW/kF,KAAKC,IAAI8kF,EAAUhmF,GAC9B,IAAIjG,EAAM6nB,EAAQN,KAAKthB,GACvB,GAAI0pD,EAAKnlC,KAAM,CACX,IAAIA,EAAOshE,EAAiB5/D,MAAMjmB,GAAKohB,OAAOykE,EAAiB36D,KAAKlrB,IAChE2tB,EAAY+7B,EAAK/7B,WAAa+7B,EAAK/7B,UAAU5zB,IAAI6nB,EAAQ/iB,MAAMonF,EAAW,EAAGjmF,IAC7E2tB,GACA62D,IACJuB,EAAajnF,KAAK,IAAIimF,GAAKhrF,EAAKwqB,EAAMoJ,GACzC,MAEGo4D,EAAajnF,KAAK,IAAIimF,GAAKhrF,GAC9B,GACF0H,GACH,IAAIykF,EAAU,GACd,IAAK,IAAItsF,EAAIksF,EAAclsF,EAAIosF,EAAUpsF,IACrCssF,EAAQpnF,KAAK,IAAIimF,GAAKnjE,EAAQN,KAAK1nB,KACvC,IAAI2sD,EAAQxvD,KAAKwvD,MAAM1nD,MAAM,EAAG4C,GAAO9B,OAAOumF,GAASvmF,OAAOomF,GAC1DI,EAAS,IAAI5B,GAAOh+B,EAAOi+B,GAG/B,OAFI2B,EAAOC,iBAAmB9B,KAC1B6B,EAASA,EAAOE,SAAStvF,KAAKwvD,MAAMhoD,OAASwnF,EAAaxnF,SACvD4nF,CACV,CACDC,iBACI,IAAIj9D,EAAQ,EAGZ,OAFApyB,KAAKwvD,MAAMjnD,SAAQoqD,IAAeA,EAAKnlC,MACnC4E,GAAO,IACJA,CACV,CAODk9D,SAAS3pE,EAAO3lB,KAAKwvD,MAAMhoD,QACvB,IAAIomF,EAAQ5tF,KAAK6tF,UAAU,EAAGloE,GAAOsJ,EAAU2+D,EAAMrjE,KAAK/iB,OACtDgoD,EAAQ,GAAI2D,EAAS,EA2BzB,OA1BAnzD,KAAKwvD,MAAMjnD,SAAQ,CAACoqD,EAAM9vD,KACtB,GAAIA,GAAK8iB,EACL6pC,EAAMznD,KAAK4qD,GACPA,EAAK/7B,WACLu8B,SAEH,GAAIR,EAAKnlC,KAAM,CAChB,IAAIA,EAAOmlC,EAAKnlC,KAAKxqB,IAAI4qF,EAAM9lF,MAAMmnB,IAAWjsB,EAAMwqB,GAAQA,EAAKjC,SAInE,GAHA0D,IACIjsB,GACA4qF,EAAMnjE,UAAUznB,EAAKisB,GACrBzB,EAAM,CACN,IAAIoJ,EAAY+7B,EAAK/7B,WAAa+7B,EAAK/7B,UAAU5zB,IAAI4qF,EAAM9lF,MAAMmnB,IAC7D2H,GACAu8B,IACJ,IAAuDm7B,EAAnDiB,EAAU,IAAIvB,GAAKhrF,EAAIqnB,SAAUmD,EAAMoJ,GAAoBtrB,EAAOkkD,EAAMhoD,OAAS,GACjF8mF,EAAS9+B,EAAMhoD,QAAUgoD,EAAMlkD,GAAMkgB,MAAM+jE,IAC3C//B,EAAMlkD,GAAQgjF,EAEd9+B,EAAMznD,KAAKwnF,EAClB,CACJ,MACQ58B,EAAK3vD,KACVisB,GACH,GACFjvB,KAAKwvD,MAAMhoD,OAAQ,GACf,IAAIgmF,GAAOjB,GAAAA,KAAkB/8B,EAAMv4C,WAAYk8C,EACzD,EAGL,SAASs7B,GAAaj/B,EAAOttD,GACzB,IAAIstF,EAOJ,OANAhgC,EAAMjnD,SAAQ,CAACoqD,EAAM9vD,KACjB,GAAI8vD,EAAK/7B,WAAqB,GAAP10B,IAEnB,OADAstF,EAAW3sF,GACJ,CACV,IAEE2sD,EAAM1nD,MAAM0nF,EACtB,CAVDhC,GAAO3hF,MAAQ,IAAI2hF,GAAOjB,GAAAA,MAAoB,GAW9C,MAAMyB,GACFzsF,YAEAyB,EAEAwqB,EAIAoJ,EAGA+3D,GACI3uF,KAAKgD,IAAMA,EACXhD,KAAKwtB,KAAOA,EACZxtB,KAAK42B,UAAYA,EACjB52B,KAAK2uF,aAAeA,CACvB,CACDnjE,MAAMngB,GACF,GAAIrL,KAAKwtB,MAAQniB,EAAMmiB,OAASniB,EAAMurB,UAAW,CAC7C,IAAIpJ,EAAOniB,EAAMmiB,KAAKhC,MAAMxrB,KAAKwtB,MACjC,GAAIA,EACA,OAAO,IAAIwgE,GAAKxgE,EAAKjC,SAASlB,SAAUmD,EAAMxtB,KAAK42B,UAC1D,CACJ,EAKL,MAAM64D,GACFluF,YAAY2E,EAAMwpF,EAAQC,EAAYC,GAClC5vF,KAAKkG,KAAOA,EACZlG,KAAK0vF,OAASA,EACd1vF,KAAK2vF,WAAaA,EAClB3vF,KAAK4vF,SAAWA,CACnB,EAEL,MAAMpB,GAAiB,GAEvB,SAAS30D,GAAiB0gD,EAASthE,EAAOkU,EAAIvS,GAC1C,IAAwCi0E,EAApCgB,EAAY1iE,EAAGwL,QAAQm3D,IAC3B,GAAID,EACA,OAAOA,EAAUE,aACjB5iE,EAAGwL,QAAQq3D,MACXzV,EAAU,IAAIkV,GAAalV,EAAQr0E,KAAMq0E,EAAQmV,OAAQ,KAAM,IACnE,IAAIO,EAAW9iE,EAAGwL,QAAQ,uBAC1B,GAAuB,GAAnBxL,EAAG+B,MAAM1nB,OACT,OAAO+yE,EAEN,GAAI0V,GAAYA,EAASt3D,QAAQm3D,IAClC,OAAIG,EAASt3D,QAAQm3D,IAAYI,KACtB,IAAIT,GAAalV,EAAQr0E,KAAK+nF,aAAa9gE,OAAIzlB,EAAWkT,EAASu1E,GAAkBl3E,IAASshE,EAAQmV,OAAQU,GAAUjjE,EAAGtC,QAAQN,KAAK4C,EAAG+B,MAAM1nB,OAAS,IAAK+yE,EAAQqV,UAEvK,IAAIH,GAAalV,EAAQr0E,KAAMq0E,EAAQmV,OAAOzB,aAAa9gE,OAAIzlB,EAAWkT,EAASu1E,GAAkBl3E,IAAS,KAAMshE,EAAQqV,UAEtI,IAAmC,IAA/BziE,EAAGwL,QAAQ,iBAA+Bs3D,IAAiD,IAArCA,EAASt3D,QAAQ,gBAO3E,OAAIk2D,EAAU1hE,EAAGwL,QAAQ,YAGnB,IAAI82D,GAAalV,EAAQr0E,KAAK2oF,QAAQ1hE,EAAI0hE,GAAUtU,EAAQmV,OAAOb,QAAQ1hE,EAAI0hE,GAAUwB,GAAU9V,EAAQoV,WAAYxiE,EAAGtC,SAAU0vD,EAAQqV,UAG5I,IAAIH,GAAalV,EAAQr0E,KAAK0oF,QAAQzhE,EAAGtC,QAAQN,MAAOgwD,EAAQmV,OAAOd,QAAQzhE,EAAGtC,QAAQN,MAAO8lE,GAAU9V,EAAQoV,WAAYxiE,EAAGtC,SAAU0vD,EAAQqV,UAbnD,CAExG,IAAIU,EAA+B,GAApB/V,EAAQqV,WAAkBK,IAAa1V,EAAQqV,UAAYziE,EAAGuK,MAAQ,GAAK9c,EAAQ21E,gBAC7FC,GAAarjE,EAAIotD,EAAQoV,aAC1BA,EAAaM,EAAWI,GAAU9V,EAAQoV,WAAYxiE,EAAGtC,SAAWulE,GAAUjjE,EAAGtC,QAAQN,KAAK4C,EAAG+B,MAAM1nB,OAAS,IACpH,OAAO,IAAIioF,GAAalV,EAAQr0E,KAAK+nF,aAAa9gE,EAAImjE,EAAWr3E,EAAM2d,UAAUjB,mBAAgBjuB,EAAWkT,EAASu1E,GAAkBl3E,IAASu0E,GAAO3hF,MAAO8jF,EAAYxiE,EAAGuK,KAChL,CASJ,CACD,SAAS84D,GAAapmC,EAAWulC,GAC7B,IAAKA,EACD,OAAO,EACX,IAAKvlC,EAAU91B,WACX,OAAO,EACX,IAAIm8D,GAAW,EAMf,OALArmC,EAAUv/B,QAAQN,KAAK,GAAGhiB,SAAQ,CAACmC,EAAOD,KACtC,IAAK,IAAI5H,EAAI,EAAGA,EAAI8sF,EAAWnoF,OAAQ3E,GAAK,EACpC6H,GAASilF,EAAW9sF,EAAI,IAAM4H,GAAOklF,EAAW9sF,KAChD4tF,GAAW,EAAX,IAELA,CACV,CACD,SAASL,GAAUptF,GACf,IAAI6F,EAAS,GAEb,OADA7F,EAAIuF,SAAQ,CAACyuB,EAAOC,EAAKxuB,EAAM6B,IAAOzB,EAAOd,KAAKU,EAAM6B,KACjDzB,CACV,CACD,SAASwnF,GAAUhnE,EAAQwB,GACvB,IAAKxB,EACD,OAAO,KACX,IAAIxgB,EAAS,GACb,IAAK,IAAIhG,EAAI,EAAGA,EAAIwmB,EAAO7hB,OAAQ3E,GAAK,EAAG,CACvC,IAAI4F,EAAOoiB,EAAQ7nB,IAAIqmB,EAAOxmB,GAAI,GAAIyH,EAAKugB,EAAQ7nB,IAAIqmB,EAAOxmB,EAAI,IAAK,GACnE4F,GAAQ6B,GACRzB,EAAOd,KAAKU,EAAM6B,EACzB,CACD,OAAOzB,CACV,CAGD,SAAS6nF,GAAgBnW,EAASthE,EAAOu6B,EAAU08C,GAC/C,IAAIvC,EAAgBwC,GAAkBl3E,GAClCi1E,EAAc4B,GAAW1qF,IAAI6T,GAAO5V,KAAK81B,OACzC1hB,GAAOy4E,EAAO3V,EAAQmV,OAASnV,EAAQr0E,MAAMwnF,SAASz0E,EAAO00E,GACjE,IAAKl2E,EACD,OACJ,IAAImf,EAAYnf,EAAImf,UAAUhkB,QAAQ6E,EAAI2yC,UAAU94C,KAChDic,GAAS2iE,EAAO3V,EAAQr0E,KAAOq0E,EAAQmV,QAAQzB,aAAax2E,EAAI2yC,UAAWnxC,EAAM2d,UAAUjB,cAAeu4D,EAAaP,GACvHgD,EAAU,IAAIlB,GAAaS,EAAO3iE,EAAQ9V,EAAIq2E,UAAWoC,EAAOz4E,EAAIq2E,UAAYvgE,EAAO,KAAM,GACjGimB,EAAS/7B,EAAI2yC,UAAUvzB,aAAaD,GAAW8B,QAAQo3D,GAAY,CAAEI,OAAMH,aAAcY,IAAW93D,iBACvG,CACD,IAAI+3D,IAAsB,EAAOC,GAA6B,KAK9D,SAASV,GAAkBl3E,GACvB,IAAIugB,EAAUvgB,EAAMugB,QACpB,GAAIq3D,IAA8Br3D,EAAS,CACvCo3D,IAAsB,EACtBC,GAA6Br3D,EAC7B,IAAK,IAAI32B,EAAI,EAAGA,EAAI22B,EAAQhyB,OAAQ3E,IAChC,GAAI22B,EAAQ32B,GAAGQ,KAAKytF,qBAAsB,CACtCF,IAAsB,EACtB,KACH,CACR,CACD,OAAOA,EACV,CASD,MAAMd,GAAa,IAAI30D,GAAU,WAC3B60D,GAAkB,IAAI70D,GAAU,gBAUtC,SAASo/C,GAAQphD,EAAS,CAAC,GAGvB,OAFAA,EAAS,CAAE7pB,MAAO6pB,EAAO7pB,OAAS,IAC9BihF,cAAep3D,EAAOo3D,eAAiB,KACpC,IAAIz1D,GAAO,CACdvzB,IAAKuoF,GACL72E,MAAO,CACHggB,OACI,OAAO,IAAIw2D,GAAajC,GAAO3hF,MAAO2hF,GAAO3hF,MAAO,KAAM,EAC7D,EACDsgB,MAAMgB,EAAI4jE,EAAM93E,GACZ,OAAO4gB,GAAiBk3D,EAAM93E,EAAOkU,EAAIgM,EAC5C,GAELA,SACA4B,MAAO,CACHotB,gBAAiB,CACbjJ,YAAYvf,EAAMv+B,GACd,IAAI+9C,EAAY/9C,EAAE+9C,UACd6xC,EAAuB,eAAb7xC,EAA6B8xC,GAAoB,eAAb9xC,EAA6B+wC,GAAO,KACtF,QAAKc,IAEL5vF,EAAE+5C,iBACK61C,EAAQrxD,EAAK1mB,MAAO0mB,EAAK6T,UACnC,KAIhB,CAID,MAAMy9C,GAAO,CAACh4E,EAAOu6B,KACjB,IAAIu9C,EAAOjB,GAAW70D,SAAShiB,GAC/B,SAAK83E,GAAgC,GAAxBA,EAAK7qF,KAAKunF,cAEnBj6C,GACAk9C,GAAgBK,EAAM93E,EAAOu6B,GAAU,IACpC,EAAP,EAKE08C,GAAO,CAACj3E,EAAOu6B,KACjB,IAAIu9C,EAAOjB,GAAW70D,SAAShiB,GAC/B,SAAK83E,GAAkC,GAA1BA,EAAKrB,OAAOjC,cAErBj6C,GACAk9C,GAAgBK,EAAM93E,EAAOu6B,GAAU,IACpC,EAAP,EC5ZS,SAAwB,EAAGiyC,aAAAA,KAA4BrkF,CAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECE9D8vF,GAAW,CAAC9vF,GAAyBokF,IAAAA,MACjC,QAAUM,GAAW1kF,GACrBU,EAASV,EAAQgE,IAAI1B,GAAW,UAChCc,EAAYpD,EAAQgE,IAAI1B,GAAW,aAElC;4BACiBlC,EAAQ;iBACnBA,EAAQ;;;yBAGAM;uBACFV,EAAQgE,IAAIR,GAAW;;;;;;;;;6BASjB9C;;;gCAGGN,EAAQ;;;qBAGnBA,EAAQ,UAAW;;;;;cAK1BJ,EAAQgE,IAAIxB,QAAa;cACzBxC,EAAQgE,IAAIK,QAAa;;;;;;;;yBAQdjE,EAAQ,QAAS;+BACXgD,WAAmBhD,EAAQ;;;;;kCAKxBA,EAAQ;6BACbA,EAAQ;;;;;;;;;;;;;;;;;;8BAkBPA,EAAQ,YAAa;yBAC1BA,EAAQ;;;;;;;;;;;;;;;;;;;gCAmBDA,EAAQ;;;;;;cAM1BJ,EAAQgE,IAAIsjF,GAAgB,CAAC;cAC7BtnF,EAAQgE,IAAIxB,QAAa;cACzBxC,EAAQgE,IAAIK,QAAa;;KAxF5B,EA6FEoiF,GAAY,CAACzmF,EAAuBoC,KACrCpC,EAAAA,IAAwB,cAAc,EAAGmwC,SAAAA,EAAU4/C,iBAAAA,EAAkBC,OAAAA,EAAQC,QAAAA,EAASC,aAAAA,MACpF,MAAApuF,EAAY+kB,SAASR,cAAc,OACnCpmB,EAAgB4mB,SAASR,cAAc,OACvChmB,EAASwmB,SAASR,cAAc,MAChCnlB,EAAM2lB,SAASR,cAAc,OAC7B7kB,EAAOqlB,SAASR,cAAc,QAE9BvlB,EAAe+lB,SAASR,cAAc,OAC5CvlB,EAAa0tC,UAAY,sBAEnB,QAAQ3nB,SAASR,cAAc,QACrCvlB,EAAa8jB,YAAYnjB,GAEzB,MAAMT,EAAWhB,EAAQgE,IAAItB,GAAW,aACpCtC,KAAcY,GACDF,EAAAA,YAAYE,EAASka,KAEtC1Z,EAAK2uF,YAAa,EAClBlwF,EAAcuuC,UAAY,8BAC1BvuC,EAAcs8B,gBAAkB,QAChCt8B,EAAcuH,OAAO1G,GACrBb,EAAcuH,OAAOnH,GACrBa,EAAIsG,OAAOhG,GACL,QAAcqlB,SAASR,cAAc,OAC3C7kB,EAAKgG,OAAO/G,GACZA,EAAYsa,MAAMipC,WAAa,UACrBliD,EAAAA,OAAO7B,EAAeiB,GAEtBY,EAAAA,UAAU2jB,IAAI,cAExBzlB,EAAQ6kF,SAAQ,KACN,QAAQiL,GAAS9vF,EAASoC,GAC5BQ,GACUd,EAAAA,UAAU2jB,IAAI7iB,EADxB,IAKRvC,EAAOmuC,UAAY,2BACZnuC,EAAAA,iBAAiB,aAAcuC,IAIlC,GAHAA,EAAEm3C,iBACFn3C,EAAEwtF,mBAEGhwF,IAAY,OAEjB,MAAMkD,EAAKV,EAAEqM,OACb,KAAoB3L,aAAAA,eAAgB,OAC9B,QAAQA,EAAG+sF,QAAQhxF,MACZ,MAAT+B,GACAV,EAAiBU,EADjB,IAIKN,EAAAA,iBAAiB,aAAc8B,IACxCA,EAAEm3C,iBACFn3C,EAAEwtF,kBAEEhwF,KACIkB,GAJR,IAOJ,MAAMO,EAAiB,MACdzB,KAAyC,SAA3BC,EAAOgwF,QAAQC,MAE3BltF,GAFH,EAIC,gBAAA0C,iBAAiB,YAAajE,GAE1BhB,EAAAA,SAAS+B,IACZ,QAASikB,SAASR,cAAc,MACtC/iB,EAAOkrC,UAAY,gCACnBlrC,EAAOitF,UAAY3tF,GAAQ,KAC3BvC,EAAOukB,YAAYthB,GACZA,EAAAA,aAAa,aAAcV,EAHlC,IAiBG,CACHsY,IAAKpZ,EACL8gB,WAAYniB,EACZ+vF,SAdc5tF,IACJd,EAAAA,QAAQ2uF,SAAc7tF,EAAKzD,MAAMsxF,SACrChvF,EAAAA,UAAYmB,EAAKzD,MAAMsxF,UAAe,KAC5CpwF,EAAOkmB,aAAa,YAAa3jB,EAAKzD,MAAMmxF,KAAU,OAAS,QAFrD,EAcVI,UATc,KACd5uF,EAAU2E,SACDogB,SAAAA,oBAAoB,YAAahlB,EAD1C,EAjBK,GAhEL,ECpGCsmF,GAAQ,CAACnoF,GAAyBokF,IAAAA,MACrC,QAAUM,GAAW1kF,GAE3BA,EAAQwE,IAAoB,SAAS,EAAGmsF,YAAAA,EAAa3mF,QAAAA,EAAS4mF,QAAAA,EAASC,OAAAA,MACnE,MAAM/uF,EAAcrB,I,MAAe,cAAAoB,EAAA,EAAQmC,IAAItB,GAAWjC,SAAvB,EAAAoB,EAA8BqZ,GAA9B,EAC7Bjb,EAAY4mB,SAASR,cAAc,QAC/BpmB,EAAAA,UAAUwlB,IAAI,mBAExBzlB,EAAQ6kF,SAAQ,KACZ,MAAMpkF,EAAQ2B,CAAAA;;;;;;;;kBAQRgB,EACI,oFAIA;;;;kCAIYhD,EAAQ,YAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAqCfA,EAAQ;qCACXJ,EAAQgE,IAAI1B,GAAW;;;;;;;;;;;qCAWvBlC,EAAQ,UAAW;;;;;;;;wCAQhBM;;;;cAMxBD,GACUR,EAAAA,UAAUwlB,IAAIhlB,EADxB,IAKF,QAAUomB,SAASR,cAAc,OAEvCpmB,EAAUuH,OAAOnH,GACb,MAAOyB,EAAW,SAChB,QAAe+kB,SAASR,cAAc,QAC/B7kB,EAAAA,UAAUikB,IAAI,eACjBxlB,EAAAA,OAAOiB,EAAMM,GAEjB,QAAWf,IACP,QAAWqB,EAAWrB,GAClBR,EAAAA,aAAa4B,EAAUX,GAC1BA,EAAAA,CADG,EAIRO,EAAahB,IACLR,EAAAA,UAAUwlB,IAAI,SAAU,WAClC3kB,EAAQ,WACF,QAAM+lB,SAASR,cAAc,OACnCxkB,EAAIivF,IAAMrwF,EAEVoB,EAAIkvF,QAAU,KACVzvF,MAAAA,GAAAA,EAAUO,EAAV,EAGJA,EAAImvF,OAAS,KACTnwF,MAAAA,GAAAA,EAASgB,EAAT,CAPJ,EA4CG,OACHqZ,IAAKjb,EACLuwF,SAnCc/vF,IACd,MAAQqwF,IAAAA,EAAKriD,IAAAA,EAAK/vB,MAAAA,EAAOuyE,QAAAA,EAASxmE,OAAAA,GAAWhqB,EAAKtB,MAK9C,OAJJkB,EAAQywF,IAAMjvF,EACdxB,EAAQqe,MAAQva,GAASyD,EACzBvH,EAAQouC,IAAM7mC,EAEK,IAAf/F,EAAIuE,QACMnG,EAAAA,UAAUwlB,IAAI,SAAU,cAClC3kB,EAAQ,UAIR8B,OACAnB,EAAUI,GAIVyB,GACUrD,EAAAA,UAAUwG,OAAO,UAAW,SAC5BxG,EAAAA,UAAUwlB,IAAI,SAAU,eAClC3kB,EAAQ,qBAIR,EAAIsF,OAAS,EACbnG,EAAU0oC,UAAUliC,OAAO,SAAU,QAAS,YAIxCxG,EAAAA,UAAUwlB,IAAI,SAAU,SAClC3kB,EAAQ,UADE,EAIP,GAzJX,ECGEgvF,GAAW,CAAC9vF,GAAyBokF,IAAAA,MACjC,QAAUM,GAAW1kF,GACrBU,EAASV,EAAQgE,IAAI1B,GAAW,UAChCc,EAAOpD,EAAQgE,IAAIR,GAAW,QAE9BlC,EAAYc,CAAAA;iBACLhC,EAAQ,UAAW;4BACRA,EAAQ;yBACXM;;;uBAGF0C;;;;;;MAQbvC,EAAgBuB,CAAAA;;MAIhBN,EAAoBM,CAAAA;;;;MAMnB,OACH8uF,UAAAA,EACAC,cAAAA,EACAC,kBAAAA,EAHG,EAOLpN,GAAoB,CAAChkF,EAAuBoC,KAC9C,IACI1B,EADAN,GAAY,EA0FT,OACHixF,UAAW,IAAMjxF,EACjBkxF,UAAW,IAAM5wF,EACjB6wF,WA1Fe,CAAC1wF,EAAgBiB,KACpBpB,EAAAA,IAAIwC,GAAWrC,EAAG,CAC1BgX,MAAO0rE,GAAY52E,OAAO,CACtBuD,IAAAA,EACAkoB,QAAS,CACLusD,KACA3hF,GAAO,IACAuC,GACHisF,UAAW1uF,GAAc0J,IAAkBnM,I,MAIvC,IAHKA,EAAMm1B,UAAU/qB,OAGjB/J,GAAaA,EAAUmX,MAAM3H,IAAI4B,YAAY1L,OAAS,EAC/C,SAEL,MAAEgsC,SAAAA,EAAUv6B,MAAOrW,GAAexB,EAClCc,EAAI,WAAW0K,OAAOI,MAAM6xD,gBAAxB,IAAsC9wD,SAChD,IAAK7L,EAAU,SACf,MAAMW,EAAKD,EAAWuqB,GAAGmL,qBAAqBp2B,GAC1C,MAAQW,EAAG+zB,UAAUnuB,KAAO,EAChC,OAAIrG,EAAQ,IACAA,EAAAA,GAEHE,EAAAA,EAAGu0B,aAAatwB,GAAcwH,OAAOlL,EAAGyO,IAAKlP,KACtDhB,EAAU0gC,SACH,CALP,IAOJ,YAAa,CAACrgC,EAAGa,K,MACb,GAAIA,EAAU,CACV,MAAQ2W,MAAU/W,GAAAd,GACVkJ,GAAAA,GAAOpI,EAAM00B,UACfx0B,EAAI,WAAMwK,OAAOI,MAAM6xD,gBAAnB,IAAiCpoD,gBAC3C,IAAKrU,EAAU,SACf,MAAMP,EAAKK,EAAMirB,GAAGsC,YAAY5sB,EAAIA,EAAIT,GAC9BhB,EAAAA,SAASS,EAAGg1B,aAAatwB,GAAcwH,OAAOlM,EAAGyP,IAAKzO,KAChEzB,EAAU0gC,OACd,CAEO,YAGf19B,GAAO,CACH,QAASsB,GACT,QAASkB,GACT,cAAeA,QAI3B4yB,QAAS,GACTkwB,oBAAsBjoD,IAClB,IAAKK,EAAW,OAChB,MAAQmX,MAAO3W,EAAA03B,aAAAA,GAAiBl4B,EAAUmX,MAAM4gB,iBAAiBp4B,GAGjE,GAFAK,EAAUsjC,YAAY9iC,IAEjBb,EAAGk3B,QAAQ,eAAgB,CACtB,QAAUv3B,EAAU6X,MAAMkU,GAC1BtqB,EAAYg/E,GAAQ30E,OAAO1J,IAAW,GAE/BZ,EAAAA,SAASR,IAClB,MAAQ8sB,MAAAA,GAAU9sB,EACZP,EAAAA,SAASoB,IACL,QAASA,EAAKD,IAAIH,GAExB,IAAKmG,EACD,MAAM1H,MAAM,mBAEhBY,EAAQsrB,KAAKxkB,EAAb,GANE,IASN9G,EAAQoyB,YAAYlzB,EAAUoyC,SAAStxC,EAC/C,KAGRJ,EAAUggC,QACV,MAAQ7oB,MAAAA,GAAUnX,EACRA,EAAAA,SAAST,EAAM8rB,GAAG0J,aAAatwB,GAAcwH,OAAO1M,EAAMiQ,IAAK,KAC7D9P,GAAAA,CADF,EAgBVqxF,YAZgB,KACZ/wF,GACAA,EAAU4lC,UAEF5lC,OAAAA,EACAN,GAAAA,CAJR,EAOD,EAQEopF,GAAc,CAACxpF,EAAuBoC,KAC/CpC,EAAQwE,IAA0B,gBAAgB,EAAG+5B,KAAAA,EAAMmzD,OAAAA,EAAQhzF,OAAAA,MACzD,QAASslF,GAAkB5jF,EAAMM,GACjCG,EAAMgmB,SAASR,cAAc,OAC/BxlB,EAAAA,UAAU4kB,IAAI,cACZ,QAASoB,SAASR,cAAc,OAChCpmB,EAAU4mB,SAASR,cAAc,OAEvC,IAAIhmB,EAAY,GACZa,EAAgB,GAChBM,EAAoB,GAExB,SAAQqjF,SAAQ,OACTqM,UAAAA,EAAWC,cAAAA,EAAeC,kBAAAA,GAAsBtB,GAAS9vF,EAASoC,IACjE/B,GAAaa,GACNY,EAAAA,UAAU2jB,IAAIplB,EAAWa,GAGhCM,GACQvB,EAAAA,UAAUwlB,IAAIjkB,EANzB,IAULX,EAAI2G,OAAO1F,GAEJ,CACHoZ,IAAAA,EACAy2E,QAAAA,EACAC,OAAAA,EACApB,SAAU,CAAC1vF,EAAMW,K,MACb,GAAIA,EAAQ,CACR,MAAMmG,EAAQ9G,EAAK3B,MAAME,OAAYyB,EAAKgR,aAAe,GAGzD,OAFAhQ,EAAOuuF,QAAQhxF,MAAWuI,OAC1BxE,EAAOwE,EAEX,CAEM,QAAYtG,EAAOgwF,YACzB,GAAItwF,EAAW,CACX,MAAM4G,EAAQ5G,EAAU6W,MAClB1T,EAAQrD,EAAKmF,QAAQ0B,cAAcC,EAAMsI,IAAIjK,SACnD,GAAa,MAAT9B,EAAe,CACf,MAAMvB,EAAO9B,EAAKmF,QAAQsC,YAAYX,EAAMsI,IAAIjK,SAChD,GAAIrD,EAAM,CACN,IAAMpB,EAAG8B,EAAMsE,EAAGxG,GAASwB,EAC3B,MAAMo8E,EAAU76E,EAAQ2E,KAAKC,IAAIzF,EAAMlC,GACnC49E,EAAU,IACF17E,GAAAA,EACAlC,GAAAA,GAEZJ,EAAUoxC,SACNxqC,EAAMmkB,GAAGhe,QAAQ5J,EAAO/C,EAAMN,EAAK4F,MAAMvC,EAAOb,IAAOg0B,QAAQ,eAAe,GAEtF,CACJ,CACJ,CAEA,MAAM72B,GAAS,SAAAK,EAAKmF,QAAQoE,iBAAb,IAAyBjC,OAAQ,GAChDtG,EAAOuuF,QAAQhxF,MAAWoB,EAE1B2C,EAAO3C,EAFP,EAIJwvF,QAAUnvF,KACDV,EAAK+vC,WACNjvC,GACOY,EAAAA,UAAU2E,OAAOvF,GAErBI,EAAAA,WAAWQ,EAAQhB,GACtBD,EAAAA,UAAU4kB,IAAI,4BALd,EAORuqE,OAAQ,KACA9uF,GACOY,EAAAA,UAAU2jB,IAAIvkB,GAEzBI,EAAOmwF,cACH5wF,EAAAA,UAAU4F,OAAO,2BAJjB,EAMRiqF,UAAW,KACPzwF,EAAQwG,SACR3E,EAAO2E,SACP5F,EAAI4F,QAFJ,EAIJ4/B,UAAYvlC,IACF,MAAAW,EAAYH,EAAOgwF,aACjBriF,OAAAA,GAAWnO,EACbL,EAAUO,IAAUS,MAAAA,OAAAA,EAAAA,EAAWyZ,IAAI0I,SAAS5iB,IAC3C,SAAgBS,IAAAA,EAAhB,EA1Ef,GAXJ,ECpIE0iF,GAAW,CAACnkF,GAAyBokF,IAAAA,GAAgBhkF,KACjD,QAAUskF,GAAW1kF,GACpB;UACDA,EAAQgE,IAAIxB,QAAa;UACzBxC,EAAQgE,IAAIK,QAAa;;;;;;sBAMb3D,EAAQ;yBACLV,EAAQgE,IAAI1B,GAAW;;;;;iBAK/BlC,EAAQ69B;;;;;;;;;;;;2BAYEv9B,EAAQ;;yBAEVA,EAAQ,UAAW;;;;;;;qBAOvBA,EAAQ;;;;;;oCAMOA,EAAQ,YAAa;;;yBAGhCA,EAAQ,UAAW;;;;;;;;;;;;;;KA5CjC,EA6DL6pF,GAAe,CAACvqF,EAAkBoC,KACpC8hF,GAAsBlkF,EAAMoC,GAAO,CAAChC,EAAOM,EAAK0C,EAAQ9B,KAC9C,QAAUtB,EAAKkb,IAAI+sC,cACzB,IAAKpnD,EACD,MAAM6C,IAGJ,QAAiBhD,EAAI68B,KAAOn9B,EAAMm9B,KACxC,IAAIt9B,EAAOG,EAAMm9B,KAAOj8B,EAAOi8B,MAAQ,EAAOU,MAAQn8B,GAAkB,EACxE,MAAMzB,EAAMD,EAAMs9B,OAASp8B,EAAOmf,IAAM,GAAK5f,EAAQ0+B,UAErD,OAAIt/B,EAAO,IAAUA,EAAAA,GAEd,CAACI,EAAKJ,EAFb,GAVJ,EAgBSkqF,GAAY,CAACnqF,EAAuBoC,KACrCpC,EAAAA,IACJ,cACA,EAAG6xF,WAAAA,EAAYrB,SAAAA,EAAUsB,WAAAA,EAAYnB,YAAAA,EAAa1yD,MAAAA,EAAQ,QAAS8zD,kBAAAA,EAAoBxH,OACnF,IAAItqF,EAAmC,KACnCI,GAAW,EACXa,EAAQ,GACN,QAAU2lB,SAASR,cAAc,OAEvCrmB,EAAQ6kF,SAAQ,KACZ,MAAMzjF,EAAQ+iF,GAASnkF,EAASoC,EAAS,CAAE67B,MAAAA,IAEvC78B,GACQI,EAAAA,UAAUikB,IAAIrkB,EADtB,IAKAI,EAAAA,UAAUikB,IAAI,iBAEhB,QAAQoB,SAASR,cAAc,SACjC/kB,IACAR,EAAM6vF,YAAcrvF,GAExBE,EAAQojB,YAAY9jB,GAEfV,IACQH,EAAAA,SAASomB,cAAc,UAChCpmB,EAAOswF,UAAYntF,GAAc,QACjC5B,EAAQojB,YAAY3kB,IAExB,MAAMwB,EAAO,KACDD,EAAAA,UAAUikB,IAAI,OAAd,EAENzkB,EAAQI,IACFI,EAAAA,UAAUiF,OAAO,QACzB3E,EAAkBV,EAAYI,EADtB,EAINf,EAAWW,IACb,MAAQ6N,OAAAA,GAAW7N,EACf,gBAAoB4wF,iBAMxB,IAFA9wF,EAAQ89E,EAAO3/E,OAEVY,EAED,YADAS,EAASQ,GAIb,IAAKA,EAGD,OAFOjB,EAAAA,UAAUwlB,IAAI,gBACVplB,GAAAA,GAIRJ,EAAAA,UAAUwG,OAAO,WACbpG,GAAAA,CAAA,GAGTwB,EAAWT,IACTf,IACJe,EAAEgvF,kBACF1vF,EAASQ,GACJO,IAHD,EAMFmG,EAAaxG,IACX,QAASA,GAAe,UAAVA,EAAE+E,MAChBzF,EAASQ,GACJO,IAFL,EA8BD,OACHyZ,IAAK1Z,EACLq2B,KAnBUz2B,IACJ,QAAUA,EAAW8Z,IAAI+sC,cAC/B,IAAK+2B,EAAS,MAAMt7E,IAEd5C,EAAAA,iBAAiB,QAASL,GAC1BK,EAAAA,iBAAiB,UAAW8G,GAC1B3H,MAAAA,GAAAA,EAAAA,iBAAiB,YAAa4B,GAEtCm9E,EAAQp6D,YAAYpjB,GACfC,GALC,EAgBNwwF,KAAAA,EACAC,KAAAA,EACA5rD,QA7BY,KACNxlC,EAAAA,oBAAoB,QAASL,GAC7BK,EAAAA,oBAAoB,UAAW8G,GAC7B3H,MAAAA,GAAAA,EAAAA,oBAAoB,YAAa4B,GACzCL,EAAQiF,QAHF,EA6BNhC,OAXYrD,IACJF,EAAAA,EACRJ,EAAMzB,MAAQ+B,CADN,EAIL,GAlGP,EC3FCwnF,GAAe,CAAC5oF,GAAyBokF,IAAAA,MAC5C,QAAUM,GAAW1kF,GAE3BA,EAAQwE,IAA2B,kBAAkB,EAAG2tF,SAAAA,EAAUhiD,SAAAA,MAC9D,MAAM7uC,EAAcG,I,MAAe,kBAAQuC,IAAItB,GAAWjB,SAAvB,IAA8ByZ,GAA9B,EAE7Bra,EAAWgmB,SAASR,cAAc,MAClCvkB,EAAkB+kB,SAASR,cAAc,SACzCpmB,EAAiB4mB,SAASR,cAAc,QACxChmB,EAAWwmB,SAASR,cAAc,SAClCnlB,EAAU2lB,SAASR,cAAc,OAEnC,MAAO/kB,EAAW,aACtBQ,EAAgB8iB,YAAYpjB,GACtB,QAAWC,IACP,QAAWH,EAAWG,GACZK,EAAAA,aAAad,EAAUQ,GAChCA,EAAAA,CADS,EAIJ,SAAAgG,OAAOnH,EAAUJ,GACxBY,EAAAA,OAAOiB,EAAiBZ,GAEjCY,EAAgBy6B,gBAAkB,QAClCl8B,EAAS0J,KAAO,WACX3G,MACD/C,EAASwxC,UAAW,EACpB/vC,EAAgBiZ,MAAMq3E,OAAS,eAE1B/xF,EAAAA,SAAYoB,IAEjB,GAAwBA,EADHwN,kBACG+iF,iBAEpB,KAAC5uF,IAGD,YAFS/C,EAAAA,SAAWA,EAASqtE,SAKjCjsE,EAAMs4C,iBAENr5C,EAASL,EAASqtE,QAAO,GAE7B7sE,EAASwvF,QAAQtmF,KAAU,YAClBlJ,EAAAA,UAAU4kB,IAAI,kBAEvBzlB,EAAQ6kF,SAAQ,KACZ,MAAMpjF,EAAQW,CAAAA;;;;;;;;;;;;;;;;;;;;;iCAqBOhC,EAAQ;;;;;iCAKRA,EAAQ,QAAS;;;;;;cAQlCqB,GACSZ,EAAAA,UAAU4kB,IAAIhkB,EADvB,IAKD,CACHyZ,IAAKra,EACL+hB,WAAY1hB,EACZsvF,SAAW/uF,IACEZ,EAAAA,QAAQ6sE,QAAajsE,EAAKtC,MAAMuuE,QACrCjsE,EAAKtC,MAAMuuE,QACFrtE,EAAAA,aAAa,UAAW,WAEjCA,EAAS8rC,gBAAgB,WAE7BrrC,EAAQW,EAAKtC,MAAMuuE,QAAa,UAAY,YANnC,EAtED,GAjBpB,ECSS8X,GAAuB,CAACxlF,EAAuBoC,KACvD,IAAW+lF,GAAO1B,GAAWmC,GAAcY,IAAariF,SAAS/G,IAC9DA,EAAEJ,EAASoC,EAAX,GADH,EChBQq+E,GAAa,CACtB,SACA,sBACA,uBACA,iBACA,YACA,QACA,gBACA,cAGSyD,GAAO,CAAC,WAAY,SAAU,cAAe,cAAe,aCHnEQ,GAAsC,CACxCtnE,GAAI,CACAu+C,MAAO,KACP02B,KAAM,aAEVh1E,GAAI,CACAs+C,MAAO,KACP02B,KAAM,aAEV/0E,GAAI,CACAq+C,MAAO,KACP02B,KAAM,WAEVpB,QAAS,CACLt1B,MAAO,UACP02B,KAAM,mBAEVrhB,MAAO,CACHrV,MAAO,QACP02B,KAAM,gBAEV7xF,KAAM,CACFm7D,MAAO,OACP02B,KAAM,QAEVl0E,MAAO,CACHw9C,MAAO,QACP02B,KAAM,eAEVC,QAAS,CACL32B,MAAO,UACP02B,KAAM,mBAEVxpB,MAAO,CACHlN,MAAO,QACP02B,KAAM,SAEVE,YAAa,CACT52B,MAAO,eACP02B,KAAM,gBAEVG,WAAY,CACR72B,MAAO,cACP02B,KAAM,wBAEVI,YAAa,CACT92B,MAAO,eACP02B,KAAM,wBAEVK,SAAU,CACN/2B,MAAO,YACP02B,KAAM,aAEVM,KAAM,CACFh3B,MAAO,OACP02B,KAAM,eAEVO,OAAQ,CACJj3B,MAAO,SACP02B,KAAM,iBAEVjf,WAAY,CACRzX,MAAO,cACP02B,KAAM,QAEVQ,cAAe,CACXl3B,MAAO,iBACP02B,KAAM,mBAEV1qB,KAAM,CACFhM,MAAO,OACP02B,KAAM,QAEVS,UAAW,CACPn3B,MAAO,aACP02B,KAAM,gBAEVU,WAAY,CACRp3B,MAAO,cACP02B,KAAM,iBAEVW,QAAS,CACLr3B,MAAO,WACP02B,KAAM,eAEVY,UAAW,CACPt3B,MAAO,aACP02B,KAAM,eAEVa,UAAW,CACPv3B,MAAO,aACP02B,KAAM,qBAEVc,WAAY,CACRx3B,MAAO,cACP02B,KAAM,sBAEVe,YAAa,CACTz3B,MAAO,eACP02B,KAAM,uBAEV3/D,OAAQ,CACJipC,MAAO,SACP02B,KAAM,UAEVgB,OAAQ,CACJ13B,MAAO,SACP02B,KAAM,cAEViB,UAAW,CACP33B,MAAO,YACP02B,KAAM,2BAEV3kB,QAAS,CACL/R,MAAO,UACP02B,KAAM,aAEVxC,KAAM,CACFl0B,MAAO,OACP02B,KAAM,aAEVvD,KAAM,CACFnzB,MAAO,OACP02B,KAAM,cAEVkB,SAAU,CACN53B,MAAO,YACP02B,KAAM,0BAEVmB,SAAU,CACN73B,MAAO,YACP02B,KAAM,0BAEVoB,WAAY,CACR93B,MAAO,cACP02B,KAAM,kBAEVjqF,KAAM,CACFuzD,MAAO,OACP02B,KAAM,UAID/K,GAAWtnF,IACpB,MAAM8B,EAAS4iF,GAAY1kF,GAC3B,IAAK8B,EACD,OAEE,QAAO+kB,SAASR,cAAc,QACpCjmB,EAAKouC,UAAY,8CACjB,MAAM/sC,EAAOijF,GAAY1kF,GACzB,OAAIyB,GACArB,EAAK0R,YAAcrQ,EAAK4wF,KACnBjyF,EAAAA,QAAQu7D,MAAWl6D,EAAKk6D,OAErB/mC,QAAAA,KAAK,oBAAoB50B,qDAG9B,CACHkb,IAAK9a,EACLu7D,MAAO75D,EAAO65D,MATlB,EC5JSj7D,GAAO,CAChBgzF,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,WAGCnyF,GAAoC,CAC7CoyF,OAAQh0F,GAAKizF,MACbgB,QAASj0F,GAAK0zF,OACdQ,UAAWl0F,GAAKyzF,MAChBU,QAASn0F,GAAKgzF,MACdv0E,MAAOze,GAAKmzF,MACZlhC,KAAMjyD,GAAKozF,MACXgB,WAAYp0F,GAAKszF,MACjBe,QAAS,QAGAvoF,GAAmC,CAC5CkoF,OAAQh0F,GAAKizF,MACbgB,QAASj0F,GAAK0zF,OACdQ,UAAWl0F,GAAKyzF,MAChBU,QAASn0F,GAAKszF,MACd70E,MAAOze,GAAKozF,MACZnhC,KAAMjyD,GAAKkzF,MACXkB,WAAY,UACZC,QAASr0F,GAAKgzF,OCpCLvvF,GAAW,CAACnE,EAAuB8B,KACtC,MAAEuiF,aAAAA,EAAcD,IAAAA,GAAQtiF,EACxBhB,EAAUqnF,GAAWnoF,GACrBC,EAASD,EAAQgE,IAAI9C,GAAW,UAChCT,EAAUK,EAAQ,UAAW,KAC7BU,EAAUV,EAAQ,WAClBM,EAAON,EAAQ,QACfT,EAAYS,EAAQ,YAAa,KAEjCsB,EAAYX,CAAAA;;uBAECzB,EAAQgE,IAAI9C,GAAW,sBAAsBE;;;;;;;;cAQtDpB,EAAQgE,IAAI1C,QAAa;;;;0BAIbjB;;MAIhBiD,EAAe7B,CAAAA;;;;;;MAQfiC,EAAYjC,CAAAA;;;;;;MAQZ+D,EAAa/D,CAAAA;;;;qCAIcX,EAAQ;;;;;;;;MAUnCqE,EAAU1D,CAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA+BVe,EAAKf,CAAAA;;sBAEOzB,EAAQgE,IAAI9C,GAAW;gCACbE;;;MAKtBoC,EAAO/B,CAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBA+BIX,EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8BnB6jF,EAAOljF,CAAAA;;;+BAGczB,EAAQgE,IAAInD,GAAW;;kBAEpCb,EAAQgE,IAAIhD,GAAgB,CAAC;;oCAEXF,EAAQ;yBACnBA,EAAQ;;iCAEAb;;;;mCAIED,EAAQgE,IAAInD,GAAW;;;;MAMhD0E,EAAM9D,CAAAA;;;;;;;;;;MAYN4C,EAAS5C,CAAAA;;gCAEaX,EAAQ;qBACnBA,EAAQ;6BACAb;;2BAEFD,EAAQgE,IAAInD,GAAW;;;;;;;;;;qBAU7BC,EAAQ;;;;;oCAKOA,EAAQ;oCACRA,EAAQ,mBAAmBA,EAAQ;;;;;qCAKlCA,EAAQ;;MAInCwD,EAAW7C,CAAAA;;cAEPzB,EAAQgE,IAAI1C,QAAa;6BACVtB,EAAQgE,IAAI9C,GAAW;gCACpBJ,EAAQ;;;;;;;;;;;6BAWXA,EAAQ;;;;;;;;MAU3BoC,EAAQzB,CAAAA;;;;;cAKJzB,EAAQgE,IAAIhD,GAAgB,CAAC;;;;;;;;;;;;;6BAadhB,EAAQgE,IAAI9C,GAAW;;;cAGtClB,EAAQgE,IAAI1C,GAAa;;;;;;;;;;cAUzBtB,EAAQgE,IAAI1C,QAAa;;;;;;;0BAObR,EAAQ,aAAc;;;;;;;;;;0BAUtBA,EAAQ;qBACbd,EAAQgE,IAAI9C,GAAW;;;;;;;;;;;;8BAYdJ,EAAQ,YAAa;;;;;;;;MAU/CkC,GAAsBlB,GAEtB1B,CAAAA;;;;;;;;;;;;qBAYiBK;0BACKe;2BACCxB,EAAQgE,IAAInD,GAAW;;cAEpCb,EAAQgE,IAAInC,QAAa;cACzB7B,EAAQgE,IAAIhD,QAAgB;cAC5BoB;;;;;;;;kBAQIkB;;kBAEAI;kBACA8B;kBACAhD;kBACAgB;kBACAmhF;kBACAp/E;kBACAJ;;kBAEAjC;kBACAoB;;kBAEAD;;;KAzCd,E3M5SSm/E,GAAO,CAChBwR,WAAAA,GACAx0F,KAAAA,IAGS+pF,GAAO,CAChB0K,OAAQ,MACRC,UAAW,OAGFzO,GAAezmF,GAAwB,CAAC8B,EAAkB1B,KACnE,MAAQgkF,IAAAA,GAAQtiF,EACVhB,EAAWd,EAAawM,GAAYlK,GAElClC,EAAAA,IAAIwH,IAAa3H,IACrB,IAAKA,EAAS,OACR,MAACQ,EAAKe,GAAWvB,EACjBmB,EAAMN,EAASL,GACfJ,EAAMqC,GAAQtB,GACpB,OAAKf,EAEE,QAAQA,MAAAA,OAAAA,EAAAA,EAAK0B,KAAK,UAAUP,GAAW,UAF9C,CAEA,IAGIpB,EAAAA,IAAIc,IAAYjB,IACpB,GAAKA,EACL,OAAOsqF,GAAKtqF,EAAZ,IAGIG,EAAAA,IAAIS,IAAYZ,IACpB,GAAKA,EACE,UAAKA,GAAK8B,KAAK,KAAf,IAGH3B,EAAAA,IAAIY,IAAgB,EAAEf,EAAY,IAAKQ,EAAO,UAAY,CAAC,IAAK,aACpE,MAAMe,EAAOpB,EAAQ4D,IAAI4D,GAAY,CAAC,YAAa,MAC7CxG,EAAKhB,EAAQ4D,IAAI4D,GAAY,CAAC,YAAa,MAC3CvH,EAAQD,EAAQ4D,IAAI4D,GAAY,CAAC,cAEjCxF,EAAYX,EAAI,CAClB,uBAAwB,CACpB,CAAe,MAAdxB,EAAoB,QAAU,WAAuB,SAATQ,EAAkB,EAAI,IAAzB,KAC1C00F,gBAAiB,iBAIlB;;+BAEgB3zF,KAAQJ;;;cAGzBgB;;;;;;;;;;oCAUsBZ;0BACD,SAATf,EAAkB,EAAI;;;;;oCAKZJ;;SArBrB,IA0BHD,EAAAA,IAAIyB,IAAa,KACrB,MAAM5B,EAAYG,EAAQ4D,IAAI9C,GAAW,aACnCT,EAAae,GAAoBpB,EAAQ4D,IAAI4D,GAAY,CAAC,SAAUpG,IACnE;4BACavB,KAAaA,KAAaQ,EAAU,eAAgBR,KAAaQ,EAAU;oBACnFR,SAAiBQ,EAAU;SAFhC,IAMHL,EAAAA,IAAIkB,IAAcrB,IACtB,MAAMQ,EAAYL,EAAQ4D,IAAI9C,GAAW,aACnCM,EAAOpB,EAAQ4D,IAAI4D,GAAY,CAAC,SACtC,OAAK3H,EAMEwB,EAAI,CACP,CAAC,SAAS,CAFUpB,GAAgBA,EAAIowE,OAAO,GAAGtU,cAAgB97D,EAAIqG,MAAM,GAElE,CAAezG,MAAe,GAAGQ,WAAmBe,MANvDC,CAAAA;0BACOhB,WAAmBe;aAFrC,IAWIpB,EAAAA,IAAIopF,IAAYvpF,IACpB,GAAKA,EAEL,OAAOqnF,GAAQrnF,EAAf,IAGIG,EAAAA,IAAIkjF,IAAa,KACrBn/E,GAAS/D,EAAS0B,EAAlB,IAGJqiF,GAAqB/jF,EAAS0B,EA3FtB,EA8FCsB,GAAU,CAACpD,GAAa,IACjC8C,IAAa,CAAChB,EAAS1B,IAAYqmF,GAAYzmF,EAAZymF,CAAwB3kF,EAAS1B,KAEhDgD,IAAQ,GACPA,IAAQ,GAEjC,IAAIR,IAAW,E,cACJkkB,OAAW,MAClBlkB,GAAW4qC,QAAQ,iBAAO4nD,iBAAP,iBAAoB,gCAAgC15E,UAE9D,SAAOtY,GAAQR,I,wB4M3IrB,IAAIyyF,GAASC,GAASC,OAAOC,gBAAgB,IAAIC,WAAWH,IACxDI,GAAe,CAACC,EAAUC,EAAaC,KAChD,IAAIC,GAAQ,GAAMhtF,KAAKitF,IAAIJ,EAASvvF,OAAS,GAAK0C,KAAKktF,KAAQ,EAC3D5pE,KAAW,IAAM0pE,EAAOF,EAAeD,EAASvvF,QACpD,MAAO,CAACkB,EAAOsuF,KACb,IAAI3xF,EAAK,GACT,MAAO,EAAM,CACX,IAAIqxF,EAAQO,EAAUzpE,GAClB9nB,EAAI8nB,EACR,MAAO9nB,IAEL,GADAL,GAAM0xF,EAASL,EAAMhxF,GAAKwxF,IAAS,GAC/B7xF,EAAGmC,SAAWkB,EAAM,OAAOrD,CAElC,EATH,EAYSgyF,GAAiB,CAACN,EAAUruF,EAAO,KAC5CouF,GAAaC,EAAUruF,EAAM+tF,ICT/B,MAAM1N,GAAe7mF,GACjB6Q,OAAOzL,UAAUuT,eAAeC,KAAK5Y,EAAG,UAErC,MAAMo1F,WAAoDx0F,MACrDy0F,YAAmC91F,EAAWJ,GAC5C,QAAQrB,KAAKsM,WAAW1J,GAAMmmF,GAAYnmF,IAAMA,EAAEsuC,SAAWzvC,IACnE,OAAIL,EAAQ,GAEZC,EAASD,GAFapB,IAK1B,CAEA2oE,UAAiClnE,EAAWJ,GACxC,OAAOrB,KAAKu3F,YAAY91F,GAASL,IAC7BpB,KAAKgI,OAAO5G,EAAO,EAAGK,EAAOJ,GAA7B,GAER,CAEA8N,QAAwD1N,EAAWJ,GAC/D,OAAOrB,KAAKu3F,YAAY91F,GAASL,IACxB,KAAA4G,OAAO5G,EAAO,EAAGC,EAAjB,GAEb,CAEAwG,OAA8BpG,GAC1B,OAAOzB,KAAKu3F,YAAY91F,GAASJ,IACxB,KAAA2G,OAAO3G,EAAO,EAAd,GAEb,CAEAm2F,WACI,OAAAx3F,KAAK2uC,OAAOo6C,IAAaxgF,SAAS9G,IAC9BzB,KAAK2oE,UAAWlnE,EAAiCyvC,OAAuB,CAAEsmD,UAAU,GAApF,IAEGx3F,IACX,CAEO,cAA0CyB,GACtC,WAAI61F,MAAY71F,EAC3B,EC7CkBg2F,GAAe,iBAAkB,IAA1C,MCMA9N,GAAWznF,IACd,QAAyB,IAAMkE,gBAC3B,EAAIH,KAAK0lF,IACT,QAAKzpF,EAAOb,GACdA,EAAAA,OAAOkqF,IAAmB3oF,GAAO,IAAIA,EAAIxB,KACnCK,EAAQk4B,OAASv4B,CADvB,EAIQ,UCHPs2F,GACRx1F,GACD,CAACT,KAAiBJ,K,MACd,MAAMD,EAAY,0BAAYK,KAAUJ,IAAtB,EAAuCA,EACzD,OAAOyB,MAAMC,QAAQ3B,GAAaA,EAAUutC,QAAQ7sC,GAAMA,IAAGqB,KAAK,KAAO/B,CAAzE,EAGKu6B,GAAiB,CAAIz5B,EAAuBT,EAA+BJ,IACpF,CAACa,EAAYT,EAAYJ,GAEhB6C,GAAgB,CAAgChC,EAAUT,KAC/D,IACM,MAAAJ,EAAea,EAAIkD,IAAIggF,IACvBhkF,EAAUc,EAAIkD,IAAI4mF,IACpB,IAAC5qF,EAAQokF,IACT,MAAMmS,IAGH,OACHC,aAAcF,GAAaj2F,MAAAA,OAAAA,EAAAA,EAAUmuC,WACrCshD,SAAWtuF,GAAWnB,MAAAA,GAAAA,EAAU+1F,SAAc,GAAM50F,EAAMxB,GAC1Dy2F,aAAAA,EAIR,CAHI,MAEA,MAAMF,GACV,GAQS/pF,GACT1L,IAEM,QAA2Cb,IACvC,QAASa,EAAEb,GACjB,SAAO6vC,OAASzvC,EACTL,CADP,EAGG,UAGEoD,GACT,CACItC,EACAT,IAMHJ,IAEG,MAAMD,EAAOC,EAEPuB,EAAS,CAACd,EAA6CoB,IACzDzB,GAAQ,IAAIoB,IAASf,EAAcI,KAAWW,MAAUA,IAAOK,GAEnE,SAAKkmC,OAASxmC,EAEPxB,CAFP,ECvBKkqF,GAAqB,IAAIppF,KAClC,MAAMT,EAASS,EAAMsF,OACrB,IAAInG,EAAQI,EACZ,KAAOJ,KACC,GAAwB,mBAAjBa,EAAMb,GACP,UAAIg2E,UAAU,uBAG5B,MAAO,IAAIj2E,KACP,IAAIwB,EAAQ,EACRd,EAASL,EAASS,EAAMU,MAAUxB,GAAQA,EAAK,GAC5C,OAAEwB,EAAQnB,GACJK,EAAAA,EAAMc,GAAOd,GAEnB,OAAAA,CAAA,CANX,ECnBSopF,GACRhpF,GACDkE,MAAO3E,EAAKJ,KACRa,MAAAA,GAAAA,EAAQqG,SAASnH,GAAUK,EAAI4d,IAAI7Y,OAAOpF,WACpCC,GADN,EAIK4nF,GAA2B7iF,MAAOlE,EAAKT,KAChD,MAAQ4qF,IAAAA,GAAQnqF,QACV,EAAI+D,KAAK6/E,UAETrkF,GAFA,EAKGuH,GAA0BxF,OACnC,EACA,2BAES+kF,GAA+BniF,MAAOlE,EAAKT,KAC9C,MAAE4qF,IAAAA,EAAKyL,YAAAA,GAAgB51F,QAEvB,EAAI+D,KAAK0lF,IAET,QAAgBvqF,EAAYgE,IAAI4D,IAEtC,GAAIpG,EAAe,CACT,QAAUA,EAAcvB,GAE9BA,EAAIwE,OAAO0lF,IAAmBroF,GAAOA,EAAGgF,OAAOpG,IACnD,OAEML,GAAN,EAGSmC,GAAmBJ,OAA+B,EAAW,oBAC7DY,GAAcZ,EAAgC,CAAC,EAAiB,QAChE2pD,GAAwB/mD,MAAOlE,EAAKT,K,MACvC,MAAE4qF,IAAAA,EAAKyL,YAAAA,GAAgB51F,EAEvBU,EAAYxB,EAAYgE,IAAIxB,IAE5B9B,EAAa,OAAAY,EAAA,iBAAYR,EAAImqF,MAAhB3pF,EAAwB,CAAC,EAE5C,IAAIQ,EAAmC,CAAC,EACpCL,EAAmC,CAAC,EAExC,GAAIf,EAAWmJ,KAAM,CACjB/H,EAAOpB,EAAWmJ,KAClB,MAAMpJ,EAAQkR,OAAOu2E,QAAoBxnF,EAAWmJ,MAChD5J,EAAAA,OAAOqjF,IAAWliF,GAAO,IAAIA,KAAOX,IAC5C,CAEA,GAAIC,EAAWwR,KAAM,CACjBzQ,EAAOf,EAAWwR,KAClB,MAAMzR,EAAQkR,OAAOu2E,QAAoBxnF,EAAWwR,MAChDjS,EAAAA,OAAOqnF,IAAWlmF,GAAO,IAAIA,KAAOX,IAC5C,OAEM,EAAIoE,KAAKhE,IAET,QAASZ,EAAI+D,IAAIM,IACjBzC,EAAY8P,OAAOmoB,KAAKh4B,GAAMF,KAAKnB,GAAO,CAACA,EAAIO,EAAO4K,MAAMnL,MAC5D6B,EAAYqP,OAAOmoB,KAAKr4B,GAAMG,KAAKnB,GAAO,CAACA,EAAIO,EAAO0L,MAAMjM,MAE5DL,EAAOuR,OAAO23E,YAAY,IAAIznF,KAAcS,IACtCtC,EAAAA,IAAIgD,GAAa5C,SAEvBC,GAFM,EAKHmjF,GAAqBphF,OAC9B,EACA,sBAESglF,GAA2BpiF,MAAOlE,EAAKT,KAC1C,MAAE4qF,IAAAA,EAAKyL,YAAAA,GAAgB51F,EACvBU,EAAWxB,EAAYgE,IAAIw/E,IACjC,GAAIhiF,EAAU,CACJ,QAAOxB,EAAYgE,IAAIhB,IAC7BxB,EAASd,EAAMT,GAAKkH,SAAQ,EAAErF,EAAKL,MAC/BxB,EAAI+D,IAAItB,IAAaiK,OAAO7K,EAAKL,EAAjC,GAER,OACMpB,GAAN,EAGSqD,GAAuBtB,OAChC,EACA,wBAESolF,GAA6BxiF,MAAOlE,EAAKT,KAC5C,MAAE4qF,IAAAA,EAAKyL,YAAAA,GAAgB51F,EACvBU,EAAaxB,EAAYgE,IAAIN,IACnC,GAAIlC,EAAY,CACN,QAAOxB,EAAYgE,IAAIhB,IAC7B/C,EAAIwE,OAAO+kF,IAAgB1nF,GAAO,IAAIA,KAAON,EAAWd,EAAMT,KAClE,OAEMI,GAAN,EAGS8E,GAAmB/C,EAA2C,CAAC,EAAG,oBAClEqlF,GAA4BziF,MAAOlE,EAAKT,KAC3C,MAAEq2F,YAAAA,EAAazL,IAAAA,GAAQnqF,EAEvBU,EAAYvB,EAAY+D,IAAImB,IAE5BzE,EAAUT,EAAY+D,IAAIu/E,IAC1BzhF,EAAS,CAACd,EAAaa,K,QAClB,cAAAzB,EAAA,0BAASstD,aAAT,IAAkB1sD,IAAlBZ,EAA0ByB,CAA1B,EAGLJ,EAASkQ,OAAOu2E,QAAuB1mF,GACxCm1F,SAAQ,EAAE31F,GAAKa,EAAYS,EAAYlC,OAC9B,QAAS,IAAMJ,EAAIgE,IAAItB,IAAagX,KAAK7X,EAAYzB,GACrDK,EAAMqB,EAAOd,EAAIsB,GACnB,OAAAZ,MAAMC,QAAQlB,GACPA,EAAImB,KAAKR,IAAD,CAAU+E,IAAK/E,EAAG4lF,OAAAA,MAE9B,CAAE7gF,IAAAA,EAAK6gF,OAAAA,EAHV,IAKPplF,KAAKZ,GAAM,CAACA,EAAEmF,IAAKnF,EAAEgmF,UAC1BhnF,EAAIyE,OAAO0jF,IAAkBnnF,GAAOA,EAAG8F,OAAO0/E,GAAO70E,OAAO23E,YAAY7nF,aAElEpB,GAFN,EAKS6C,GAAyBd,OAClC,EACA,0BAESooF,GAA8BxlF,MAAOlE,EAAKT,KAC7C,MAAEq2F,YAAAA,EAAazL,IAAAA,GAAQnqF,EAEvBU,EAAevB,EAAY+D,IAAId,IACrC,GAAI1B,EAAc,CACR,QAAOvB,EAAY+D,IAAIhB,IAC7BhD,EAAIyE,OAAO0jF,IAAkBrmF,GAAO,IAAIA,KAAON,EAAad,EAAMV,KACtE,OAEMK,GAAN,EAGS6jF,GAAiB9hF,OAA6C,EAAW,kBACzEslF,GAAsB1iF,MAAOlE,EAAKT,KACrC,MAAEq2F,YAAAA,EAAazL,IAAAA,GAAQnqF,EAEvBU,EAAUvB,EAAY+D,IAAIkgF,IAE1BxjF,EAAUT,EAAY+D,IAAIu/E,IAE1BzhF,EAAOpB,EAAQ69B,KAAO79B,EAAQ69B,KAAKv+B,GAAOwB,MAAAA,OAAAA,EAAAA,EAAUxB,GAE1D,GAAI8B,EAAM,CACA,QAAY6P,OAAOu2E,QAAQpmF,GAAMyrC,QACnC,EAAE1rC,MAA+D,IAAvD7B,EAAIgE,IAAIs/E,IAAUp4E,WAAW5I,GAAOA,EAAG,KAAOT,MAEtDb,EAAY2Q,OAAOu2E,QAAQpmF,GAAMyrC,QACnC,EAAE1rC,MAA+D,IAAvD7B,EAAIgE,IAAIsjF,IAAUp8E,WAAW5I,GAAOA,EAAG,KAAOT,MAExD7B,EAAAA,OAAO2kF,IAAc9iF,GAAM,IAAIA,KAAOJ,KACtCzB,EAAAA,OAAO4oF,IAAc/mF,GAAM,IAAIA,KAAOb,IAC9C,OAEMX,GAAN,EAKSkjF,GAAiBnhF,EAA2B,CAAC,EAAG,kBAEhDwlF,GAAYxlF,EAAY,GAAI,aAE5B4lF,GAA0BhjF,MAAOlE,EAAKT,KAC/C,MAAQq2F,YAAAA,GAAgB51F,EACxBb,EACKmF,OAAOwiF,IACPxiF,OAAOm+E,IACPn+E,OAAOwC,IACPxC,OAAO5C,IACP4C,OAAOpC,IACPoC,OAAOo+E,IACPp+E,OAAO1B,IACP0B,OAAOD,IACPC,OAAOlC,IACPkC,OAAO8+E,UAEN7jF,GAZN,EC5MEu2F,GAAe91F,GACV,CAACT,EAAkBJ,KACtB,IAAID,GAAS,EACP,QAAYU,IACd,GAAIA,GAAKV,EAAO,OAAOiF,QAAQ+1E,OAAO,IAAI96E,MAAM,iCACxCF,EAAAA,EACR,IAAI8B,EAAKhB,EAAUJ,GAEnB,GADIA,IAAMI,EAAUsF,SAAatE,EAAAA,IAC5BA,EAAI,OAAOmD,QAAQuM,UACpB,IACO,OAAAvM,QAAQuM,QAAQ1P,EAAGzB,GAAK,IAAMmB,EAASd,EAAI,KAGtD,CAHyD,MAChDe,IACE,OAAAwD,QAAQ+1E,OAAOv5E,GAC1B,GAEJ,OAAOD,EAAS,EAAhB,EAIKsmF,GAAOhnF,IACV,QAAS81F,GAAY91F,GACrBb,EAAY42F,IACZ72F,EAAQ6oF,IACRrnF,EAAc,IAAIqpF,EAAI5qF,EAAWD,GAEhC,OAACU,EAAUoB,IACdzB,EAAO,CACH4d,IAAAA,EACAgtE,IAAAA,EACAyL,YAAAA,GAJD,ECeEI,GAAa,CACtBh2F,EACAT,IAEA6pF,GACI19E,GACApJ,GAAWtC,EAASg2F,IAFxB5M,EAIKjqF,GACID,GACDgF,UACI,MAAMtE,EAA2BsE,OAAS0xF,YAAAA,GAAe11F,KAC/C,QAAQ8B,GAActB,EAAKvB,GAC3BqC,EAASxB,EAAQe,EAAO5B,IAEtBgE,GAAAA,EAAI2oD,SAAAA,EAAUmqC,cAAAA,EAAevrF,OAAAA,EAAQwrF,WAAAA,EAAYC,UAAAA,EAAWC,aAAAA,EAAc34D,KAAAA,GAASj8B,EAErF6B,EAAalE,MAAAA,OAAAA,EAAAA,EAASs+B,KAEtBkoD,EAAgB,IACdxmF,GAAW,CAAC,EAChBs+B,KAAMp6B,EAAcjD,IAAD,CAAiB,CAACd,GAAK+D,EAAWjD,UAAU,GAGvDO,EAAAA,IAAImmF,GAAWxnF,GACfqB,EAAAA,IAAI8hF,GAAgBkD,GACpBhlF,EAAAA,IAAImG,GAAyBnH,GACzCgB,EAAY+C,IAAIhC,IAAmBtB,IAAD,CAAYgR,KAAM,CAAE,CAAC9R,GAAKgB,EAAOF,QAC/DI,GACYG,EAAAA,IAAI+hF,IAAoB,CAACtiF,EAAM0B,IAAQtB,EAASJ,EAAKd,GAAiBwC,KAElFo8E,GACYv9E,EAAAA,IAAIiC,IAAsB,CAACxC,EAAM0B,IAAQo8E,EAAW99E,EAAKd,GAAiBwC,KAEtFyB,GACY5C,EAAAA,IAAI0D,GAAkBd,GAElCf,GACY7B,EAAAA,IAAIyB,IAAwB,CAAChC,EAAM0B,IAAQU,EAAapC,EAAKd,GAAiBwC,KAE1F2C,GACY9D,EAAAA,IAAIyiF,IAAiBhjF,IAAD,CAAY,CAACd,GAAKmF,EAAKrE,aAErDF,GAnBM,QAoCV,GAda,CACfgnF,GACA8B,GAAazpF,GACbwnF,GACAnnF,EACAymF,GACAp7B,GACAq7B,GACAI,GACAC,GACA+C,GACA9C,IAGE,CAAO1nF,EAAKwB,EAAZ,IC9DT21F,GAAa,CACtBr2F,EACAT,IAEA6pF,GACI19E,GACApJ,GAAWtC,EAASq2F,IAFxBjN,EAIKjqF,GACID,GACDgF,UACI,MAAMtE,EAA2BsE,OAAS0xF,YAAAA,GAAe11F,KAC/C,QAAQ8B,GAActB,EAAKvB,GAC3BqC,EAASxB,EAAQe,EAAO5B,IAEtBgE,GAAAA,EAAI2oD,SAAAA,EAAUmqC,cAAAA,EAAevrF,OAAAA,EAAQwrF,WAAAA,EAAYC,UAAAA,EAAWC,aAAAA,EAAc34D,KAAAA,GAASj8B,EAErF6B,EAAalE,MAAAA,OAAAA,EAAAA,EAASs+B,KAEtBkoD,EAAgB,IACdxmF,GAAW,CAAC,EAChBs+B,KAAMp6B,EAAcjD,IAAD,CAAiB,CAACd,GAAK+D,EAAWjD,UAAU,GAGvDO,EAAAA,IAAImmF,GAAWxnF,GACfqB,EAAAA,IAAI8hF,GAAgBkD,GACpBhlF,EAAAA,IAAImG,GAAyBnH,GACzCgB,EAAY+C,IAAIhC,IAAmBtB,IAAD,CAAY2I,KAAM,CAAE,CAACzJ,GAAKgB,EAAOF,QAC/DI,GACYG,EAAAA,IAAI+hF,IAAoB,CAACtiF,EAAM0B,IAAQtB,EAASJ,EAAKd,GAAiBwC,KAElFo8E,GACYv9E,EAAAA,IAAIiC,IAAsB,CAACxC,EAAM0B,IAAQo8E,EAAW99E,EAAKd,GAAiBwC,KAEtFyB,GACY5C,EAAAA,IAAI0D,GAAkBd,GAElCf,GACY7B,EAAAA,IAAIyB,IAAwB,CAAChC,EAAM0B,IAAQU,EAAapC,EAAKd,GAAiBwC,KAE1F2C,GACY9D,EAAAA,IAAIyiF,IAAiBhjF,IAAD,CAAY,CAACd,GAAKmF,EAAKrE,aAErDF,GAnBM,QAoCV,GAda,CACfgnF,GACA8B,GAAazpF,GACbwnF,GACAnnF,EACAymF,GACAp7B,GACAq7B,GACAI,GACAC,GACA+C,GACA9C,IAGE,CAAO1nF,EAAKwB,EAAZ,ICrDT41F,GAAe,CAMxBt2F,EACAT,IAEA6pF,GACI19E,GACApJ,GAAWtC,EAASs2F,IAFxBlN,EAIKjqF,GACID,GACDgF,UACI,MAAMtE,EAA2BsE,OAAS0xF,YAAAA,GAAe11F,KAC/C,QAAQ8B,GAActB,EAAKvB,GAC3BqC,EAASxB,EAAQe,EAAO5B,IAEtB2sD,SAAAA,EAAUmqC,cAAAA,EAAevrF,OAAAA,EAAQwrF,WAAAA,EAAYC,UAAAA,EAAWC,aAAAA,EAAc34D,KAAAA,GAASj8B,EAEvFb,EAAY+C,IAAI++E,GAAiBtjF,GAAW,CAAC,GACjCwB,EAAAA,IAAImG,GAAyBtG,GACrCb,GACYgB,EAAAA,IAAIe,GAAkB/B,GAElCL,GACYqB,EAAAA,IAAI+hF,GAAoBpjF,GAEpCgB,GACYK,EAAAA,IAAIiC,GAAsBtC,GAEtC49E,GACYv9E,EAAAA,IAAI0D,GAAkB65E,GAElC36E,GACY5C,EAAAA,IAAIyB,GAAwBmB,GAExCf,GACY7B,EAAAA,IAAIyiF,GAAgB5gF,SAE9BtC,GApBN,QAqCE,GAda,CACfgnF,GACA8B,GAAazpF,GACbwnF,GACAnnF,EACAymF,GACAp7B,GACAq7B,GACAI,GACAC,GACA+C,GACA9C,IAGE,CAAO1nF,EAAKwB,EAAZ,IC3GtB,MAAM61F,GAkBFl3F,YAIA2S,EAAO6kC,GACH/4C,KAAKkU,MAAQA,EACblU,KAAKkU,MAAQA,EACblU,KAAK+4C,QAA4B,iBAAXA,EAAsB2/C,GAAc3/C,GAAWA,CACxE,EAEL,SAAS2/C,GAActjF,GACnB,OAAO,SAAU6D,EAAO/E,EAAOxJ,EAAOD,GAClC,IAAIwE,EAASmG,EACb,GAAIlB,EAAM,GAAI,CACV,IAAIhH,EAASgH,EAAM,GAAG2R,YAAY3R,EAAM,IACxCjF,GAAUiF,EAAM,GAAGpM,MAAMoF,EAASgH,EAAM,GAAG1M,QAC3CkD,GAASwC,EACT,IAAIyrF,EAASjuF,EAAQD,EACjBkuF,EAAS,IACT1pF,EAASiF,EAAM,GAAGpM,MAAMoF,EAASyrF,EAAQzrF,GAAU+B,EACnDvE,EAAQD,EAEf,CACD,OAAOwO,EAAMkU,GAAGsL,WAAWxpB,EAAQvE,EAAOD,EAC7C,CACJ,CAoFc,IAAIguF,GAAU,MAAO,KAInB,IAAIA,GAAU,UAAW,KAIlB,IAAIA,GAAU,uCAAwC,KAIrD,IAAIA,GAAU,KAAM,KAIrB,IAAIA,GAAU,uCAAwC,KAIrD,IAAIA,GAAU,KAAM,KAuB7C,SAASG,GAAkBC,EAAQ9jF,EAAUmI,EAAW,KAAM47E,GAC1D,OAAO,IAAIL,GAAUI,GAAQ,CAAC5/E,EAAO/E,EAAOxJ,EAAOD,KAC/C,IAAIlK,EAAQ2c,aAAoB2d,SAAW3d,EAAShJ,GAASgJ,EACzDiQ,EAAKlU,EAAMkU,GAAG2G,OAAOppB,EAAOD,GAC5B8F,EAAS4c,EAAG7b,IAAIsB,QAAQlI,GAAQujB,EAAQ1d,EAAO2B,aAAcqe,EAAWtC,GAAStX,GAAasX,EAAOlZ,EAAUxU,GACnH,IAAKgwB,EACD,OAAO,KACXpD,EAAGxM,KAAKsN,EAAOsC,GACf,IAAI/e,EAAS2b,EAAG7b,IAAIsB,QAAQlI,EAAQ,GAAGmG,WAIvC,OAHIW,GAAUA,EAAOrG,MAAQ4J,GAAYib,GAAQ7C,EAAG7b,IAAK5G,EAAQ,MAC3DouF,GAAiBA,EAAc5kF,EAAO1C,KACxC2b,EAAGhqB,KAAKuH,EAAQ,GACbyiB,CAAP,GAEP,CASD,SAAS4rE,GAAuBF,EAAQ9jF,EAAUmI,EAAW,MACzD,OAAO,IAAIu7E,GAAUI,GAAQ,CAAC5/E,EAAO/E,EAAOxJ,EAAOD,KAC/C,IAAI8F,EAAS0I,EAAM3H,IAAIsB,QAAQlI,GAC3BnK,EAAQ2c,aAAoB2d,SAAW3d,EAAShJ,GAASgJ,EAC7D,OAAK3M,EAAOtF,MAAM,GAAGyJ,eAAenE,EAAOxE,OAAO,GAAIwE,EAAOgB,YAAY,GAAIwD,GAEtEkE,EAAMkU,GACR2G,OAAOppB,EAAOD,GACdukB,aAAatkB,EAAOA,EAAOqK,EAAUxU,GAH/B,IACX,GAIP,CC7FD,SAASy4F,GAAcC,GACnB,OAAO,SAAUhgF,EAAOu6B,GACpB,IAAI,MAAEpkC,EAAF,IAASC,EAAT,KAAcpE,GAASgO,EAAM2d,UACjC,GAAK3rB,GAAQA,EAAKG,SAAYgE,EAAME,MAAQ,IAAMF,EAAMkD,WAAWjD,GAC/D,OAAO,EACX,IAAI6pF,EAAc9pF,EAAMnE,MAAM,GAC9B,GAAIiuF,EAAY/tF,MAAQ8tF,EACpB,OAAO,EACX,GAAiC,GAA7B7pF,EAAM5E,OAAOnD,QAAQqB,MAAa0G,EAAMnE,MAAM,GAAG/B,YAAckG,EAAMmC,YAAY,GAAI,CAIrF,GAAmB,GAAfnC,EAAME,OAAcF,EAAMnE,MAAM,GAAGE,MAAQ8tF,GAC3C7pF,EAAMrD,OAAO,IAAMqD,EAAMnE,MAAM,GAAG/B,WAAa,EAC/C,OAAO,EACX,GAAIsqC,EAAU,CACV,IAAI7yB,EAAOvW,EAAAA,MACP+uF,EAAc/pF,EAAMrD,OAAO,GAAK,EAAIqD,EAAMrD,OAAO,GAAK,EAAI,EAG9D,IAAK,IAAIzJ,EAAI8M,EAAME,MAAQ6pF,EAAa72F,GAAK8M,EAAME,MAAQ,EAAGhN,IAC1Dqe,EAAOvW,EAAAA,KAAcgF,EAAMnE,KAAK3I,GAAG2J,KAAK0U,IAC5C,IAAIy4E,EAAahqF,EAAMmC,YAAY,GAAKnC,EAAMnE,MAAM,GAAG/B,WAAa,EAC9DkG,EAAMmC,YAAY,GAAKnC,EAAMnE,MAAM,GAAG/B,WAAa,EAAI,EAE7DyX,EAAOA,EAAK/X,OAAOwB,EAAAA,KAAc6uF,EAASxiF,kBAC1C,IAAI/L,EAAQ0E,EAAMoC,OAAOpC,EAAME,OAAS6pF,EAAc,IAClDhsE,EAAKlU,EAAMkU,GAAGhe,QAAQzE,EAAO0E,EAAMqC,OAAO2nF,GAAa,IAAIjrF,GAAMwS,EAAM,EAAIw4E,EAAa,IACxFziE,GAAO,EACXvJ,EAAG7b,IAAIjH,aAAaK,EAAOyiB,EAAG7b,IAAIjK,QAAQqB,MAAM,CAACuC,EAAMhC,KACnD,GAAIytB,GAAO,EACP,OAAO,EACPzrB,EAAK4I,aAAoC,GAArB5I,EAAK5D,QAAQqB,OACjCguB,EAAMztB,EAAM,EAAZ,IAEJytB,GAAO,GACPvJ,EAAG0J,aAAalC,GAAUuB,KAAK/I,EAAG7b,IAAIsB,QAAQ8jB,KAClD8c,EAASrmB,EAAG0L,iBACf,CACD,OAAO,CACV,CACD,IAAI9X,EAAW1R,EAAIpG,KAAOmG,EAAM3E,MAAQyuF,EAAYjlF,eAAe,GAAG8B,YAAc,KAChFoX,EAAKlU,EAAMkU,GAAG2G,OAAO1kB,EAAMnG,IAAKoG,EAAIpG,KACpCqN,EAAQyK,EAAW,CAAC,KAAM,CAAE5V,KAAM4V,SAAcrZ,EACpD,QAAKgoB,GAASvC,EAAG7b,IAAKlC,EAAMnG,IAAK,EAAGqN,KAEhCk9B,GACAA,EAASrmB,EAAG3V,MAAMpI,EAAMnG,IAAK,EAAGqN,GAAOuiB,mBACpC,EACV,CACJ,CAKD,SAASwgE,GAAaJ,GAClB,OAAO,SAAUhgF,EAAOu6B,GACpB,IAAI,MAAEpkC,EAAF,IAASC,GAAQ4J,EAAM2d,UACvB3I,EAAQ7e,EAAM8C,WAAW7C,GAAKpE,GAAQA,EAAK/B,WAAa,GAAK+B,EAAKQ,WAAWN,MAAQ8tF,IACzF,QAAKhrE,KAEAulB,IAEDpkC,EAAMnE,KAAKgjB,EAAM3e,MAAQ,GAAGnE,MAAQ8tF,EAC7BK,GAAgBrgF,EAAOu6B,EAAUylD,EAAUhrE,GAE3CsrE,GAActgF,EAAOu6B,EAAUvlB,IAC7C,CACJ,CACD,SAASqrE,GAAgBrgF,EAAOu6B,EAAUylD,EAAUhrE,GAChD,IAAId,EAAKlU,EAAMkU,GAAI1iB,EAAMwjB,EAAMxjB,IAAK+uF,EAAYvrE,EAAM5e,IAAI5E,IAAIwjB,EAAM3e,OAChE7E,EAAM+uF,IAGNrsE,EAAGK,KAAK,IAAIX,GAAkBpiB,EAAM,EAAG+uF,EAAW/uF,EAAK+uF,EAAW,IAAIrrF,GAAM/D,EAAAA,KAAc6uF,EAASlrF,OAAO,KAAMkgB,EAAMzjB,OAAOyB,SAAU,EAAG,GAAI,GAAG,IACjJgiB,EAAQ,IAAI5b,GAAU8a,EAAG7b,IAAIsB,QAAQqb,EAAM7e,MAAMnG,KAAMkkB,EAAG7b,IAAIsB,QAAQ4mF,GAAYvrE,EAAM3e,QAE5F,MAAMe,EAAS2d,GAAWC,GAC1B,GAAc,MAAV5d,EACA,OAAO,EACX8c,EAAGe,KAAKD,EAAO5d,GACf,IAAIoB,EAAQ0b,EAAGtC,QAAQ7nB,IAAIyH,GAAM,GAAK,EAItC,OAHIulB,GAAQ7C,EAAG7b,IAAKG,IAChB0b,EAAGhqB,KAAKsO,GACZ+hC,EAASrmB,EAAG0L,mBACL,CACV,CACD,SAAS0gE,GAActgF,EAAOu6B,EAAUvlB,GACpC,IAAId,EAAKlU,EAAMkU,GAAIoiC,EAAOthC,EAAMzjB,OAEhC,IAAK,IAAIvB,EAAMglB,EAAMxjB,IAAK5H,EAAIorB,EAAMvd,SAAW,EAAGtP,EAAI6sB,EAAMxd,WAAY5N,EAAIzB,EAAGyB,IAC3EoG,GAAOsmD,EAAKnmD,MAAMvG,GAAG6G,SACrByjB,EAAG2G,OAAO7qB,EAAM,EAAGA,EAAM,GAE7B,IAAIsH,EAAS4c,EAAG7b,IAAIsB,QAAQqb,EAAMvjB,OAAQioD,EAAOpiD,EAAOK,UACxD,GAAIuc,EAAGtC,QAAQ7nB,IAAIirB,EAAMxjB,MAAQwjB,EAAMvjB,MAAQ6F,EAAOK,UAAUlH,SAC5D,OAAO,EACX,IAAIitB,EAA8B,GAApB1I,EAAMxd,WAAiBotB,EAAQ5P,EAAMvd,UAAY6+C,EAAKrmD,WAChEsB,EAAS+F,EAAOtF,MAAM,GAAIwuF,EAAclpF,EAAOxE,OAAO,GAC1D,IAAKvB,EAAO0E,WAAWuqF,GAAe9iE,EAAU,EAAI,GAAI8iE,EAAc,EAAG9mC,EAAKtrD,QAAQuB,OAAOi1B,EAAQzzB,EAAAA,MAAiBA,EAAAA,KAAcmlD,KAChI,OAAO,EACX,IAAI7kD,EAAQ6F,EAAOtH,IAAKwB,EAAMC,EAAQioD,EAAKjpD,SAO3C,OAHAyjB,EAAGK,KAAK,IAAIX,GAAkBniB,GAASisB,EAAU,EAAI,GAAIlsB,GAAOozB,EAAQ,EAAI,GAAInzB,EAAQ,EAAGD,EAAM,EAAG,IAAI0D,IAAOwoB,EAAUvsB,EAAAA,MAAiBA,EAAAA,KAAcmlD,EAAKtjD,KAAK7B,EAAAA,SAC7JxB,OAAOi1B,EAAQzzB,EAAAA,MAAiBA,EAAAA,KAAcmlD,EAAKtjD,KAAK7B,EAAAA,SAAmBusB,EAAU,EAAI,EAAGkH,EAAQ,EAAI,GAAIlH,EAAU,EAAI,IAC/H6c,EAASrmB,EAAG0L,mBACL,CACV,CAKD,SAAS6gE,GAAaT,GAClB,OAAO,SAAUhgF,EAAOu6B,GACpB,IAAI,MAAEpkC,EAAF,IAASC,GAAQ4J,EAAM2d,UACvB3I,EAAQ7e,EAAM8C,WAAW7C,GAAKpE,GAAQA,EAAK/B,WAAa,GAAK+B,EAAKQ,WAAWN,MAAQ8tF,IACzF,IAAKhrE,EACD,OAAO,EACX,IAAIxd,EAAawd,EAAMxd,WACvB,GAAkB,GAAdA,EACA,OAAO,EACX,IAAIjG,EAASyjB,EAAMzjB,OAAQqG,EAAarG,EAAOpB,MAAMqH,EAAa,GAClE,GAAII,EAAW1F,MAAQ8tF,EACnB,OAAO,EACX,GAAIzlD,EAAU,CACV,IAAImmD,EAAe9oF,EAAWtF,WAAasF,EAAWtF,UAAUJ,MAAQX,EAAOW,KAC3E1B,EAAQW,EAAAA,KAAcuvF,EAAeV,EAASlrF,SAAW,MACzDjG,EAAQ,IAAIqG,GAAM/D,EAAAA,KAAc6uF,EAASlrF,OAAO,KAAM3D,EAAAA,KAAcI,EAAOW,KAAK4C,OAAO,KAAMtE,MAAWkwF,EAAe,EAAI,EAAG,GAC9HnoF,EAASyc,EAAMvjB,MAAO+G,EAAQwc,EAAMxjB,IACxC+oC,EAASv6B,EAAMkU,GAAGK,KAAK,IAAIX,GAAkBrb,GAAUmoF,EAAe,EAAI,GAAIloF,EAAOD,EAAQC,EAAO3J,EAAO,GAAG,IACzG+wB,iBACR,CACD,OAAO,CACV,CACJ,CCxPD,MAAM2vC,GAAM,CAAC,EAAE3tD,eASR,SAAS++E,GAAY3uF,GAE1B,MAAM02E,EAAQ5uE,OAAOhF,OAAO,MAE5B,IAAK9C,IAASA,EAAKE,KACjB,MAAM,IAAI7J,MAAM,wCAUlB,OAPAqyE,GAAM1oE,EAAM,cAAeuyD,IACzB,MAAMn4D,EAAKw0F,GAAMr8B,EAAWI,YACxBv4D,IAAOmjE,GAAI1tD,KAAK6mE,EAAOt8E,KACzBs8E,EAAMt8E,GAAMm4D,EACb,IAGIA,EAQP,SAASA,EAAWI,GAClB,MAAMv4D,EAAKw0F,GAAMj8B,GACjB,OAAOv4D,GAAMmjE,GAAI1tD,KAAK6mE,EAAOt8E,GAAMs8E,EAAMt8E,GAAM,IAChD,CACF,CAMD,SAASw0F,GAAMp5F,GACb,OAAO86C,OAAO96C,GAAS,IAAI88D,aAC5B,CCrCc,SAASu8B,KACtB,OAAQrsB,IACN,MAAMjQ,EAAao8B,GAAYnsB,GAE/BkG,GAAMlG,GAAM,CAACxiE,EAAMc,EAAOvB,KACxB,GACgB,eAAdS,EAAKE,MACM,OAAXX,GACiB,kBAAVuB,EAGP,OADAvB,EAAOu8B,SAAS/+B,OAAO+D,EAAO,GACvB,CAACqnE,GAAMrnE,GAGhB,GAAkB,mBAAdd,EAAKE,MAA2C,kBAAdF,EAAKE,KAA0B,CACnE,MAAMgoB,EAAMqqC,EAAWvyD,EAAK2yD,YAE5B,GAAIzqC,GAAkB,OAAX3oB,GAAoC,kBAAVuB,EAAoB,CAEvD,MAAMsI,EACU,mBAAdpJ,EAAKE,KACD,CAACA,KAAM,QAASujE,IAAKv7C,EAAIu7C,IAAK5uD,MAAOqT,EAAIrT,MAAO+vB,IAAK5kC,EAAK4kC,KAC1D,CACE1kC,KAAM,OACNujE,IAAKv7C,EAAIu7C,IACT5uD,MAAOqT,EAAIrT,MACXinB,SAAU97B,EAAK87B,UAIvB,OADAv8B,EAAOu8B,SAASh7B,GAASsI,EAClB,CAAC++D,GAAMrnE,EACf,CACF,IA5BH,CA+BH,CChDM,MAAMq0E,GAAgB,CACzB2Z,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,YAAa,cACbC,UAAW,YACXC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,iBAAkB,mBAClB/vC,KAAM,OACNgwC,WAAY,aACZC,GAAI,KACJC,KAAM,OACNC,aAAc,eACdC,aAAc,eACdC,aAAc,gBCZZ31F,GAAK,cAEEuiF,GAAmB5jF,GAAa,oBAEhC0lF,GAAaH,IAAkB3mF,IAAD,CAChCyC,GACHA,GACAuH,OAAQ,KAAM,CACVyQ,SAAU,IACVzb,MAAM,EACNiQ,WAAW,EACX0L,SAAU,CAAC,CAAErB,IAAK,SAClBiL,MAAQ/lB,GAAS,CAAC,OAAQ,CAAE+sC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO,iBAClEuqF,cAAe,CACX52E,MAAQ9S,GAAuB,eAAdA,EAAK+J,KACtBi9E,OAAQ,CAAChnF,EAAOC,EAAMS,KAClBV,EAAMsmF,SAAS5lF,GACTV,EAAAA,QAAQC,EAAKZ,OACnBW,EAAMumF,UAAU7lF,EAFhB,GAKRy0E,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAChnF,EAAOC,EAAMS,KAClBV,EAAMioF,SAAShoF,EAAM,aAAcS,EAAK0H,MAAQ,GAAhD,KAIZwkD,SAAW5sD,GAAa,CACpBwC,GAAUgkF,IAAkB,IAAM,CAACvmF,EAAOS,KAChC,MAAE80B,UAAAA,EAAWzJ,GAAAA,GAAO9rB,EAC1B,GAAIa,EAAU2J,MAAc,SACtB,MAAEpD,KAAAA,EAAM6B,GAAAA,GAAOpI,EAGrB,OADYb,EAAMiQ,IAAIsC,aAAa/R,EAAMJ,EAAIL,IAEzCU,MAAAA,GAAAA,EAAWN,EAAGisB,WAAW5rB,EAAMJ,EAAIL,KAC5B,IAGW2R,OAAOmoB,KAAK75B,EAAMuL,OAAOkB,OAAO6gC,QAAQvsC,GAAMA,IAAMhB,EAASO,OAG9EqB,KAAKZ,GAASf,EAAMuL,OAAOkB,MAAM1L,KACjCmG,SAASnG,IACHZ,EAAAA,WAAWK,EAAMJ,EAAIW,EAArB,IAGXN,MAAAA,GAAAA,EAAWN,EAAG0rB,QAAQrrB,EAAMJ,EAAIL,EAAS2M,YAClC,EAdP,KAiBRsqF,UAAW,CACP,CAACjY,GAAcua,YAAan4F,GAAeolF,GAAkB,cCpDnEviF,GAAK,KAEEskF,GAAe3lF,GAAa,gBAC5B6mF,GAAKtB,IAAkB3mF,IAAD,CAAYyC,GAC3CA,GACAuH,OAAQ,KAAM,CACViF,WAAW,EACX0L,SAAU,CACN,CAAErB,IAAK,KACP,CAAEA,IAAK,MACP,CAAEC,MAAO,aAAce,SAAW9b,GAAqB,WAAVA,IAEjD+lB,MAAQ/lB,GAAS,CAAC,KAAM,CAAE+sC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO8E,MAChEylF,cAAe,CACX52E,MAAQ9S,GAAuB,aAAdA,EAAK+J,KACtBi9E,OAAQ,CAAChnF,EAAOC,EAAMS,KAClBV,EAAMsmF,SAAS5lF,GACTV,EAAAA,KAAKC,EAAK0lC,UAChB3lC,EAAMumF,UAAU7lF,EAFhB,GAKRy0E,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAChnF,EAAOC,KACND,EAAAA,SAASC,EAAM,WAAf,KAIlB2sD,SAAW5sD,GAAa,CAACwC,GAAU+lF,IAAc,IAAMhD,GAAWvlF,MAClEi3F,UAAW,CACP,CAACjY,GAAcwa,IAAKp4F,GAAemnF,GAAc,cC7BnDpiF,GAAM,IAAI3C,GAAU,uBAEbq2F,GAAaj3F,GAAqB,cAClCkhF,GAAalhF,GAAqB,cACzCqB,GAAK,OAOEklF,GAAOhB,IAAgC,CAAC3mF,EAAOxB,KAAR,CACzCiE,GACHA,GACAuH,OAAQ,KAAM,CACVrM,MAAO,CACHo5E,KAAM,CAAC,EACP75D,MAAO,CAAEtG,QAAS,OAEtB+D,SAAU,CACN,CACIrB,IAAK,UACLgB,SAAW7b,IACH,kBAAiBupD,aACjB,MAAMrkD,EAAmBlF,GAEtB,OAAEs4E,KAAMt4E,EAAI2gB,aAAa,QAASlC,MAAOze,EAAI2gB,aAAa,SAA1D,IAInBmF,MAAQ9lB,GAAS,CAAC,IAAK,IAAKA,EAAKd,MAAO4tC,MAAOvrC,EAAMg1F,aAAav2F,EAAKd,MAAO8E,MAC9EylF,cAAe,CACX52E,MAAQ7S,GAAuB,SAAdA,EAAK8J,KACtBi9E,OAAQ,CAAC/mF,EAAOS,EAAMI,KAClB,MAAMV,EAAMM,EAAK4sE,IACX7sE,EAAQC,EAAKge,MACnBze,EAAMqmF,SAASxlF,EAAU,CAAEy3E,KAAMn4E,EAAKse,MAAAA,IAChCze,EAAAA,KAAKS,EAAKilC,UAChB1lC,EAAMsmF,UAAUzlF,EAFhB,GAKRq0E,WAAY,CACRriE,MAAQ7S,GAASA,EAAK8J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAC/mF,EAAOS,KACNT,EAAAA,SAASS,EAAM,YAAQ,EAAW,CACpCge,MAAOhe,EAAKvB,MAAMuf,MAClB4uD,IAAK5sE,EAAKvB,MAAMo5E,MAFd,KAOlB3rB,SAAW3sD,GAAa,CACpBuC,GAAUq3F,IAAY,CAACn5F,EAAO,KAAO6kF,GAAWtlF,EAAU,CAAEs4E,KAAAA,MAC5D/1E,GAAUshF,IAAY,CAACpjF,EAAO,KAAO,CAACI,EAAOV,K,MACzC,IAAKA,EAAiB,SAEhB,MAAEsM,MAAAA,GAAU5L,EAAM0K,OAEpB,MACA1J,GAAO,EACX,MAAQ0zB,UAAAA,GAAc10B,GACduG,KAAAA,EAAM6B,GAAAA,GAAOzH,EASrB,GARMX,EAAAA,IAAImI,aAAajI,EAAMA,IAASoB,EAAKA,EAAK,EAAIA,GAAI,CAACwF,EAAG07E,K,MACxD,GAAI,WAAM3b,OAAN,EAAer7D,QAAQ1E,EAAE8E,OAClB,WACD5K,EAAAA,GACC,CAFA,KAMVzB,EAAa,SAEZ,QAAOA,EAAKqM,MAAM3I,MAAK,EAAGgG,KAAAA,KAAWnC,IAAS3H,IACpD,IAAKiB,EAAa,SAElB,MAAMW,EAAQC,EACRjB,EAAMiB,EAAMzB,EAAKiI,UACfyjB,GAAAA,GAAOjrB,EACToC,EAAW,WAAMykE,WAAN,IAAeh7D,OAAO,IAAKzL,EAAK/B,MAAOo5E,KAAAA,IACxD,QAAKr1E,IAED9C,EAAAA,EACKisB,WAAWxqB,EAAOhB,EAAKK,GACvB4qB,QAAQjqB,EAAOhB,EAAKqC,GACpBuyB,aAAa,IAAI80D,GAAcjpF,EAAGk0B,UAAUhC,UAC5CiE,mBAGF,EATP,KAYRy/D,aAAc,CAACj3F,EAAMS,KACjB,IAAII,GAAc,EACX,OACH,IAAIsC,GAAO,CAAA+C,IACPA,GACAo4B,KAAOn+B,I,UACH,MAAMK,EAAoBe,EAAMi1F,aAAazyF,IAAwB,aAAc,CAC/E2sF,YAAa,mCAASllD,YAAT,IAAgBklD,aAAhB,EAA+B,iBAC5CmB,WAAY,0BAASrmD,YAAT,IAAgBqmD,WAC5BtB,SAAW3uF,IACPnB,EAAIsD,IAAIwgF,IAAa9qE,KAAKoqE,GAAYjiF,EAAtC,EAEJkwF,kBAAmB,CAAClwF,EAAMhB,KACtBkqF,GAAsBlpF,EAAMhB,GAAO,CAACS,EAAO4B,EAAKF,EAAQ4E,KAC9C,QAAU/F,EAAKqZ,IAAI+sC,cACzB,IAAKq7B,EACD,MAAMwF,IAGJ,QAAiB5lF,EAAIq6B,KAAOj8B,EAAMi8B,KACxC,IAAIisD,EAAOloF,EAAMi8B,KAAO31B,EAAO21B,MAAQ,EAAOU,MAAQz4B,GAAkB,EACpEmgF,EAAMrkF,EAAMo8B,OAAS91B,EAAO6Y,IAAM,GAAK6iE,EAAQ/jD,UAEnD,OAAIz+B,IACA6kF,EAAMrkF,EAAMmf,IAAM7Y,EAAO6Y,IAAMzd,EAAOo7B,OAAS,GAAKklD,EAAQ/jD,WAG5DiqD,EAAO,IAAUA,EAAAA,GAEd,CAAC7D,EAAK6D,EANb,GAVJ,IAoBR,IAAK/oF,EAAmB,MAAO,CAAC,EAC1B,MAAAJ,EAAiBwB,IACb,MAAE2zB,UAAAA,EAAWtlB,IAAAA,GAAQrO,EAAKgW,OACxBxQ,KAAAA,EAAM6B,GAAAA,GAAOrI,EAEjB,IAACgB,EAAKuuC,WACC,SAIP,KAAU3lC,OACV5J,aAAqB0pF,IACrBvnF,EAAK1B,EAAI2E,QAAQqB,MACjBpE,EAAO5B,EAAI2E,QAAQqB,MACnBhG,EAAIkR,aAAatP,EAAMA,IAASF,EAAKA,EAAK,EAAIA,EAAI/C,GAEpC,aACP,EAGX,GAAIY,aAAqB8nF,GAAe,CACpC,MAAQ9+E,KAAAA,GAAShJ,EACjB,GACuB,UAAnB+G,EAAKmC,KAAKxJ,MACVqH,EAAK8E,MAAMxB,WAAWo4E,GAASA,EAAKv5E,KAAKxJ,OAAS0D,MAAO,EAE3C,aACP,CAEf,CAEO,UAELnC,EAAkBD,IACd,MAAE2zB,UAAAA,GAAc3zB,EAAKgW,MACvB,MACE,MAAExQ,KAAAA,EAAM6B,GAAAA,GAAOrI,EAQrB,GAPKgB,EAAAA,MAAMqO,IAAIjH,aAAa/F,EAAMA,IAASF,EAAKA,EAAK,EAAIA,GAAKwC,IAC1D,GAAIvF,EAAKqM,QAAQ9G,EAAEkH,OACR,YACA,CADA,KAKVpL,EAAM,OAEL,QAAOA,EAAKoL,MAAM3I,MAAMyB,GAAMA,EAAEuE,OAAS9J,IAC/C,OAAK2H,EAESA,EAAKzI,MAAMo5E,UAFd,CAAX,EAKE92E,EAAgBI,IACbA,EAAKsuC,WAGM9vC,EAAcwB,IAE1BpB,EAAkBwxF,KAAKpwF,GACLpB,EAAAA,OAAOqB,EAAeD,KAExCpB,EAAkByxF,OALN,EAQpB,SAAkBr6D,KAAKz3B,GACvBqB,EAAarB,GAEN,CACHqE,OAAQ,CAAC5C,EAAMhB,MAEP,MAAAA,OAAA,EAAAA,EAAWqP,IAAIpF,GAAGjJ,EAAKgW,MAAM3H,OAAQrP,EAAU20B,UAAU1qB,GAAGjJ,EAAKgW,MAAM2d,YAG3EskE,uBAAsB,KAClBr4F,EAAaI,EAAb,GAJA,EAORykC,QAAS,KACL7lC,EAAkB6lC,SAAlB,EAdR,IA/FL,MC/FbriC,GAAK,SACEghB,GAAariB,GAAa,cAC1BymF,GAASlB,IAAkB3mF,IAAD,CAC5ByC,GACHA,GACAuH,OAAQ,KAAM,CACViF,WAAW,EACX0L,SAAU,CACN,CAAErB,IAAK,KACP,CAAEA,IAAK,UACP,CAAEC,MAAO,aAAce,SAAW9b,GAAqB,SAAVA,IAEjD+lB,MAAQ/lB,GAAS,CAAC,SAAU,CAAE+sC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO8E,MACpEylF,cAAe,CACX52E,MAAQ9S,GAAuB,WAAdA,EAAK+J,KACtBi9E,OAAQ,CAAChnF,EAAOC,EAAMS,KAClBV,EAAMsmF,SAAS5lF,GACTV,EAAAA,KAAKC,EAAK0lC,UAChB3lC,EAAMumF,UAAU7lF,EAFhB,GAKRy0E,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAChnF,EAAOC,KACND,EAAAA,SAASC,EAAM,SAAf,KAIlB2sD,SAAW5sD,GAAa,CAACwC,GAAUyiB,IAAY,IAAMsgE,GAAWvlF,MAChEi3F,UAAW,CACP,CAACjY,GAAcya,MAAOr4F,GAAe6jB,GAAY,cChChD2kE,GAAQ,CAACtB,KAAcmB,KAAMJ,KAAUF,MCI9CllF,GAAK,aAEE2/E,GAAmBhhF,GAAa,oBAEhCknF,GAAaxnF,IAAkBd,IAAD,CAChCyC,GACHA,GACAuH,OAAQ,KAAM,CACVvF,QAAS,SACT2S,MAAO,QACPuY,UAAU,EACVhV,SAAU,CAAC,CAAErB,IAAK,eAClBiL,MAAQ/lB,GAAS,CAAC,aAAc,CAAE+sC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO8E,KAAO,GAC/EylF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAW/J,IAASiE,GAC9B+iF,OAAQ,CAAChnF,EAAOC,EAAMS,KAClBV,EAAMomF,SAAS1lF,GAAMkQ,KAAK3Q,EAAK0lC,UAAU0gD,WAAzC,GAGRlR,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAChnF,EAAOC,KACZD,EAAMomF,SAAS,cAAcx1E,KAAK3Q,EAAKgG,SAASogF,WAAhD,KAIZ2Q,WAAah3F,GAAa,CAAC2kF,GAAkB,WAAY3kF,IACzD4sD,SAAW5sD,GAAa,CAACwC,GAAUohF,IAAkB,IAAM8B,GAAO1lF,MAClEi3F,UAAW,CACP,CAACjY,GAAc4Z,YAAax3F,GAAewiF,GAAkB,oBC5B5DK,GAAmBrhF,GAAa,oBAEhCsnF,GAAa5nF,IAAkBd,IACxC,MAAMxB,EAAK,cACJ,OACHiE,GAAAA,EACAuH,OAAQ,KAAM,CACVvF,QAAS,YACT2S,MAAO,QACPzZ,MAAO,CACHsuE,OAAQ,CACJr1D,SAAS,IAGjB+D,SAAU,CACN,CACIrB,IAAK,KACLgB,SAAW7b,IACH,kBAAiBupD,aACjB,MAAMrkD,EAAmBlF,GAEtB,OACHwtE,OAAQxtE,EAAIowF,QAAQ5iB,OADjB,IAMnB1nD,MAAQ9lB,GACG,CACH,KACA,CACI,cAAeA,EAAKd,MAAMsuE,OAC1B1gC,MAAOvrC,EAAMg1F,aAAav2F,EAAKd,MAAO,gBAE1C,GAGRuqF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,EAAMyjE,QAAAA,KAAuB,SAATvtE,IAAoBS,EAClDsmF,OAAQ,CAAC/mF,EAAOS,EAAMI,KAClB,MAAMV,EAA2B,MAAlBM,EAAK+sE,OAAoB,GAAG/sE,EAAK+sE,SAAc,QACxDxtE,EAAAA,SAASa,EAAM,CAAE2sE,OAAAA,IAAU78D,KAAKlQ,EAAKilC,UAAU0gD,WAA/C,GAGdlR,WAAY,CACRriE,MAAQ7S,GAASA,EAAK8J,KAAKxJ,OAASP,EACpCgnF,OAAQ,CAAC/mF,EAAOS,KACZT,EACKmmF,SAAS,YAAQ,EAAW,CAAE5Y,SAAS,EAAOC,OAAiC,SAAzB/sE,EAAKvB,MAAMsuE,SACjE78D,KAAKlQ,EAAKuF,SACVogF,WAHL,KAOZ2Q,WAAa/2F,GAAa,CAAC0kF,GAAkB,iBAAkB1kF,IAC/D2sD,SAAW3sD,GAAa,CAACuC,GAAUyhF,IAAkB,IAAMyB,GAAOzlF,MAClEg3F,UAAW,CACP,CAACjY,GAAc6Z,YAAaz3F,GAAe6iF,GAAkB,cArD9D,ICFLmD,GAAkB,CACpB,GACA,aACA,aACA,OACA,MACA,OACA,OACA,MACA,IACA,MACA,OACA,OACA,SACA,KACA,OACA,YAGSS,GAAqB,kCACrBV,GAAkB,kCAElBpD,GAAoBnhF,GAAa,qBAExCqB,GAAK,QACEumF,GAAYloF,IAA8C,CAACd,EAAOxB,KACrE,SAAe,iBAASkwF,eAAgB9I,GAEvC,OAAAnjF,GACHA,GACAuH,OAAS9K,IAAD,CACJuF,QAAS,QACT2S,MAAO,QACPlM,MAAO,GACPykB,UAAU,EACV3wB,MAAM,EACNrB,MAAO,CACHsxF,SAAU,CACNr4E,QAAS,IAEbk4E,KAAM,CACFl4E,SAAS,IAGjB+D,SAAU,CACN,CACIrB,IAAK,2BACLkE,mBAAoB,OACpBlD,SAAWhb,I,MACH,kBAAiB0oD,aACjB,MAAMrkD,EAAmBrE,GAE7B,MAAO,CAAE2vF,SAAU,WAAI3tE,cAAc,aAAlB,IAA0ButE,QAAQI,SAArD,EAEJ9tE,WAAY,CAAC7hB,EAAKV,K,QACV,kBAAiBopD,aACjB,MAAMrkD,EAAmBrE,GAE7B,MAAML,EAAO,oBAAIqiB,cAAc,aAAlB,IAA0BhR,aAA1B,EAAyC,GACtD,IAAKrR,EACD,OAAOggF,EAAAA,MAEL,QAAWrgF,EAAOgI,KAAK3H,GACtB,cAAcJ,EAAd,GAGf,CACIya,IAAK,MACLkE,mBAAoB,OACpBlD,SAAWhb,IACH,kBAAiB0oD,aACjB,MAAMrkD,EAAmBrE,GAE7B,MAAO,CAAE2vF,SAAU3vF,EAAIuvF,QAAQI,SAA/B,IAIZ1qE,MAAQjlB,IACE,QAAS+lB,SAASR,cAAc,UACzB,SAAAlf,SAAS1G,IACZ,QAASomB,SAASR,cAAc,UACtChmB,EAAOhB,MAAQoB,EACRJ,EAAAA,UAAaI,GAAO,KACvBA,IAASK,EAAK3B,MAAMsxF,WACpBpwF,EAAO05F,UAAW,GAEtB35F,EAAOwkB,YAAYvkB,EALnB,IAOGD,EAAAA,SAAYK,IACf,MAAMJ,EAASI,EAAEwO,OACb,kBAAoB+qF,mBACpB,OAEE,QAAOt5F,EAAIsD,IAAItB,IACjB,IAACZ,EAAKquC,SAEN,YADO9vC,EAAAA,MAAQS,EAAK3B,MAAMsxF,UAI9B,MAAQhwE,IAAAA,EAAK8c,KAAAA,GAASl9B,EAAO09B,wBACvB37B,EAASN,EAAK2gC,YAAY,CAAEhiB,IAAAA,EAAK8c,KAAAA,IACvC,IAAKn7B,EAAQ,OAEP,MAAE2pB,GAAAA,GAAOjqB,EAAK+V,MAEpB/V,EAAKswC,SACDlxC,EAAGitB,cAAc/rB,EAAOorB,YAAQ,EAAW,IACpC1sB,EAAK3B,MACRsxF,SAAUpwF,EAAOhB,QAHzB,EAOG,CACH,MACA,CACI0tC,MAAO,wBAEX3sC,EACA,CACI,MACA,CACI,gBAAiBU,EAAK3B,MAAMsxF,SAC5B1jD,MAAOvrC,EAAMg1F,aAAa11F,EAAK3B,MAAO,eAE1C,CAAC,OAAQ,CAAE86F,WAAY,SAAW,IA7C7B,EAiDjBvQ,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAoB,SAATjJ,EACrBkmF,OAAQ,CAAClmF,EAAOV,EAAMK,KAClB,MAAMJ,EAAWD,EAAKitE,KAChBvrE,EAAQ1B,EAAKf,MACnByB,EAAMslF,SAAS3lF,EAAM,CAAEgwF,SAAAA,IACnB3uF,GACAhB,EAAM8lF,QAAQ9kF,GAElBhB,EAAMulF,WAJN,GAORlR,WAAY,CACRriE,MAAQhS,GAASA,EAAKiJ,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAClmF,EAAOV,K,MACZU,EAAMkO,QAAQ,YAAQ,GAAW,WAAK/I,QAAQoE,iBAAb,IAAyBjC,OAAQ,GAAI,CAClEilE,KAAMjtE,EAAKjB,MAAMsxF,UADrB,KAMZuG,WAAat2F,GAAa,CACtBypF,GAAuBtC,GAAoBnnF,GAAWI,IAC5C,MAACV,EAAIK,GAAYK,EACvB,GAAKV,EACL,MAAO,CAAEqwF,SAAAA,EAAT,IAEJtG,GAAuBhD,GAAiBzmF,GAAWI,IACzC,MAACV,EAAIK,GAAYK,EACvB,GAAKV,EACL,MAAO,CAAEqwF,SAAAA,EAAT,KAGR7jC,SAAWlsD,GAAa,CAAC8B,GAAUuhF,IAAmB,IAAMx+E,GAAa7E,MACzEu2F,UAAW,CACP,CAACjY,GAAc+Z,WAAY33F,GAAe2iF,GAAmB,cAEjExlD,KAAM,IAAM,CAAC79B,EAAMI,EAAMV,KACrB,IAAIK,EAAWC,EAET,QAAoBY,IAChB,MAAEyqB,GAAAA,GAAOjrB,EAAK+W,MACpB/W,EAAKsxC,SACDlvC,EAAGirB,cAAc/tB,SAAU,EAAW,CAClCkwF,MAAM,EACNG,SAAAA,IAHR,EAOE3uF,EAAS,KACL,MAAEiqB,GAAAA,GAAOjrB,EAAK+W,MAEpB/W,EAAKsxC,SACD9wC,EAAG6sB,cAAc/tB,SAAU,EAAW,IAC/BK,EAAStB,MACZmxF,MAAM,IAHd,EAOE7uF,EAAU,KACN,MAAEsqB,GAAAA,GAAOjrB,EAAK+W,MAEpB/W,EAAKsxC,SACD9wC,EAAG6sB,cAAc/tB,SAAU,EAAW,IAC/BK,EAAStB,MACZmxF,MAAM,IAHd,EAQEtvF,EAAWQ,EAAMi1F,aAAazyF,IAAwB,aAAc,CACtEgsF,OAAAA,EACAC,QAAAA,EACAF,iBAAAA,EACA5/C,SAAU,IAAMrvC,EAAKqvC,SACrB+/C,aAAAA,IAEJ,IAAKlvF,EAAU,MAAO,CAAC,EAEvB,MAAQka,IAAAA,EAAK0H,WAAAA,EAAY4tE,SAAAA,EAAUE,UAAAA,GAAc1vF,EACjD,SAASP,GAEF,CACHya,IAAAA,EACA0H,WAAAA,EACAne,OAASnD,GACDA,EAAYyI,KAAKxJ,OAAS0D,KACnBxD,EAAAA,EACXoB,EAASpB,IAEF,GAEX6lC,QAASzlC,EAZb,EApLD,ICtCEkrD,GAAMzpD,IAAW,KAAM,CAE5B2B,GAAI,MACJuH,OAAQ,KAAM,CACVvF,QAAS,SACTyjF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAoB,SAATvI,EACrBwlF,OAAQ,CAACxlF,EAAOxB,EAAMC,KACZuB,EAAAA,WAAWxB,EAAMC,EAAjB,GAGdk1E,WAAY,CACRriE,MAAQtR,GAA4B,QAAnBA,EAAKuI,KAAKxJ,KAC3BymF,OAAQ,CAACxlF,EAAOxB,KACZwB,EAAM4kF,SAAS,QACT5kF,EAAAA,KAAKxB,EAAKiG,QADhB,SCPPi/E,GAAkBtiF,GAAa,mBAE/BklF,GAA2B,IAAItkF,GAAU,6BAEzCgkF,GAAYllF,IAKvB,CAACd,EAAOxB,K,MACN,MAAMC,EAAQ,0BAASi6F,OAAT,EAAkB,CAAC,QAAS,SACnC,OACHj2F,GAAI,YACJuH,OAAQ,KAAM,CACV0K,QAAQ,EACR0C,MAAO,SACPwc,YAAY,EACZjZ,SAAU,CAAC,CAAErB,IAAK,OAClBiL,MAAQjlB,GAAS,CAAC,KAAM,CAAEisC,MAAOvrC,EAAMg1F,aAAa11F,EAAK3B,MAAO,eAChEuqF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAoB,UAATjJ,EACrBkmF,OAAQ,CAAClmF,EAAOV,EAAGK,KACfK,EAAMkO,QAAQvO,EAAd,GAGR00E,WAAY,CACRriE,MAAQhS,GAA4B,cAAnBA,EAAKiJ,KAAKxJ,KAC3BymF,OAASlmF,IACLA,EAAMkO,QAAQ,QAAd,KAIZ49C,SAAW9rD,GAAS,CAChB0B,GAAU0iF,IAAiB,IAAM,CAAC9kF,EAAOK,K,MAC/B,MAAE+0B,UAAAA,EAAWzJ,GAAAA,GAAO3rB,EAC1B,GAAIC,EAAUoK,MAAO,CAEX,QAAOpK,EAAU2N,MAAMnE,OAC7B,GAAI7I,EAAK8G,WAAa,GAAmC,eAA9B,WAAKqC,gBAAL,IAAgBJ,KAAKxJ,MAExC,oBACKgyB,iBAAiBlyB,EAAU6I,GAAK,EAAG7I,EAAU6I,GAAI9I,EAAMoL,OAAO3B,KAAK,cACnE4rB,aAAau0D,GAAUl1D,KAAKhzB,EAAGoO,IAAIsB,QAAQnR,EAAU6I,MACrDuuB,mBAEF,CAEf,CACW,oBAAGH,QAAQ,aAAa,GAAMJ,qBAAqBp2B,EAAK6L,UAAU8qB,mBACtE,CADI,KAInBw/D,UAAW,CACP,CAACjY,GAAc2Z,WAAYv3F,GAAe8jF,GAAiB,gBAE/DgS,aAAep2F,GAAS,CACpB,IAAIsC,GAAO,CACP+C,IAAK2hF,GACLpvD,kBAAmB,CAACt4B,EAAIK,KACd,QAAaL,EAAGm3B,QAAQ,cACvBz1B,GAAQ1B,EAAG0tB,MAClB,GAAIztB,GAAcyB,EAAM,CACpB,MAAQuF,KAAAA,GAASvF,EACXd,EAAQP,EAAMyP,IAAIsB,QAAQ/P,GAChC,IAAIW,EAAWpB,EAAMkN,MACjBhN,GAAW,EACf,KAAOkB,EAAW,GACVnC,EAAMwzD,SAASzyD,EAAM6I,KAAKzH,GAAU2H,KAAKxJ,QAC9BW,GAAAA,GAEfkB,IAEG,QACX,CACO,YAGf,IAAIgB,GAAO,CACP+C,IAAK,IAAI3C,GAAU,4BACnBy1B,kBAAmB,CAAC74B,EAAKK,EAAWJ,KAChC,IAAKD,EAAIgG,OAAQ,OACjB,MAAOtE,GAAM1B,EACb,IAAK0B,EAAI,OAEH,MAACL,GAAQK,EAAGgsB,MAGlB,GADmBhsB,EAAGy1B,QAAQ,aACd,CACR,kBAAkBoyD,IAClB,OAEJ,MAAQtiF,KAAAA,GAAS5F,EACjB,OAAOpB,EAAS0rB,GAAGoC,cAAcjtB,EAAMJ,OAAM,EAAW,GAC5D,CAGA,GADsBW,aAAgB04F,GACnB,CACf,IAAIj5F,EAAMb,EAAS0rB,GACb,MAAE1kB,KAAAA,EAAM6B,GAAAA,GAAOzH,EACrB,SAASyO,IAAIjH,aAAapH,EAAMhB,GAAI,CAACS,EAAM4B,KACnC5B,EAAKyI,OAASjJ,IACdI,EAAMA,EAAIitB,cAAcjrB,EAAKpC,OAAM,EAAW,IAD9C,IAKDI,CACX,MA/FT,ICRLgoF,GAAexnF,MAAM,GACtB4d,KAAK,GACL1d,KAAI,CAACJ,EAAGxB,IAAMA,EAAI,IAWVsnF,GAAkB1kF,GAAqB,mBACvCkoF,GAAmBloF,GAAa,oBAEhCshF,GAAqB,IAAI1gF,GAAU,uBACnCikF,GAAuB,IAAIjkF,GAAU,yBAE5CkkF,GAAYlmF,GACdA,EAAKsQ,YACA/D,QAAQ,iBAAkB,IAC1BA,QAAQ,MAAO,KACfkS,cACAiF,OAEH0iE,GAAkB,CAACpmF,EAAUxB,EAAgBC,KAC/C,IAAIS,GAAO,EACL,QAAc,CAACN,EAAoBK,KACrC,MAAMJ,EAAKD,EAAM2rB,GAAGuL,QAAQ,gBAAgB,GAC5C,IAAIx1B,GAAQ,EACZ1B,EAAM8P,IAAI1G,aAAY,CAAC/H,EAAMT,KACzB,GAAIS,EAAKsI,OAAS/J,IAASU,EAAM,CAC7B,GAAuC,IAAnCe,EAAKqQ,YAAYoT,OAAO9e,OACxB,OAEJ,MAAMhE,EAAQX,EAAKtC,MACb+B,EAAKjB,EAAMwB,GAEbW,EAAM6B,KAAU/C,IACRY,GAAAA,EACRzB,EAAGi3B,QAAQ4sD,IAAoB,GAAM/1D,cAAcntB,OAAK,EAAW,IAC5DoB,EACH6B,GAAAA,IAGZ,KAEAnC,GACArB,EAASJ,EAlBb,EAqBJ,OAAO,IAAI+C,GAAO,CACd+C,IAAK+9E,GACLvqD,MAAO,CACHotB,gBAAiB,CACbjL,iBAAkB,KACPp7C,GAAAA,GACA,GAEXw7C,eAAgB,KACLx7C,GAAAA,EACD,QAAOc,EAAIwC,IAAItB,IACrB,OAAAmD,YAAW,KACP/E,EAAYV,EAAKyX,OAAQpX,GAAOL,EAAKgyC,SAAS3xC,IAA9C,GACD,IACI,CAHP,IAOZw4B,kBAAmB,CAAC74B,EAAcK,EAAGJ,KACjC,IAAIyB,EAAyB,KAE7B,OACI1B,EAAagoF,OAAO3mF,IAAiBA,EAAY81B,QAAQ2sD,OACzD9jF,EAAa6a,MAAMxZ,GAAgBA,EAAYyxB,cAEnCpyB,EAAAA,GAAYW,IACfK,EAAAA,CAAAA,IAINA,CATP,EAWJy8B,KAAOn+B,IACG,QAAMA,EAAKyX,MAAM3H,IACvB,IAAI7P,EAAKD,EAAKyX,MAAMkU,GAAGuL,QAAQ,gBAAgB,GAC3C,SAAA9tB,aAAY,CAAC1H,EAAML,KACI,YAAnBK,EAAKiI,KAAKxJ,MAAsBuB,EAAK3C,MAAMqlB,QACtC1iB,EAAK3C,MAAM8E,KACP5D,EAAAA,EAAG8tB,cAAc1sB,OAAK,EAAW,IAC/BK,EAAK3C,MACR8E,GAAIhE,EAAM6B,MAJlB,IASR1B,EAAKgyC,SAAS/xC,GACP,CAAC,CAXJ,GAnCZ,EAmDE+5F,GAAoB,CAAC54F,EAAUxB,EAAgBC,IAC1C,IAAImD,GAAO,CACd+C,IAAKshF,GACL5vE,MAAO,CACHggB,KAAM,IACK0rD,GAAc94E,MAEzBsgB,MAAQrqB,I,MACE,QAAOc,EAAIwC,IAAItB,IACrB,GAAK,WAAK0tC,YAAL,YAAsBtvC,EAAKqvC,SAAU,OAAOozC,GAAc94E,MAEzD,MAAEuD,MAAAA,GAAUtN,EAAG80B,UACf/0B,EAAOL,EAAMyJ,OACf,KAAKE,OAAS/J,EACd,OAAOujF,GAAc94E,MAGnB,QAAQhK,EAAKtB,MAAMqlB,MACnB1iB,EAAaZ,GACRQ,MAAMR,GACRoe,KAAK,GACL1d,KAAKC,GAAM,MACXE,KAAK,IAERN,EAASolB,SAASR,cAAc,QAC/B5kB,EAAAA,YAAcK,EAAUzB,GAC/BoB,EAAO86B,gBAAkB,QACnBt8B,EAAAA,aAAa4kF,SAAQ,KACvB,MAAM3jF,EAAQjB,EAAM6vF,UAAS,EAAG1L,IAAAA,MACtB,MAAAvjF,EAAU4nF,GAAWxoF,EAAMw2F,cAC1B;;qCAEM51F,EAAQ;yBAFd,IAKPK,IACAO,EAAO+sC,UAAYttC,EADnB,IAKF,QAAO0nF,GAAW9iD,OAAO1lC,EAAMgQ,SAAW,EAAG3O,EAAQ,CAAEmnB,MAAO,IACpE,OAAO26D,GAAc52E,OAAOjM,EAAGwP,IAAK,CAAClP,GAArC,GAGR24B,MAAO,CACHotB,gBAAiB,CACbrmB,MAAQhgC,IACJ,MAAMI,EAAK+oF,GAAQnpF,EAAKmX,MAAMkU,IAC9B,SAAKqmB,SAAStxC,IACP,CADP,GAIR+9C,YAA0Bn+C,GACf,OAAA9B,KAAKi7B,SAASn5B,EACzB,KAKCsnF,GAAU1lF,IACnB,CAACd,EAAOxB,K,QACJ,MAAMC,EAAK,UAELS,EAAQ,OAAAN,EAAA,iBAASi6F,OAATj6F,EAAkBsnF,GAC1B5mF,EAAiB,0BAASw5F,iBAAT,EAEhB,OACHr2F,GAAAA,EACAuH,OAAQ,KAAM,CACVvF,QAAS,UACT2S,MAAO,QACPuY,UAAU,EACVhyB,MAAO,CACH8E,GAAI,CACAmU,QAAS,IAEboM,MAAO,CACHpM,QAAS,IAGjB+D,SAAU+sE,GAAatnF,KAAKvB,IAAD,CACvBya,IAAK,IAAIza,IACTyb,SAAWha,IACH,kBAAkB0nD,aAClB,MAAMrkD,EAAmBrD,GAE7B,MAAO,CAAE0iB,MAAOnkB,EAAG4D,GAAInC,EAAKmC,GAA5B,MAGR8hB,MAAQ1lB,GACG,CACH,IAAIA,EAAKlB,MAAMqlB,QACf,CACIvgB,GAAI5D,EAAKlB,MAAM8E,IAASvD,EAAML,GAC9B0sC,MAAOvrC,EAAMg1F,aAAan2F,EAAKlB,MAAO,YAAYkB,EAAKlB,MAAMqlB,UAEjE,GAGRklE,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAW1J,IAASJ,EAC9B+mF,OAAQ,CAAC3mF,EAAOyB,EAAML,KAClB,MAAMT,EAAQc,EAAKoM,MACnB7N,EAAM+lF,SAAS3kF,EAAM,CAAE+iB,MAAOxjB,IACxBX,EAAAA,KAAKyB,EAAK6jC,UAChBtlC,EAAMgmF,WAFN,GAKRlR,WAAY,CACRriE,MAAQzS,GAASA,EAAK0J,KAAKxJ,OAASN,EACpC+mF,OAAQ,CAAC3mF,EAAOyB,K,MAGZ,GAFMzB,EAAAA,SAAS,eAAW,EAAW,CAAE6N,MAAOpM,EAAK3C,MAAMqlB,QACjC1iB,EAAKgG,YAAc,GAAmC,eAA9B,WAAKqC,gBAAL,IAAgBJ,KAAKxJ,MAChD,CACjB,MAAM6B,EAAqB,GAC3BN,EAAKmE,QAAQkB,SAAQ,CAACjG,EAAGW,EAAGhB,KACpBA,IAAMiB,EAAKgG,WAAa,GAG5B1F,EAAWuE,KAAKzF,EAHZ,IAKRb,EAAMuQ,KAAK6vE,EAAAA,UAAmBr+E,GAAW,MAEnC/B,EAAAA,KAAKyB,EAAKmE,SAEpB5F,EAAMgmF,WAAN,KAIZ2Q,WAAY,CAAC32F,EAAMyB,IACfonF,GAAatnF,KAAKH,GACd0oF,GAAuB,IAAI/Z,OAAO,SAAS3uE,WAAYpB,GAAM,KACnD,QAAOyB,EAAIkC,IAAItB,KACbsL,MAAAA,GAAUhN,EAAK6W,MAAM2d,UACvBt0B,EAAOkB,EAAMyH,OACf,GAAmB,YAAnB,EAAKE,KAAKxJ,KAAoB,CAC9B,IAAIsB,EAAQmV,OAAO9V,EAAK/B,MAAMqlB,OAAYxN,OAAOvV,GACjD,OAAII,EAAQ,IACAA,EAAAA,GAEL,CACH2iB,MAAAA,EAER,CACO,OACHA,MAAO/iB,EADJ,MAKnBmrD,SAAU,CAACvsD,EAAMyB,IAAQ,CACrBU,GAAU8kF,IAAiB,CAAC7lF,EAAQ,IAC5BA,EAAQ,EACD8D,GAAuB,IAAV9D,GAAcK,EAAIkC,IAAIK,IAAWuH,MAAM6xD,WAAgBp9D,GAExEkF,GAAuB,IAAV9D,GAAcK,EAAIkC,IAAIK,IAAWuH,MAAM6xD,WAAgBp9D,EAAa,CAAEmkB,MAAAA,MAE9FhiB,GAAUsoF,IAAkB,IACjB,CAACrpF,EAAOT,EAAUoB,KACf,MAAE4L,MAAAA,GAAUvM,EAAM+zB,UAClB3zB,EAAOX,EAAM2I,OACf,KAAKE,OAAS1J,IAASoB,EAAM+zB,UAAU/qB,OAAgC,IAAvBvJ,EAAMqN,aAA2B,SAE/E,QAAQ1M,EAAK1C,MAAMqlB,MAAW,EACpC,OAAK3jB,GAKDG,MAAAA,GAAAA,EAAAA,EAAM+qB,GAAGoC,cAAc1sB,EAAM+zB,UAAUxnB,MAAMoC,cAAU,EAAW,IAC3DvO,EAAK1C,MACRqlB,MAAAA,MAGD,GATIjf,GAAazD,EAAIkC,IAAIK,IAAWuH,MAAM6xD,WAAgBp9D,EAAtDkF,CAA4D9D,EAAOT,EAAUoB,EADxF,KAcZ60F,UAAW,CACP,CAACjY,GAAcga,IAAK53F,GAAekmF,GAAiB,YAAa,GACjE,CAACtI,GAAcia,IAAK73F,GAAekmF,GAAiB,YAAa,GACjE,CAACtI,GAAcka,IAAK93F,GAAekmF,GAAiB,YAAa,GACjE,CAACtI,GAAcma,IAAK/3F,GAAekmF,GAAiB,YAAa,GACjE,CAACtI,GAAcoa,IAAKh4F,GAAekmF,GAAiB,YAAa,GACjE,CAACtI,GAAcqa,IAAKj4F,GAAekmF,GAAiB,YAAa,GACjE,CAACtI,GAAcsa,kBAAmBl4F,GAAe0pF,GAAkB,CAAC,YAAa,YAErFoM,aAAc,CAAC72F,EAAMyB,KACjB,MAAML,EAAU,CAACmmF,GAAgB9lF,EAAKzB,EAAMK,IAC5C,OAAII,GACAW,EAAQkF,KAAKyzF,GAAkBt4F,EAAKzB,EAAMmB,IAEvCC,CAHP,EA1HD,IChLTwC,GAAK,KACE8hF,GAAWnjF,GAAqB,YAChC+kF,GAAKrlF,IAAYd,IAAD,CAClByC,GACHA,GACAuH,OAAQ,KAAM,CACVoN,MAAO,QACPuD,SAAU,CAAC,CAAErB,IAAK,OAClBiL,MAAQ/lB,GAAS,CAAC,KAAM,CAAE+sC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO8E,MAChEylF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAoB,kBAAT/J,EACrBgnF,OAAQ,CAAChnF,EAAOC,EAAGS,KACfV,EAAMgP,QAAQtO,EAAd,GAGRy0E,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAAS0D,GACpC+iF,OAAShnF,IACLA,EAAMgP,QAAQ,gBAAd,KAIZgoF,WAAah3F,GAAS,CAClB,IAAIilF,GAAU,4BAA4B,CAAChlF,EAAOS,EAAOI,EAAOV,KAC5D,MAAQ2rB,GAAAA,GAAO9rB,EAEf,OAAIS,EAAM,IACND,EAAG4tB,YAAYvtB,EAAQ,EAAGV,EAAKJ,EAAK2M,UAGjClM,CAJP,KAORmsD,SAAU,CAAC5sD,EAAMC,IAAQ,CACrBuC,GAAUujF,IAAU,IAAM,CAACrlF,EAAOI,KAC9B,IAAKA,EAAiB,SAEtB,MAAMV,EAAYH,EAAI+D,IAAIK,IAAWwF,KAAK,cAClCkiB,GAAAA,EAAIyJ,UAAAA,GAAc90B,GAClB2G,KAAAA,GAAShH,EACXoB,EAAOzB,EAAK2M,SAClB,IAAKlL,EACM,SAEX,MAAMT,EAAMP,EAAGy2B,qBAAqBz1B,GAAMoM,OAAO/L,EAAM1B,GACjDgC,EAAM4nF,GAAU71D,SAASnzB,EAAIkP,IAAIsB,QAAQ1P,GAAO,GAAG,GACzD,OAAKM,GAGLtB,EAASE,EAAIy0B,aAAarzB,GAAKq1B,mBACxB,CAJP,SC3CH4tD,GAAcziF,GAAqB,eACnC23F,GAAc33F,GAAqB,eAC1CqB,GAAK,QASLokF,GAAM,IAAI7kF,GAAU,wBAEb+jF,GAAQjlF,IAAiC,CAACd,EAAOxB,KAAR,CAE9CiE,GAAI,QACJuH,OAAQ,KAAM,CACV0K,QAAQ,EACR0C,MAAO,SACPwc,YAAY,EACZ2N,WAAW,EACXr2B,MAAO,GACPmM,MAAM,EACNsY,UAAU,EACV1jB,WAAW,EACXtO,MAAO,CACH2xF,IAAK,CAAE14E,QAAS,IAChBq2B,IAAK,CAAEr2B,QAAS,IAChBsG,MAAO,CAAEtG,QAAS,KAEtB+D,SAAU,CACN,CACIrB,IAAK,WACLgB,SAAW7b,IACH,kBAAiBupD,aACjB,MAAMrkD,EAAmBlF,GAEtB,OACH6wF,IAAK7wF,EAAI2gB,aAAa,QAAU,GAChC6tB,IAAKxuC,EAAI2gB,aAAa,QAAU,GAChClC,MAAOze,EAAI2gB,aAAa,UAAY3gB,EAAI2gB,aAAa,QAAU,GAH5D,IAQnBmF,MAAQ9lB,GACG,CACH,MACA,IACOA,EAAKd,MACR4tC,MAAOvrC,EAAMg1F,aAAav2F,EAAKd,MAAO8E,MAIlDylF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAW9J,IAASgE,GAC9B+iF,OAAQ,CAAC/mF,EAAOS,EAAMI,KAClB,MAAMV,EAAMM,EAAK4sE,IACX7sE,EAAMC,EAAK+tC,IACXpuC,EAAQK,EAAKge,MACnBze,EAAM+O,QAAQlO,EAAM,CAChBgwF,IAAK1wF,EACLquC,IAAAA,EACA/vB,MAAAA,GAHJ,GAORy2D,WAAY,CACRriE,MAAQ7S,GAASA,EAAK8J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAC/mF,EAAOS,KACNT,EAAAA,QAAQ,aAAS,OAAW,EAAW,CACzCye,MAAOhe,EAAKvB,MAAMuf,MAClB4uD,IAAK5sE,EAAKvB,MAAM2xF,IAChBriD,IAAK/tC,EAAKvB,MAAMsvC,KAHd,KAQlBme,SAAW3sD,GAAS,CAChBuC,GAAU+3F,IAAa,CAAC75F,EAAM,KAAO,CAACI,EAAOV,KACzC,IAAKA,EAAiB,SACtB,MAAQ2rB,GAAAA,GAAOjrB,EACTT,EAAOJ,EAAK0M,OAAO,CAAEmkF,IAAAA,IAC3B,IAAKzwF,EACM,SAEL,QAAMI,EAAGy2B,qBAAqB72B,GAC3B,WAAIo3B,mBACN,CADE,IAGbj1B,GAAU6iF,IAAa,CAAC3kF,EAAM,KAAO,CAACI,EAAOV,KACzC,MAAMK,EAAOgmF,GAAuB3lF,EAAM00B,UAAWv1B,GACrD,IAAKQ,EAAa,SAElB,MAAQsrB,GAAAA,GAAOjrB,EACf,kBACIT,EAAG8tB,cAAc1tB,EAAKoH,SAAK,EAAW,IAAKpH,EAAKoJ,KAAK1K,MAAO8xF,SAAS,EAAMH,IAAAA,IAAOr5D,mBAG/E,CAJP,KAORu/D,WAAa/2F,GAAS,CAClB,IAAIglF,GACA,sEACA,CAACvkF,EAAOI,EAAOV,EAAOK,KAClB,MAAOJ,EAAMyB,EAAKL,EAAM,GAAIT,GAASF,GAC7BirB,GAAAA,GAAOrrB,EACf,OAAIL,GACG+B,EAAAA,YAAYhC,EAAOK,EAAKR,EAAK0M,OAAO,CAAEmkF,IAAAA,EAAKriD,IAAAA,EAAK/vB,MAAAA,KAGhDtc,CAJP,KAQZm8B,KAAM,IAAOt+B,I,QACT,IAAIS,EAAWT,EAET,QAAc,0BAAS0wF,aAAT,EAAwB,eACtCvwF,EAAU,0BAAS4J,UAAT,EACVvJ,EAAWe,EAAMi1F,aAAazyF,IAAoB,QAAS,CAC7D2sF,YAAAA,EACA3mF,QAAAA,IAGJ,IAAKvJ,EACD,MAAO,CAAC,EAGN,MAAEya,IAAAA,EAAKs1E,SAAAA,GAAa/vF,EAC1B,SAASC,GAEF,CACHwa,IAAAA,EACAzW,OAASrC,GACDA,EAAY2H,KAAKxJ,OAAS0D,KAEnBvD,EAAAA,EACXoB,EAASpB,IAEF,GAEXurC,WAAY,KACJ5rC,EAAAA,UAAUolB,IAAI,2BAAd,EAERymB,aAAc,KACN7rC,EAAAA,UAAUoG,OAAO,2BAAjB,EAhBZ,EAoBJywF,aAAc,CAACj3F,EAAMS,IACV,CACH,IAAI0C,GAAO,CACP+C,IAAAA,GACAo4B,KAAOz9B,I,UACH,MAAMV,EAAoBoB,EAAMi1F,aAAazyF,IAAwB,aAAc,CAC/E2sF,YAAa,mCAASllD,YAAT,IAAgBklD,aAAhB,EAA+B,mBAC5CmB,WAAY,0BAASrmD,YAAT,IAAgBqmD,WAC5BtB,SAAWtvF,IACPR,EAAIsD,IAAIwgF,IAAa9qE,KAAK2rE,GAAankF,EAAvC,IAGR,IAAKd,EAAmB,MAAO,CAAC,EAC1B,QAAiBc,GACZssC,QACHtsC,EAAKkvC,YAAcnwC,GAAQwmF,GAAuBvlF,EAAK2W,MAAM2d,UAAWv1B,IAG1EI,EAAkBa,IACpB,MAAMW,EAAS4kF,GAAuBvlF,EAAK2W,MAAM2d,UAAWv1B,GAC5D,OAAK4B,EAESA,EAAOgI,KAAK1K,MAAM2xF,SAFnB,CAAb,EAKEhvF,EAAgBZ,IACbA,EAAKivC,WAGM1vC,EAAcS,IAE1Bd,EAAkB6xF,KAAK/wF,GACLd,EAAAA,OAAOC,EAAea,KAExCd,EAAkB8xF,OALN,EAQpB,SAAkBr6D,KAAK/2B,GACvBgB,EAAahB,GAEN,CACH2D,OAAQ,CAACvD,EAAMW,MAEP,iBAAWqO,IAAIpF,GAAG5J,EAAK2W,MAAM3H,OAAQrO,EAAU2zB,UAAU1qB,GAAG5J,EAAK2W,MAAM2d,YAG3E1zB,EAAaZ,EAHT,EAKRolC,QAAS,KACLlmC,EAAkBkmC,SAAlB,EAZR,SCvLlBriC,GAAK,YAEEkhF,GAAgBviF,GAAa,iBAC7B23B,GAAe33B,GAAa,gBAC5B0iF,GAAe1iF,GAAa,gBAEnCmlF,GAAyB,IAAIvkF,GAAU,4BAEvCg3F,GAA6Bh5F,IACzB,QAAc,CAACvB,EAAoBS,KACrC,MAAMI,EAAkBklF,GAAkB,eAAgB/lF,EAAMuL,QAChE,IAAIpL,EAAKH,EAAM8rB,GACf9rB,EAAMiQ,IAAI1G,aAAY,CAAC/I,EAAMJ,EAAKyB,EAAQL,KACtC,GAAIhB,EAAKsJ,OAASvI,IAAQ,iBAAQuI,QAASjJ,EAAiB,CACxD,IAAIE,GAAU,EACd,MAAMoB,EAAQ,IAAK3B,EAAKtB,OACO,YAA3BsB,EAAKtB,MAAMs7F,WACXr4F,EAAMq4F,SAAc,UACVz5F,GAAAA,GAGR,QAAOc,MAAAA,OAAAA,EAAAA,EAAQkJ,WAAW,GAC5B9J,GAAQA,EAAK6I,OAASvI,GAAmC,YAA3BN,EAAK/B,MAAMs7F,WACnCr4F,EAAAA,MAAW,GAAGX,EAAQ,KAClBT,GAAAA,GAGc,MAAxBP,EAAKtB,MAAMw8D,QACLv5D,EAAAA,MAAW,GAAGX,EAAQ,KAClBT,GAAAA,GAGVA,IACAZ,EAAKA,EAAG+tB,cAAc9tB,OAAK,EAAW+B,GAE9C,KAEJ1B,EAASN,EAzBT,EA2BJ,OAAO,IAAIgD,GAAO,CACd+C,IAAK4hF,GACL9uD,kBAAmB,CAACh5B,EAAcS,EAAWI,KACzC,IAAIV,EAAyB,KAC7B,OAAIH,EAAagb,MAAMxa,GAAgBA,EAAYyyB,cACnClzB,EAAAA,GAAYS,IACfL,EAAAA,CAAAA,IAINA,CANP,GAJR,EAeS6mF,GAAW3kF,IAAkBd,IAAD,CAAYyC,GACjDA,GACAuH,OAAQ,KAAM,CACVoN,MAAO,WACP3S,QAAS,mBACT9G,MAAO,CACHw8D,MAAO,CACHvjD,QAAS,KAEbqiF,SAAU,CACNriF,QAAS,UAEbq1D,OAAQ,CACJr1D,QAAS,SAGjB+Y,UAAU,EACVhV,SAAU,CACN,CACIrB,IAAK,eACLgB,SAAW9b,IACH,kBAAiBwpD,aACjB,MAAMrkD,EAAmBnF,GAEtB,OACH27D,MAAO37D,EAAIqwF,QAAQ10B,MACnB8+B,SAAUz6F,EAAIqwF,QAAQ,aACtB5iB,OAAQztE,EAAIqwF,QAAQ5iB,OAHjB,EAMX5qD,eAAiB7iB,IACT,kBAAiBwpD,aACjB,MAAMrkD,EAAmBnF,GAGvB,QAAOA,EAAI8iB,cAA2B,mBAC5C,OAAK7iB,GACMD,CADX,GAMR,CAAE8a,IAAK,OAEXiL,MAAQ/lB,GACG,CACH,KACA,CACI+sC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO,aACtC,aAAca,EAAKb,MAAMw8D,MACzB,iBAAkB37D,EAAKb,MAAMs7F,SAC7B,cAAez6F,EAAKb,MAAMsuE,QAE9B,CAAC,MAAO,CAAE1gC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO,oBAAsBa,EAAKb,MAAMw8D,OACjF,CAAC,MAAO,CAAE5uB,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO,mBAAqB,IAG7EuqF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,EAAM2jE,QAAAA,KAAuB,aAAT1tE,GAAmC,OAAZC,EACrD+mF,OAAQ,CAAChnF,EAAOC,EAAMS,KAClB,MAAMI,EAAyB,MAAjBb,EAAK07D,MAAmB,GAAG17D,EAAK07D,SAAc,IACtDv7D,EAA4B,MAAjBH,EAAK07D,MAAmB,UAAY,SAC/Cl7D,EAA2B,MAAlBR,EAAKwtE,OAAoB,GAAGxtE,EAAKwtE,SAAc,OAC9DztE,EAAMomF,SAAS1lF,EAAM,CAAEi7D,MAAAA,EAAO8+B,SAAAA,EAAUhtB,OAAAA,IAClCztE,EAAAA,KAAKC,EAAK0lC,UAChB3lC,EAAMqmF,WAFN,GAKRlR,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAChnF,EAAOC,KACND,EAAAA,SAAS,gBAAY,EAAW,CAAEytE,OAAiC,SAAzBxtE,EAAKd,MAAMsuE,SACrDztE,EAAAA,KAAKC,EAAKgG,SAChBjG,EAAMqmF,WAFA,KAMlB2Q,WAAah3F,GAAa,CAAC2kF,GAAkB,iBAAkB3kF,IAC/D4sD,SAAW5sD,GAAa,CACpBwC,GAAU2iF,IAAe,IAAM6D,GAAchpF,KAC7CwC,GAAU+3B,IAAc,IAAM0uD,GAAajpF,KAC3CwC,GAAU8iF,IAAc,IAAMoV,GAAa16F,MAE/Ci3F,UAAW,CACP,CAACjY,GAAc0a,cAAet4F,GAAe+jF,GAAe,SAC5D,CAACnG,GAAc2a,cAAev4F,GAAem5B,GAAc,SAC3D,CAACykD,GAAc4a,cAAex4F,GAAekkF,GAAc,UAE/D4R,aAAel3F,GAAa,CAACw6F,GAA0Bx6F,QCjJ9CwlF,GAAoB5iF,GAAa,qBAExCqB,GAAK,eACEkzF,GAAc70F,IAAkBd,IAAD,CAAYyC,GACpDA,GACAuH,OAAQ,KAAM,CACVvF,QAAS,YACT2S,MAAO,QACPzZ,MAAO,CACH65E,MAAO,CACH5gE,QAAS,GAEbq1D,OAAQ,CACJr1D,SAAS,IAGjB+D,SAAU,CACN,CACIrB,IAAK,KACLgB,SAAW9b,IACH,kBAAiBwpD,aACjB,MAAMrkD,EAAmBnF,GAEtB,OACHytE,OAAQztE,EAAIqwF,QAAQ5iB,OACpBuL,MAAOh5E,EAAI0pC,aAAa,SAAW1yB,OAAOhX,EAAI4gB,aAAa,UAAY,EAFpE,IAOnBmF,MAAQ/lB,GAAS,CACb,KACA,IACgC,IAAxBA,EAAKb,MAAM65E,MAAiB,CAAC,EAAIh5E,EAAKb,MAAM65E,MAChD,cAAeh5E,EAAKb,MAAMsuE,OAC1B1gC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAO,iBAE1C,GAEJuqF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,EAAMyjE,QAAAA,KAAuB,SAATxtE,KAAqBC,EACnD+mF,OAAQ,CAAChnF,EAAOC,EAAMS,KAClB,MAAMI,EAA2B,MAAlBb,EAAKwtE,OAAoB,GAAGxtE,EAAKwtE,SAAc,OACxDztE,EAAAA,SAASU,EAAM,CAAE+sE,OAAAA,IAAU78D,KAAK3Q,EAAK0lC,UAAU0gD,WAA/C,GAGdlR,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAAS0D,GACpC+iF,OAAQ,CAAChnF,EAAOC,KACZD,EAAMomF,SAAS,YAAQ,EAAW,CAAE5Y,SAAS,EAAMlkE,MAAO,EAAGmkE,OAAiC,SAAzBxtE,EAAKd,MAAMsuE,SAC1EztE,EAAAA,KAAKC,EAAKgG,SAChBjG,EAAMqmF,WAFN,KAMZ2Q,WAAah3F,GAAa,CACtB2kF,GACI,cACA3kF,GACCC,IAAD,CAAc+4E,MAAOhiE,OAAO/W,EAAM,QAClC,CAACA,EAAOS,IAASA,EAAKoH,WAAapH,EAAKvB,MAAM65E,QAAahiE,OAAO/W,EAAM,OAGhF2sD,SAAW5sD,GAAa,CAACwC,GAAUgjF,IAAmB,IAAME,GAAO1lF,MACnEi3F,UAAW,CACP,CAACjY,GAAc8Z,aAAc13F,GAAeokF,GAAmB,kBClE1DJ,GAAexiF,GAAa,gBAEnC2mF,GAAK,YACEoR,GAAYr4F,IAAkBd,IAAD,CAElCyC,GAAAA,GACAuH,OAAQ,KAAM,CACVvF,QAAS,UACT2S,MAAO,QACPuD,SAAU,CAAC,CAAErB,IAAK,MAClBiL,MAAQ/lB,GAAS,CAAC,IAAK,CAAE+sC,MAAOvrC,EAAMg1F,aAAax2F,EAAKb,MAAOoqF,KAAO,GACtEG,cAAe,CACX52E,MAAQ9S,GAAuB,cAAdA,EAAK+J,KACtBi9E,OAAQ,CAAChnF,EAAOC,EAAMS,KAClBV,EAAMomF,SAAS1lF,GACfT,EAAS0lC,SACC3lC,EAAAA,KAAKC,EAAK0lC,UAEV3lC,EAAAA,QAAQC,EAAKZ,OAEvBW,EAAMqmF,WANN,GASRlR,WAAY,CACRriE,MAAQ9S,GAA4B,cAAnBA,EAAK+J,KAAKxJ,KAC3BymF,OAAQ,CAAChnF,EAAOC,K,MAGZ,GAFAD,EAAMomF,SAAS,aACSnmF,EAAK6H,YAAc,GAAmC,eAA9B,OAAAhH,EAAA,EAAKqJ,gBAAL,EAAArJ,EAAgBiJ,KAAKxJ,MAChD,CACjB,MAAMH,EAAqB,GAC3BH,EAAKgG,QAAQkB,SAAQ,CAAC1G,EAAGJ,EAAGyB,KACpBA,IAAM7B,EAAK6H,WAAa,GAG5B1H,EAAWuG,KAAKlG,EAHZ,IAKRT,EAAM4Q,KAAK6vE,EAAAA,UAAmBrgF,GAAW,MAEnCJ,EAAAA,KAAKC,EAAKgG,SAEpBjG,EAAMqmF,WAAN,KAIZz5B,SAAW5sD,GAAa,CAACwC,GAAU4iF,IAAc,IAAM7/E,GAAavF,MACpEi3F,UAAW,CACP,CAACjY,GAAcz1B,MAAOnoD,GAAegkF,GAAc,kBCrDlDwV,GAAOt4F,IAAW,KAAM,CACjC2B,GAAI,OACJuH,OAAQ,KAAM,CACVoN,MAAO,SACP8wE,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAoB,SAATvI,EACrBwlF,OAAQ,CAACxlF,EAAOxB,KACNwB,EAAAA,QAAQxB,EAAKX,MAAb,GAGd81E,WAAY,CACRriE,MAAQtR,GAA4B,SAAnBA,EAAKuI,KAAKxJ,KAC3BymF,OAAQ,CAACxlF,EAAOxB,KACZwB,EAAMwN,QAAQ,YAAQ,EAAWhP,EAAKoI,KAAtC,SCAHmuF,GAAsB,CAC/BxqC,KACA4uC,KACAnT,KACAsC,KACAU,KACAN,KACAiN,KACAlQ,KACAe,KACAL,KACAJ,KACAqT,MCxBS9D,GAAiB,KAC1B,SAAS,EAAY92F,GACXiqF,GAAAA,EAAK,QAAShqF,I,MAChB,GAAIA,EAAKutE,QAAT,CACU,QAAQ,WAAKlkE,OAAL,EAAc,EAC5BrJ,EAAK0lC,SAASx+B,SAAQ,CAAC/G,EAAOK,KACzBL,EAAmCu7D,MAAQl7D,EAAQK,CAAnD,GAGT,SAER,CAEO,UCdL+5F,GAAYr5F,KAAkCA,EAAgBmkC,SAC9Dm1D,GAAUt5F,GAAsD,SAAdA,EAAKuI,KAE7D,SAAS,GAAiBvI,EAAWxB,GACjC,OAAOC,EAAUuB,EAAK,EAAG,MAAM,GAEZ,aAAYV,EAAeV,GACtC,MAASM,GAAO,CAChB,MAAMD,EAAM,GACH,UAAI,EAAGqB,EAAIpB,EAAKilC,SAASv/B,OAAQ/F,EAAIyB,EAAGzB,IAAK,CAC5C,QAAWK,EAAKilC,SAAStlC,GAC/B,GAAIoB,EAAU,CACV,MAAMT,EAAKf,EAAUwB,EAAUpB,EAAGK,GAClC,GAAIM,EACA,IAAK,IAAIoB,EAAI,EAAGlB,EAAIF,EAAGoF,OAAQhE,EAAIlB,EAAGkB,IAAK,CACvC,MAAMP,EAAOb,EAAGoB,GACZP,GACApB,EAAIkG,KAAK9E,EAEjB,CAER,CACJ,CACAnB,EAAKilC,SAAWllC,CACpB,CAEO,SAAGC,EAAMI,EAAOV,EAC3B,CACJ,CAEO,MAAM26F,GAAmB,KAC5B,SAAS,EAAY/6F,GACAg7F,GAAAA,GAAO/6F,GACf66F,GAAO76F,GAIL,GAHI,CAACA,IAKpB,CACO,UCvCLg7F,GAA6B,IAAIz3F,GAAU,gCAMpCqnF,GAA6B,KACtC,IAAIrpF,GAAO,EACL,QAAkC,IAAI4B,GAAO,CAC/C+C,IAAK80F,GACLpjF,MAAO,CACHggB,OACW,QACX,EACA9M,MAAM9qB,GACE,IAACA,EAAGu1B,UAAU/qB,MACP,SAEL,QAAMxK,EAAGu1B,UAAUxnB,MACnBlN,EAAOJ,EAAI+O,WACXrP,EAAQM,EAAI8O,UACd,aAAQpP,GAASU,EAAK6P,WAAa7P,EAAKqH,QAAU/H,EAAMuQ,WAAavQ,EAAM+H,OAKnF,GAEJwxB,MAAO,CACHotB,gBAAiB,CACb7K,eAAgB,CAACj8C,EAAMS,MACfc,IACOA,GAAAA,EACPs4F,uBAAsB,KAElB,GADe95F,EAAwB65B,SAAS55B,EAAK4X,OACzC,CACF,QAAO5X,EAAK4X,MAAM2d,UAAUnuB,KAClC3G,EAAEq5C,iBACG95C,EAAAA,SAASA,EAAK4X,MAAMkU,GAAGsL,WAAW32B,EAAE87C,MAAQ,GAAIp8C,GACzD,MAGG,GAIf07C,iBAAmB77C,IACAD,EAAwB65B,SAAS55B,EAAK4X,SAE1CrW,GAAAA,IAEJ,GAEXs8C,YAAa,CAAC79C,EAAMS,KAEhB,GAAIV,EADmC65B,SAAS55B,EAAK4X,QACvCnX,aAAaw6F,YAAcx6F,EAAE87C,OAASh7C,EAAM,CAChD,QAAOvB,EAAK4X,MAAM2d,UAAUnuB,KAClC,SAAE0yC,iBACG95C,EAAAA,SAASA,EAAK4X,MAAMkU,GAAGsL,WAAW32B,EAAE87C,MAAQ,GAAIp8C,KAE9C,CACX,CAEO,WAGfy+C,YAAY5+C,GAER,GADeD,EAAwB65B,SAAS55B,GACpC,CAER,MAAMG,EAAWH,EADCu1B,UAAUxnB,MACPnG,IACfpH,EAAOomB,SAASR,cAAc,QAC9BhmB,EAAUuoF,GAAW9iD,OAAO1lC,EAAUK,EAAM,CAC9CmoB,MAAO,IAEL9mB,EAAQ+kB,SAASR,cAAc,QAC/B5kB,EAAWmnF,GAAW9iD,OAAO1lC,EAAU0B,GAC7C,OAAA+D,YAAW,KACPpF,EAAK87B,gBAAkB,OACvBz6B,EAAMy6B,gBAAkB,MADxB,IAGGgnD,GAAc52E,OAAO1M,EAAMiQ,IAAK,CAAC7P,EAASoB,GACrD,CACA,OAAO8hF,GAAc94E,KACzB,KAID,UC1FE05E,GAAa,6DAEbyG,GAAqBppF,GAC9B,IAAI4uE,OAAO,kBAAkB5uE,YAA2B,KCE/C25F,GAAY35F,IACrB,IAAIxB,EAAOwB,EACPvB,EAAQD,EAAK8S,MAAMqxE,IAChB,QAASlkF,EAAMkX,QAAQ,CACpB,MAAEinC,KAAAA,GAASn+C,EAAMkX,OAChBnX,EAAAA,EAAK+N,QAAQo2E,GAAYzjF,GAExBT,EAAAA,EAAK6S,MAAMqxE,GACvB,CACO,UAGEiX,GAAO,CAAC55F,EAAcxB,EAAeC,KACxC,QAAMuB,EAAK4U,MAAM,IACjBtV,EAAOJ,EAAIV,GACb,SAAIA,IAAUU,EAAIT,KAClBS,EAAIV,GAASU,EAAIT,GACjBS,EAAIT,GAAQa,GAETJ,EAAIqB,KAAK,IAAIG,UAJhB,EAOKm5F,GAAsB75F,GAA6BxB,GAC5DA,EAAK+N,QAAQ68E,GAAkBppF,GAAkB,IAExC85F,GAAwB95F,GAAsCxB,IACvE,MAAMC,EAAQD,EAAKsV,QAAQ9T,EAAY+5F,MACjC76F,EAAOV,EAAKywE,OAAOxwE,EAAQ,GAC3Ba,EAAQd,EAAKywE,OAAOxwE,EAAQ,GAC5BG,EAAW,UAGjB,OAAKU,EAKAJ,GAIDN,EAAS2W,KAAKrW,IAASN,EAAS2W,KAAKjW,GAC9BU,EAAYg6F,YAJZh6F,EAAYo/D,KALZp/D,EAAYg6F,WADvB,EAgBSnF,GAAa,CAAC70F,EAAYxB,EAAcC,KACjD,IAAIS,EAASV,EACTc,GAAO,EACN,SAAA0I,aAAapJ,I,MACV,KAAa,SACjB,GAAIA,EAAE+H,OAAQ,CACV,MAAM9H,EAAI,WAAE+H,WAAF,IAAQkN,QAAQrV,GACtB,GAAK,MAAL,GAAaI,GAAK,EACX,YACGK,GAAAA,GACH,CAEf,CACAA,GAAUN,EAAEkI,QAAZ,IAGG5H,CAbF,EC9BIw1F,GAAkC,CAC3CuF,kBAAmB,CACfF,KAAM,IACNC,YAAa,IACb56B,KAAM,KAEV86B,YAAa,CAAC,uBACdC,eAAgB,EAAGC,SAAAA,EAAUzoD,SAAAA,KACzB3xC,EAASwP,eACThR,GAEAwB,EAASuI,OAAS/J,EAAS+J,OAE1BvI,EAASsJ,GAAG9K,GACjB67F,gBAAiB,CAACr6F,EAA2BxB,KACnC,QAAoB,CAAC,IAAK,KAE5B,MAAQA,EAAKsV,QAAQ9T,GACzB,KAAOvB,EAAkBwzD,SAASzzD,EAAKU,EAAQ,IAAM,KAAOT,EAAkBwzD,SAASzzD,EAAKU,EAAQ,IAAM,KACtGV,EAAOo7F,GAAKp7F,EAAMU,EAAOA,EAAQ,GACjCA,GAAgB,EAGb,WAIFyD,GAAsB0hF,EAAkDqQ,GAAe,oBCrC9F4F,GAAwBt6F,IAC1B,MAAQg0B,UAAAA,GAAch0B,GACdwM,MAAAA,GAAUhO,EAGX,OAFMC,EAAM4J,MAEZ,EAGLg/E,GAAc,CAACrnF,EAAUxB,EAAoBC,EAAYS,KACrD,QAAac,EAAIwC,IAAI4hF,IACrBxlF,EAAMJ,EAAMwL,OAAO8O,YAAY3N,YAAO,EAAW,CAAC1M,KAASS,IAI1D,OAFUI,EAAWV,EAErB,EAGL27F,GAAiB,CAACv6F,EAAUxB,KACxB,QAASwB,EAAIwC,IAAIG,IACjBzD,EAAkBT,EAAOw7F,kBAAkBF,MAE1Cz6F,EAAY,MAAOV,GAAQJ,EAASoW,MAAM,QAE3C3V,EAAmBO,GAAiBf,EAAO47F,gBAAgBn7F,EAAiBM,GAI9E,MAAO8kF,GAFauV,GAAmB36F,GAAkBD,EAAiB06F,GAEnErV,CAAWhlF,GACtB,MAAMW,EAAc65F,GAAqBr7F,EAAOw7F,kBAA5BH,CAA+Cx5F,GAE5D,WAAKiM,QAAQrN,EAAiBe,GAErCK,EAAO,CAACA,KAAS1B,GAAM2B,KAAK,QAErB,CAACD,EAAML,EAJP,EAOLu6F,GAAa,CAACx6F,EAAUxB,KAEpB,QAASwB,EADIwC,IAAI+lF,GACRvoF,CAAOxB,GAEtB,OAAKU,EAEEA,EAAO2J,WAFM,IAApB,EAKE4xF,GAAqB,CAACz6F,EAAUxB,KAClC,MAAQ07F,YAAAA,GAAgBl6F,EAAIwC,IAAIG,IAC1BzD,EAAgB,GAEhB,SAAAwP,IAAI1G,aAAa1I,IACf,KAAY2yD,SAAS3yD,EAAKiJ,KAAKxJ,OAASN,EAAYwzD,SAAS3yD,EAAKiJ,MAClE,SAAMpD,KAAK7F,IACJ,CADP,IAMDJ,CARD,EAWJw7F,GAAwB16F,GAAiBA,EAAK4U,MAAM,QAAQ,IAAM,GAE3Dk0E,GAAoB,CAAC9oF,EAAUxB,KACpC,IACM,QAAai8F,GAAmBz6F,EAAKxB,GACrCU,EAAOo7F,GAAqB97F,GAE5Bc,EAAW+nF,GAAYrnF,EAAKxB,EAAOU,EAAMT,IACxCG,EAAMK,GAAes7F,GAAev6F,EAAKV,GAE1CT,EAAU27F,GAAWx6F,EAAKpB,GAEhC,OAAKC,GAAWK,EAAKqJ,OAAS1J,EAAQ0J,MAGtC1J,EAAQlB,MAAQ,IAAKuB,EAAKvB,OAElBkB,EAAAA,aAAayB,I,MAEX,QAAOA,EADM4K,MACA3I,MAAM7C,GAA4B,SAAnBA,EAAK6I,KAAKxJ,OACxCS,IAAQ,WAAKoH,WAAL,IAAWqrD,SAAShzD,KAAgBO,EAAK7B,MAAMo5E,KAAQ9kB,SAAShzD,KAExEO,EAAK7B,MAAMo5E,KAAUv3E,EAAK7B,MAAMo5E,KAAQxqE,QAAQtN,EAAa,IAF7D,IAMD,CACH2H,KAAM8zF,GAAqB97F,GAC3Bw7F,SAAUl7F,EACVyyC,SAAU9yC,EACVswF,YAAAA,IAlB+C,IAsBvD,CAHI,MAEO,WACX,GCxGSkG,GAAc,CACvBr1F,EACAxB,EACAC,EACAS,EACAI,KAEA,MAAQ26F,kBAAAA,GAAsBj6F,EAAIwC,IAAIG,IAChC1D,EAAkBL,EAAkBm7F,KAEtC,MAAKt7F,EAAM8rB,GAAGuL,QAAQt3B,GAAK,GAAMq3B,WAAW52B,EAAiBR,EAAMu1B,UAAUnuB,MAE3E,QAAYpH,EAAM8qB,MAAM1qB,GACxBoB,EAAU6oF,GAAkB9oF,EAAKM,GAEvC,IAAKL,EAAS,OAER,MAAEuM,MAAAA,GAAUlM,EAAU0zB,UACtBpzB,EAAOpB,EAAMoP,SACblP,EAAKF,EAAMqP,QAEXxO,EAASw0F,GAAW50F,EAAQ0xC,SAAU/wC,EAAMX,EAAQkvF,aAE1DtwF,EAAKA,EACAguB,YAAYjsB,EAAMlB,EAAIO,EAAQ0xC,UAC9BhlB,cAAc/rB,OAAM,EAAWtB,GAE/B4xB,OAAO7wB,EAAS,EAAGA,EAAS,GAG5BxB,EAAAA,EAAGo1B,aAAa80D,GAAcz1D,KAAKz0B,EAAG6P,IAAIsB,QAAQ3P,EAAS,KAEhEnB,EAASL,EATT,ECtBS2jF,GAAsB,IAAIxgF,GAAU,wBACpCozF,GAAuBp1F,IAChC,IAAIxB,EAA2B,KA6CxB,OA5CkB,IAAIoD,GAAa,CACtC+C,IAAK69E,GACLnsE,MAAO,CACHggB,KAAM,IACK,KAEX9M,MAAO,CAACrqB,EAAII,EAAQV,EAAWK,K,MACrB,QAAOe,EAAIwC,IAAItB,IAMrB,GALK,WAAK0tC,YAAL,YAAsB/vC,EAAK8vC,WAE3BzvC,EAAGwyB,YAEKxyB,EAAG62B,QAAQysD,IAEb,YAGL,QAAUsG,GAAkB9oF,EAAKf,GACvC,IAAKgB,EAAgB,YAEjBzB,IACAm8F,qBAAqBn8F,GACTA,EAAAA,MAGV,MAAE47F,SAAAA,EAAUzoD,SAAAA,EAAU/qC,KAAAA,GAAS3G,GAE7Bk6F,eAAAA,GAAmBn6F,EAAIwC,IAAIG,IAE/B,OAACtC,EAAe,CAAE+5F,SAAAA,EAAUzoD,SAAAA,EAAU83C,IAAAA,EAAKl/D,GAAAA,EAAI3jB,KAAAA,MAEnDpI,EAAY85F,uBAAsB,KAClB95F,EAAAA,KAEZ,MAAQoyC,SAAAA,EAAUv6B,MAAAA,GAAUrW,EAAIwC,IAAItB,IAEpCm0F,GAAYr1F,EAAKwiF,GAAqB9gF,EAAO5B,EAAUN,EAAS7B,MAAhE,KAGG,IAVH,IAeT,EC/CEi4F,GAAoB,CAC7B3S,IACI,KAAM,CACFyS,aAAc,CAAC11F,EAAGxB,IAAQ,CAAC6qF,KAA8B+L,GAAoB52F,IAC7E+2F,cAAe,IAAM,CAAC3N,GAAO2R,GAAkBjE,OAEnD,CAAC3yF,IALLsgF,IvPgBS6R,GAAkB7L,GAAAA,OAAgB,IAAI8L,MAAU3M,KAEhDwS,GAAa3R,GAAAA,OAAgB,IAAI2M,MAAsBd,KAEvD+F,GAAW,CACpBC,iBAAAA,GACAC,aAAAA,GACAC,WAAAA,GACAC,WAAAA,GAEAC,WAAAA,GACAC,YAAAA,GAEAC,iBAAAA,GACAC,iBAAAA,GACAC,kBAAAA,GAEAC,kBAAAA,GACAC,gBAAAA,GACAC,aAAAA,GAEAC,gBAAAA,GACAC,SAAAA,GACAC,YAAAA,GAEAC,cAAAA,GACA1D,aAAAA,GACAC,aAAAA,IwPnCE0D,GAAM,CACVjtC,SAAUktC,GACV3pC,SAAS,GAEL4pC,GAAS,CACbntC,SAAUotC,GACV7pC,SAAS,GAEL7jD,GAAO,CACXsgD,SAAUqtC,GACV9pC,SAAS,GAEL4nC,GAAc,CAClBnrC,SAAUstC,GACV/pC,SAAS,GAELgqC,GAA0B,CAC9BvtC,SAAUwtC,GACVjqC,SAAS,GAELkqC,GAAc,CAClBztC,SAAU0tC,GACVntC,SAAUotC,IAENC,GAAe,CACnB5tC,SAAU6tC,GACVttC,SAAUutC,IAENC,GAAgB,CACpB/tC,SAAUguC,GACVztC,SAAU0tC,IAINl2F,GAAO,CAAC,EAGDm2F,GAAqB,CAChCn2F,KAAIA,IAEN,IAAI5H,GAAO,GAEX,MAAOA,GAAO,IACZ4H,GAAK5H,IAAQ49F,GACb59F,KACa,KAATA,GAAaA,GAAO,GACN,KAATA,KAAaA,GAAO,IAa/B,SAAS69F,GAAsBtuC,EAASv1C,EAAI84C,GAC1C,MAAM9sD,EAAO5H,KAGb,IAAI4/F,EAGAC,EACJ,OAAOn1F,EAGP,SAASA,EAAM9I,GACb,OACGk+F,GAASl+F,IACT89F,GAAc93F,EAAKoqD,YACpB+tC,GAAmBn4F,EAAKurD,SAK1BhC,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,wBACPm8E,EAAMp+F,IALJ8yD,EAAI9yD,EAMd,CAGD,SAASo+F,EAAMp+F,GACb,OAAIk+F,GAASl+F,IACXuvD,EAAQI,QAAQ3vD,GACTo+F,GAGI,KAATp+F,GACFuvD,EAAQI,QAAQ3vD,GACTm7D,GAGFrI,EAAI9yD,EACZ,CAGD,SAASm7D,EAAMn7D,GACb,OAAa,KAATA,EACKuvD,EAAQt8C,MAAM+nF,GAAa12F,EAAM+5F,EAAjC9uC,CAAkDvvD,GAG9C,KAATA,GAAwB,KAATA,EACVuvD,EAAQt8C,MAAM+nF,GAAaloC,EAAKwrC,EAAhC/uC,CAA8DvvD,GAGnE4uD,GAAkB5uD,KACfi+F,GAAyBvvC,GAAW1uD,KACvCi+F,GAAwB,GAG1B1uC,EAAQI,QAAQ3vD,GACTm7D,GAGF72D,EAAKtE,EACb,CAGD,SAASq+F,EAAgBr+F,GAIvB,OAHAuvD,EAAQI,QAAQ3vD,GAChBg+F,GAAS,EACTC,OAAwBn4F,EACjBq1D,CACR,CAGD,SAASmjC,EAA6Bt+F,GAEpC,OADAuvD,EAAQI,QAAQ3vD,GACTu+F,CACR,CAGD,SAASA,EAAsBv+F,GAC7B,OAAa,KAATA,EACKuvD,EAAQt8C,MAAM+nF,GAAaloC,EAAKurC,EAAhC9uC,CAAiDvvD,GAGnDm7D,EAAMn7D,EACd,CAGD,SAASsE,EAAKtE,GACZ,OAAIg+F,IAAWC,GACb1uC,EAAQK,KAAK,wBACbL,EAAQK,KAAK,mBACN51C,EAAGha,IAGL8yD,EAAI9yD,EACZ,CACF,CAGD,SAASu9F,GAAoBhuC,EAASv1C,EAAI84C,GACxC,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GACb,OACY,KAATA,GAAwB,MAATA,IACfw9F,GAAYx3F,EAAKoqD,WAClB+tC,GAAmBn4F,EAAKurD,QAEjBuB,EAAI9yD,IAGbuvD,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,sBAIPstC,EAAQt8C,MACb6pF,GACAvtC,EAAQS,QAAQgtC,GAAQztC,EAAQS,QAAQzgD,GAAMjL,GAAOwuD,GACrDA,EAHKvD,CAILvvD,GACH,CAGD,SAASsE,EAAKtE,GAGZ,OAFAuvD,EAAQK,KAAK,sBACbL,EAAQK,KAAK,mBACN51C,EAAGha,EACX,CACF,CAGD,SAAS09F,GAAqBnuC,EAASv1C,EAAI84C,GACzC,MAAM9sD,EAAO5H,KACb,OAAO0K,EAGP,SAASA,EAAM9I,GACb,OACY,KAATA,GAAwB,MAATA,IACf29F,GAAa33F,EAAKoqD,WACnB+tC,GAAmBn4F,EAAKurD,QAEjBuB,EAAI9yD,IAGbuvD,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,uBACdstC,EAAQI,QAAQ3vD,GACTw+F,EACR,CAGD,SAASA,EAAGx+F,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACTy+F,GAGF3rC,EAAI9yD,EACZ,CAGD,SAASy+F,EAAGz+F,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACTK,GAGFyyD,EAAI9yD,EACZ,CAGD,SAASK,EAAEL,GACT,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACTH,GAGFizD,EAAI9yD,EACZ,CAGD,SAASH,EAAEG,GACT,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACT0+F,GAGFA,EAAM1+F,EACd,CAGD,SAAS0+F,EAAM1+F,GACb,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT2+F,GAGF7rC,EAAI9yD,EACZ,CAGD,SAAS2+F,EAAO3+F,GACd,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT4+F,GAGF9rC,EAAI9yD,EACZ,CAGD,SAAS4+F,EAAO5+F,GACd,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT6P,GAGFijD,EAAI9yD,EACZ,CAGD,SAAS6P,EAAM7P,GACb,OAAgB,OAATA,GACL+uD,GAAa/uD,IACbmvD,GAAkBnvD,IAClBovD,GAAmBpvD,GACjB8yD,EAAI9yD,GACJuvD,EAAQS,QAAQgtC,GAAQztC,EAAQS,QAAQzgD,GAAMjL,GAAOwuD,EAArDvD,CAA0DvvD,EAC/D,CAGD,SAASsE,EAAKtE,GAGZ,OAFAuvD,EAAQK,KAAK,uBACbL,EAAQK,KAAK,mBACN51C,EAAGha,EACX,CACF,CAGD,SAAS+8F,GAAYxtC,EAASv1C,EAAI84C,GAChC,OAAOhqD,EAGP,SAASA,EAAM9I,GAEb,OADAuvD,EAAQI,QAAQ3vD,GACT6+F,CACR,CAGD,SAASA,EAAG7+F,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACT8+F,GAGFhsC,EAAI9yD,EACZ,CAGD,SAAS8+F,EAAG9+F,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACT++F,GAGFjsC,EAAI9yD,EACZ,CAGD,SAAS++F,EAAI/+F,GACX,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACT6P,GAGFijD,EAAI9yD,EACZ,CAGD,SAAS6P,EAAM7P,GACb,OAAgB,OAATA,GAAiBivD,GAAmBjvD,GAAQ8yD,EAAI9yD,GAAQga,EAAGha,EACnE,CACF,CAGD,SAASi9F,GAAe1tC,EAASv1C,EAAI84C,GAEnC,IAAIksC,EAGAC,EACJ,OAAOjC,EAGP,SAASA,EAAOh9F,GACd,OAAa,KAATA,EACKuvD,EAAQt8C,MACbmqF,GACA94F,EACA46F,EAHK3vC,CAILvvD,GAGS,KAATA,GAAwB,KAATA,EACVuvD,EAAQt8C,MAAM+nF,GAAa12F,EAAM46F,EAAjC3vC,CAA0DvvD,GAQxD,OAATA,GACA+uD,GAAa/uD,IACbmvD,GAAkBnvD,IACR,KAATA,GAAeovD,GAAmBpvD,GAE5BsE,EAAKtE,IAGduvD,EAAQI,QAAQ3vD,GACTg9F,EACR,CAGD,SAASkC,EAAwBl/F,GAC/B,OAAa,KAATA,GACFi/F,EAAiCD,EACjCA,OAA6Bl5F,EAC7BypD,EAAQI,QAAQ3vD,GACTg9F,IAGI,KAATh9F,IAAag/F,GAA6B,GAC9CzvC,EAAQI,QAAQ3vD,GACTg9F,EACR,CAGD,SAAS14F,EAAKtE,GACZ,OAAKi/F,GAAmCD,EAIjClsC,EAAI9yD,GAHFga,EAAGha,EAIb,CACF,CAGD,SAASk9F,GAAa3tC,EAASv1C,GAC7B,IAAI2gD,EAAU,EACd,OAAOwkC,EAGP,SAASA,EAAOn/F,GACd,OAAa,KAATA,EACKuvD,EAAQt8C,MACbmqF,GACApjF,EACAolF,EAHK7vC,CAILvvD,IAGS,KAATA,GACF26D,IAGW,KAAT36D,EACKuvD,EAAQt8C,MACb+nF,GACAqE,EACAD,EAHK7vC,CAILvvD,GAGAs/F,GAAQt/F,GACHga,EAAGha,GAGRu/F,GAAoBv/F,GACfuvD,EAAQt8C,MAAM+nF,GAAahhF,EAAIolF,EAA/B7vC,CAAqDvvD,IAG9DuvD,EAAQI,QAAQ3vD,GACTm/F,GACR,CAGD,SAASC,EAAqBp/F,GAE5B,OADAuvD,EAAQI,QAAQ3vD,GACTm/F,CACR,CAGD,SAASE,EAAer/F,GAEtB,OADA26D,IACOA,EAAU,EAAI3gD,EAAGha,GAAQo/F,EAAqBp/F,EACtD,CACF,CAGD,SAASq9F,GAAgC9tC,EAASv1C,EAAI84C,GACpD,OAAOhqD,EAGP,SAASA,EAAM9I,GAEb,OADAuvD,EAAQI,QAAQ3vD,GACTgtB,CACR,CAGD,SAASA,EAAOhtB,GACd,OAAIwuD,GAAWxuD,IACbuvD,EAAQI,QAAQ3vD,GACTgtB,GAGI,KAAThtB,GACFuvD,EAAQI,QAAQ3vD,GACT6P,GAGFijD,EAAI9yD,EACZ,CAGD,SAAS6P,EAAM7P,GAGb,OAAOs/F,GAAQt/F,GAAQga,EAAGha,GAAQ8yD,EAAI9yD,EACvC,CACF,CAGD,SAASm9F,GAAoB5tC,EAASv1C,EAAI84C,GACxC,OAAOhqD,EAGP,SAASA,EAAM9I,GAEb,OADAuvD,EAAQI,QAAQ3vD,GACT6P,CACR,CAGD,SAASA,EAAM7P,GAEb,OAAIu/F,GAAoBv/F,IACtBuvD,EAAQI,QAAQ3vD,GACT6P,GAIFyvF,GAAQt/F,GAAQga,EAAGha,GAAQ8yD,EAAI9yD,EACvC,CACF,CAMD,SAASu/F,GAAoBv/F,GAC3B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,MAATA,CAEH,CAMD,SAASs/F,GAAQt/F,GACf,OAAgB,OAATA,GAA0B,KAATA,GAAegvD,GAA0BhvD,EAClE,CAMD,SAASk+F,GAASl+F,GAChB,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA4uD,GAAkB5uD,EAErB,CAGD,SAASw9F,GAAYx9F,GACnB,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,MAATA,GACAgvD,GAA0BhvD,EAE7B,CAGD,SAAS29F,GAAa39F,GACpB,OAAgB,OAATA,IAAkBwuD,GAAWxuD,EACrC,CAGD,SAAS89F,GAAc99F,GACrB,OAAgB,KAATA,GAAe29F,GAAa39F,EACpC,CAMD,SAASm+F,GAAmB5sC,GAC1B,IAAIpnD,EAAQonD,EAAO3rD,OACfqB,GAAS,EAEb,MAAOkD,IAAS,CACd,MAAMmmD,EAAQiB,EAAOpnD,GAAO,GAE5B,IACkB,cAAfmmD,EAAM/mD,MAAuC,eAAf+mD,EAAM/mD,QACpC+mD,EAAMiR,UACP,CACAt6D,GAAS,EACT,KACD,CAGD,GAAIqpD,EAAMkvC,8BAA+B,CACvCv4F,GAAS,EACT,KACD,CACF,CAQD,OANIsqD,EAAO3rD,OAAS,IAAMqB,IAGxBsqD,EAAOA,EAAO3rD,OAAS,GAAG,GAAG45F,+BAAgC,GAGxDv4F,CACR,CAxjBDW,GAAK,IAAMg2F,GACXh2F,GAAK,IAAMg2F,GACXh2F,GAAK,IAAMg2F,GACXh2F,GAAK,IAAMg2F,GACXh2F,GAAK,IAAM,CAACg2F,GAAeH,IAC3B71F,GAAK,KAAO,CAACg2F,GAAeH,IAC5B71F,GAAK,IAAM,CAACg2F,GAAeN,IAC3B11F,GAAK,KAAO,CAACg2F,GAAeN,IC3D5B,MAAMmC,GAAS,CACb5vC,SAAU0J,GACVnG,SAAS,GAMJ,SAASssC,KAEd,MAAO,CACLr5E,SAAU,CACR,CAAC,IAAK,CACJwpC,SAAU8vC,GACV1uC,aAAc,CACZpB,SAAU+vC,IAEZhwC,KAAMiwC,KAGVj4F,KAAM,CACJ,CAAC,IAAK,CACJioD,SAAUiwC,IAEZ,CAAC,IAAK,CACJ76E,IAAK,QACL4qC,SAAUkwC,GACV3nC,UAAW4nC,KAIlB,CAGD,SAASD,GAAiCxwC,EAASv1C,EAAI84C,GACrD,MAAM9sD,EAAO5H,KACb,IAAI+L,EAAQnE,EAAKurD,OAAO3rD,OAIxB,MAAMs2D,EAAUl2D,EAAK0Z,OAAOugF,eAAiBj6F,EAAK0Z,OAAOugF,aAAe,IAGxE,IAAIx+B,EAEJ,MAAOt3D,IAAS,CACd,MAAMmmD,EAAQtqD,EAAKurD,OAAOpnD,GAAO,GAEjC,GAAmB,eAAfmmD,EAAM/mD,KAAuB,CAC/Bk4D,EAAanR,EACb,KACD,CAED,GACiB,oBAAfA,EAAM/mD,MACS,cAAf+mD,EAAM/mD,MACS,UAAf+mD,EAAM/mD,MACS,UAAf+mD,EAAM/mD,MACS,SAAf+mD,EAAM/mD,KAEN,KAEH,CAED,OAAOT,EAGP,SAASA,EAAM9I,GACb,IAAKyhE,IAAeA,EAAWF,UAC7B,OAAOzO,EAAI9yD,GAGb,MAAMyD,EAAKi4D,GACT11D,EAAKivD,eAAe,CAClBnsD,MAAO24D,EAAW54D,IAClBA,IAAK7C,EAAKgwB,SAId,OAAyB,KAArBvyB,EAAG+X,WAAW,IAAc0gD,EAAQjJ,SAASxvD,EAAGyC,MAAM,KAI1DqpD,EAAQttC,MAAM,8BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,8BACN51C,EAAGha,IAND8yD,EAAI9yD,EAOd,CACF,CAGD,SAASggG,GAAkCzuC,EAAQ52C,GACjD,IAGI8mD,EAHAt3D,EAAQonD,EAAO3rD,OAKnB,MAAOuE,IACL,GAC4B,eAA1BonD,EAAOpnD,GAAO,GAAGZ,MACI,UAArBgoD,EAAOpnD,GAAO,GACd,CACAs3D,EAAalQ,EAAOpnD,GAAO,GAC3B,KACD,CAIHonD,EAAOpnD,EAAQ,GAAG,GAAGZ,KAAO,OAC5BgoD,EAAOpnD,EAAQ,GAAG,GAAGZ,KAAO,6BAE5B,MAAM2P,EAAO,CACX3P,KAAM,kBACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,EAAQ,GAAG,GAAGrB,OAC9CD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOA,EAAO3rD,OAAS,GAAG,GAAGiD,MAGhDkwD,EAAS,CACbxvD,KAAM,wBACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,EAAQ,GAAG,GAAGtB,KAC9CA,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,EAAQ,GAAG,GAAGtB,MAG9CkwD,EAAOlwD,IAAIwtD,SACX0C,EAAOlwD,IAAIyC,SACXytD,EAAOlwD,IAAI0tD,eACX,MAAM/iD,EAAS,CACbjK,KAAM,wBACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGyP,EAAOlwD,KAChCA,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOA,EAAO3rD,OAAS,GAAG,GAAGkD,QAEhDstD,EAAQ,CACZ7sD,KAAM,cACNgnD,YAAa,SACbznD,MAAOqI,OAAOm4C,OAAO,CAAC,EAAG91C,EAAO1K,OAChCD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAG91C,EAAO3K,MAI1B4J,EAAc,CAElB8+C,EAAOpnD,EAAQ,GACfonD,EAAOpnD,EAAQ,GACf,CAAC,QAAS+O,EAAMyB,GAChB42C,EAAOpnD,EAAQ,GACfonD,EAAOpnD,EAAQ,GACf,CAAC,QAAS4uD,EAAQp+C,GAClB,CAAC,OAAQo+C,EAAQp+C,GACjB,CAAC,QAASnH,EAAQmH,GAClB,CAAC,QAASy7C,EAAOz7C,GACjB,CAAC,OAAQy7C,EAAOz7C,GAChB,CAAC,OAAQnH,EAAQmH,GACjB42C,EAAOA,EAAO3rD,OAAS,GACvB2rD,EAAOA,EAAO3rD,OAAS,GACvB,CAAC,OAAQsT,EAAMyB,IAGjB,OADA42C,EAAOnrD,OAAO+D,EAAOonD,EAAO3rD,OAASuE,EAAQ,KAAMsI,GAC5C8+C,CACR,CAGD,SAASuuC,GAAwBvwC,EAASv1C,EAAI84C,GAC5C,MAAM9sD,EAAO5H,KAIP89D,EAAUl2D,EAAK0Z,OAAOugF,eAAiBj6F,EAAK0Z,OAAOugF,aAAe,IACxE,IAGIjkD,EAHAl1C,EAAO,EAIX,OAAOgC,EAGP,SAASA,EAAM9I,GAKb,OAJAuvD,EAAQttC,MAAM,mBACdstC,EAAQttC,MAAM,8BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,8BACNswC,CACR,CAGD,SAASA,EAAUlgG,GACjB,OAAa,KAATA,EAAoB8yD,EAAI9yD,IAC5BuvD,EAAQttC,MAAM,yBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,yBACbL,EAAQttC,MAAM,yBACdstC,EAAQttC,MAAM,eAAesuC,YAAc,SACpC4vC,EACR,CAGD,SAASA,EAASngG,GAEhB,IAAIswD,EAEJ,OAAa,OAATtwD,GAA0B,KAATA,GAAe8G,IAAS,IACpCgsD,EAAI9yD,GAGA,KAATA,EACGg8C,GAILuT,EAAQK,KAAK,eACbU,EAAQf,EAAQK,KAAK,yBACdsM,EAAQjJ,SAASyI,GAAoB11D,EAAKivD,eAAe3E,KAC5DznD,EAAI7I,GACJ8yD,EAAI9yD,IAPC8yD,EAAI9yD,IAUfuvD,EAAQI,QAAQ3vD,GAEXgvD,GAA0BhvD,KAC7Bg8C,GAAO,GAGO,KAATh8C,EAAcogG,EAAaD,EACnC,CAGD,SAASC,EAAWpgG,GAClB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuvD,EAAQI,QAAQ3vD,GAChB8G,IACOq5F,GAGFA,EAASngG,EACjB,CAGD,SAAS6I,EAAI7I,GAKX,OAJAuvD,EAAQttC,MAAM,8BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,8BACbL,EAAQK,KAAK,mBACN51C,CACR,CACF,CAGD,SAAS2lF,GAAwBpwC,EAASv1C,EAAI84C,GAC5C,MAAM9sD,EAAO5H,KAIP89D,EAAUl2D,EAAK0Z,OAAOugF,eAAiBj6F,EAAK0Z,OAAOugF,aAAe,IAGxE,IAAIjkC,EAIAhgB,EAHAl1C,EAAO,EAIX,OAAOgC,EAGP,SAASA,EAAM9I,GAMb,OALAuvD,EAAQttC,MAAM,yBAAyB8xC,YAAa,EACpDxE,EAAQttC,MAAM,8BACdstC,EAAQttC,MAAM,oCACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oCACN6R,CACR,CAGD,SAASA,EAAWzhE,GAClB,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,+BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,+BACbL,EAAQttC,MAAM,oCACP6zC,GAGFhD,EAAI9yD,EACZ,CAGD,SAAS81D,EAAQ91D,GAEf,IAAIswD,EAEJ,OAAa,OAATtwD,GAA0B,KAATA,GAAe8G,EAAO,IAClCgsD,EAAI9yD,GAGA,KAATA,EACGg8C,GAILsU,EAAQf,EAAQK,KAAK,oCACrBoM,EAAaN,GAAoB11D,EAAKivD,eAAe3E,IACrDf,EAAQttC,MAAM,oCACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oCACbL,EAAQK,KAAK,8BACNqM,GATEnJ,EAAI9yD,GAYXivD,GAAmBjvD,IACrBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACb9oD,IACOgvD,IAGTvG,EAAQttC,MAAM,eAAesuC,YAAc,SACpC4K,EAAMn7D,GACd,CAGD,SAASm7D,EAAMn7D,GACb,OACW,OAATA,GACAivD,GAAmBjvD,IACV,KAATA,GACS,KAATA,GACA8G,EAAO,KAEPyoD,EAAQK,KAAK,eACNkG,EAAQ91D,KAGZgvD,GAA0BhvD,KAC7Bg8C,GAAO,GAGTl1C,IACAyoD,EAAQI,QAAQ3vD,GACA,KAATA,EAAco7D,EAAcD,EACpC,CAGD,SAASC,EAAYp7D,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCuvD,EAAQI,QAAQ3vD,GAChB8G,IACOq0D,GAGFA,EAAMn7D,EACd,CAGD,SAASi8D,EAAWj8D,GAClB,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBAINN,GAAaC,EAASjrD,EAAM,oCAG9BwuD,EAAI9yD,EACZ,CAGD,SAASsE,EAAKtE,GAKZ,OAJKk8D,EAAQjJ,SAAS+I,IACpBE,EAAQ/1D,KAAK61D,GAGRhiD,EAAGha,EACX,CACF,CAGD,SAAS4/F,GAA+BrwC,EAASv1C,EAAI84C,GAEnD,OAAOvD,EAAQt8C,MAAMigD,GAAWl5C,EAAIu1C,EAAQS,QAAQyvC,GAAQzlF,EAAI84C,GACjE,CAGD,SAAS+sC,GAAyBtwC,GAChCA,EAAQK,KAAK,wBACd,CAGD,SAAS2J,GAAehK,EAASv1C,EAAI84C,GACnC,MAAM9sD,EAAO5H,KACb,OAAOkxD,GACLC,EACA2K,EACA,8BACA,GAIF,SAASA,EAAYl6D,GACnB,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAC9C,OAAOovD,GACY,gCAAjBA,EAAK,GAAGzrD,MACyC,IAAjDyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,OACpCoU,EAAGha,GACH8yD,EAAI9yD,EACT,CACF,CC5YM,SAASqgG,GAAiBrnF,EAAU,CAAC,GAC1C,IAAIsnF,EAAStnF,EAAQunF,YACrB,MAAMpsC,EAAY,CAChBtE,SAAU2wC,EACVhrC,WAAYirC,GAOd,OAJe,OAAXH,QAA8Bx6F,IAAXw6F,IACrBA,GAAS,GAGJ,CACL14F,KAAM,CACJ,CAAC,KAAMusD,GAETqN,WAAY,CACVxO,KAAM,CAACmB,IAETsO,iBAAkB,CAChBzP,KAAM,CAAC,OASX,SAASytC,EAAwBlvC,EAAQ52C,GACvC,IAAIxQ,GAAS,EAEb,QAASA,EAAQonD,EAAO3rD,OAEtB,GACuB,UAArB2rD,EAAOpnD,GAAO,IACY,mCAA1BonD,EAAOpnD,GAAO,GAAGZ,MACjBgoD,EAAOpnD,GAAO,GAAGm4D,OACjB,CACA,IAAIpjE,EAAOiL,EAEX,MAAOjL,IAEL,GACsB,SAApBqyD,EAAOryD,GAAM,IACY,mCAAzBqyD,EAAOryD,GAAM,GAAGqK,MAChBgoD,EAAOryD,GAAM,GAAGqjE,OAChBhR,EAAOpnD,GAAO,GAAGtB,IAAIyC,OAASimD,EAAOpnD,GAAO,GAAGrB,MAAMwC,SACnDimD,EAAOryD,GAAM,GAAG2J,IAAIyC,OAASimD,EAAOryD,GAAM,GAAG4J,MAAMwC,OACrD,CACAimD,EAAOpnD,GAAO,GAAGZ,KAAO,wBACxBgoD,EAAOryD,GAAM,GAAGqK,KAAO,wBACvB,MAAMm3F,EAAgB,CACpBn3F,KAAM,gBACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,GAAM,GAAG4J,OACzCD,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,GAAO,GAAGtB,MAEpCjB,EAAO,CACX2B,KAAM,oBACNT,MAAOqI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOryD,GAAM,GAAG2J,KACzCA,IAAKsI,OAAOm4C,OAAO,CAAC,EAAGiI,EAAOpnD,GAAO,GAAGrB,QAGpCu5D,EAAa,CACjB,CAAC,QAASq+B,EAAe/lF,GACzB,CAAC,QAAS42C,EAAOryD,GAAM,GAAIyb,GAC3B,CAAC,OAAQ42C,EAAOryD,GAAM,GAAIyb,GAC1B,CAAC,QAAS/S,EAAM+S,IAGlBvU,GACEi8D,EACAA,EAAWz8D,OACX,EACA4vD,GACE76C,EAAQ+E,OAAO2uC,WAAWmT,WAAWxO,KACrCzB,EAAOrrD,MAAMhH,EAAO,EAAGiL,GACvBwQ,IAIJvU,GAAOi8D,EAAYA,EAAWz8D,OAAQ,EAAG,CACvC,CAAC,OAAQgC,EAAM+S,GACf,CAAC,QAAS42C,EAAOpnD,GAAO,GAAIwQ,GAC5B,CAAC,OAAQ42C,EAAOpnD,GAAO,GAAIwQ,GAC3B,CAAC,OAAQ+lF,EAAe/lF,KAE1BvU,GAAOmrD,EAAQryD,EAAO,EAAGiL,EAAQjL,EAAO,EAAGmjE,GAC3Cl4D,EAAQjL,EAAOmjE,EAAWz8D,OAAS,EACnC,KACD,CAEJ,CAGHuE,GAAS,EAET,QAASA,EAAQonD,EAAO3rD,OACQ,mCAA1B2rD,EAAOpnD,GAAO,GAAGZ,OACnBgoD,EAAOpnD,GAAO,GAAGZ,KAAO,QAI5B,OAAOgoD,CACR,CAGD,SAASivC,EAAsBjxC,EAASv1C,EAAI84C,GAC1C,MAAM1C,EAAWhyD,KAAKgyD,SAChBmB,EAASnzD,KAAKmzD,OACpB,IAAIzqD,EAAO,EACX,OAAOgC,EAGP,SAASA,EAAM9I,GACb,OACe,MAAbowD,GACsC,oBAAtCmB,EAAOA,EAAO3rD,OAAS,GAAG,GAAG2D,KAEtBupD,EAAI9yD,IAGbuvD,EAAQttC,MAAM,kCACP2xC,EAAK5zD,GACb,CAGD,SAAS4zD,EAAK5zD,GACZ,MAAM4P,EAASoyD,GAAkB5R,GAEjC,GAAa,MAATpwD,EAEF,OAAI8G,EAAO,EAAUgsD,EAAI9yD,IACzBuvD,EAAQI,QAAQ3vD,GAChB8G,IACO8sD,GAGT,GAAI9sD,EAAO,IAAMw5F,EAAQ,OAAOxtC,EAAI9yD,GACpC,MAAMswD,EAAQf,EAAQK,KAAK,kCACrB//C,EAAQmyD,GAAkBhiE,GAGhC,OAFAswD,EAAMiS,OAAS1yD,GAAoB,IAAVA,GAAem9B,QAAQp9B,GAChD0gD,EAAMgS,QAAU1yD,GAAsB,IAAXA,GAAgBo9B,QAAQn9B,GAC5CmK,EAAGha,EACX,CACF,CACF,CCxJM,MAAM2gG,GAAW,CACtBtuC,KAAM,CACJW,KAAM,CACJnD,SAAU+wC,GACV5vF,QAAS6vF,MAITC,GAAsB,CAC1BjxC,SAAUkxC,GACV3tC,SAAS,GAIX,SAASytC,GAAatvC,EAAQ52C,GAC5B,IAGIqmF,EAGAC,EAGAC,EAGAnxC,EAGA6E,EAGAusC,EAGAC,EArBAj3F,GAAS,EAuBb,QAASA,EAAQonD,EAAO3rD,OAAQ,CAC9B,MAAM0qD,EAAQiB,EAAOpnD,GAAO,GAE5B,GAAI+2F,IACiB,8BAAf5wC,EAAM/mD,OACRwmD,EAAeA,GAAgB5lD,EAC/ByqD,EAAazqD,IAKG,qBAAfmmD,EAAM/mD,MAA8C,aAAf+mD,EAAM/mD,OAC5CqrD,GACA,CACA,MAAMnvD,EAAU,CACd8D,KAAM,eACNT,MAAOyoD,EAAOxB,GAAc,GAAGjnD,MAC/BD,IAAK0oD,EAAOqD,GAAY,GAAG/rD,KAIvBjB,EAAO,CACX2B,KAAM,YACNT,MAAOrD,EAAQqD,MACfD,IAAKpD,EAAQoD,IAEb0nD,YAAa,QAEfgB,EAAOnrD,OACL2pD,EACA6E,EAAa7E,EAAe,EAC5B,CAAC,QAAStqD,EAASkV,GACnB,CAAC,QAAS/S,EAAM+S,GAChB,CAAC,OAAQ/S,EAAM+S,GACf,CAAC,OAAQlV,EAASkV,IAEpBxQ,GAASyqD,EAAa7E,EAAe,EACrCA,OAAejqD,EACf8uD,OAAa9uD,CACd,CAGH,GACuB,SAArByrD,EAAOpnD,GAAO,SACArE,IAAdq7F,GACAA,GAAaC,EAAgB,EAAI,GAAKj3F,IACtB,qBAAfmmD,EAAM/mD,MACW,aAAf+mD,EAAM/mD,OACJ43F,EAAY,EAAIh3F,GACe,eAA9BonD,EAAO4vC,GAAW,GAAG53F,OAC3B,CACA,MAAM83F,EAAO,CACX93F,KAAM03F,EACF,iBACAD,EACA,cACA,YACJl4F,MAAOyoD,EAAO4vC,GAAW,GAAGr4F,MAC5BD,IAAK0oD,EAAOpnD,GAAO,GAAGtB,KAExB0oD,EAAOnrD,OAAO+D,GAAwB,qBAAfmmD,EAAM/mD,KAA8B,EAAI,GAAI,EAAG,CACpE,OACA83F,EACA1mF,IAEF42C,EAAOnrD,OAAO+6F,EAAW,EAAG,CAAC,QAASE,EAAM1mF,IAC5CxQ,GAAS,EACTg3F,EAAYh3F,EAAQ,EACpBi3F,GAAgB,CACjB,CAEkB,aAAf9wC,EAAM/mD,OACR23F,EAA6B,UAArB3vC,EAAOpnD,GAAO,GAElB+2F,IACFC,EAAYh3F,EAAQ,EACpBi3F,GAAgB,IAID,sBAAf9wC,EAAM/mD,OACR03F,EAAsC,UAArB1vC,EAAOpnD,GAAO,GAE3B82F,IACFE,EAAYh3F,EAAQ,EACpBi3F,GAAgB,IAID,cAAf9wC,EAAM/mD,OACRy3F,EAA8B,UAArBzvC,EAAOpnD,GAAO,GAE1B,CAED,OAAOonD,CACR,CAGD,SAASqvC,GAAcrxC,EAASv1C,EAAI84C,GAClC,MAAM9sD,EAAO5H,KAGPkjG,EAAQ,GACd,IAGIC,EAGAC,EANAC,EAAmB,EAOvB,OAAO34F,EAGP,SAASA,EAAM9I,GAMb,OAJAuvD,EAAQttC,MAAM,SAASy/E,OAASJ,EAChC/xC,EAAQttC,MAAM,aACdstC,EAAQttC,MAAM,YAED,MAATjiB,EACK2hG,EAAgB3hG,IAGzByhG,IACAlyC,EAAQttC,MAAM,6BAEP2/E,EAAkB5hG,GAC1B,CAGD,SAAS2hG,EAAgB3hG,GAKvB,OAJAuvD,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBACb2xC,GAAgB,EACTM,CACR,CAGD,SAASA,EAAc7hG,GACrB,OAAa,OAATA,GAAiBivD,GAAmBjvD,GAC/B8hG,EAAa9hG,GAGlBkvD,GAAclvD,IAChBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GACT+hG,IAGLR,IACFA,OAAgBz7F,EAChB27F,KAGW,MAATzhG,EACK2hG,EAAgB3hG,IAGzBuvD,EAAQttC,MAAM,6BACP2/E,EAAkB5hG,IAC1B,CAGD,SAAS+hG,EAAiB/hG,GACxB,OAAIkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACT+hG,IAGTxyC,EAAQK,KAAK,cACNiyC,EAAc7hG,GACtB,CAGD,SAAS4hG,EAAkB5hG,GAEzB,OAAa,OAATA,GAA0B,MAATA,GAAgBgvD,GAA0BhvD,IAC7DuvD,EAAQK,KAAK,6BACNiyC,EAAc7hG,KAGvBuvD,EAAQI,QAAQ3vD,GACA,KAATA,EAAcgiG,EAA0BJ,EAChD,CAGD,SAASI,EAAwBhiG,GAC/B,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACT4hG,GAGFA,EAAkB5hG,EAC1B,CAGD,SAAS8hG,EAAa9hG,GACpB,GAAa,OAATA,EACF,OAAO8yD,EAAI9yD,GAGbuvD,EAAQK,KAAK,YACbL,EAAQK,KAAK,aACb,MAAMqyC,EAAoBj8F,EAAK8rD,UAE/B,OADA9rD,EAAK8rD,WAAY,EACVvC,EAAQS,QACb,CACEH,SAAUqyC,EACV9uC,SAAS,IAEX,SAAUpzD,GAGR,OAFAgG,EAAK8rD,UAAYmwC,EACjB1yC,EAAQttC,MAAM,qBACPkgF,EAAoBniG,EAC5B,IACD,SAAUA,GAER,OADAgG,EAAK8rD,UAAYmwC,EACVnvC,EAAI9yD,EACZ,GAbIuvD,CAcLvvD,EACH,CAGD,SAASmiG,EAAoBniG,GAC3B,OAAa,OAATA,GAAiBivD,GAAmBjvD,GAC/BoiG,EAAgBpiG,GAGrBkvD,GAAclvD,IAChBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GACTqiG,GAGI,KAATriG,GACFuvD,EAAQttC,MAAM,wBACdstC,EAAQI,QAAQ3vD,GAChBwhG,GAAU,EACVF,EAAMn7F,KAAK,QACJm8F,GAGI,KAATtiG,GACFuvD,EAAQttC,MAAM,2BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,2BACb0xC,EAAMn7F,KAAK,QACJo8F,GAGI,MAATviG,GACFuvD,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBACNuyC,GAGFrvC,EAAI9yD,EACZ,CAGD,SAASqiG,EAAsBriG,GAC7B,OAAIkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTqiG,IAGT9yC,EAAQK,KAAK,cACNuyC,EAAoBniG,GAC5B,CAGD,SAASsiG,EAAkBtiG,GACzB,OAAa,KAATA,GACFuvD,EAAQI,QAAQ3vD,GACTsiG,IAGT/yC,EAAQK,KAAK,wBAEA,KAAT5vD,GACFuvD,EAAQttC,MAAM,2BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,2BACb0xC,EAAMA,EAAM17F,OAAS,GACS,SAA5B07F,EAAMA,EAAM17F,OAAS,GAAgB,SAAW,QAC3C48F,GAGFL,EAAoBniG,GAC5B,CAGD,SAASuiG,EAAmBviG,GAC1B,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,wBACdstC,EAAQI,QAAQ3vD,GAChBwhG,GAAU,EACHc,GAGFxvC,EAAI9yD,EACZ,CAGD,SAASwiG,EAAoBxiG,GAC3B,OAAa,OAATA,GAAiBivD,GAAmBjvD,GAC/BoiG,EAAgBpiG,GAGrBkvD,GAAclvD,IAChBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GACTqiG,GAGI,MAATriG,GACFuvD,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBACNuyC,GAGFrvC,EAAI9yD,EACZ,CAGD,SAASoiG,EAAgBpiG,GAIvB,OAHAuvD,EAAQK,KAAK,qBAGR4xC,GAAWC,IAAqBH,EAAM17F,OAI9B,OAAT5F,EACKyiG,EAAWziG,GAGbuvD,EAAQt8C,MACb6tF,GACA2B,EACAlzC,EAAQS,QACN,CACEH,SAAUqyC,EACV9uC,SAAS,GAEX9D,GAAaC,EAASmzC,EAAW,aAAc,GAC/CD,GATGlzC,CAWLvvD,GAlBO8yD,EAAI9yD,EAmBd,CAGD,SAASyiG,EAAWziG,GAElB,OADAuvD,EAAQK,KAAK,SACN51C,EAAGha,EACX,CAGD,SAAS0iG,EAAU1iG,GAEjB,OADAuvD,EAAQttC,MAAM,aACP0gF,EAAa3iG,EACrB,CAGD,SAAS2iG,EAAa3iG,GAGpB,OAFAuvD,EAAQttC,MAAM,YAED,MAATjiB,EACK4iG,EAAgB5iG,IAGzBuvD,EAAQttC,MAAM,6BAEP4gF,EAAkB7iG,GAC1B,CAGD,SAAS4iG,EAAgB5iG,GAIvB,OAHAuvD,EAAQttC,MAAM,oBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,oBACNkzC,CACR,CAGD,SAASA,EAAc9iG,GACrB,OAAa,OAATA,GAAiBivD,GAAmBjvD,GAC/B+iG,EAAa/iG,GAGlBkvD,GAAclvD,IAChBuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GACTgjG,GAGI,MAAThjG,EACK4iG,EAAgB5iG,IAGzBuvD,EAAQttC,MAAM,6BACP4gF,EAAkB7iG,GAC1B,CAGD,SAASgjG,EAAiBhjG,GACxB,OAAIkvD,GAAclvD,IAChBuvD,EAAQI,QAAQ3vD,GACTgjG,IAGTzzC,EAAQK,KAAK,cACNkzC,EAAc9iG,GACtB,CAGD,SAAS6iG,EAAkB7iG,GAEzB,OAAa,OAATA,GAA0B,MAATA,GAAgBgvD,GAA0BhvD,IAC7DuvD,EAAQK,KAAK,6BACNkzC,EAAc9iG,KAGvBuvD,EAAQI,QAAQ3vD,GACA,KAATA,EAAcijG,EAA0BJ,EAChD,CAGD,SAASI,EAAwBjjG,GAC/B,OAAa,KAATA,GAAwB,MAATA,GACjBuvD,EAAQI,QAAQ3vD,GACT6iG,GAGFA,EAAkB7iG,EAC1B,CAGD,SAAS+iG,EAAa/iG,GAGpB,OAFAuvD,EAAQK,KAAK,YAEA,OAAT5vD,EACKkjG,EAAeljG,GAGjBuvD,EAAQt8C,MACb6tF,GACAoC,EACA3zC,EAAQS,QACN,CACEH,SAAUqyC,EACV9uC,SAAS,GAEX9D,GAAaC,EAASozC,EAAc,aAAc,GAClDO,GATG3zC,CAWLvvD,EACH,CAGD,SAASkjG,EAAeljG,GAEtB,OADAuvD,EAAQK,KAAK,aACN6yC,EAAWziG,EACnB,CAGD,SAASkiG,EAAe3yC,EAASv1C,EAAI84C,GACnC,OAAOhqD,EAGP,SAASA,EAAM9I,GAIb,OAHAuvD,EAAQttC,MAAM,cACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,cACNN,GAAaC,EAASwF,EAAU,aACxC,CAGD,SAASA,EAAS/0D,GAEhB,GACEgG,EAAK0Z,OAAOwyC,KAAKlsD,EAAKgwB,MAAMm8B,OACnB,OAATnyD,GACAivD,GAAmBjvD,GAEnB,OAAO8yD,EAAI9yD,GAGb,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAE9C,OACGI,EAAK0Z,OAAO2uC,WAAW0E,QAAQC,KAAKC,SAAS,iBAC9C+B,GACiB,eAAjBA,EAAK,GAAGzrD,MACRyrD,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMpvD,QAAU,EAEzCktD,EAAI9yD,IAGbgG,EAAK+rD,+BAAgC,EAC9BxC,EAAQt8C,MACbjN,EAAK0Z,OAAO2uC,WAAWgE,MACvB,SAAUryD,GAER,OADAgG,EAAK+rD,+BAAgC,EAC9Be,EAAI9yD,EACZ,IACD,SAAUA,GAER,OADAgG,EAAK+rD,+BAAgC,EAC9B/3C,EAAGha,EACX,GATIuvD,CAULvvD,GACH,CACF,CACF,CAGD,SAAS+gG,GAA4BxxC,EAASv1C,EAAI84C,GAChD,IAAIhsD,EAAO,EACX,OAAOgC,EAGP,SAASA,EAAM9I,GAMb,OAHAuvD,EAAQttC,MAAM,SAEdstC,EAAQI,QAAQ3vD,GACTsY,CACR,CAGD,SAASA,EAAWtY,GAClB,OAAc,IAAVA,GAAwB,KAATA,GACjBuvD,EAAQI,QAAQ3vD,GAChB8G,IACgB,IAATA,EAAakT,EAAK1B,GAGd,OAATtY,GAAiBgvD,GAA0BhvD,GACtCga,EAAGha,GAGL8yD,EAAI9yD,EACZ,CACF,CC9kBD,MAAMmjG,GAAgB,CACpBtzC,SAAUuzC,IAECC,GAAkB,CAC7Bz7F,KAAM,CACJ,CAAC,IAAKu7F,KAKV,SAASC,GAAsB7zC,EAASv1C,EAAI84C,GAC1C,MAAM9sD,EAAO5H,KACb,OAAOc,EAGP,SAASA,EAAKc,GACZ,OAEoB,OAAlBgG,EAAKoqD,UAEJpqD,EAAKuuD,oCAKRhF,EAAQttC,MAAM,iBACdstC,EAAQttC,MAAM,uBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,uBACN5iC,GAPE8lC,EAAI9yD,EAQd,CAGD,SAASgtB,EAAOhtB,GAGd,OAAIgvD,GAA0BhvD,IAC5BuvD,EAAQttC,MAAM,+BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,+BACN/hD,GAGI,KAAT7N,GAAwB,MAATA,GACjBuvD,EAAQttC,MAAM,6BACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,6BACN/hD,GAGFilD,EAAI9yD,EACZ,CAGD,SAAS6N,EAAM7N,GACb,OAAa,KAATA,GACFuvD,EAAQttC,MAAM,uBACdstC,EAAQI,QAAQ3vD,GAChBuvD,EAAQK,KAAK,uBACbL,EAAQK,KAAK,iBACNL,EAAQt8C,MACb,CACE48C,SAAUyzC,IAEZtpF,EACA84C,IAIGA,EAAI9yD,EACZ,CACF,CAGD,SAASsjG,GAAkB/zC,EAASv1C,EAAI84C,GACtC,MAAM9sD,EAAO5H,KACb,OAAOkxD,GAAaC,EAAS1/C,EAAO,cAGpC,SAASA,EAAM7P,GACb,MAAMg1D,EAAOhvD,EAAKurD,OAAOvrD,EAAKurD,OAAO3rD,OAAS,GAC9C,OAEIovD,GAAyB,eAAjBA,EAAK,GAAGzrD,MAGhB0lD,GAAmBjvD,KACV,OAATA,EACEga,EAAGha,GACH8yD,EAAI9yD,EAEX,CACF,CCzEM,SAASujG,GAAIvqF,GAClB,OAAO+0C,GAAkB,CACvBgwC,GACA2B,KACAW,GAAiBrnF,GACjB2nF,GACA0C,IAEH,CC/BM,SAASG,GAAO3kG,EAAOqwE,GAC5B,MAAME,EAASz1B,OAAO96C,GAEtB,GAAyB,kBAAdqwE,EACT,MAAM,IAAIuG,UAAU,sBAGtB,IAAIjlD,EAAQ,EACRrmB,EAAQilE,EAAOt6D,QAAQo6D,GAE3B,OAAkB,IAAX/kE,EACLqmB,IACArmB,EAAQilE,EAAOt6D,QAAQo6D,EAAW/kE,EAAQ+kE,EAAUtpE,QAGtD,OAAO4qB,CACR,CC1Bc,SAASizE,GAAmBjwF,GAC1C,GAAsB,kBAAXA,EACV,MAAM,IAAIiiE,UAAU,qBAKrB,OAAOjiE,EACLjG,QAAQ,sBAAuB,QAC/BA,QAAQ,KAAM,QAChB,CCgCD,MAAMq5D,GAAM,CAAC,EAAE3tD,eAYFyqF,GAcT,SAAU73B,EAAMtoE,EAAMgK,EAASyL,GAE7B,IAAIq0D,EAEAriE,EAEgB,kBAATzH,GAAqBA,aAAgBqsE,QAE9C5kE,EAAS,CAAC,CAACzH,EAAMgK,IACjB8/D,EAAWr0D,IAEXhO,EAASzH,EAET8pE,EAAW9/D,GAGR8/D,IACHA,EAAW,CAAC,GAGd,MAAMs2B,EAAU9yB,GAAQxD,EAASjsD,QAAU,IACrCwiF,EAAQC,GAAQ74F,GACtB,IAAI84F,GAAa,EAEjB,QAASA,EAAYF,EAAMh+F,OACzB8rE,GAAa7F,EAAM,OAAQ8F,GAG7B,OAAO9F,EAGP,SAAS8F,EAAQtoE,EAAMwoE,GACrB,IAEIkyB,EAFA55F,GAAS,EAIb,QAASA,EAAQ0nE,EAAQjsE,OAAQ,CAC/B,MAAMgD,EAAgCipE,EAAQ1nE,GAE9C,GACEw5F,EACE/6F,EAEAm7F,EAAcA,EAAY5+D,SAASrwB,QAAQlM,QAAU9C,EACrDi+F,GAGF,OAGFA,EAAcn7F,CACf,CAED,GAAIm7F,EAEF,OAAO5sD,EAAQ9tC,EAAMwoE,EAExB,CAOD,SAAS16B,EAAQ9tC,EAAMwoE,GACrB,MAAMjpE,EAASipE,EAAQA,EAAQjsE,OAAS,GAClCrC,EAAOqgG,EAAME,GAAW,GACxBv2F,EAAUq2F,EAAME,GAAW,GACjC,IAAIh7F,EAAQ,EAEZ,MAAMqB,EAAQvB,EAAOu8B,SAASrwB,QAAQzL,GACtC,IAIIs9D,EAJA1iB,GAAS,EAET74C,EAAQ,GAIZ7H,EAAKuiE,UAAY,EAEjB,IAAIxzD,EAAQ/O,EAAKyb,KAAK3V,EAAKxK,OAE3B,MAAOyT,EAAO,CACZq0D,EAAWr0D,EAAMnI,MAEjB,MAAM65F,EAAc,CAClB75F,MAAOmI,EAAMnI,MACb8gC,MAAO34B,EAAM24B,MACbxL,MAAO,IAAIoyC,EAASxoE,IAEtB,IAAIxK,EAAQ0O,KAAW+E,EAAO0xF,GAwB9B,GAtBqB,kBAAVnlG,IACTA,EAAQA,EAAM+G,OAAS,EAAI,CAAC2D,KAAM,OAAQ1K,cAASiH,IAGvC,IAAVjH,IACEiK,IAAU69D,GACZv7D,EAAMjF,KAAK,CACToD,KAAM,OACN1K,MAAOwK,EAAKxK,MAAMqH,MAAM4C,EAAO69D,KAI/BzlE,MAAMC,QAAQtC,GAChBuM,EAAMjF,QAAQtH,GACLA,GACTuM,EAAMjF,KAAKtH,GAGbiK,EAAQ69D,EAAWr0D,EAAM,GAAG1M,OAC5Bq+C,GAAS,IAGN1gD,EAAK0gG,OACR,MAGF3xF,EAAQ/O,EAAKyb,KAAK3V,EAAKxK,MACxB,CAYD,OAVIolD,GACEn7C,EAAQO,EAAKxK,MAAM+G,QACrBwF,EAAMjF,KAAK,CAACoD,KAAM,OAAQ1K,MAAOwK,EAAKxK,MAAMqH,MAAM4C,KAGpDF,EAAOu8B,SAAS/+B,OAAO+D,EAAO,KAAMiB,IAEpCA,EAAQ,CAAC/B,GAGJc,EAAQiB,EAAMxF,MACtB,CACF,EAOL,SAASi+F,GAAQ74F,GAEf,MAAM/D,EAAS,GAEf,GAAsB,kBAAX+D,EACT,MAAM,IAAIyqE,UAAU,sCAGtB,GAAIv0E,MAAMC,QAAQ6J,GAAS,CACzB,IAAIb,GAAS,EAEb,QAASA,EAAQa,EAAOpF,OACtBqB,EAAOd,KAAK,CACV+9F,GAAal5F,EAAOb,GAAO,IAC3Bg6F,GAAWn5F,EAAOb,GAAO,KAG9B,KAAM,CAEL,IAAIxE,EAEJ,IAAKA,KAAOqF,EACN47D,GAAI1tD,KAAKlO,EAAQrF,IACnBsB,EAAOd,KAAK,CAAC+9F,GAAav+F,GAAMw+F,GAAWn5F,EAAOrF,KAGvD,CAED,OAAOsB,CACR,CAMD,SAASi9F,GAAa3gG,GACpB,MAAuB,kBAATA,EAAoB,IAAIqsE,OAAOw0B,GAAO7gG,GAAO,KAAOA,CACnE,CAMD,SAAS4gG,GAAW52F,GAClB,MAA0B,oBAAZA,EAAyBA,EAAU,IAAMA,CACxD,CC7OD,MAAMshE,GAAc,WACdC,GAAiB,CAAC,WAAY,OAAQ,QAAS,SAGxCu1B,GAAiC,CAC5Cr9B,WAAY,CAACs9B,IACbriF,MAAO,CACLsiF,gBAAiBC,GACjBC,qBAAsBC,GACtBC,oBAAqBD,GACrBE,mBAAoBF,IAEtB90C,KAAM,CACJ20C,gBAAiBM,GACjBJ,qBAAsBK,GACtBH,oBAAqBI,GACrBH,mBAAoBI,KAKXC,GAA+B,CAC1Ch2B,OAAQ,CACN,CACEC,UAAW,IACXt/D,OAAQ,aACRC,MAAO,YACPg/D,eACAC,mBAEF,CACEI,UAAW,IACXt/D,OAAQ,OACRC,MAAO,YACPg/D,eACAC,mBAEF,CAACI,UAAW,IAAKt/D,OAAQ,OAAQC,MAAO,MAAOg/D,eAAaC,qBAKhE,SAAS01B,GAAqBl0C,GAC5BlyD,KAAK6jB,MAAM,CAAC1Y,KAAM,OAAQ2U,MAAO,KAAM4uD,IAAK,GAAI3nC,SAAU,IAAKmrB,EAChE,CAGD,SAASo0C,GAA0Bp0C,GACjClyD,KAAKm5B,OAAOtV,MAAMmlD,iBAAiBluD,KAAK9a,KAAMkyD,EAC/C,CAGD,SAASy0C,GAAwBz0C,GAC/BlyD,KAAKm5B,OAAOq4B,KAAKwX,iBAAiBluD,KAAK9a,KAAMkyD,EAC9C,CAGD,SAAS00C,GAAuB10C,GAC9BlyD,KAAKm5B,OAAOq4B,KAAK5T,KAAK9iC,KAAK9a,KAAMkyD,GACjC,MAAMjnD,EAA4BjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACjEyD,EAAKyjE,IAAM,UAAY1uE,KAAK62D,eAAe3E,EAC5C,CAGD,SAASw0C,GAAyBx0C,GAChClyD,KAAKm5B,OAAOq4B,KAAK0X,cAAcpuD,KAAK9a,KAAMkyD,EAC3C,CAGD,SAASu0C,GAAoBv0C,GAC3BlyD,KAAKwxD,KAAKU,EACX,CAGD,SAASg0C,GAA6Bz4B,GACpC63B,GACE73B,EACA,CACE,CAAC,kDAAmDq5B,IACpD,CAAC,oCAAqCC,KAExC,CAAC/jF,OAAQ,CAAC,OAAQ,kBAErB,CAWD,SAAS8jF,GAAQl5F,EAAGksE,EAAU8kB,EAAQztF,EAAM+C,GAC1C,IAAIo9C,EAAS,GAGb,IAAKU,GAAS99C,GACZ,OAAO,EAUT,GANI,MAAMiE,KAAK2hE,KACb8kB,EAAS9kB,EAAW8kB,EACpB9kB,EAAW,GACXxoB,EAAS,YAGN01C,GAAgBpI,GACnB,OAAO,EAGT,MAAMz5E,EAAQ8hF,GAASrI,EAASztF,GAEhC,IAAKgU,EAAM,GAAI,OAAO,EAGtB,MAAMtc,EAAS,CACbsC,KAAM,OACN2U,MAAO,KACP4uD,IAAKpd,EAASwoB,EAAW30D,EAAM,GAC/B4hB,SAAU,CAAC,CAAC57B,KAAM,OAAQ1K,MAAOq5E,EAAW30D,EAAM,MAGpD,OAAIA,EAAM,GACD,CAACtc,EAAQ,CAACsC,KAAM,OAAQ1K,MAAO0kB,EAAM,KAGvCtc,CACR,CASD,SAASk+F,GAAUn5F,EAAGoyF,EAAOjjC,EAAO7oD,GAClC,SAEG89C,GAAS99C,GAAO,IAEjB,UAAUiE,KAAK4kD,KAKV,CACL5xD,KAAM,OACN2U,MAAO,KACP4uD,IAAK,UAAYsxB,EAAQ,IAAMjjC,EAC/Bh2B,SAAU,CAAC,CAAC57B,KAAM,OAAQ1K,MAAOu/F,EAAQ,IAAMjjC,IAElD,CAMD,SAASiqC,GAAgBpI,GACvB,MAAMz5E,EAAQy5E,EAAOpnF,MAAM,KAE3B,QACE2N,EAAM3d,OAAS,GACd2d,EAAMA,EAAM3d,OAAS,KACnB,IAAI2Q,KAAKgN,EAAMA,EAAM3d,OAAS,MAC5B,aAAa2Q,KAAKgN,EAAMA,EAAM3d,OAAS,MAC3C2d,EAAMA,EAAM3d,OAAS,KACnB,IAAI2Q,KAAKgN,EAAMA,EAAM3d,OAAS,MAC5B,aAAa2Q,KAAKgN,EAAMA,EAAM3d,OAAS,KAM/C,CAMD,SAASy/F,GAASv4B,GAChB,MAAMw4B,EAAY,sBAAsBtmF,KAAK8tD,GAE7C,IAAIy4B,EAEAC,EAEAC,EAEAC,EAEJ,GAAIJ,EAAW,CACbx4B,EAAMA,EAAI5mE,MAAM,EAAGo/F,EAAUn7F,OAC7Bu7F,EAAQJ,EAAU,GAClBC,EAAoBG,EAAM5wF,QAAQ,KAClC0wF,EAAgBhC,GAAO12B,EAAK,KAC5B24B,EAAgBjC,GAAO12B,EAAK,KAE5B,OAA8B,IAAvBy4B,GAA4BC,EAAgBC,EACjD34B,GAAO44B,EAAMx/F,MAAM,EAAGq/F,EAAoB,GAC1CG,EAAQA,EAAMx/F,MAAMq/F,EAAoB,GACxCA,EAAoBG,EAAM5wF,QAAQ,KAClC2wF,GAEH,CAED,MAAO,CAAC34B,EAAK44B,EACd,CAOD,SAASt1C,GAAS99C,EAAOqzF,GACvB,MAAM3lG,EAAOsS,EAAM24B,MAAMzvB,WAAWlJ,EAAMnI,MAAQ,GAElD,OACmB,IAAhBmI,EAAMnI,OACLglD,GAAkBnvD,IAClBovD,GAAmBpvD,OACnB2lG,GAAkB,KAAT3lG,EAEd,CC7NM,SAAS4lG,KACd,MAAO,CACL3jF,MAAO,CACL4jF,sBAAuBC,EACvBC,iCAAkCC,EAClCC,gBAAiBC,EACjBC,sBAAuBC,GAEzBx2C,KAAM,CACJi2C,sBAAuBQ,EACvBN,iCAAkCO,EAClCL,gBAAiBM,EACjBJ,sBAAuBK,IAK3B,SAASV,EAAwBx1C,GAC/BlyD,KAAK6jB,MACH,CAAC1Y,KAAM,qBAAsByyD,WAAY,GAAIb,MAAO,GAAIh2B,SAAU,IAClEmrB,EAEH,CAGD,SAAS01C,IACP5nG,KAAKw/D,QACN,CAGD,SAAS0oC,EAAkCh2C,GACzC,MAAM6K,EAAQ/8D,KAAK4tE,SACb3iE,EACJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAEjCyD,EAAK8xD,MAAQA,EACb9xD,EAAK2yD,WAAaN,GAChBt9D,KAAK62D,eAAe3E,IACpB7wC,aACH,CAGD,SAAS4mF,EAAuB/1C,GAC9BlyD,KAAKwxD,KAAKU,EACX,CAGD,SAAS41C,EAAkB51C,GACzBlyD,KAAK6jB,MAAM,CAAC1Y,KAAM,oBAAqByyD,WAAY,GAAIb,MAAO,IAAK7K,EACpE,CAGD,SAAS81C,IACPhoG,KAAKw/D,QACN,CAGD,SAAS4oC,EAAuBl2C,GAC9B,MAAM6K,EAAQ/8D,KAAK4tE,SACb3iE,EACJjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAEjCyD,EAAK8xD,MAAQA,EACb9xD,EAAK2yD,WAAaN,GAChBt9D,KAAK62D,eAAe3E,IACpB7wC,aACH,CAGD,SAAS8mF,EAAiBj2C,GACxBlyD,KAAKwxD,KAAKU,EACX,CACF,CAKM,SAASm2C,KAGd,OAFAC,EAAkB/1B,KAAOg2B,EAElB,CAEL13B,OAAQ,CAAC,CAACC,UAAW,IAAKL,YAAa,CAAC,WAAY,QAAS,eAC7D/4B,SAAU,CAAC8wD,qBAAoBF,sBAOjC,SAASA,EAAkBr9F,EAAM2C,EAAG2O,EAASqzD,GAC3C,MAAME,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAK,MACzB,MAAMq/B,EAAOj1C,EAAQsH,MAAM,qBACrBouD,EAAU11D,EAAQsH,MAAM,aAW9B,OAVApjB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAS21D,GAAYjnE,GAAO,IAC5B6kE,EAAQ9jE,UACXwF,OAAQ/Q,EACRgR,MAAO,OAGXwgE,IACAzgB,IACA/wD,GAASqvE,EAAQ39C,KAAK,KACf1xB,CACR,CAGD,SAAS8nG,IACP,MAAO,GACR,CAMD,SAASC,EAAmBv9F,EAAM2C,EAAG2O,EAASqzD,GAC5C,MAAME,EAAUN,GAAMI,GACtB,IAAInvE,EAAQqvE,EAAQ39C,KAAK,MACzB,MAAMq/B,EAAOj1C,EAAQsH,MAAM,sBACrBouD,EAAU11D,EAAQsH,MAAM,SAkB9B,OAjBApjB,GAASqvE,EAAQ39C,KACfy+C,GAAKr0D,EAAS21D,GAAYjnE,GAAO,IAC5B6kE,EAAQ9jE,UACXwF,OAAQ/Q,EACRgR,MAAO,OAGXwgE,IACAxxE,GAASqvE,EAAQ39C,KACf,MAAQlnB,EAAK87B,UAAY97B,EAAK87B,SAASv/B,OAAS,EAAI,IAAM,KAE5DsoE,EAAQ94D,MAAM,GACdvW,GAASqvE,EAAQ39C,KACfi+C,GAAYT,GAAc1kE,EAAMsR,EAASuzD,EAAQ9jE,WAAYhJ,IAE/DwuD,IAEO/wD,EAGP,SAASuC,EAAI+wD,EAAMhoD,EAAOskE,GACxB,OAAItkE,GACMskE,EAAQ,GAAK,QAAUtc,EAG1BA,CACR,CACF,CACF,CC9JM,MAAM00C,GAA+B,CAC1C5/B,eAAgB,CAAC,UACjBhlD,MAAO,CAACy+E,cAAeoG,IACvBl3C,KAAM,CAAC8wC,cAAeqG,KAIXC,GAA6B,CACxC/3B,OAAQ,CAAC,CAACC,UAAW,IAAKL,YAAa,aACvC/4B,SAAU,CAAC5jB,OAAQ+0E,KAMrB,SAASH,GAAmBx2C,GAC1BlyD,KAAK6jB,MAAM,CAAC1Y,KAAM,SAAU47B,SAAU,IAAKmrB,EAC5C,CAGD,SAASy2C,GAAkBz2C,GACzBlyD,KAAKwxD,KAAKU,EACX,CAMD,SAAS22C,GAAa59F,EAAM2C,EAAG2O,EAASqzD,GACtC,MAAME,EAAUN,GAAMI,GAChBpe,EAAOj1C,EAAQsH,MAAM,YAC3B,IAAIpjB,EAAQqvE,EAAQ39C,KAAK,MAQzB,OAPA1xB,GAAS6xE,GAAkBrnE,EAAMsR,EAAS,IACrCuzD,EAAQ9jE,UACXwF,OAAQ/Q,EACRgR,MAAO,MAEThR,GAASqvE,EAAQ39C,KAAK,MACtBq/B,IACO/wD,CACR,CAGD,SAASqoG,KACP,MAAO,GACR,CCiGM,SAASC,GAAcxpF,EAAO3E,EAAU,CAAC,GAC9C,MAAMsoF,GAAStoF,EAAQsoF,OAAS,IAAIh7F,SAC9B8gG,EAAepuF,EAAQouF,cAAgBC,GAEvCC,EAAa,GAEbC,EAAa,GAEbC,EAAa,GAEbC,EAAsB,GAC5B,IAAIC,EAAkB,EAClBC,GAAY,EAIhB,QAASA,EAAWhqF,EAAM/X,OAAQ,CAEhC,MAAMgiG,EAAM,GAENC,EAAQ,GACd,IAAIC,GAAe,EAEfnqF,EAAMgqF,GAAU/hG,OAAS8hG,IAC3BA,EAAkB/pF,EAAMgqF,GAAU/hG,QAGpC,QAASkiG,EAAcnqF,EAAMgqF,GAAU/hG,OAAQ,CAC7C,MAAMy7F,EAAO5jB,GAAU9/D,EAAMgqF,GAAUG,IAEvC,IAAgC,IAA5B9uF,EAAQ+uF,gBAA2B,CACrC,MAAMjhG,EAAOsgG,EAAa/F,GAC1BwG,EAAMC,GAAehhG,QAGkBhB,IAArC2hG,EAAoBK,IACpBhhG,EAAO2gG,EAAoBK,MAE3BL,EAAoBK,GAAehhG,EAEtC,CAED8gG,EAAIzhG,KAAKk7F,EACV,CAEDkG,EAAWI,GAAYC,EACvBJ,EAAWG,GAAYE,CACxB,CAGD,IAAIC,GAAe,EAEnB,GAAqB,kBAAVxG,GAAsB,WAAYA,EAC3C,QAASwG,EAAcJ,EACrBJ,EAAWQ,GAAeE,GAAY1G,EAAMwG,QAEzC,CACL,MAAM9nG,EAAOgoG,GAAY1G,GAEzB,QAASwG,EAAcJ,EACrBJ,EAAWQ,GAAe9nG,CAE7B,CAGD8nG,GAAe,EAEf,MAAMF,EAAM,GAENC,EAAQ,GAEd,QAASC,EAAcJ,EAAiB,CACtC,MAAM1nG,EAAOsnG,EAAWQ,GACxB,IAAIl4F,EAAS,GACTC,EAAQ,GAEC,KAAT7P,GACF4P,EAAS,IACTC,EAAQ,KACU,MAAT7P,EACT4P,EAAS,IACS,MAAT5P,IACT6P,EAAQ,KAIV,IAAI/I,GAC0B,IAA5BkS,EAAQ+uF,gBACJ,EACAz/F,KAAKS,IACH,EACA0+F,EAAoBK,GAAel4F,EAAOhK,OAASiK,EAAMjK,QAGjE,MAAMy7F,EAAOzxF,EAAS,IAAI0+D,OAAOxnE,GAAQ+I,GAET,IAA5BmJ,EAAQ+uF,kBACVjhG,EAAO8I,EAAOhK,OAASkB,EAAO+I,EAAMjK,OAEhCkB,EAAO2gG,EAAoBK,KAC7BL,EAAoBK,GAAehhG,GAGrC+gG,EAAMC,GAAehhG,GAGvB8gG,EAAIE,GAAezG,CACpB,CAGDkG,EAAWnhG,OAAO,EAAG,EAAGwhG,GACxBJ,EAAWphG,OAAO,EAAG,EAAGyhG,GAExBF,GAAY,EAEZ,MAAMM,EAAQ,GAEd,QAASN,EAAWJ,EAAW3hG,OAAQ,CACrC,MAAMgiG,EAAML,EAAWI,GACjBE,EAAQL,EAAWG,GACzBG,GAAe,EAEf,MAAM31C,EAAO,GAEb,QAAS21C,EAAcJ,EAAiB,CACtC,MAAMrG,EAAOuG,EAAIE,IAAgB,GACjC,IAAIl4F,EAAS,GACTC,EAAQ,GAEZ,IAAgC,IAA5BmJ,EAAQ+uF,gBAA2B,CACrC,MAAMjhG,EACJ2gG,EAAoBK,IAAgBD,EAAMC,IAAgB,GACtD9nG,EAAOsnG,EAAWQ,GAEX,MAAT9nG,EACF4P,EAAS,IAAI0+D,OAAOxnE,GACF,KAAT9G,EACL8G,EAAO,GACT8I,EAAS,IAAI0+D,OAAOxnE,EAAO,EAAI,IAC/B+I,EAAQ,IAAIy+D,OAAOxnE,EAAO,EAAI,MAE9B8I,EAAS,IAAI0+D,OAAOxnE,EAAO,GAC3B+I,EAAQD,GAGVC,EAAQ,IAAIy+D,OAAOxnE,EAEtB,EAE8B,IAA3BkS,EAAQkvF,gBAA6BJ,GACvC31C,EAAKhsD,KAAK,MAIU,IAApB6S,EAAQmvF,UAGsB,IAA5BnvF,EAAQ+uF,iBAAsC,KAAT1G,IACX,IAA3BroF,EAAQkvF,iBAA4BJ,GAErC31C,EAAKhsD,KAAK,MAGoB,IAA5B6S,EAAQ+uF,iBACV51C,EAAKhsD,KAAKyJ,GAGZuiD,EAAKhsD,KAAKk7F,IAEsB,IAA5BroF,EAAQ+uF,iBACV51C,EAAKhsD,KAAK0J,IAGY,IAApBmJ,EAAQmvF,SACVh2C,EAAKhsD,KAAK,MAIe,IAAzB6S,EAAQovF,cACRN,IAAgBJ,EAAkB,GAElCv1C,EAAKhsD,KAAK,IAEb,CAED8hG,EAAM9hG,MACqB,IAAzB6S,EAAQovF,aACJj2C,EAAK5wD,KAAK,IAAIgM,QAAQ,MAAO,IAC7B4kD,EAAK5wD,KAAK,IAEjB,CAED,OAAO0mG,EAAM1mG,KAAK,KACnB,CAMD,SAASk8E,GAAU5+E,GACjB,OAAiB,OAAVA,QAA4BiH,IAAVjH,EAAsB,GAAK86C,OAAO96C,EAC5D,CAMD,SAASwoG,GAAoBxoG,GAC3B,OAAOA,EAAM+G,MACd,CAMD,SAASoiG,GAAYnpG,GACnB,MAAMmB,EAAwB,kBAAVnB,EAAqBA,EAAMwpG,YAAY,GAAK,EAEhE,OAAgB,KAATroG,GAAkC,KAATA,EAC5B,GACS,KAATA,GAAkC,MAATA,EACzB,IACS,KAATA,GAAkC,MAATA,EACzB,IACA,CACL,CDnWDinG,GAAat2B,KAAOu2B,GECb,MAAMoB,GAAuB,CAClCrmF,MAAO,CACLtE,MAAO4qF,GACPC,UAAWC,GACXC,YAAaD,GACbE,SAAUC,IAEZh5C,KAAM,CACJqV,SAAU4jC,GACVlrF,MAAOmrF,GACPN,UAAW54C,GACX84C,YAAa94C,GACb+4C,SAAU/4C,KAKd,SAAS24C,GAAWj4C,GAGlB,MAAMgxC,EAAQhxC,EAAMoxC,OACpBtjG,KAAK6jB,MACH,CACE1Y,KAAM,QACN+3F,MAAOA,EAAMlgG,KAAKV,GAAa,SAANA,EAAe,KAAOA,IAC/CykC,SAAU,IAEZmrB,GAEFlyD,KAAK+9C,QAAQ,WAAW,EACzB,CAGD,SAAS2sD,GAAUx4C,GACjBlyD,KAAKwxD,KAAKU,GACVlyD,KAAK+9C,QAAQ,UACd,CAGD,SAASysD,GAASt4C,GAChBlyD,KAAK6jB,MAAM,CAAC1Y,KAAM,WAAY47B,SAAU,IAAKmrB,EAC9C,CAGD,SAASV,GAAKU,GACZlyD,KAAKwxD,KAAKU,EACX,CAGD,SAASm4C,GAAUn4C,GACjBlyD,KAAK6jB,MAAM,CAAC1Y,KAAM,YAAa47B,SAAU,IAAKmrB,EAC/C,CAKD,SAASu4C,GAAav4C,GACpB,IAAIzxD,EAAQT,KAAK4tE,SAEb5tE,KAAKi+C,QAAQ,aACfx9C,EAAQA,EAAM0O,QAAQ,aAAcA,KAGtC,MAAMlE,EAAkCjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GACvEyD,EAAKxK,MAAQA,EACbT,KAAKwxD,KAAKU,EACX,CAOD,SAAS/iD,GAAQ+4D,EAAIC,GAEnB,MAAc,MAAPA,EAAaA,EAAKD,CAC1B,CAMM,SAASyiC,GAAmB/vF,GACjC,MAAMq0D,EAAWr0D,GAAW,CAAC,EACvBmvF,EAAU96B,EAAS27B,iBACnBjB,EAAkB16B,EAAS47B,eAC3B7B,EAAe/5B,EAAS+5B,aACxBz6E,EAASw7E,EAAU,IAAM,IAE/B,MAAO,CACLl5B,OAAQ,CACN,CAACC,UAAW,KAAML,YAAa,aAC/B,CAACK,UAAW,KAAML,YAAa,aAG/B,CAAC/Y,SAAS,EAAMoZ,UAAW,IAAKr/D,MAAO,WAEvC,CAACq/D,UAAW,IAAKL,YAAa,aAG9B,CAAC/Y,SAAS,EAAMoZ,UAAW,IAAKr/D,MAAO,KAMvC,CAACimD,SAAS,EAAMoZ,UAAW,IAAKr/D,MAAO,UAEzCimC,SAAU,CACRn4B,MAAOurF,EACPP,SAAUQ,EACVC,UAAWC,EACXz2B,WAAY02B,IAQhB,SAASJ,EAAY7/F,EAAM2C,EAAG2O,EAASqzD,GACrC,OAAOu7B,EACLC,EAAkBngG,EAAMsR,EAASqzD,GAEjC3kE,EAAKi4F,MAER,CAUD,SAAS6H,EAAe9/F,EAAM2C,EAAG2O,EAASqzD,GACxC,MAAM45B,EAAM6B,EAAqBpgG,EAAMsR,EAASqzD,GAE1CnvE,EAAQ0qG,EAAc,CAAC3B,IAC7B,OAAO/oG,EAAMqH,MAAM,EAAGrH,EAAMiW,QAAQ,MACrC,CAMD,SAASu0F,EAAgBhgG,EAAM2C,EAAG2O,EAASqzD,GACzC,MAAMpe,EAAOj1C,EAAQsH,MAAM,aACrBouD,EAAU11D,EAAQsH,MAAM,YACxBpjB,EAAQ6xE,GAAkBrnE,EAAMsR,EAAS,IAC1CqzD,EACHp+D,OAAQ+c,EACR9c,MAAO8c,IAIT,OAFA0jD,IACAzgB,IACO/wD,CACR,CAMD,SAAS0qG,EAAcG,EAAQpI,GAC7B,OAAO6F,GAAcuC,EAAQ,CAC3BpI,QACAyG,kBACAI,UACAf,gBAEH,CAOD,SAASoC,EAAkBngG,EAAMsR,EAASqzD,GACxC,MAAM7oC,EAAW97B,EAAK87B,SACtB,IAAIh7B,GAAS,EAEb,MAAMlD,EAAS,GACTopE,EAAU11D,EAAQsH,MAAM,SAE9B,QAAS9X,EAAQg7B,EAASv/B,OACxBqB,EAAOkD,GAASs/F,EACdtkE,EAASh7B,GACTwQ,EACAqzD,GAMJ,OAFAqC,IAEOppE,CACR,CAOD,SAASwiG,EAAqBpgG,EAAMsR,EAASqzD,GAC3C,MAAM7oC,EAAW97B,EAAK87B,SACtB,IAAIh7B,GAAS,EAEb,MAAMlD,EAAS,GACTopE,EAAU11D,EAAQsH,MAAM,YAE9B,QAAS9X,EAAQg7B,EAASv/B,OAIxBqB,EAAOkD,GAASk/F,EACdlkE,EAASh7B,GACTd,EACAsR,EACAqzD,GAMJ,OAFAqC,IAEOppE,CACR,CAMD,SAASqiG,EAAoBjgG,EAAMT,EAAQ+R,GACzC,IAAI9b,EAAQ+zE,GAAWvpE,EAAMT,EAAQ+R,GAMrC,OAJIA,EAAQ8kB,MAAMwzB,SAAS,eACzBp0D,EAAQA,EAAM0O,QAAQ,MAAO,SAGxB1O,CACR,CACF,CC1PM,MAAM8qG,GAA8B,CACzC/5C,KAAM,CACJg6C,0BAA2BC,GAC3BC,4BAA6BD,GAC7B5sC,UAAW8sC,KAKFC,GAA4B,CACvC/6B,OAAQ,CAAC,CAACnZ,SAAS,EAAMoZ,UAAW,IAAKr/D,MAAO,UAChDimC,SAAU,CAACwyB,SAAU2hC,KAIvB,SAASJ,GAAUv5C,GACjB,MAAMjnD,EAAgCjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAErEyD,EAAK6jE,QAAyB,8BAAf5c,EAAM/mD,IACtB,CAGD,SAASwgG,GAA8Bz5C,GACrC,MAAM1nD,EAAgCxK,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAC/DyD,EAAiCjL,KAAKqhC,MAAMrhC,KAAKqhC,MAAM75B,OAAS,GAChEskG,EAAWthG,EAAOu8B,SAClBpnB,EAAO1U,EAAK87B,SAAS,GAC3B,IAEIglE,EAFAhgG,GAAS,EAIb,GACEvB,GACgB,aAAhBA,EAAOW,MACmB,mBAAnBX,EAAOskE,SACdnvD,GACc,SAAdA,EAAKxU,KACL,CACA,QAASY,EAAQ+/F,EAAStkG,OAAQ,CAChC,MAAMkvC,EAAUo1D,EAAS//F,GACzB,GAAqB,cAAjB2qC,EAAQvrC,KAAsB,CAChC4gG,EAAkBr1D,EAClB,KACD,CACF,CAEGq1D,IAAoB9gG,IAEtB0U,EAAKlf,MAAQkf,EAAKlf,MAAMqH,MAAM,GAEJ,IAAtB6X,EAAKlf,MAAM+G,OACbyD,EAAK87B,SAAS/vB,QAEd/L,EAAKs9D,UACL5oD,EAAK4oD,UACiC,kBAA/B5oD,EAAK4oD,SAAS79D,MAAMwC,SAE3ByS,EAAK4oD,SAAS79D,MAAMutD,SACpBt4C,EAAK4oD,SAAS79D,MAAMwC,SACpBjC,EAAKs9D,SAAS79D,MAAQqI,OAAOm4C,OAAO,CAAC,EAAGvrC,EAAK4oD,SAAS79D,QAG3D,CAED1K,KAAKwxD,KAAKU,EACX,CAMD,SAAS25C,GAAyB5gG,EAAMT,EAAQ+R,EAASqzD,GACvD,MAAMjwD,EAAO1U,EAAK87B,SAAS,GACrBilE,EACoB,mBAAjB/gG,EAAK6jE,SAAyBnvD,GAAsB,cAAdA,EAAKxU,KAC9C8gG,EAAW,KAAOhhG,EAAK6jE,QAAU,IAAM,KAAO,KAC9CgB,EAAUN,GAAMI,GAElBo8B,GACFl8B,EAAQ39C,KAAK85E,GAGf,IAAIxrG,EAAQypE,GAASj/D,EAAMT,EAAQ+R,EAAS,IACvCqzD,KACAE,EAAQ9jE,YAOb,OAJIggG,IACFvrG,EAAQA,EAAM0O,QAAQ,kCAAmC0F,IAGpDpU,EAMP,SAASoU,EAAMqzD,GACb,OAAOA,EAAK+jC,CACb,CACF,CCvFM,SAASC,KACd,MAAO,CACLjG,GACAuB,KACAiB,GACAyB,GACAqB,GAEH,CAMM,SAASY,GAAcvxF,GAC5B,MAAO,CACLg1C,WAAY,CACVi3C,GACAwB,KACAO,GACA+B,GAAmB/vF,GACnBgxF,IAGL,CCvCc,SAASQ,GAAUxxF,EAAU,CAAC,GAC3C,MAAMgjC,EAAO59C,KAAK49C,OAUlB,SAAS/2B,EAAI2T,EAAO/5B,GAClB,MAAM8uD,EAGJ3R,EAAKpjB,GAASojB,EAAKpjB,GAAUojB,EAAKpjB,GAAS,GAG7C+0B,EAAKxnD,KAAKtH,EACX,CAhBDomB,EAAI,sBAAuBs+E,GAAIvqF,IAC/BiM,EAAI,yBAA0BqlF,MAC9BrlF,EAAI,uBAAwBslF,GAAcvxF,GAe3C,CChCY,SAAoBpZ,GAAkB,gBAAgBA,IAEtDqpF,GAAoBrpF,GAAkB,gBAAgBA,ICS7D+F,GAAM,IAAIrD,GAAU,+BACbkjF,GAAoBmC,GAAqB,qBAEzCU,GAAqB4B,IAAYrqF,IAC1C,MAAMJ,EAAK,sBACLC,EAAa,qBAEZ,OACHgE,GAAAA,EACAuH,OAAS1K,IAAD,CACJ8X,MAAO,QACP3S,QAAS,SACTkrB,UAAU,EACVhyB,MAAO,CACHw8D,MAAO,CACHvjD,QAAS,KAGjB+D,SAAU,CACN,CACIrB,IAAK,kBAAkB9a,MACvB8b,SAAWrb,IACH,kBAAiB+oD,aACjB,MAAMy7B,EAAmBxkF,GAEtB,OACHk7D,MAAOl7D,EAAI4vF,QAAQ10B,MADhB,EAIX94C,eAAgB,OAGxBkD,MAAQtlB,IACE,QAAQA,EAAKtB,MAAMw8D,MACnBj7D,EAAYN,EAAMo2F,aAAa/1F,EAAKtB,MAAO,uBAE3CqC,EAAKqlB,SAASR,cAAc,MAClC7kB,EAAGsQ,YAAc,IAAIzR,MACrBmB,EAAGypG,QAAU,KACH,QAAOnqG,EAAIkD,IAAIukF,IACfrnF,EAAY4iF,GAAAA,OAAqBhiF,EAAK+V,MAAM3H,IAAKpO,EAAK+V,MAAM2d,UAAUnuB,KAAO,GACnFvF,EAAKswC,SAAStwC,EAAK+V,MAAMkU,GAAG0J,aAAav0B,GAAzC,EAGE,QAAI2lB,SAASR,cAAc,KAC/B,SAAAkyD,KAAO,IAAIiQ,GAAiBnoF,KAC9BoB,EAAE86B,gBAAkB,QACpB96B,EAAEqQ,YAAc,IACdrQ,EAAAA,YAAeK,IACbA,EAAEi4C,gBAAF,EAGG,CACH,MACA,CACIhN,MAAOrsC,EACP,aAAcL,EACd,YAAaL,EACbiE,GAAIwlF,GAAiBppF,IAEzB,CAAC,MAAO,CAAE0sC,MAAO,+BAAiCvrC,EAAI,CAAC,KAAM,IAC7D,CAAC,MAAO,CAAEurC,MAAO,8BAAgCtrC,GAhBnD,EAmBNioF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAWtJ,IAASR,EAC9B+mF,OAAQ,CAACvmF,EAAOJ,EAAMK,KAClBD,EACK2lF,SAAS1lF,EAAM,CACZi7D,MAAOt7D,EAAKs7D,QAEf/qD,KAAKvQ,EAAKslC,UACV0gD,WALL,GAQRlR,WAAY,CACRriE,MAAQrS,GAASA,EAAKsJ,KAAKxJ,OAASP,EACpCgnF,OAAQ,CAACvmF,EAAOJ,KAEPI,EAAAA,SAASR,OAAY,EAAW,CAC7B07D,MAAOt7D,EAAKlB,MAAMw8D,MAClBa,WAAYn8D,EAAKlB,MAAMw8D,QAE1B/qD,KAAKvQ,EAAK4F,SACVogF,WALA,KASjBz5B,SAAW9rD,GAAa,CACpBoC,GAAU8iF,IAAmB,CAACvlF,EAAQ,KAAO,CAACJ,EAAOK,KACjD,MAAMc,EAAOi/E,GAAuBpgF,EAAMm1B,UAAW10B,GACrD,IAAKU,EAAa,SAElB,MAAQuqB,GAAAA,GAAO1rB,EACTyB,EAAML,EAAG0sB,cAAc3sB,EAAKqG,SAAK,EAAW,IAAKrG,EAAKqI,KAAK1K,MAAOw8D,MAAAA,IAC7D,oBAAIlmC,aAAaquD,GAAAA,OAAqBhiF,EAAIoO,IAAK1O,EAAKqG,QAExD,CAFI,KAKnBmvF,WAAal2F,GAAa,CACtBmpF,GACI,wBACAnpF,GACCL,I,MAEU,OACHk7D,MAFU,WAAM,IAAN,EAAY,WACnB,IAIX,KAAM,KAGdu7B,aAAc,CAACp2F,EAAML,IACV,CACH,IAAIkkF,GAAO,CAAAx+E,IACPA,GACAo4B,KAAOl+B,IACH,MAAMK,EAAoBN,EAAMq2F,aAAazyF,IAAwB,aAAc,CAC/Ei6B,MAAO,OACP0yD,YAAa,uBACbH,SAAWtvF,IACPT,EAAIuD,IAAIolF,IAAa1vE,KAAKssE,GAAmB9kF,EAA7C,EAEJ2wF,YAAY,IAEhB,IAAKnxF,EAAmB,MAAO,CAAC,EAC1B,QAAiBQ,GACnBssC,QAAQ1sC,GAAQ2/E,GAAuBv/E,EAAK2W,MAAM2d,UAAW10B,IAC3DW,EAAmBP,IACrB,MAAMkB,EAASq+E,GAAuBv/E,EAAK2W,MAAM2d,UAAW10B,GAC5D,OAAKsB,EAESA,EAAOyH,KAAK1K,MAAMw8D,WAFnB,CAAb,EAKE75D,EAAgBZ,IACbA,EAAKivC,WAGM3uC,EAAcN,IAE1BR,EAAkBuxF,KAAK/wF,GACLR,EAAAA,OAAOe,EAAgBP,KAEzCR,EAAkBwxF,OALN,EAQpB,SAAkBr6D,KAAKx3B,GACvByB,EAAazB,GAEN,CACHoE,OAAQ,CAACvD,EAAMkB,MAEP,iBAAW8N,IAAIpF,GAAG5J,EAAK2W,MAAM3H,OAAQ9N,EAAUozB,UAAU1qB,GAAG5J,EAAK2W,MAAM2d,YAG3E1zB,EAAaZ,EAHT,EAKRolC,QAAS,KACL5lC,EAAkB4lC,SAAlB,EAZR,KA7Ib,ICPEy/C,GAAoBoC,GAAqB,qBAChDhiF,GAAM,IAAIrD,GAAU,+BAEbg0F,GAAoBrM,IAAYrqF,IACzC,MAAMJ,EAAK,qBAEJ,OACHiE,GAAAA,EACAuH,OAASvL,IAAD,CACJ2Y,MAAO,SACP1C,QAAQ,EACR2C,MAAM,EACN1Z,MAAO,CACHw8D,MAAO,CACHvjD,QAAS,KAGjB+D,SAAU,CACN,CACIrB,IAAK,kBAAkB9a,MACvB8b,SAAWhb,IACH,kBAAiB0oD,aACjB,MAAMy7B,EAAmBnkF,GAEtB,OACH66D,MAAO76D,EAAIuvF,QAAQ10B,MADhB,IAMnB51C,MAAQjlB,IACE,MAAAL,EAAQK,EAAK3B,MAAMw8D,MACnBt7D,EAAIwmB,SAASR,cAAc,KAC3B3lB,EAAO,IAAI+oF,GAAiBhpF,KAClC,SAAE83E,KAAO73E,EACTL,EAAEyR,YAAc,IAAIrR,KAClBJ,EAAAA,QAAWmB,IAELvB,EADa+D,IAAIukF,IACZp4C,UACL3uC,EAAEu4C,gBADF,EAIR15C,EAAE6qG,WAAa,KAEPjrG,EADa+D,IAAIukF,IACZp4C,WACLrpB,OAAOqkF,SAAS5yB,KAAO73E,EADvB,EAID,CACH,MACA,CACI,aAAcD,EACd,YAAaT,EACbiE,GAAIukF,GAAiB/nF,IAEzBJ,EArBJ,EAwBJqpF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,KAAoB,sBAATjJ,EACrBkmF,OAAQ,CAAClmF,EAAOL,EAAMJ,KAClBS,EAAMkO,QAAQ3O,EAAM,CAChBs7D,MAAOl7D,EAAKk7D,OADhB,GAKRwZ,WAAY,CACRriE,MAAQhS,GAASA,EAAKiJ,KAAKxJ,OAASP,EACpCgnF,OAAQ,CAAClmF,EAAOL,KACNK,EAAAA,QAAQ,yBAAqB,OAAW,EAAW,CACrD66D,MAAOl7D,EAAKtB,MAAMw8D,MAClBa,WAAY/7D,EAAKtB,MAAMw8D,OAFrB,KAOlB/O,SAAW3sD,GAAa,CACpBiD,GAAU6iF,IAAmB,CAACjlF,EAAQ,KAAO,CAACL,EAAOJ,KACjD,MAAMK,EAAO+/E,GAAuBhgF,EAAM+0B,UAAWv1B,GACrD,IAAKS,EAAa,SAElB,MAAQqrB,GAAAA,GAAOtrB,EACTgB,EAAMD,EAAG2sB,cAAcztB,EAAKmH,SAAK,EAAW,IAAKnH,EAAKmJ,KAAK1K,MAAOw8D,MAAAA,IAC7D,oBAAIlmC,aAAaquD,GAAAA,OAAqBriF,EAAIyO,IAAKxP,EAAKmH,QAExD,CAFI,KAKnBmvF,WAAa/2F,GAAa,CACtB,IAAIqoF,GAAU,2BAA2B,CAACxnF,EAAOL,EAAOJ,EAAOK,KAC3D,MAAMc,EAASV,EAAMoP,IAAIsB,QAAQnR,GAC3BoB,EAAQD,EAAOmJ,QACf7I,EAAOhB,EAAMoP,IAAIsB,QAAQ9Q,GAC3B,IAACc,EAAO4H,OAAOkK,eAAe7R,EAAOK,EAAK6I,QAAS1K,GAC5C,YAEX,MAAMiB,EAAQT,EAAM,GACpB,OAAOK,EAAMirB,GAAGwG,iBACZlyB,EACAK,EACAT,EAAS0M,OAAO,CACZgvD,MAAAA,IAJR,KASRu7B,aAAc,CAACj3F,EAAMa,KACjB,MAAML,EAAoBL,EAAMq2F,aAAazyF,IAAwB,aAAc,CAC/Ei6B,MAAO,OACP0yD,YAAa,uBACbH,SAAW/uF,IACPX,EAAIkD,IAAIolF,IAAa1vE,KAAKqsE,GAAmBtkF,EAA7C,EAEJowF,YAAY,IAEhB,IAAKpxF,EAAmB,MAAO,GACzB,MAAAJ,EAAiBoB,GACnB+rC,QAAQvtC,GAAQwgF,GAAuBh/E,EAAKoW,MAAM2d,UAAWv1B,IAC3DS,EAAmBe,IACrB,MAAMK,EAAS2+E,GAAuBh/E,EAAKoW,MAAM2d,UAAWv1B,GAC5D,OAAK6B,EAESA,EAAO+H,KAAK1K,MAAMw8D,WAFnB,CAAb,EAKEn6D,EAAgBC,IACbA,EAAK0uC,WAGM9vC,EAAcoB,IAE1BhB,EAAkBwxF,KAAKxwF,GACLhB,EAAAA,OAAOC,EAAgBe,KAEzChB,EAAkByxF,OALN,EAQb,OACH,IAAIvN,GAAO,CAAAx+E,IACPA,GACAo4B,KAAO98B,IACHhB,EAAkBo3B,KAAKp2B,GACvBD,EAAaC,GAEN,CACHgD,OAAQ,CAAC3C,EAAMZ,MAEP,iBAAWgP,IAAIpF,GAAGhJ,EAAK+V,MAAM3H,OAAQhP,EAAUs0B,UAAU1qB,GAAGhJ,EAAK+V,MAAM2d,YAG3Eh0B,EAAaM,EAHT,EAKRwkC,QAAS,KACL7lC,EAAkB6lC,SAAlB,MAhBb,EAnIR,ICdLsjD,GAAAA,IAAY9lC,QACZu3C,GAAiBj7F,GAAcwpF,GAAM5lF,IAAI5D,GACzCg7F,GAAa,CAACh7F,EAAWJ,KACrB4pF,GAAAA,IAAIxpF,EAAKJ,GACRA,GAGJ,MAAMgqF,GAIT7pF,YAAmBH,EAAqBC,EAAoBa,EAAsBL,GAA/D,KAAA88B,KAAA,EAAqB,KAAA9c,IAAAxgB,EAAoB,KAAAu9B,MAAA,EAAsB,KAAAE,OAAA,CAAiB,EAOhG,MAAMp8B,GACTnB,YAAmBH,EAAsBC,EAAuBa,EAAsBL,GAAnE,KAAAw9B,MAAA,EAAsB,KAAAG,OAAA,EAAuB,KAAAx8B,IAAA,EAAsB,KAAAwpG,SAAA,EAElFxsG,KAAKq/B,MAAQj+B,EAEbpB,KAAKw/B,OAASn+B,EAGdrB,KAAKgD,IAAMd,EAGXlC,KAAKwsG,SAAW3qG,CACpB,CAGA4qG,SAASrrG,GACL,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,KAAKgD,IAAIwE,OAAQnG,IAAK,CAChC,QAASrB,KAAKgD,IAAI3B,GACxB,GAAIa,GAAUd,EAAK,SACnB,MAAMS,EAAOR,EAAIrB,KAAKq/B,MAClB59B,EAAOJ,EAAIrB,KAAKq/B,MAAS,EAC7B,IAAIv9B,EAAQD,EAAO,EACfe,EAASnB,EAAM,EACV,UAAI,EAAGK,EAAQ9B,KAAKq/B,OAASr/B,KAAKgD,IAAI3B,EAAIwB,IAAMX,EAAQW,IAAKf,IAC7D,UAAI,EAAGc,EAAS5C,KAAKw/B,QAAUx/B,KAAKgD,IAAI3B,EAAIrB,KAAKq/B,MAAQx8B,IAAMX,EAAQW,IAAKD,IACrF,OAAO,IAAIwoF,GAAKvpF,EAAMJ,EAAKK,EAAOc,EACtC,CACA,MAAM,IAAIuJ,WAAW,uBAAyB/K,EAAM,SACxD,CAEAsrG,SAAStrG,GACL,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,KAAKgD,IAAIwE,OAAQnG,IAAS,GAAArB,KAAKgD,IAAI3B,IAAMD,EAAK,OAAOC,EAAIrB,KAAKq/B,MAClF,MAAM,IAAIlzB,WAAW,uBAAyB/K,EAAM,SACxD,CAKAurG,SAASvrG,EAAaC,EAAca,GAChC,MAAQy8B,KAAAA,EAAMC,MAAAA,EAAO/c,IAAAA,EAAKid,OAAAA,GAAW9+B,KAAKysG,SAASrrG,GACnD,MAAY,SAARC,GACI,EAAM,EAAY,GAARQ,EAAYJ,GAASzB,KAAKq/B,YAAc,EAC/Cr/B,KAAKgD,IAAIlB,EAAM9B,KAAKq/B,OAAen9B,EAAAA,EAAIL,EAAO,EAAIJ,KAErD,EAAM,EAAW,GAAPK,EAAWc,GAAU5C,KAAKw/B,aAAe,EAChDx/B,KAAKgD,IAAInB,EAAO7B,KAAKq/B,OAAen9B,EAAAA,EAAIJ,EAAM,EAAIc,GAEjE,CAIAgqG,YAAYxrG,EAAWC,GACb,MAAEs9B,KAAMz8B,EAAO08B,MAAO/8B,EAAQggB,IAAKpgB,EAAMq9B,OAAQh9B,GAAY9B,KAAKysG,SAASrrG,IACzEu9B,KAAM/7B,EAAOg8B,MAAO/7B,EAAQgf,IAAK3e,EAAM47B,OAAQx8B,GAAYtC,KAAKysG,SAASprG,GAC1E,WAAI+pF,GACPlhF,KAAKC,IAAIjI,EAAOU,GAChBsH,KAAKC,IAAI1I,EAAMyB,GACfgH,KAAKS,IAAI9I,EAAQgB,GACjBqH,KAAKS,IAAI7I,EAASQ,GAE1B,CAKAuqG,YAAYzrG,GACR,MAAMC,EAAmB,GACrBa,EAAgC,CAAC,EACrC,IAAK,IAAIL,EAAMT,EAAKygB,IAAKhgB,EAAMT,EAAK09B,OAAQj9B,IACxC,IAAK,IAAIJ,EAAML,EAAKu9B,KAAMl9B,EAAML,EAAKw9B,MAAOn9B,IAAO,CAC/C,MAAMK,EAAQD,EAAM7B,KAAKq/B,MAAQ59B,EAC7BmB,EAAM5C,KAAKgD,IAAIlB,GACfI,EAAKU,KACTV,EAAKU,IAAO,MAEAxB,EAAKu9B,OAASl9B,GAAOzB,KAAKgD,IAAIlB,EAAQ,IAAMc,KAC5Cf,GAAAA,EAAKggB,MAAQhgB,GAAO7B,KAAKgD,IAAIlB,EAAQ9B,KAAKq/B,QAAUz8B,IAE5DvB,EAAO0G,KAAKnF,GACpB,CAEG,QACX,CAKAkqG,WAAW1rG,EAAaC,EAAaa,GACjC,IAAK,IAAIL,EAAI,EAAGJ,EAAW,GAAKI,IAAK,CACjC,MAAMC,EAASL,EAAWS,EAAMkH,MAAMvH,GAAG6H,SACzC,GAAI7H,GAAKT,EAAK,CACN,MAAQC,EAAMD,EAAMpB,KAAKq/B,MACvB,SAAqB,KAAKr/B,KAAKq/B,MAErC,KAAOz8B,EAAQC,GAAgB7C,KAAKgD,IAAIJ,GAAoBnB,GAAUmB,IACtE,OAAOA,GAASC,EAAcf,EAAS,EAAK9B,KAAKgD,IAAIJ,EACzD,CACWnB,EAAAA,CACf,CACJ,CAGO,WAAIL,GACP,OAAOq7F,GAAcr7F,IAAUo7F,GAAWp7F,EAAO26F,GAAW36F,GAChE,EA2BJ,SAAS,GAAWI,GACZ,GAAgC,SAAhC,EAAM2J,KAAK9H,KAAK0pG,UAAyB,MAAM,IAAI5gG,WAAW,qBAAuB3K,EAAM2J,KAAKxJ,MACpG,MAAMP,EAAQq2F,GAAUj2F,GACpBH,EAASG,EAAM0H,WACbhH,EAAgB,GAChBL,EAAsB,GACxB,IACAC,EADA,EAAS,EAEb,IAAK,IAAIoB,EAAI,EAAGZ,EAAIlB,EAAQC,EAAQ6B,EAAIZ,EAAGY,IAAKhB,EAAIgB,GAAK,EAEzD,IAAK,IAAIA,EAAM,EAAGZ,EAAM,EAAGY,EAAM7B,EAAQ6B,IAAO,CACtC,QAAU1B,EAAM4H,MAAMlG,GAC5BZ,IACS,UAAI,GAAKE,IAAK,CACnB,KAAOf,EAASS,EAAIsF,QAAyB,GAAftF,EAAIT,IAAcA,IAChD,GAAIe,GAAKgB,EAAQ0F,WAAY,MACvB,QAAW1F,EAAQ4F,MAAM5G,IACzBwqG,QAAAA,EAASC,QAAAA,EAASC,SAAAA,GAAalkG,EAASzI,MAC9C,IAAK,IAAImkF,EAAI,EAAGA,EAAI99E,EAAS89E,IAAK,CAC1B,KAAIxhF,GAAO7B,EAAQ,EACL,MAAW,KAAK0G,KAAK,CAC/BoD,KAAM,mBACNlC,IAAAA,EACA/G,EAAG0E,EAAU89E,IAEjB,KACJ,CACM,QAAQjjF,EAASijF,EAAItjF,EAC3B,IAAK,IAAIwM,EAAI,EAAGA,EAAIlK,EAASkK,IAAK,CACR,GAAlB1L,EAAIukF,EAAQ74E,GAAS1L,EAAIukF,EAAQ74E,GAAKtL,GAExB,MAAW,KAAKyF,KAAK,CAC/BoD,KAAM,YACNq+F,IAAAA,EACAvgG,IAAAA,EACA/G,EAAGwB,EAAUkK,IAEf,QAAOi4E,GAAYA,EAASj4E,GAClC,GAAIo8E,EAAM,CACN,MAAMtkF,GAAuB,KAAKtE,EAAS,EACvCikF,EAAOxjF,EAAU6D,GACT,MAAR2/E,GAAiBA,GAAQ2E,GAAqC,GAA7BnoF,EAAU6D,EAAa,IACxD7D,EAAU6D,GAAcskF,EACxBnoF,EAAU6D,EAAa,GAAK,GACrB2/E,GAAQ2E,GACfnoF,EAAU6D,EAAa,IAE/B,CACJ,CACJ,CACUjE,GAAAA,EACVa,GAAO0G,EAASU,QACpB,CACM,WAAqB,GAAKtI,EAChC,IAAIa,EAAU,EACd,KAAOR,EAASW,GAAkC,GAAjBF,EAAIT,MAAgBQ,IACjDA,IAAU,IAAwBH,EAAAA,KAAKiG,KAAK,CAAEoD,KAAM,UAAWq+F,IAAAA,EAAKtnG,EAAGD,IAC3EK,GACJ,CAEA,MAAMM,EAAW,IAAIF,GAAStB,EAAOC,EAAQa,EAAKJ,GAClD,IAAIe,GAAY,EAKhB,IAAK,IAAIK,EAAI,GAAIL,GAAaK,EAAIrB,EAAU2F,OAAQtE,GAAK,EACjC,MAAhBrB,EAAUqB,IAAerB,EAAUqB,EAAI,GAAgB7B,IAAoBwB,GAAAA,GAC/E,UAA4Bw5F,GAAAA,EAAUx6F,EAAWL,GAE9CoB,CACX,CAEA,SAAS,GAAUpB,GACX,OAAS,EACTH,GAAa,EACjB,IAAK,IAAIa,EAAM,EAAGA,EAAMV,EAAM0H,WAAYhH,IAAO,CACvC,QAAUV,EAAM4H,MAAMlH,GAC5B,IAAIT,EAAW,EACX,KACA,IAAK,IAAIK,EAAI,EAAGA,EAAII,EAAKJ,IAAK,CACpB,QAAUN,EAAM4H,MAAMtH,GAC5B,IAAK,IAAIe,EAAI,EAAGA,EAAID,EAAQsG,WAAYrG,IAAK,CACnC,MAAAK,EAAON,EAAQwG,MAAMvG,GACvBf,EAAIoB,EAAK3C,MAAM0sG,QAAa/qG,IAAKT,GAAYyB,EAAK3C,MAAMysG,QAChE,CACJ,CACJ,IAAK,IAAIlrG,EAAI,EAAGA,EAAID,EAAQqH,WAAYpH,IAAK,CACnC,QAAOD,EAAQuH,MAAMtH,GAC3BL,GAAYmB,EAAKrC,MAAMysG,QACnBpqG,EAAKrC,MAAM0sG,QAAa,IAAgB5rG,GAAAA,EAChD,EACc,GAAVD,EAAqBA,EAAAA,EAChBA,GAASK,IAAkBL,EAAAA,KAAKuJ,IAAIvJ,EAAOK,GACxD,CACO,QACX,CAEA,SAAS,GAAiBD,EAAeJ,EAAqBC,GACrDG,EAAIgrG,WAAUhrG,EAAIgrG,SAAW,IACzB,UAAI,EAAG3qG,EAAgC,CAAC,EAAGK,EAAIV,EAAIwB,IAAIwE,OAAQtF,IAAK,CACnE,QAAMV,EAAIwB,IAAId,GACpB,GAAIL,EAAKJ,GAAM,SACfI,EAAKJ,IAAO,EACN,QAAOJ,EAAMmS,OAAO/R,GAC1B,IAAImB,EAAU,KACd,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAKvB,MAAMysG,QAAYnqG,IAAK,CAC5C,MAAMK,GAAW,KAAK1B,EAAI69B,MACtB/8B,EAAWlB,EAAgB,EAAN8B,GACT,MAAZZ,KAAsB,EAAK/B,MAAM2sG,UAAeprG,EAAKvB,MAAM2sG,SAAYrqG,IAAMP,MAAA,IACtDM,EAAAA,GAAcd,EAAKvB,SAASsC,GAAKP,EAChE,CACIM,GACApB,EAAIgrG,SAAS15E,QAAQ,CACjB3nB,KAAM,oBACNlC,IAAAA,EACAikG,SAAUtqG,GAEtB,CACJ,CAEA,SAAS,GAAcpB,GACnB,GAAIA,EAAM0rG,SAAoB,SAAMA,SAAYplG,QAChD,MAAM1G,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIG,EAAMwrG,QAAY3rG,IAAKD,EAAO2G,KAAK,GAChD,QACX,CCjQO,MAAM9E,WAAsBa,GAM/BvC,YAAmBH,EAAiCC,EAAYD,GAC5D,MAAMc,EAAQd,EAAY6J,MAAM,GAC5BpJ,EAAMa,GAAS0C,IAAIlD,GACnBT,EAAQL,EAAYsJ,OAAO,GACzB5I,EAAOD,EAAI+qG,YAAYxrG,EAAY6H,IAAMxH,EAAOJ,EAAU4H,IAAMxH,GAChEmB,EAAMxB,EAAY6J,KAAK,GACvBpI,EAAQhB,EAAIgrG,YAAY/qG,GAAM6sC,QAAQrsC,GAAMA,GAAKjB,EAAU4H,IAAMxH,IAGjEoB,EAAAA,QAAQxB,EAAU4H,IAAMxH,GAC9B,MAAMyB,EAASL,EAAMG,KAAKV,IACtB,MAAMkB,EAAOtB,EAAMsR,OAAOlR,GACtBF,EAAOE,EAAMb,EAAQ,EAEzB,OAAO,IAAKu6F,GAAuBp5F,EAAIgQ,QAAQxQ,GAAOQ,EAAIgQ,QAAQxQ,EAAOoB,EAAK6D,QAAQqB,MAAtF,IAEJhH,MAAMwB,EAAO,GAAGkM,MAAOlM,EAAO,GAAGmM,IAAKnM,GAhBvB,KAAAiqG,YAAA,EAAiC,KAAAC,UAAA,EAoBhDptG,KAAKmtG,YAAc/rG,EAInBpB,KAAKotG,UAAY/rG,CACrB,CAEA2B,IAAI5B,EAAWC,GACL,QAAcD,EAAIwR,QAAQvR,EAAQ2B,IAAIhD,KAAKmtG,YAAYlkG,MACvDpH,EAAYT,EAAIwR,QAAQvR,EAAQ2B,IAAIhD,KAAKotG,UAAUnkG,MACrD,MAAa/G,IAAgB0kF,GAAa/kF,IAAcqqF,GAAYhqF,EAAaL,GAAY,CACvF,QAAe7B,KAAKmtG,YAAYliG,MAAM,IAAM/I,EAAY+I,MAAM,GAChE,UAAgBjL,KAAKqtG,iBAAyBpqG,GAAcqqG,aAAaprG,EAAaL,GACjFJ,GAAgBzB,KAAKutG,iBAAyBtqG,GAAcuqG,aAAatrG,EAAaL,GACnF,IAAIoB,GAAcf,EAAaL,EAC/C,CACO,OAAAwzB,GAAA,QAAsBnzB,EAAaL,EAC9C,CAKAwF,UACI,MAAMjG,EAAQpB,KAAKmtG,YAAYliG,MAAM,GACjC5J,EAAMqB,GAAS0C,IAAIhE,GACnBc,EAAQlC,KAAKmtG,YAAYziG,OAAO,GAC9B7I,EAAOR,EAAIurG,YAAY5sG,KAAKmtG,YAAYlkG,IAAM/G,EAAOlC,KAAKotG,UAAUnkG,IAAM/G,GAC1ET,EAAgC,CAAC,EACnCK,EAAO,GACX,IAAK,IAAIe,EAAMhB,EAAKggB,IAAKhf,EAAMhB,EAAKi9B,OAAQj8B,IAAO,CAC/C,MAAMK,EAAa,GACnB,IAAK,IAAIZ,EAAQO,EAAMxB,EAAIg+B,MAAQx9B,EAAK88B,KAAMn7B,EAAM3B,EAAK88B,KAAMn7B,EAAM3B,EAAK+8B,MAAOp7B,IAAOlB,IAAS,CACvF,QAAMjB,EAAI2B,IAAIV,GAChB,IAACb,EAAKW,GAAM,CACZX,EAAKW,IAAO,EACN,QAAWf,EAAIorG,SAASrqG,GAC1B,MAAOhB,EAAMoS,OAAOpR,GAClB,QAAYP,EAAK88B,KAAO18B,EAAS08B,KACnCj7B,EAAazB,EAAS28B,MAAQ/8B,EAAK+8B,MACnC,KAAY,GAAKl7B,EAAa,EAAG,CACjC,IAAIkD,EAAQpE,EAAKjC,MACbyI,EAAY,IAAWpC,EAAAA,GAAcA,EAAO,EAAGoC,IAC/CtF,EAAa,IAAGkD,EAAQ9B,GAAc8B,EAAOA,EAAMomG,QAAatpG,EAAYA,IAC1ClB,EAAlCP,EAAS08B,KAAO98B,EAAK88B,KAAan8B,EAAK2I,KAAKsL,cAAc7P,GAClDpE,EAAK2I,KAAK4C,OAAOnH,EAAOpE,EAAK6E,QAC7C,CACA,GAAIpF,EAAS4f,IAAMhgB,EAAKggB,KAAO5f,EAAS68B,OAASj9B,EAAKi9B,OAAQ,CAC1D,MAAMl4B,EAAQ5C,GACVxB,EAAKjC,MACL,UACA2J,KAAKC,IAAIlI,EAAS68B,OAAQj9B,EAAKi9B,QAAU50B,KAAKS,IAAI1I,EAAS4f,IAAKhgB,EAAKggB,MAErCrf,EAAhCP,EAAS4f,IAAMhgB,EAAKggB,IAAYrf,EAAK2I,KAAKsL,cAAc7P,GAChDpE,EAAK2I,KAAK4C,OAAOnH,EAAOpE,EAAK6E,QAC7C,CACAnE,EAAW6E,KAAKvF,EACpB,CACJ,CACKV,EAAAA,KAAKV,EAAMgI,MAAMvG,GAAKoJ,KAAK1G,EAAAA,KAAcrC,IAClD,CAEA,MAAMN,EAAW5C,KAAKutG,kBAAoBvtG,KAAKqtG,iBAAmBjsG,EAAQU,EAC1E,OAAO,IAAI6iF,GAAMp/E,EAAAA,KAAc3C,GAAW,EAAG,EACjD,CAEAuM,QAAiB/N,EAAiBC,EAAUsjF,GAAAA,OACxC,MAAMziF,EAAUd,EAAG8tB,MAAM1nB,OACrB3F,EAAS7B,KAAKqpB,OAClB,IAAK,IAAIvnB,EAAI,EAAGA,EAAID,EAAO2F,OAAQ1F,IAAK,CAC9B,MAAEsN,MAAAA,EAAOC,IAAAA,GAAQxN,EAAOC,GAC1BoB,EAAU9B,EAAGypB,QAAQ/iB,MAAM5F,GAC/Bd,EAAG+N,QAAQjM,EAAQF,IAAIJ,EAAMqG,KAAM/F,EAAQF,IAAIH,EAAIoG,KAAMnH,EAAI6iF,GAAAA,MAActjF,EAC/E,CACA,MAAMI,EAAMqC,GAAUyxB,SAASn0B,EAAGkQ,IAAIsB,QAAQxR,EAAGypB,QAAQ/iB,MAAM5F,GAASc,IAAIhD,KAAKsK,MAAO,GACpF7I,GAAKL,EAAGy1B,aAAap1B,EAC7B,CAESguB,YAAYruB,EAAiBC,GAC7B,KAAA8N,QAAQ/N,EAAI,IAAIujF,GAAMp/E,EAAAA,KAAclE,GAAO,EAAG,GACvD,CAEAosG,YAAYrsG,GACR,MAAMC,EAAQrB,KAAKmtG,YAAYliG,MAAM,GACjC/I,EAAMQ,GAAS0C,IAAI/D,GACnBQ,EAAQ7B,KAAKmtG,YAAYziG,OAAO,GAC9BjJ,EAAQS,EAAI2qG,YAAY3qG,EAAI0qG,YAAY5sG,KAAKmtG,YAAYlkG,IAAMpH,EAAO7B,KAAKotG,UAAUnkG,IAAMpH,IACjG,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAM+F,OAAQ1F,IAC9BV,EAAEC,EAAMmS,OAAO/R,EAAMK,IAAuBD,EAASJ,EAAMK,GACnE,CAKAyrG,iBACU,QAAYvtG,KAAKmtG,YAAYphG,OAAO,GACtC1K,EAAUrB,KAAKotG,UAAUrhG,OAAO,GACpC,GAAI7B,KAAKC,IAAI/I,EAAWC,GAAW,EAAU,SAC7C,MAAMa,EAAYd,EAAapB,KAAKmtG,YAAYv8F,UAAmBrQ,MAAM0sG,QACrEprG,EAAUR,EAAWrB,KAAKotG,UAAUx8F,UAAmBrQ,MAAM0sG,QAC1D,OAAA/iG,KAAKS,IAAIzI,EAAWL,IAAY7B,KAAKotG,UAAUniG,MAAM,GAAG/B,UACnE,CAKO,oBAAa9H,EAA0BC,EAAYD,GAChD,QAAMsB,GAAS0C,IAAIhE,EAAY6J,MAAM,IACvCpJ,EAAQT,EAAYsJ,OAAO,GACzBjJ,EAAaS,EAAIuqG,SAASrrG,EAAY6H,IAAMpH,GAC9CC,EAAWI,EAAIuqG,SAASprG,EAAU4H,IAAMpH,GACtCe,EAAMxB,EAAY6J,KAAK,GACzB,KAAW4W,KAAO/f,EAAS+f,IAAK,CAC5B,KAAWA,IAAM,EAAG,CACd,QAAO3f,EAAIc,IAAIvB,EAAWk9B,MAClBv9B,EAAAA,EAAIwR,QAAQ/Q,EAAQgB,EACtC,CACI,KAASi8B,OAAS58B,EAAIs9B,OAAQ,CACxB,QAAMt9B,EAAIc,IAAId,EAAIm9B,OAAan9B,EAAAA,OAAS,GAAKJ,EAAS88B,MAAQ,GACxDv9B,EAAAA,EAAIuR,QAAQ/Q,EAAQgB,EACpC,MACG,CACC,KAASgf,IAAM,EAAG,CACZ,QAAO3f,EAAIc,IAAIvB,EAAWk9B,MACpBt9B,EAAAA,EAAIuR,QAAQ/Q,EAAQgB,EACpC,CACI,KAAWi8B,OAAS58B,EAAIs9B,OAAQ,CAC1B,QAAMt9B,EAAIc,IAAId,EAAIm9B,OAAan9B,EAAAA,OAAS,GAAKT,EAAWm9B,MAAQ,GACxDx9B,EAAAA,EAAIwR,QAAQ/Q,EAAQgB,EACtC,CACJ,CACO,WAAII,GAAc7B,EAAaC,EAC1C,CAKAgsG,iBACI,MAAMjsG,EAAMsB,GAAS0C,IAAIpF,KAAKmtG,YAAYliG,MAAM,IAC5C5J,EAAQrB,KAAKmtG,YAAYziG,OAAO,GAC9BxI,EAAad,EAAIsrG,SAAS1sG,KAAKmtG,YAAYlkG,IAAM5H,GACnDQ,EAAWT,EAAIsrG,SAAS1sG,KAAKotG,UAAUnkG,IAAM5H,GACjD,GAAI6I,KAAKC,IAAIjI,EAAYL,GAAY,EAAU,SAC/C,MAAMJ,EAAcS,EAAclC,KAAKmtG,YAAYv8F,UAAmBrQ,MAAMysG,QACxElrG,EAAYD,EAAY7B,KAAKotG,UAAUx8F,UAAmBrQ,MAAMysG,QACpE,OAAO9iG,KAAKS,IAAIlJ,EAAaK,IAAcV,EAAIi+B,KACnD,CAEAnzB,GAAG9K,GACC,OACIA,aAAiB6B,IACjB7B,EAAM+rG,YAAYlkG,KAAOjJ,KAAKmtG,YAAYlkG,KAC1C7H,EAAMgsG,UAAUnkG,KAAOjJ,KAAKotG,UAAUnkG,GAE9C,CAKO,oBAAa7H,EAA0BC,EAAYD,GAChD,QAAMsB,GAAS0C,IAAIhE,EAAY6J,MAAM,IACvCpJ,EAAQT,EAAYsJ,OAAO,GACzBjJ,EAAaS,EAAIuqG,SAASrrG,EAAY6H,IAAMpH,GAC9CC,EAAWI,EAAIuqG,SAASprG,EAAU4H,IAAMpH,GACtCe,EAAMxB,EAAY6J,KAAK,GACzB,KAAW0zB,MAAQ78B,EAAS68B,KAAM,CAC9B,KAAWA,KAAO,EAAG,CACrB,MAAM97B,EAAMX,EAAIc,IAAIvB,EAAWogB,IAAM3f,EAAIm9B,OAC3Bj+B,EAAAA,EAAIwR,QAAQ/Q,EAAQgB,EACtC,CACI,KAAS+7B,MAAQ18B,EAAIm9B,MAAO,CAC5B,MAAMx8B,EAAMX,EAAIc,IAAId,EAAIm9B,OAASv9B,EAAS+f,IAAM,GAAK,GACzCxgB,EAAAA,EAAIuR,QAAQ/Q,EAAQgB,EACpC,MACG,CACC,KAAS87B,KAAO,EAAG,CACnB,MAAM97B,EAAMX,EAAIc,IAAIlB,EAAS+f,IAAM3f,EAAIm9B,OAC3Bh+B,EAAAA,EAAIuR,QAAQ/Q,EAAQgB,EACpC,CACI,KAAW+7B,MAAQ18B,EAAIm9B,MAAO,CAC9B,MAAMx8B,EAAMX,EAAIc,IAAId,EAAIm9B,OAAS59B,EAAWogB,IAAM,GAAK,GAEzCzgB,EAAAA,EAAIwR,QAAQ/Q,EAAQgB,EACtC,CACJ,CACO,WAAII,GAAc7B,EAAaC,EAC1C,CAEA+B,SACW,OACH+H,KAAM,OACN4pB,OAAQ/0B,KAAKmtG,YAAYlkG,IACzB0W,KAAM3f,KAAKotG,UAAUnkG,IAE7B,CAGgB,gBAAS7H,EAAWC,GACzB,WAAI4B,GAAc7B,EAAIwR,QAAQvR,EAAK0zB,QAAS3zB,EAAIwR,QAAQvR,EAAKse,MACxE,CAGO,cAAOve,EAAWC,EAAoBa,EAAWb,GAC7C,WAAI4B,GAAc7B,EAAIwR,QAAQvR,GAAaD,EAAIwR,QAAQ1Q,GAClE,CAEAyzB,cACI,OAAO,IAAIk0D,GAAa7pF,KAAKmtG,YAAYlkG,IAAKjJ,KAAKotG,UAAUnkG,IACjE,EAGJhG,GAAcqE,UAAUuuB,SAAU,EAElC/xB,GAAU6nB,OAAO,OAAQ1oB,IAEzB,MAAM4mF,GACFtoF,YAAmBH,EAAuBC,GAAvB,KAAA0zB,OAAA,EAAuB,KAAApV,KAAA,EACtC3f,KAAK+0B,OAAS3zB,EACdpB,KAAK2f,KAAOte,CAChB,CACA2B,IAAI5B,GACO,WAAIyoF,GAAazoF,EAAQ4B,IAAIhD,KAAK+0B,QAAS3zB,EAAQ4B,IAAIhD,KAAK2f,MACvE,CACA/M,QAAQxR,GACE,QAAcA,EAAIwR,QAAQ5S,KAAK+0B,QACjC7yB,EAAYd,EAAIwR,QAAQ5S,KAAK2f,MAE7B,MAA6C,OAA7C,EAAYnV,OAAOW,KAAK9H,KAAK0pG,WACc,OAA3C7qG,EAAUsI,OAAOW,KAAK9H,KAAK0pG,WAC3B1rG,EAAY0K,QAAU1K,EAAYmJ,OAAOtB,YACzChH,EAAU6J,QAAU7J,EAAUsI,OAAOtB,YACrCgjF,GAAY7qF,EAAaa,GAElB,IAAIe,GAAc5B,EAAaa,GAC9B4B,GAAUoyB,KAAKh0B,EAAW,EAC1C,EAGG,SAAS,GAAkBV,GAC1B,OAAQo1B,qBAAqB3zB,IAAuB,YACxD,MAAM7B,EAAsB,GAC5B,SAAMw1B,UAAU62E,aAAY,CAACpsG,EAAMa,KACzBd,EAAAA,KAAK0oF,GAAW7+E,KAAK/I,EAAKA,EAAMb,EAAKqI,SAAU,CAAEykC,MAAO,iBAAxD,IAEHm8C,GAAcv8E,OAAOvM,EAAM8P,IAAKlQ,EAC3C,CAEA,SAAS,IAA0BgO,MAAAA,EAAOC,IAAAA,IACtC,GAAI7N,EAAMyH,KAAO7H,EAAI6H,KAAOzH,EAAMyH,IAAMzH,EAAMyH,IAAM,EAAU,SAC9D,IAAI5H,EAAYG,EAAMyH,IAClB/G,EAAWd,EAAI6H,IACfpH,EAAQL,EAAM8N,MACX,QAAS,KAA6B,EAAMmC,MAAM5P,EAAQ,GAAKL,EAAMiJ,IAAI5I,IAA7DA,IAASR,KAC5B,IAAK,IAAII,EAAIL,EAAIkO,MAAO7N,GAAK,KAAwB,EAAI+P,OAAO/P,EAAI,GAAKL,EAAIsJ,MAAMjJ,IAAnDA,IAAKS,KAC9B,UAAaA,GAAY,YAAYiW,KAAK3W,EAAMyJ,KAAKpJ,GAAOsJ,KAAK9H,KAAK0pG,UACjF,CAEA,SAAS,IAA6B39F,MAAAA,EAAOC,IAAAA,IACrC,MACAnN,EAEJ,IAAK,IAAIL,EAAIL,EAAM8N,MAAOzN,EAAI,EAAGA,IAAK,CAC5B,QAAOL,EAAMyJ,KAAKpJ,GACpB,GAAgC,SAAhC,EAAKsJ,KAAK9H,KAAK0pG,WAA2D,gBAAhCtrG,EAAK0J,KAAK9H,KAAK0pG,UAAgC,CAClE1rG,EAAAA,EACvB,KACJ,CACJ,CAEA,IAAK,IAAIQ,EAAIT,EAAIkO,MAAOzN,EAAI,EAAGA,IAAK,CAC1B,QAAOT,EAAI6J,KAAKpJ,GAClB,GAAgC,SAAhC,EAAKsJ,KAAK9H,KAAK0pG,WAA2D,gBAAhCtrG,EAAK0J,KAAK9H,KAAK0pG,UAAgC,CACpE7qG,EAAAA,EACrB,KACJ,CACJ,CAEO,WAAyBA,GAA2C,IAArBd,EAAIuO,YAC9D,CAEmC,cAAoBvO,EAA6BC,GAChF,MAAMa,GAAa,MAAO00B,UACtB/0B,GAAAA,GAAaL,GAAO8P,IACxB,IAAI7P,EAAWK,EACf,GAAII,aAAegjF,KAAkBpjF,EAAOI,EAAI+I,KAAKE,KAAK9H,KAAK0pG,YACvD,GAAQ,QAARjrG,GAA0B,eAARA,EAClBL,EAAYwB,GAAc8K,OAAOlM,EAAKK,EAAIuG,WAAI,GAC/B,OAAR3G,EAAe,CACtB,MAAMc,EAAQf,EAAI+Q,QAAQ1Q,EAAIuG,KAAO,GACzBhH,EAAAA,GAAc6rG,aAAa1qG,EAAOA,EAAK,UAC3CvB,EAAyB,CAC3B,QAAMqB,GAAS0C,IAAIlD,EAAI+I,MACzBpI,EAAQX,EAAIuG,KAAO,EACjBvF,EAAMN,EAAII,IAAIJ,EAAIy8B,MAAQz8B,EAAI48B,OAAS,GACvCl9B,EAAWO,EAAQK,EACzBzB,EAAYwB,GAAc8K,OAAOlM,EAAKgB,EAAQ,EAAGP,EACrD,OACOJ,aAAewmF,IAAiBsP,GAAwB91F,GAC/DT,EAAYinF,GAAc36E,OAAOlM,EAAKK,EAAIuG,MACnCvG,aAAewmF,IAAiB4U,GAA2Bp7F,KACtDT,EAAAA,GAAcsM,OAAOlM,EAAKK,EAAIkN,MAAM1E,QAASxI,EAAIkN,MAAM3E,QAEnE,WAAmB,MAAKjJ,EAAM2rB,KAAK0J,aAAap1B,GAC7CL,CACX,CC1VA,SAAS,GAAaI,EAAkBJ,GAC9B,QAAYI,EAAIwgB,aAAa,iBAC7B9f,EAASb,GAAa,eAAe8W,KAAK9W,GAAaA,EAAUmW,MAAM,KAAKxU,KAAKlB,GAAMsW,OAAOtW,KAAM,KACpGD,EAAUuW,OAAO5W,EAAIwgB,aAAa,YAAc,GAChDvgB,EAAS,CACXurG,QAAAA,EACAC,QAAS70F,OAAO5W,EAAIwgB,aAAa,YAAc,GAC/CkrF,SAAUhrG,GAAUA,EAAOsF,QAAU3F,EAAUK,EAAS,MAE5D,IAAK,MAAMJ,KAAQV,EAAY,CACrB,QAASA,EAAWU,GAAM4rG,WAC1B7qG,EAAQD,GAAUA,EAAOpB,GAClB,MAATqB,IAAepB,EAAOK,GAA+Be,EAC7D,CACO,QACX,CAEA,SAAS,GAAarB,EAAYJ,GAC9B,MAAMC,EAAiC,CAAC,EACX,GAAzBG,EAAKjB,MAAMysG,UAAuB3rG,EAAAA,QAAaG,EAAKjB,MAAMysG,SACjC,GAAzBxrG,EAAKjB,MAAM0sG,UAAuB5rG,EAAAA,QAAaG,EAAKjB,MAAM0sG,SAC1DzrG,EAAKjB,MAAM2sG,WAAa7rG,EAAM,iBAAmBG,EAAKjB,MAAM2sG,SAAY/pG,KAAK,MACjF,IAAK,MAAMjB,KAAQd,EAAY,CACrB,QAASA,EAAWc,GAAMyrG,WAC5B9rG,GAAeA,EAAAA,EAAKtB,MAAM2B,GAAOb,EACzC,CACO,QACX,CAEA,SAAS,GAAsBG,GACrB,MAAAJ,EAAoBI,EAAQosG,gBAAkB,CAAC,EAC/CvsG,EAAqC,CACvC2rG,QAAS,CAAExzF,QAAS,GACpByzF,QAAS,CAAEzzF,QAAS,GACpB0zF,SAAU,CAAE1zF,QAAS,OAEzB,IAAK,MAAM/X,KAAQL,EAAYC,EAAUI,GAAQ,CAAE+X,QAASpY,EAAWK,GAAM+X,SAC7E,MAAMtX,EAAab,EA2CZ,MAzCiF,CACpFke,MAAO,CACHlY,QAAS,aACT0lG,UAAW,QACXl+F,WAAW,EACXmL,MAAOxY,EAAQqsG,WACftwF,SAAU,CAAC,CAAErB,IAAK,UAClBiL,QACI,MAAO,CAAC,QAAS,CAAC,QAAS,GAC/B,GAEJ2mF,UAAW,CACPzmG,QAAS,+BACT0lG,UAAW,MACXxvF,SAAU,CAAC,CAAErB,IAAK,OAClBiL,QACW,OAAC,KAAM,EAClB,GAEJ4mF,WAAY,CACR1mG,QAAS7F,EAAQwsG,YACjBztG,MAAO2B,EACP6qG,UAAW,OACXl+F,WAAW,EACX0O,SAAU,CAAC,CAAErB,IAAK,KAAMgB,SAAWzb,GAAQulF,GAAavlF,EAAoBL,KAC5E+lB,MAAM1lB,GACF,MAAO,CAAC,KAAMwlF,GAAaxlF,EAAML,GAAa,EAClD,GAEJ6sG,aAAc,CACV5mG,QAAS7F,EAAQwsG,YACjBztG,MAAO2B,EACP6qG,UAAW,cACXl+F,WAAW,EACX0O,SAAU,CAAC,CAAErB,IAAK,KAAMgB,SAAWzb,GAAQulF,GAAavlF,EAAoBL,KAC5E+lB,MAAM1lB,GACF,MAAO,CAAC,KAAMwlF,GAAaxlF,EAAML,GAAa,EAClD,GAKZ,CAEO,SAAS,GAAeI,GACvB,MAASA,EAAOkR,OAAOw7F,eAC3B,IAAK9sG,EAAQ,CACAA,EAAAA,EAAOsR,OAAOw7F,eAAoB,CAAC,EACjC,eAAQ1sG,EAAOwL,MAAO,CAC7B,MAAM9K,EAAOV,EAAOwL,MAAM3L,GACtBQ,EAAOK,MAAAA,OAAAA,EAAAA,EAAMmB,KAAK0pG,UAClBlrG,IAAMT,EAAOS,GAAQK,EAC7B,CACJ,CACO,QACX,CAEO,MAAM0iF,GAAS0S,GAAsB,CACxCuW,WAAY,QACZG,YAAa,YACbJ,eAAgB,CACZO,UAAW,CACP30F,QAAS,OACTk0F,WAAalsG,GAASA,EAAoB2a,MAAMiyF,WAAa,OAC7DT,WAAY,CAACnsG,EAAOJ,KACVA,EAAAA,MAAW,eAAeI,GAAS,QAAnC,MCrGf,SAAS,GAAWA,GACvB,IAAK,IAAIJ,EAAII,EAAK8N,MAAQ,EAAGlO,EAAI,EAAGA,IAChC,GAA2C,OAAvCI,EAAKyJ,KAAK7J,GAAG+J,KAAK9H,KAAK0pG,UAA8B,SAAK9hG,KAAK,GAAG2H,QAAQpR,EAAKgQ,OAAOpQ,EAAI,GAEtG,CAWO,SAAS,GAAaI,GACzB,MAA0C,OAAtCA,EAAKgJ,OAAOW,KAAK9H,KAAK0pG,UAA8BvrG,EAAKoP,UACtD,IACX,CAEO,SAAS,GAAgBpP,GACrB,SAAKyJ,KAAK,GAAG2H,QAAQpR,EAAKyH,IAAOzH,EAAKoP,UAAmBlH,SACpE,CAEO,SAAS,GAAYlI,EAAiBJ,GACzC,OAAOI,EAAG8N,OAASlO,EAAGkO,OAAS9N,EAAGyH,KAAO7H,EAAGsJ,OAAO,IAAMlJ,EAAGyH,KAAO7H,EAAGqJ,KAAK,EAC/E,CAEyB,cAAmBrJ,EAAcC,GAChD,QAAQG,EAAKkJ,OAAO,GAEpBjJ,EAAQiB,GADK0C,IAAI5D,EAAKyJ,MAAM,IAChB0hG,SAASnrG,EAAKyH,IAAM/G,EAAOd,EAAMC,GAC5C,OAAS,MAAT,EAAgB,KAAOG,EAAKyJ,KAAK,GAAG2H,QAAQ1Q,EAAQT,EAC/D,CAE2B,cAAcL,EAAcC,GACnD,MAAMa,EAAkC,CAAC,EACzC,IAAK,MAAML,KAAQL,EAAOU,EAAOL,GAAQL,EAAMK,GAC/C,SAAOT,GAAQC,EACRa,CACX,CAE8B,cAAcd,EAAaC,EAAI,GACzD,MAAMa,EAAS8B,GAAQxC,EAAO,UAAWA,EAAMwrG,QAAa3rG,GAC5D,GAAIa,EAAOgrG,SAAa,CACpB,MAAMrrG,EAASK,EAAOgrG,SACfhrG,EAAAA,SAAcL,EAAOiG,QACrBjG,EAAAA,OAAOT,EAAKC,GACdQ,EAAOwa,MAAM5a,GAAMA,EAAI,MAAIS,EAAOgrG,SAAc,KACzD,CACO,QACX,CAEO,SAAS,GAAU1rG,GAChB,QAAQA,EAAMo1B,UAAU/B,MAC9B,IAAK,IAAIxzB,EAAID,EAAMkO,MAAOjO,EAAI,EAAGA,IAAK,GAA4C,OAAxCD,EAAM6J,KAAK5J,GAAG8J,KAAK9H,KAAK0pG,UAA8B,SACzF,QACX,CAEO,SAAS,GAAcvrG,GAC1B,MAAMJ,EAAMI,EAAMo1B,UAClB,OAAIx1B,aAAe6B,GACR7B,EAAI+rG,YAAYlkG,IAAM7H,EAAIgsG,UAAUnkG,IAAM7H,EAAI+rG,YAAc/rG,EAAIgsG,UAC/DhsG,EAAsB6J,MAA8D,QAArD7J,EAAsB6J,KAAKE,KAAK9H,KAAK0pG,UACrE3rG,EAAIwzB,QAER0wD,GAAWlkF,EAAIyzB,QAAUsnE,GAAS/6F,EAAIyzB,MACjD,CAEA,SAAS,GAASrzB,GACL,UAAQA,EAAKoP,UAAWvP,EAAMG,EAAKyH,IAAK7H,EAAOA,EAAQA,EAAMqK,WAAYpK,IAAO,CAC/E,QAAOD,EAAM+J,KAAK9H,KAAK0pG,UACzB,GAAQ,QAAR,GAA0B,eAAR7qG,EAA8B,SAAKoP,IAAIsB,QAAQvR,EACzE,CACS,UAASG,EAAKqP,WAAYxP,EAAMG,EAAKyH,IAAK7H,EAAQA,EAASA,EAAOmK,UAAWlK,IAAO,CACnF,QAAOD,EAAO+J,KAAK9H,KAAK0pG,UAC1B,GAAQ,QAAR,GAA0B,eAAR7qG,EAAuB,OAAOV,EAAK8P,IAAIsB,QAAQvR,EAAMD,EAAOsI,SACtF,CAEJ,CAE2B,cAActI,EAAaC,EAAI,GACtD,MAAMa,EAAS8B,GAAQxC,EAAO,UAAWA,EAAMwrG,QAAa3rG,GAC5D,GAAIa,EAAOgrG,SAAa,CACpB,MAAMrrG,EAASK,EAAOgrG,SACfhrG,EAAAA,SAAcL,EAAOiG,QACnB,UAAI,EAAGrG,EAAIJ,EAAGI,IAAYI,EAAAA,OAAOT,EAAK,EAAG,EACtD,CACO,QACX,CAE+B,cAAeA,EAAaC,GACvD,MAAMa,EAAayE,GAAevF,EAAM+J,KAAKyB,QAAQyhG,YACrD,IAAK,IAAIxsG,EAAM,EAAGA,EAAML,EAAIg+B,OAAQ39B,IAAO,CACvC,MAAMJ,EAAMD,EAAIwB,IAAI3B,EAAMQ,EAAML,EAAI69B,OACpC,GAAKj+B,EAAMoS,OAAO/R,GAAc0J,MAAQjJ,EAAmB,QAC/D,CACO,QACX,CCpGO,MAAMk7F,GACR57F,GACD,CAACJ,EAAOC,KACA,IAACuC,GAAUxC,GACJ,SAEL,MAAEyzB,MAAAA,GAAUzzB,EAAMw1B,UAClB/0B,EAAMK,EAAMuP,QACZhQ,EAAKL,EAAM+rB,GAAGsC,YAAY5tB,EAAKA,EAAKL,EAAKiV,iBAC5C,OAAAhV,EAAAo1B,aAAa/yB,GAAUoyB,KAAKz0B,EAAG6P,IAAIsB,QAAQ/Q,GAAM,IACzCR,MAAAA,GAAAA,EAAAA,EAAGw3B,mBACP,CAFJ,ECQJ,SAAS,GAAar3B,GACzB,MAAMJ,EAAMI,EAAMo1B,UACdv1B,EAAO2jF,GAAcxjF,GACnBU,EAAQb,EAAK4J,MAAM,GACrBpJ,EAAaR,EAAKqJ,OAAO,GACzBjJ,EAAMiB,GAAS0C,IAAIlD,GACnB,IAAAJ,EACJ,OACWA,EADPV,aAAe6B,GACRnB,EAAI8qG,YAAYxrG,EAAI+rG,YAAYlkG,IAAMpH,EAAYT,EAAIgsG,UAAUnkG,IAAMpH,GACrEJ,EAAIgrG,SAASprG,EAAK4H,IAAMpH,GACpCC,EAAKwsG,WAAazsG,EAClBC,EAAKkB,IAAMvB,EACXK,EAAKyd,MAAQrd,EACNJ,CACX,CAGO,SAAS,GAAUN,GAAmBwB,IAAAA,EAAKsrG,WAAAA,EAAY/uF,MAAAA,GAAe1d,GAIrE,MAA2BA,EAAM,GAAK,EAAI,EAC1Cw7F,GAAej8F,EAAKc,EAAOL,EAAMJ,KAAYA,EAAmB,GAAPI,GAAYA,GAAOT,EAAIi+B,MAAQ,KAAO,GAEnG,IAAK,IAAIv9B,EAAM,EAAGA,EAAMV,EAAIo+B,OAAQ19B,IAAO,CACjC,QAAQA,EAAMV,EAAIi+B,MAAQx9B,EAE5B,KAAM,GAAKA,EAAMT,EAAIi+B,OAASj+B,EAAI4B,IAAIJ,EAAQ,IAAMxB,EAAI4B,IAAIJ,GAAQ,CACpE,MAAMC,EAAMzB,EAAI4B,IAAIJ,GAChBM,EAAOhB,EAAMsR,OAAO3Q,GACxBrB,EAAG+tB,cAAc/tB,EAAGqpB,QAAQ7nB,IAAI3B,EAAawB,GAAM,KAAMo1F,GAAW/0F,EAAK3C,MAAOsB,EAAMT,EAAIsrG,SAAS7pG,KAE5Ff,GAAAA,EAAKvB,MAAM0sG,QAAa,MAC5B,CACG,QAAS7rG,EAAI4B,IAAIJ,EAASnB,GAC1ByB,EACW,MAAbzB,EAAoBkF,GAAezE,EAAMiJ,KAAKyB,QAAQq2F,KAAQ/gG,EAAMsR,OAAO3Q,GAAiBsI,KAC1F7I,EAAMlB,EAAI0rG,WAAWhrG,EAAKD,EAAKK,GAClCV,EAAAA,OAAOA,EAAGqpB,QAAQ7nB,IAAI3B,EAAaiB,GAAMY,EAAKuT,gBACrD,CACJ,CACO,QACX,CAIa,SAA2B,CAACjV,EAAOJ,KACxC,IAACwC,GAAUpC,GAAe,SAC9B,GAAIJ,EAAU,CACJ,QAAOqE,GAAajE,GAC1BJ,EAAS8pF,GAAU1pF,EAAM2rB,GAAI9rB,EAAMA,EAAKs9B,MAC5C,CACO,UAKE4vE,GAA0B,CAAC/sG,EAAOJ,KACvC,IAACwC,GAAUpC,GAAe,SAC9B,GAAIJ,EAAU,CACJ,QAAOqE,GAAajE,GAC1BJ,EAAS8pF,GAAU1pF,EAAM2rB,GAAI9rB,EAAMA,EAAKu9B,OAC5C,CACO,UAGJ,SAAS,GAAap9B,GAAmBwB,IAAAA,EAAKuc,MAAAA,EAAO+uF,WAAAA,GAAoBzsG,GAItE,QAAWL,EAAGqpB,QAAQN,KAAK/iB,OACjC,IAAK,IAAI1F,EAAM,EAAGA,EAAMV,EAAIo+B,QAAU,CAClC,MAAM58B,EAAQd,EAAMV,EAAIi+B,MAAQx9B,EAC5BgB,EAAMzB,EAAI4B,IAAIJ,GACdM,EAAO7B,EAAMmS,OAAO3Q,GAExB,GAAKhB,EAAM,GAAKT,EAAI4B,IAAIJ,EAAQ,IAAMC,GAAShB,EAAMT,EAAIi+B,MAAQ,GAAKj+B,EAAI4B,IAAIJ,EAAQ,IAAMC,EACxFrB,EAAG+tB,cACC/tB,EAAGqpB,QAAQ/iB,MAAMrG,GAAUuB,IAAId,EAAaW,GAC5C,KACAiC,GAAc5B,EAAK3C,MAAOsB,EAAMT,EAAIsrG,SAAS7pG,SAE9C,CACG,QAAQrB,EAAGqpB,QAAQ/iB,MAAMrG,GAAUuB,IAAId,EAAaW,GAC1DrB,EAAGsyB,OAAOxxB,EAAOA,EAAQY,EAAKwG,SAClC,CACA5H,GAAOoB,EAAK3C,MAAM0sG,OACtB,CACJ,CAIa,SAAwB,CAACzrG,EAAOJ,KACrC,IAACwC,GAAUpC,GAAe,SAC9B,GAAIJ,EAAU,CACV,MAAMC,EAAOoE,GAAajE,GACtBU,EAAKV,EAAM2rB,GACf,GAAiB,GAAb9rB,EAAKs9B,MAAat9B,EAAKu9B,OAASv9B,EAAK2B,IAAIq8B,MAAc,SAC3D,IAAK,IAAIx9B,EAAIR,EAAKu9B,MAAQ,EACT84D,GAAAA,EAAIr2F,EAAMQ,GACnBA,GAAKR,EAAKs9B,KAFa98B,IAGtBR,EAAAA,MAASA,EAAKitG,WAAapsG,EAAGoP,IAAIkC,OAAOnS,EAAKitG,WAAa,GAAKpsG,EAAGoP,IACxEjQ,EAAK2B,IAAMN,GAAS0C,IAAI/D,EAAKke,OAEjCne,EAASc,EACb,CACO,UA8DJ,SAAS,GAAUV,GAAmBwB,IAAAA,EAAKsrG,WAAAA,EAAY/uF,MAAAA,GAAe1d,GAIzE,IAAIJ,EAAS,EACJ,QAAAoB,EAAI,EAAGA,EAAIhB,EAAKgB,IAAepB,GAAAA,EAAM2H,MAAMvG,GAAG6G,SACvD,MAAM5H,EAAUL,EAASS,EAAMkH,MAAMvH,GAAK6H,SAEpC9G,EAAUpB,EAAGqpB,QAAQN,KAAK/iB,OAChChG,EAAGsyB,OAAOryB,EAASJ,EAAYS,EAAUT,GAEhC,UAAM,EAAG6B,EAAQrB,EAAMT,EAAIi+B,MAAOx8B,EAAMzB,EAAIi+B,MAAOx8B,IAAOK,IAAS,CAClE,QAAM9B,EAAI4B,IAAIE,GACpB,GAAIrB,EAAM,GAAKS,GAAOlB,EAAI4B,IAAIE,EAAQ9B,EAAIi+B,OAAQ,CAE9C,MAAM77B,EAAStB,EAAMsR,OAAOlR,GAAc/B,MAC1CiB,EAAG+tB,cACC/tB,EAAGqpB,QAAQ/iB,MAAMlF,GAASI,IAAIV,EAAMjB,GACpC,KACA2C,GAAQR,EAAO,UAAWA,EAAMypG,QAAa,IAEjDpqG,GAAOW,EAAMwpG,QAAa,CAC9B,SAAWnrG,EAAMT,EAAIi+B,OAAS/8B,GAAOlB,EAAI4B,IAAIE,EAAQ9B,EAAIi+B,OAAQ,CAEvD,QAAOn9B,EAAMsR,OAAOlR,GACpBF,EAAOoB,EAAK2H,KAAK4C,OAAO/J,GAAQR,EAAKjD,MAAO,UAAWiD,EAAKjD,MAAM0sG,QAAa,GAAIzpG,EAAK6D,SACxFpF,EAASb,EAAI0rG,WAAWjrG,EAAM,EAAGgB,EAAKX,GACzCV,EAAAA,OAAOA,EAAGqpB,QAAQ/iB,MAAMlF,GAASI,IAAI3B,EAAaY,GAASG,GACvDS,GAAAA,EAAKtC,MAAMysG,QAAa,CACnC,CACJ,CACJ,CAIa,SAAqB,CAACxrG,EAAOJ,KAClC,IAACwC,GAAUpC,GAAe,SAC9B,GAAIJ,EAAU,CACV,MAAMC,EAAOoE,GAAajE,GACtBU,EAAKV,EAAM2rB,GACf,GAAgB,GAAZ9rB,EAAKwgB,KAAYxgB,EAAKy9B,QAAUz9B,EAAK2B,IAAIw8B,OAAe,SAC5D,IAAK,IAAI39B,EAAIR,EAAKy9B,OAAS,EACb0vE,GAAAA,EAAIntG,EAAMQ,GAChBA,GAAKR,EAAKwgB,IAFchgB,IAGvBR,EAAAA,MAAQA,EAAKitG,WAAcpsG,EAAGoP,IAAIkC,OAAOnS,EAAKitG,WAAa,GAAcpsG,EAAGoP,IACjFjQ,EAAK2B,IAAMN,GAAS0C,IAAI/D,EAAKke,OAEjCne,EAASc,EACb,CACO,UAmKJ,SAAS,GAAeV,EAAcJ,GAClC,OAACC,EAAOa,KACP,IAAC0B,GAAUvC,GAAe,SACxB,QAAQ2jF,GAAc3jF,GACvB,KAAMuP,UAAmBrQ,MAAMiB,KAAUJ,EAAc,SAC5D,GAAIc,EAAU,CACV,MAAMT,EAAKJ,EAAM8rB,GACb9rB,EAAMu1B,qBAAqB3zB,GAC3B5B,EAAMu1B,UAAU62E,aAAY,CAAC3rG,EAAMc,KAC3Bd,EAAKvB,MAAMiB,KAAUJ,GAAUK,EAAAA,cAAcmB,EAAK,KAAMoB,GAAQlC,EAAKvB,MAAOiB,EAAMJ,GAAlF,IAEJK,EAAAA,cAAcI,EAAMoH,IAAK,KAAMjF,GAASnC,EAAM+O,UAAmBrQ,MAAOiB,EAAMJ,IACtFc,EAAST,EACb,CACO,SAEf,CAoFA,SAAS,GAAaD,EAAoBJ,GACtC,GAAIA,EAAM,EAAG,CACT,MAAMC,EAASG,EAAMqP,WACjB,KAAe,SAAM5H,IAAM5H,EAAOqI,SACtC,IAAK,IAAIxH,EAAMV,EAAMuK,OAAO,GAAK,EAAGlK,EAASL,EAAMgQ,SAAUtP,GAAO,EAAGA,IAAO,CAC1E,MAAMT,EAAUD,EAAMyJ,MAAM,GAAG7B,MAAMlH,GACrC,GAAIT,EAAQyH,WAAmB,SAAS,EAAKzH,EAAQ8J,UAAmB7B,SACxE7H,GAAUJ,EAAQiI,QACtB,MACG,CACH,GAAIlI,EAAMuK,QAAUvK,EAAMgJ,OAAOtB,WAAa,EAAU,SAAMD,IAAOzH,EAAMoP,UAAmBlH,SACxF,MAAArI,EAAQG,EAAMyJ,MAAM,GAC1B,IAAK,IAAI/I,EAAMV,EAAM+P,YAAY,GAAI1P,EAAWL,EAAMiQ,QAASvP,EAAMb,EAAM6H,WAAYhH,IAAO,CACpF,QAAUb,EAAM+H,MAAMlH,GAC5B,GAAIT,EAAQyH,WAAY,OAAOrH,EAAW,EAC1CA,GAAYJ,EAAQiI,QACxB,CACJ,CAEJ,CAIO,SAAS,GAAalI,GAClB,OAACJ,EAAOC,KACP,IAACuC,GAAUxC,GAAe,SAC9B,MAAMc,EAAOusG,GAAazpB,GAAc5jF,GAAuBI,GAC/D,GAAY,MAARU,EAAqB,SACzB,GAAIb,EAAU,CACV,MAAMQ,EAAQT,EAAMkQ,IAAIsB,QAAQ1Q,GAChCb,EAASD,EAAM+rB,GAAG0J,aAAa6xD,GAAc9yD,QAAQ/zB,EAAOs7F,GAAgBt7F,KAASg3B,iBACzF,CACO,SAEf,CAGa,SAAuB,CAACr3B,EAAOJ,KAClC,QAAOI,EAAMo1B,UAAUhC,QAC7B,IAAK,IAAI1yB,EAAIb,EAAKiO,MAAOpN,EAAI,EAAGA,IAE5B,GAAmC,SAA/Bb,EADc4J,KAAK/I,GACdiJ,KAAK9H,KAAK0pG,UACX,UAAU3rG,EAASI,EAAM2rB,GAAG2G,OAAOzyB,EAAKmQ,OAAOtP,GAAIb,EAAKoQ,MAAMvP,IAAI22B,mBAC/D,EAGR,UCthBEssD,GAAa3jF,GACtBioF,IAAgBroF,GAAyC,UAAhCA,EAAK+J,KAAK9H,KAAK0pG,WAAxCtjB,CAAkEjoF,GAEzDktG,GACRltG,GACAJ,IACS,MAAAC,EAAQ8jF,GAAU/jF,GACxB,IAAKC,EAAc,OACnB,MAAMa,EAAMQ,GAAS0C,IAAI/D,EAAM4J,MAC/B,OAAI,EAAc,GAAKzJ,GAAeU,EAAIm9B,WAA1C,EAIOn9B,EACF2qG,YAAY,CAAEluE,KAAMn9B,EAAao9B,MAAOp9B,EAAc,EAAGqgB,IAAK,EAAGid,OAAQ58B,EAAIs9B,SAC7Ex8B,KAAKnB,IACF,MAAMJ,EAAOJ,EAAM4J,KAAKuI,OAAO3R,GAC/B,IAAKJ,EAAM,OACL,QAAQI,EAAMR,EAAMqJ,MACnB,OACHzB,IAAKnH,EACL4I,MAAO5I,EAAQ,EACfmJ,KAAAA,EAHG,IAMV0jC,QAAQ9sC,GAAyB,MAALA,GAZjC,EAeK8sG,GACRntG,GACAJ,IACS,MAAAC,EAAQ8jF,GAAU/jF,GACxB,IAAKC,EAAc,OACnB,MAAMa,EAAMQ,GAAS0C,IAAI/D,EAAM4J,MAC/B,OAAI,EAAW,GAAKzJ,GAAYU,EAAIs9B,YAApC,EAIOt9B,EACF2qG,YAAY,CAAEluE,KAAM,EAAGC,MAAO18B,EAAIm9B,MAAOxd,IAAKrgB,EAAUs9B,OAAQt9B,EAAW,IAC3EwB,KAAKnB,IACF,MAAMJ,EAAOJ,EAAM4J,KAAKuI,OAAO3R,GAC/B,IAAKJ,EAAM,OACL,QAAQI,EAAMR,EAAMqJ,MACnB,OACHzB,IAAKnH,EACL4I,MAAO5I,EAAQ,EACfmJ,KAAAA,EAHG,IAMV0jC,QAAQ9sC,GAAyB,MAALA,GAZjC,EAeKqoF,GAAc,CAAC1oF,EAAgBJ,EAAY,EAAGC,EAAY,KAC7D,MAAE4hG,KAAM/gG,EAAWmsG,YAAaxsG,EAAa2nG,IAAK/nG,EAAU8d,MAAAA,GAAU5Y,GAAenF,GAErFoB,EAAQE,MAAMzB,GACfqf,KAAK,GACL1d,KAAI,IAAMd,EAAUuU,cAAc,QAEjC5T,EAAcC,MAAMzB,GACrBqf,KAAK,GACL1d,KAAI,IAAMnB,EAAY4U,cAAc,QAEnCvT,EAAOJ,MAAM1B,GACdsf,KAAK,GACL1d,KAAI,CAACV,EAAGkB,IAAM/B,EAASsM,OAAO,KAAY,IAANvK,EAAUX,EAAcD,KAE1D,SAAMmL,OAAO,KAAM7K,EAAnB,EAGEwoF,GAAclqF,GAAyBJ,GAAmBC,IAC7D,QAAQ8jF,GAAU9jF,EAAGu1B,WACrB/0B,EAA0B,QAATL,EACvB,GAAIU,EAAO,CACP,MAAMT,EAAMiB,GAAS0C,IAAIlD,EAAM+I,MAG/B,GAAI7J,GAAS,GAAKA,GAAAA,EAA0BK,EAAI+9B,OAAS/9B,EAAI49B,OAAQ,CACjE,MAAMv9B,EAAWL,EAAIqrG,WACjBjrG,EAAiBT,EAAQK,EAAI+9B,OAAS,EACtC39B,EAAiBJ,EAAI49B,MAAQ,EAAIj+B,EACjCc,EAAM+I,MAEJrI,EAAYvB,EAAGiQ,IAAIsB,QAAQ1Q,EAAMwI,MAAQ5I,GAEzCe,EAAsBhB,EAAiBoB,GAAcqqG,aAAerqG,GAAcuqG,aAElFtqG,EAAYzB,EAAIqrG,WAAWjrG,EAAiBT,EAAQ,EAAGS,EAAiB,EAAIT,EAAOc,EAAM+I,MACzF3I,EAAajB,EAAGiQ,IAAIsB,QAAQ1Q,EAAMwI,MAAQxH,GAChD,OAAOunF,GAAQppF,EAAGw1B,aAAah0B,EAAoBD,EAAWN,IAClE,CACJ,CACO,OAAAjB,CAAA,EAGEutG,GAAmBptG,IACtB,QAAQ2jF,GAAU3jF,GACxB,IAAKJ,EACD,OAEJ,MAAMC,EAAMqB,GAAS0C,IAAIhE,EAAM6J,MAOxB,SANW4hG,YAAY,CAC1BluE,KAAM,EACNC,MAAOv9B,EAAIg+B,MACXxd,IAAK,EACLid,OAAQz9B,EAAIm+B,SAEHx8B,KAAKnB,IACd,MAAMJ,EAAOL,EAAM6J,KAAKuI,OAAO3R,GACzBC,EAAMD,EAAUT,EAAMsJ,MAC5B,MAAO,CAAEzB,IAAAA,EAAKyB,MAAO5I,EAAM,EAAGmJ,KAAAA,EAA9B,GAHG,EAOE9K,GAAeqB,IAClB,QAAQotG,GAAgBptG,EAAGo1B,WAC7B,MAASx1B,EAAM,GAAI,CACnB,MAAMC,EAAaG,EAAG8P,IAAIsB,QAAQxR,EAAM,GAAG6H,KACrC/G,EAAOd,EAAMA,EAAMoG,OAAS,GAClC,GAAItF,EAAM,CACN,MAAML,EAAYL,EAAG8P,IAAIsB,QAAQ1Q,EAAK+G,KAC/B,OAAAgiD,GAAQzpD,EAAGq1B,aAAa,IAAI5zB,GAAcpB,EAAWR,IAChE,CACJ,CACO,UAGJ,SAAS,GAAoBG,GAAmBwB,IAAAA,EAAKsrG,WAAAA,EAAY/uF,MAAAA,GAAyB1d,GACvF,QAASiB,MAAMjB,GAChB6e,KAAK,GACL/d,QAAO,CAACO,EAAKZ,EAAGkB,IACNN,EAAMhB,EAAMkH,MAAM5F,GAAGkG,UAC7BrI,IAEC4hG,KAAMnhG,EAAU0nG,IAAK5mG,GAAY+D,GAAezE,EAAMiJ,KAAKyB,QAE7D/J,EAAQC,MAAM1B,EAAIi+B,OACnB3e,KAAK,GACL1d,KAAI,CAACE,EAAGZ,KACL,MAAMkB,EAAYtB,EAAMsR,OAAOpS,EAAI4B,IAAIV,IACvC,OAAOR,EAAS2U,cAAc,CAAE03F,UAAW3qG,MAAAA,OAAAA,EAAAA,EAAWjD,MAAM4tG,WAA5D,IAGR,SAAGl/F,OAAOxN,EAAQmB,EAAQmL,OAAO,KAAMlL,IAChCrB,CACX,CC1JO,MAAMoD,GAAoBpD,GAAoCA,EAAKyX,MAAM2d,UAEnEi4E,GAAsBrtG,IAC/B,MAAMJ,EAAMsB,GAAS0C,IAAI5D,EAAU2rG,YAAYliG,MAAM,IAC/C5J,EAAQG,EAAU2rG,YAAYziG,OAAO,GACrCxI,EAAQd,EAAIyrG,YAAY,CAC1BluE,KAAM,EACNC,MAAOx9B,EAAIi+B,MACXxd,IAAK,EACLid,OAAQ,IAENj9B,EAAgBT,EAAIyrG,YACtBzrG,EAAIwrG,YAAYprG,EAAU2rG,YAAYlkG,IAAM5H,EAAOG,EAAU4rG,UAAUnkG,IAAM5H,IAGjF,IAAK,IAAII,EAAI,EAAGK,EAAQI,EAAMsF,OAAQ/F,EAAIK,EAAOL,IAC7C,IAAmD,IAA/CI,EAAc6U,QAAQxU,EAAMT,IACrB,SAGR,UAGEqtG,GAAgB,CAACttG,EAA+BJ,KACzD2R,OAAO7N,OAAO1D,GAAS+G,SAASlH,I,OACZ,WAAKszD,cAAL,WAAevzD,IAEtBC,EAAAA,EAAE0oC,UAAUljB,IAAI,QAGpBxlB,EAAAA,EAAE0oC,UAAUliC,OAAO,OAAnB,GANT,ECISknG,GAAqDvtG,I,oBAAS,OACvE,CAAC,GAAoB,CACjBskF,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,mBAAxC,IAAsD4X,IACzD00E,QAAS,IAAMwH,GACf7jC,QAAUzxD,IAAU0B,GAAiB1B,GAAMqqG,kBAE/C,CAAC,GAAqB,CAClBznB,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,oBAAxC,IAAuD4X,IAC1D00E,QAAS,IAAMud,GACf55C,QAAUzxD,IAAU0B,GAAiB1B,GAAMqqG,kBAE/C,CAAC,GAAmB,CAChBznB,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,iBAAxC,IAAoD4X,IACvD00E,QAAS,IAAM,CAAC9tF,EAAOZ,KACf,IAACsB,GAAUV,GAAe,SAC9B,GAAIZ,EAAU,CACJ,QAAOmD,GAAavC,GAC1BZ,EAAS4kF,GAAoBhkF,EAAMiqB,GAAI3pB,EAAMA,EAAKqe,KACtD,CACO,UAEX8yC,QAAUzxD,IACL0B,GAAiB1B,GAAMmqG,kBAC0B,iBAAlDzoG,GAAiB1B,GAAM2xB,MAAMrqB,OAAOW,KAAKxJ,MAEjD,CAAC,GAAsB,CACnBmkF,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,mBAAxC,IAAsD4X,IACzD00E,QAAS,IAAM,CAAC9tF,EAAOZ,KACf,IAACsB,GAAUV,GAAe,SAC9B,GAAIZ,EAAU,CACJ,QAAOmD,GAAavC,GAC1BZ,EAAS4kF,GAAoBhkF,EAAMiqB,GAAI3pB,EAAMA,EAAKs7B,QACtD,CACO,UAEX61B,QAAUzxD,IAAU0B,GAAiB1B,GAAMmqG,kBAE/C,CAAC,GAAmB,CAChBvnB,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,mBAAxC,IAAsD4X,IACzD00E,QAAS,IAAMr1D,GAAY,YAAa,QACxCg5B,QAAUzxD,IAAU0B,GAAiB1B,GAAMqqG,kBAE/C,CAAC,GAAqB,CAClBznB,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,qBAAxC,IAAwD4X,IAC3D00E,QAAS,IAAMr1D,GAAY,YAAa,UACxCg5B,QAAUzxD,IAAU0B,GAAiB1B,GAAMqqG,kBAE/C,CAAC,GAAoB,CACjBznB,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,oBAAxC,IAAuD4X,IAC1D00E,QAAS,IAAMr1D,GAAY,YAAa,SACxCg5B,QAAUzxD,IAAU0B,GAAiB1B,GAAMqqG,kBAE/C,CAAC,GAAgB,CACbznB,EAAG,WAAI1gF,IAAImB,IAAiBnB,IAAIV,GAAW,gBAAxC,IAAmD4X,IACtD00E,QAAS,CAAC9tF,EAAGZ,KACH,QAAYsC,GAAiBtC,GAC7BF,EAAQoB,EAAU+pG,iBAClBtrG,EAAQuB,EAAU6pG,iBACxB,OAAIjrG,GAASH,EACF+sG,GAGP5sG,EACO6sG,GAGJC,EARP,EAUJv6C,QAAUzxD,IACA,QAAY0B,GAAiB1B,GAC/B,UAAUmqG,oBACN/qG,EAAUirG,kBAGPsB,GAAmBvsG,GAJ1B,GAtE2D,EC3B9D6sG,GAAoB,CAAC3tG,EAAkBJ,KAC1C,MAAEw1B,UAAAA,GAAcp1B,EAAKyX,MACrB/W,EAAQb,EAAUksG,iBAClB1rG,EAAQR,EAAUgsG,iBAExB1V,GAAsBn2F,EAAMJ,GAAK,CAACK,EAAUK,EAAQc,KAChD,MAAMC,EAAUzB,EAAIioD,cACpB,IAAKxmD,EACD,MAAMumF,IAEV,IAAIlmF,EAAOrB,EAELJ,EAASk9B,KAAO/7B,EAAO+7B,KAAO78B,EAAOu9B,MAAQ,EAAI,EADjD59B,EAASk9B,KAAO/7B,EAAO+7B,MAAiB,EAAAU,MAAQv9B,EAAOu9B,OAAS,EAEhE,QAAM59B,EAASogB,IAAMjf,EAAOif,IAAM/f,EAAO09B,QAAkBt9B,EAAAA,GAAK,GAAK,GAAKW,EAAQ89B,UAExF,OAAIz9B,EAAO,IACAA,EAAAA,GAEJ,CAACZ,EAAKY,EAHb,GAVJ,ECXQ,YACD1B,EAAAA,KAAAA,OACDA,EAAAA,IAAAA,MACEA,EAAAA,MAAAA,QAHAA,GAAA,CAAAA,IAAAA,CAAAA,GCCL,MAAM4tG,GAAc,CAAC5tG,GAA8BgkF,IAAAA,EAAKC,aAAAA,MACrD,QAAUqD,GAAWtnF,GACrBK,EAASL,EAAa4D,IAAIghF,GAAW,UACrC3kF,EAAYD,EAAa4D,IAAIghF,GAAW,aAE9C;;;;;;;;;;;;;;;;;;;;;0CAqBsClkF,EAAQ,YAAa;;;;;0CAKrBA,EAAQ,YAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqCpDd,CAAAA;;;;;;;;;yBAScS;;UAEfL,EAAa4D,IAAI2jF,QAAa;UAC9BvnF,EAAa4D,IAAIujF,QAAa;;;sBAGlBzmF,EAAQ;;;;qBAITA,EAAQ,QAAS;;;;;;;;oCAQFA,EAAQ,YAAa;;;;yBAIhCA,EAAQ;;;;;;;;yBAQRT;;8BAEKS,EAAQ;;;;;;;;KAxGlC,ECAEmtG,GAAsB7tG,IAChB,eACCgD,GAAW8qG,KACL,gCAEN9qG,GAAW+qG,IACL,+BAEN/qG,GAAWgrG,MAAA,QAEL,4BATP,EAiBL,SAAS,GAAahuG,EAAUJ,EAAeC,EAAiBa,EAAQ,GAC3E,OAAO4nF,GAAW5iD,OAAO9lC,EAAK6H,IAAM,GAAIpH,I,MAC9B,QAAMomB,SAASR,cAAc,OACnC,SAAIsiB,UAAUljB,IAAIwoF,GAAmBhuG,IACjCA,IAAQmD,GAAWgrG,OACf/tG,EAAAA,YAAY,WAAI2D,IAAImB,IAAiBnB,IAAIV,GAAW,gBAAxC,IAAmD4X,KAEnE7a,EAAAA,iBAAiB,aAAcmB,IAC/B,GAAKf,EAGG,OADRe,EAAEu4C,iBACM95C,GAAA,KACCmD,GAAWgrG,MAEZ,YADA3tG,EAAK2xC,SAASrzC,GAAY0B,EAAKoX,MAAMkU,KAEzC,KACK3oB,GAAW8qG,KAEZ,YADKztG,EAAAA,SAAS6pF,GAAW,MAAXA,CAAkBxpF,EAAlBwpF,CAAyB7pF,EAAKoX,MAAMkU,KAEtD,KACK3oB,GAAW+qG,IAEZ,YADK1tG,EAAAA,SAAS6pF,GAAW,MAAXA,CAAkBxpF,EAAlBwpF,CAAyB7pF,EAAKoX,MAAMkU,KAVlD,IAeL1rB,CAvBP,GAyBR,CCpCa,SAAiB,CAACD,EAAUJ,IAC9B,IAAI2kF,GAAO,CACdx+E,IAAK,IAAIrD,GAAU,qBACnB62B,MAAO,CACHklB,YAAc5+C,IACV,MAAMa,EAA4B,GAC5BL,EAAY6sG,GAAiB,EAAjBA,CAAoBrtG,EAAMu1B,WAC5C,IAAK/0B,EAAkB,YACvB,MAAMJ,EAAWktG,GAAc,EAAdA,CAAiBttG,EAAMu1B,WACxC,IAAKn1B,EAAiB,YAEtB,MAAOK,GAAWD,EAElB,SAAYkG,KAAKw+E,GAAa/kF,EAAKM,EAAoB0C,GAAWgrG,QACxD3tG,EAAAA,SAAQ,CAACe,EAAMC,KACrBX,EAAY6F,KAAKw+E,GAAa/kF,EAAKoB,EAAM4B,GAAW8qG,KAAMzsG,GAA1D,IAEKpB,EAAAA,SAAQ,CAACmB,EAAMC,KACpBX,EAAY6F,KAAKw+E,GAAa/kF,EAAKoB,EAAM4B,GAAW+qG,IAAK1sG,GAAzD,IAGGynF,GAAcv8E,OAAO1M,EAAMiQ,IAAKpP,EARvC,GAWRy9B,KAAOt+B,I,MACH,MAAMa,EAAQ6Q,OAAO23E,YAAY33E,OAAOu2E,QAAQylB,GAAcvtG,IAAMmtC,QAAO,EAAE,CAAE9rC,KAAsB,MAAXA,EAAMijF,KAC1FjkF,EAAUomB,SAASR,cAAc,OACjCrmB,EAAAA,aAAa6kF,SAAQ,KACjB,QAAQ7kF,EAAM8vF,UAAUhuF,GAAYksG,GAAYhuG,EAAMy2F,aAAc30F,KACtEL,GACQhB,EAAAA,UAAUglB,IAAIhkB,EADtB,IAIAhB,EAAAA,UAAUglB,IAAI,gBAAiB,QAChC9T,OAAAA,OAAO7Q,GAAOqG,SAAQ,EAAGu9E,EAAAA,KAAQjkF,EAAQmkB,YAAYnjB,KACjD,WAAAyZ,IAAI6E,aAAJ,EAAgB6E,YAAYnkB,GAEjC,QAAYgB,KACTxB,IACLwB,EAAE2uF,kBACF3uF,EAAEs4C,iBACFpoC,OAAO7N,OAAOhD,GAAOqG,SAAQ,EAAGu9E,EAAAA,EAAGkL,QAAAA,MAC3B9tF,EAAE8hB,SAASniB,EAAEwN,SACb/N,EAAQO,EAAGxB,EAAXiB,CAAuBjB,EAAW4X,MAAO5X,EAAWmyC,SAAUnyC,EAD9D,IAJJ,EAUFS,EAAO,KACDD,EAAAA,UAAUglB,IAAI,OAAd,EAGJ,SAAA3f,iBAAiB,YAAazF,GAE/B,CACHoE,OAAQ,CAAChD,EAAMK,KACX,MAAMZ,EAAQO,EAAKoW,OAEf,iBAAW3H,IAAIpF,GAAG5J,EAAMgP,OAAQpO,EAAU0zB,UAAU1qB,GAAG5J,EAAMs0B,aAEzCt0B,EAAMs0B,qBAAqB3zB,IAE1BJ,EAAK0uC,UAK9Bu9D,GAAc5sG,EAAOW,GACjBkQ,OAAO7N,OAAOhD,GAAOsnF,OAAM,EAAG1D,EAAAA,KAAQ1jF,EAAE2nC,UAAU/kB,SAAS,UACtDljB,KAGDD,EAAAA,UAAUgG,OAAO,QACzBsnG,GAAkBtsG,EAAMhB,KAVfC,IASD,EAGZ4lC,QAAS,KACG7lC,EAAAA,oBAAoB,YAAaJ,GACzCI,EAAQgG,QADA,EAxBR,IC/Dd4nG,GAAoBjuG,GACI,cAAnBA,EAAK2J,KAAKxJ,MAA0C,IAAlBH,EAAKkI,SAG5CgmG,GAAeluG,GACS,cAAnBA,EAAK2J,KAAKxJ,KAGfguG,GAAY,IAAIzrG,GAAU,8BAEnB0rG,GAAsB,IACxB,IAAI7pB,GAAO,CACdx+E,IAAKooG,GACL50E,MAAO,CACHotB,gBAAiB,CACbjL,iBAAiB17C,GACP,MAAEyX,MAAAA,EAAOu6B,SAAAA,GAAahyC,GACpB2rB,GAAAA,EAAIyJ,UAAAA,GAAcx1B,GAClBgO,MAAAA,GAAUvN,EACd,OAAAguG,GAAA,QAAkBjsG,GAAUxC,IAAUS,EAAUgK,OAAS4jG,GAAiBhuG,EAAM+I,SAChFnJ,EAASa,EAAGu2B,WAAW,IAAUh3B,EAAMiJ,WAEpC,CACX,EACA4yC,eAAe97C,GACL,MAAEyX,MAAAA,EAAOu6B,SAAAA,GAAahyC,GACpB2rB,GAAAA,EAAIyJ,UAAAA,GAAcx1B,GAClBgO,MAAAA,GAAUvN,EAElB,OACIo5F,GAAQ/+D,QACRt4B,GAAUxC,IACVS,EAAUgK,OACV6jG,GAAYjuG,EAAM+I,SAClB/I,EAAM+I,OAAO0I,YAAY48F,WAAW,MAE3BzuG,EAAAA,EAAGyyB,OAAOryB,EAAMiJ,QAASjJ,EAAMiJ,QAAU,KAE/C,CACX,MCzCT,MAAMqlG,GAMTxuG,YAAmBH,EAAmBC,GAAnB,KAAA4J,KAAA,EAAmB,KAAA+kG,aAAA,EAClChwG,KAAKiL,KAAO7J,EACZpB,KAAKgwG,aAAe3uG,EACf,KAAAib,IAAM2L,SAASR,cAAc,OAClCznB,KAAKsc,IAAIszB,UAAY,eACrB5vC,KAAKuf,MAAQvf,KAAKsc,IAAI0J,YAAYiC,SAASR,cAAc,UACzDznB,KAAK+2C,SAAW/2C,KAAKuf,MAAMyG,YAAYiC,SAASR,cAAc,aAC9D++D,GAAcplF,EAAMpB,KAAK+2C,SAAU/2C,KAAKuf,MAAOle,GAC/CrB,KAAKgkB,WAAahkB,KAAKuf,MAAMyG,YAAYiC,SAASR,cAAc,SACpE,CAEA5hB,OAAOzE,GACC,SAAK+J,MAAQnL,KAAKiL,KAAKE,OAC3BnL,KAAKiL,KAAO7J,EACZolF,GAAcplF,EAAMpB,KAAK+2C,SAAU/2C,KAAKuf,MAAOvf,KAAKgwG,eAC7C,EACX,CAEAzmE,eAAenoC,GACJ,MAAe,cAAf,EAAO+J,OAAgC/J,EAAAA,QAAUpB,KAAKuf,OAASvf,KAAK+2C,SAAS/xB,SAAS5jB,EAAOiP,QACxG,EAGG,SAAS,GACZ7O,EACAJ,EACAC,EACAa,EACAL,EACAJ,G,MAEI,MAAa,EACbmB,GAAa,EACbC,EAAUzB,EAASqK,WACvB,MAAMvI,EAAM1B,EAAKiK,WACjB,IAAK,IAAIjI,EAAI,EAAGpB,EAAM,EAAGoB,EAAIN,EAAIgG,WAAY1F,IAAK,CAC9C,MAAQwpG,QAAAA,EAASE,SAAAA,GAAahqG,EAAIkG,MAAM5F,GAAGjD,MAC3C,IAAK,IAAIyI,EAAI,EAAGA,EAAI/G,EAAS+G,IAAK5G,IAAO,CACrC,MAAMsB,EAAW7B,GAAeO,EAAMX,EAAgBe,GAAYA,EAASwG,GACrEpC,EAAWlD,EAAWA,EAAW,KAAO,GAC9C5B,GAAc4B,GAAYxB,EACrBwB,IAAuBd,GAAAA,GAC5BC,GAGSA,EAAwBsZ,MAAMkjB,OAASz4B,IAAW/D,EAAwBsZ,MAAMkjB,MAAQz4B,GAC7F/D,EAAUA,EAAQwhB,aAHlBjjB,EAAS4kB,YAAYiC,SAASR,cAAc,QAAQtL,MAAMkjB,MAAQz4B,CAK1E,CACJ,CAEA,KAAO/D,GAAS,CACZ,MAAMW,EAAQX,EAAQwhB,YACd,WAAAlD,aAAA,EAAYyrB,YAAY/pC,GACtBA,EAAAA,CACd,CAEID,GACMvB,EAAAA,MAAMg+B,MAAQv9B,EAAa,KACjCT,EAAM8a,MAAM8zF,SAAW,KAEvB5uG,EAAM8a,MAAMkjB,MAAQ,GACdh+B,EAAAA,MAAM4uG,SAAWnuG,EAAa,KAE5C,CCjEa,SAAM,IAAIoC,GAAU,uBAEF,aAC3BgsG,YAAAA,EAAc,EACdF,aAAAA,EAAe,GACfG,KAAAA,EAAOJ,GACPK,oBAAAA,GAAsB,GACtB,CAAC,GA0CM,OAzCQ,IAAIrqB,GAAO,CACtBx+E,IAAAA,GACA0R,MAAO,CACHggB,KAAmBx3B,EAAGK,GAElB,OAAA9B,KAAKqD,KAAK03B,MAAOyP,UAAW7jC,GAAe7E,EAAM8K,QAAQ2S,MAAM5d,MAASiB,GACpE,IAAIvB,EAAKuB,EAAMxB,GACZ,IAAIwpF,IAAa,GAAG,EAC/B,EACAz+D,MAAM1qB,EAAIK,GACC,SAAKqqB,MAAM1qB,EACtB,GAEJs5B,MAAO,CACHmoB,WAAWzhD,GAEP,OAAO2+E,GADiBnlD,SAASx5B,GACd4uG,cAAgB,EAAI,CAAEliE,MAAO,sBAAqB,CACzE,EAEAga,gBAAiB,CACbmoD,UAAU7uG,EAAMK,GACIyuG,GAAAA,EAAMzuG,EAAqBN,EAAaU,EAC5D,EACAsuG,WAAW/uG,GACPgvG,GAAiBhvG,EACrB,EACAi6C,UAAUj6C,EAAMK,GACI4uG,GAAAA,EAAM5uG,EAAqBV,EAC/C,GAGJ6+C,YAAYx+C,GACF,QAAc2+E,GAAInlD,SAASx5B,GACjC,OAAIK,EAAYuuG,cAAgB,EAAUM,GAAkBlvG,EAAOK,EAAYuuG,cAExE,IACX,EAEA7lE,UAAW,CAAC,IAIxB,CAEA,MAAMogD,GACFrpF,YAAmBH,EAA6BC,GAA7B,KAAAgvG,aAAA,EAA6B,KAAA9xD,SAAA,EAC5Cv+C,KAAKqwG,aAAejvG,EACpBpB,KAAKu+C,SAAWl9C,CACpB,CAEA8qB,MAAyB/qB,GAErB,IAAIC,EAAQrB,KACN,QAASoB,EAAGu3B,QAAQynD,IACtB,MAA8B,MAApBl+E,EAAO0uG,UAAmB,OAAO,IAAIhmB,GAAY1oF,EAAO0uG,UAAW,MAC7E,WAAiC,IAAvB1uG,EAAO2uG,YAA2B,OAAO,IAAIjmB,GAAYvpF,EAAMgvG,aAAcnuG,EAAO2uG,aAClG,GAAIxvG,EAAMgvG,cAAgB,GAAKjvG,EAAGkzB,WAAY,CAC1C,IAAIzyB,EAAST,EAAGypB,QAAQ7nB,IAAI3B,EAAMgvG,cAAe,GAC5CzpB,GAAaxlF,EAAGkQ,IAAIsB,QAAQ/Q,MAAmBA,EAAAA,GACpDR,EAAQ,IAAIupF,GAAY/oF,EAAQR,EAAMk9C,SAC1C,CACO,QACX,EAGJ,SAAS,GAAgB/8C,EAAkBJ,EAAmBC,EAAqBa,GAC/E,MAAML,EAAcu+E,GAAInlD,SAASz5B,EAAKyX,OAElC,IAACpX,EAAY08C,SAAU,CACjB,QAASuyD,GAAc1vG,EAAMiP,QACnC,IAAIvO,GAAQ,EACZ,GAAIL,EAAQ,CACR,MAAQk9B,KAAAA,EAAMC,MAAAA,GAAUn9B,EAAO09B,wBAC3B/9B,EAAMu4C,QAAU/2C,GAAQvB,EAAoBS,EAAAA,GAASN,EAAMJ,EAAO,QAC7DyB,EAAQzB,EAAMu4C,SAAWt4C,IAAoBS,EAAAA,GAASN,EAAMJ,EAAO,SAChF,CAEI,MAAQS,EAAYwuG,aAAc,CAC9B,IAACnuG,IAAiC,IAAVJ,EAAa,CACrC,MAAMc,EAAQpB,EAAKyX,MAAM3H,IAAIsB,QAAQ9Q,GAC/Be,EAAQD,EAAMqI,MAAM,GACtB/H,EAAMR,GAAS0C,IAAIvC,GACnBP,EAAQM,EAAM8H,OAAO,GAIrB,GAAAxH,EAFYwpG,SAAS9pG,EAAMqG,IAAM3G,GAASM,EAAMgO,UAAWrQ,MAAMysG,QAAa,GAEvE9pG,EAAIm8B,MAAQ,EACnB,MAER,CAEAisD,GAAa9pF,EAAMM,EACvB,CACJ,CACJ,CAEA,SAAS,GAAiBN,GACtB,MAAMJ,EAAcg/E,GAAInlD,SAASz5B,EAAKyX,OAClC7X,EAAYivG,cAAgB,IAAMjvG,EAAYm9C,UAAU+sC,GAAa9pF,GAAO,EACpF,CAEA,SAAS,GAAgBA,EAAkBJ,EAAmBC,GAC1D,MAAMa,EAAck+E,GAAInlD,SAASz5B,EAAKyX,OAClC,IAA6B,GAA7B,EAAYo3F,cAAsBnuG,EAAYq8C,SAAiB,SAEnE,MAAM18C,EAAOL,EAAKyX,MAAM3H,IAAIkC,OAAOtR,EAAYmuG,cACzC5uG,EAAQsvG,GAAgBvvG,EAAMU,EAAYmuG,aAAcxuG,EAAKtB,OAOnE,SAAS,EAAOsC,GACLqlB,OAAAA,oBAAoB,UAAWpmB,GAC/BomB,OAAAA,oBAAoB,YAAatlB,GACxC,MAAMM,EAAck9E,GAAInlD,SAASz5B,EAAKyX,OAClC/V,EAAYq7C,WACMyyD,GAAAA,EAAM9tG,EAAYmtG,aAAcvU,GAAa54F,EAAYq7C,SAAU17C,EAAOxB,IACvFG,EAAAA,SAASA,EAAKyX,MAAMkU,GAAGuL,QAAQ0nD,GAAK,CAAEywB,YAAa,QAEhE,CACA,SAAS,EAAKhuG,GACV,IAAKA,EAAMouG,MAAO,OAAOnvG,EAAOe,GAChC,MAAMK,EAAck9E,GAAInlD,SAASz5B,EAAKyX,OAChC3W,EAAUw5F,GAAa54F,EAAYq7C,SAAU17C,EAAOxB,GAC1D6vG,GAAmB1vG,EAAM0B,EAAYmtG,aAAc/tG,EAASjB,EAChE,CAEO,OAtBPG,EAAKgyC,SACDhyC,EAAKyX,MAAMkU,GAAGuL,QAAQ0nD,GAAK,CACvBywB,YAAa,CAAErwE,OAAQp/B,EAAMu4C,QAASw3D,WAAY1vG,MAoBnD,OAAAyF,iBAAiB,UAAWpF,GAC5BomB,OAAAA,iBAAiB,YAAatlB,GACrCxB,EAAM+5C,kBACC,CACX,CAEA,SAAS,GAAgB35C,EAAkBJ,GAAmB4rG,QAAAA,EAASE,SAAAA,IACnE,MAAMrrG,EAAQK,GAAYA,EAASA,EAASsF,OAAS,GACjD,KAAc,SACZ,QAAMhG,EAAK+nD,SAASnoD,GAEtB,MAAWK,EADEwJ,KAAKmZ,WAAW3iB,EAAIyL,QACjBoyB,YAChBz8B,EAAQxB,EACR,KACS,UAAI,EAAG6B,EAAI7B,EAAS6B,IACrBhB,EAASgB,KACTN,GAAYV,EAASgB,GACrBL,KAEZ,OAAOD,EAAWC,CACtB,CAEA,SAAS,GAAcrB,GACnB,KAAOA,GAA6B,MAAnBA,EAAO4f,UAAuC,MAAnB5f,EAAO4f,UAC/C5f,EAASA,EAAOuoC,UAAU/kB,SAAS,eAAiB,KAAQxjB,EAAO2f,WAChE,QACX,CAEA,SAAS,GAAS3f,EAAkBJ,EAAmBC,GAC7C,QAAQG,EAAKqiC,YAAY,CAAElF,KAAMv9B,EAAMu4C,QAAS93B,IAAKzgB,EAAMw4C,UACjE,IAAK13C,EAAc,SACnB,MAAQ+G,IAAAA,GAAQ/G,EACVT,EAAQ6jF,GAAW9jF,EAAKyX,MAAM3H,IAAIsB,QAAQ/Q,IAChD,IAAKJ,EAAc,SACnB,GAAY,SAARJ,EAAiB,OAAOI,EAAMwH,IAC5B,QAAMvG,GAAS0C,IAAI3D,EAAMwJ,MAAM,IACjCrI,EAAQnB,EAAMiJ,OAAO,GACnB7H,EAAQf,EAAIkB,IAAI0T,QAAQjV,EAAMwH,IAAMrG,GACnC,OAAAC,EAAQf,EAAIu9B,OAAS,GAAK,EAAIz8B,EAASd,EAAIkB,IAAIH,EAAQ,EAClE,CAEA,SAAS,GAAarB,EAAkDJ,EAAmBC,GACjF,QAASD,EAAMu4C,QAAUn4C,EAASg/B,OACxC,OAAOt2B,KAAKS,IAAItJ,EAAcG,EAAS2vG,WAAajvG,EACxD,CAEA,SAAS,GAAaV,EAAkBJ,GAC/BI,EAAAA,SAASA,EAAKyX,MAAMkU,GAAGuL,QAAQ0nD,GAAK,CAAEwwB,UAAWxvG,IAC1D,CAEA,SAAS,GAAkBI,EAAkBJ,EAAcC,GACvD,MAAMa,EAAQV,EAAKyX,MAAM3H,IAAIsB,QAAQxR,GAC/BS,EAAQK,EAAM+I,MAAM,GACtBxJ,EAAMiB,GAAS0C,IAAIvD,GACnBC,EAAQI,EAAMwI,OAAO,GACnB9H,EAAMnB,EAAIirG,SAASxqG,EAAM+G,IAAMnH,GAAUI,EAAM0O,UAAmBrQ,MAAMysG,QAAa,EACrFnqG,EAAKrB,EAAKyX,MAAMkU,GACtB,IAAK,IAAIjqB,EAAM,EAAGA,EAAMzB,EAAI+9B,OAAQt8B,IAAO,CACjC,QAAWA,EAAMzB,EAAI49B,MAAQz8B,EAEnC,GAAIM,GAAOzB,EAAIuB,IAAIV,IAAab,EAAIuB,IAAIV,EAAWb,EAAI49B,OAAQ,SACzD,QAAM59B,EAAIuB,IAAIV,IACd/B,MAAAA,GAAUsB,EAAM2R,OAAOhQ,GACvBvB,EAA4B,GAApBG,EAAM4qG,QAAkB,EAAIpqG,EAAMnB,EAAIirG,SAASlpG,GAC7D,GAAIpB,EAAM8qG,UAAe9qG,EAAM8qG,SAAYjrG,IAAUZ,EAAO,SACtD,QAAWe,EAAM8qG,SAAc9qG,EAAM8qG,SAAYplG,QAAUspG,GAAOhvG,EAAM4qG,SAC9ExqG,EAASP,GAASZ,EACfwB,EAAAA,cAAcf,EAAQ0B,EAAK,KAAMQ,GAAQ5B,EAAO,WAAYI,GACnE,CACIK,EAAGyxB,YAAY9yB,EAAKgyC,SAAS3wC,EACrC,CAEA,SAAS,GAAmBrB,EAAkBJ,EAAcC,EAAea,GACvE,MAAML,EAAQL,EAAKyX,MAAM3H,IAAIsB,QAAQxR,GAC/BK,EAAQI,EAAMoJ,MAAM,GACtBnJ,EAAQD,EAAM6I,OAAO,GACnB9H,EAAMF,GAAS0C,IAAI3D,GAAOirG,SAAS7qG,EAAMoH,IAAMnH,GAAUD,EAAM+O,UAAmBrQ,MAAMysG,QAAa,EAC3G,IAAInqG,EAAMrB,EAAK+nD,SAAS1nD,EAAM6I,OAAO,IAAIO,KACzC,KAAuB,SAAhBpI,EAAIue,UAAqBve,EAAMA,EAAIse,WAC1CqlE,GAAc/kF,EAAOoB,EAAI4I,WAAmC5I,EAAyBX,EAAcU,EAAKvB,EAC5G,CAEA,SAAS,GAAOG,GACZ,MAAMJ,EAAS,GACN,UAAI,EAAGC,EAAIG,EAAGH,IAAKD,EAAO2G,KAAK,GACjC,QACX,CAEA,SAAS,GAAkBvG,EAAoBJ,GAC3C,MAAMC,EAAc,GACda,EAAQV,EAAM8P,IAAIsB,QAAQxR,GAC1BS,EAAQK,EAAM+I,MAAM,GACtBxJ,EAAMiB,GAAS0C,IAAIvD,GACnBC,EAAQI,EAAMwI,OAAO,GACnB9H,EAAMnB,EAAIirG,SAASxqG,EAAM+G,IAAMnH,GAAUI,EAAM0O,UAAmBrQ,MAAMysG,QAC9E,IAAK,IAAInqG,EAAM,EAAGA,EAAMpB,EAAI+9B,OAAQ38B,IAAO,CACvC,MAAMK,EAAQN,EAAMC,EAAMpB,EAAI49B,MAAQ,EAKjC,OAAO59B,EAAI49B,OAAS59B,EAAIuB,IAAIE,IAAUzB,EAAIuB,IAAIE,EAAQ,MAC/C,GAD+CL,GAC1CpB,EAAIuB,IAAIE,EAAQ,IAAMzB,EAAIuB,IAAIE,EAAQ,EAAIzB,EAAI49B,QAC7D,CACQ,QAAU59B,EAAIuB,IAAIE,GAClBM,EAAM1B,EAAQQ,EAAWT,EAAM2R,OAAOlR,GAAkBoH,SAAW,EACnEtH,EAAM6lB,SAASR,cAAc,OACnCrlB,EAAIwtC,UAAY,uBAChBvuC,EAAY0G,KAAK+hF,GAAW5iD,OAAO1jC,EAAKpB,GAC5C,CACJ,CACA,OAAOkoF,GAAcv8E,OAAOvM,EAAM8P,IAAKjQ,EAC3C,CCnPO,SAAS,GAAYG,GACxB,IAAKA,EAAMkH,KAAa,YACpB,IAAErB,QAAAA,EAAS+G,UAAAA,EAAWC,QAAAA,GAAY7M,EACtC,KAC0B,GAAtBJ,EAAQ8H,aACN7H,EAAY,GAAKa,EAAU,GAA6D,SAAtDd,EAAQqK,WAAoBN,KAAK9H,KAAK0pG,YAE1E1rG,IACAa,IACAd,EAAWA,EAAQqK,WAAoBpE,QAE3C,MAAMxF,EAAQT,EAAQqK,WAClBhK,EAAOI,EAAMsJ,KAAK9H,KAAK0pG,UACrBjrG,EAASD,EAAMsJ,KAAKyB,OACtBhK,EAAO,GACX,GAAY,OAARnB,EACA,IAAK,IAAIoB,EAAI,EAAGA,EAAIzB,EAAQ8H,WAAYrG,IAAK,CACzC,IAAIK,EAAQ9B,EAAQgI,MAAMvG,GAAGwE,QAC7B,MAAM/E,EAAOO,EAAI,EAAIqH,KAAKS,IAAI,EAAGtJ,EAAY,GACvCmC,EAAQX,EAAIzB,EAAQ8H,WAAa,EAAI,EAAIgB,KAAKS,IAAI,EAAGzI,EAAU,IACjE,GAAQsB,KAAeN,EAAAA,GAASyD,GAAe7E,GAAQ0nG,IAAK,IAAI7kB,GAAMzhF,EAAOZ,EAAMkB,IAAQ6D,SAC/FzE,EAAKmF,KAAK7E,EACd,SACe,QAARzB,GAA0B,eAARA,EAOlB,YANPmB,EAAKmF,KACD1G,GAAaa,EACPwkF,GAAS//E,GAAe7E,GAAQ0nG,IAAK,IAAI7kB,GAAMvjF,EAASC,EAAWa,IAAUmF,QAC7EjG,EAGH,CAEJ,UAAkBU,EAAQc,EACrC,CAMA,SAAS,GAAkBpB,EAAgBJ,GACvC,MAAMC,EAAmB,GACzB,IAAK,IAAIQ,EAAI,EAAGA,EAAIT,EAAKoG,OAAQ3F,IAAK,CAClC,MAAMJ,EAAML,EAAKS,GACjB,IAAK,IAAIC,EAAIL,EAAIyH,WAAa,EAAGpH,GAAK,EAAGA,IAAK,CAC1C,MAAQmrG,QAAAA,EAASD,QAAAA,GAAYvrG,EAAI2H,MAAMtH,GAAGvB,MAC1C,IAAK,IAAI2C,EAAIrB,EAAGqB,EAAIrB,EAAIe,EAASM,IAAY7B,EAAAA,IAAa,MAAM,GAAKwB,CACzE,CACJ,CACA,IAAIX,EAAQ,EACZ,IAAK,IAAIL,EAAI,EAAGA,EAAIR,EAAOmG,OAAQ3F,IAAKK,EAAQgI,KAAKS,IAAIzI,EAAOb,EAAOQ,IACvE,IAAK,IAAIA,EAAI,EAAGA,EAAIR,EAAOmG,OAAQ3F,IAE1B,GADDA,GAAKT,EAAKoG,QAAapG,EAAAA,KAAKmE,EAAAA,OAC3BlE,EAAOQ,GAAgBK,EAAO,CACzB,QAAQyE,GAAenF,GAAQyhG,KAAKxsF,gBACtC3U,EAAQ,GACZ,IAAK,IAAIc,EAAIvB,EAAOQ,GAAce,EAAIV,EAAOU,IAAKd,EAAMiG,KAAKtG,GAC7DL,EAAKS,GAAMT,EAAKS,GAAgB+G,OAAOrD,EAAAA,KAAczD,GACzD,CAEJ,MAAO,CAAE09B,OAAQp+B,EAAKoG,OAAQ63B,MAAAA,EAAOgyE,KAAAA,EACzC,CAEO,SAAS,GAAS7vG,EAAoBJ,GACnC,QAAOI,EAASiV,gBAEtB,OAAO,IADQ8lF,GAAUl7F,GAAM8N,QAAQ,EAAG9N,EAAKgG,QAAQqB,KAAMtH,GACnDkQ,GACd,CAKO,SAAS,IAAY+tB,MAAAA,EAAOG,OAAAA,EAAQ6xE,KAAAA,GAAWnvG,EAAkBL,GACpE,GAAIL,GAASU,EAAU,CACnB,MAAMT,EAAkB,GACpBK,EAAsB,GAC1B,IAAK,IAAIc,EAAM,EAAGA,EAAMvB,EAAKmG,OAAQ5E,IAAO,CACxC,MAAMC,EAAOxB,EAAKuB,GACdM,EAAQ,GACH,UAAMzB,EAAMmB,IAAQ,EAAGY,EAAI,EAAGlB,EAAMJ,EAAUsB,IAAK,CACxD,IAAIpB,EAAOS,EAAKuG,MAAM5F,EAAIX,EAAKqG,YAC3B5G,EAAMF,EAAK7B,MAAMysG,QAAa9qG,IAC9BE,EAAOA,EAAK+I,KAAK4C,OACbjJ,GAAc1C,EAAK7B,MAAO6B,EAAK7B,MAAMysG,QAAY1qG,EAAMF,EAAK7B,MAAMysG,QAAa9qG,GAC/EE,EAAKiF,UAEbnE,EAAM6E,KAAK3F,GACXE,GAAOF,EAAK7B,MAAMysG,QAClB,IAAK,IAAI/qG,EAAI,EAAGA,EAAIG,EAAK7B,MAAM0sG,QAAYhrG,IACvCR,EAAMmB,EAAMX,IAAM,EAAMW,EAAMX,IAAM,GAAKG,EAAK7B,MAAMysG,OAC5D,CACAlrG,EAAQiG,KAAKxC,EAAAA,KAAcrC,GAC/B,CACO7B,EAAAA,EACCG,EAAAA,CACZ,CAEA,GAAIJ,GAAUS,EAAW,CACrB,MAAMJ,EAAU,GAChB,IAAK,IAAIK,EAAM,EAAGc,EAAI,EAAGd,EAAMD,EAAWC,IAAOc,IAAK,CAClD,MAAMC,EAAQ,GACVK,EAAS7B,EAAKuB,EAAIxB,GACtB,IAAK,IAAIkB,EAAI,EAAGA,EAAIY,EAAOgG,WAAY5G,IAAK,CACpC,MAAOY,EAAOkG,MAAM9G,GACpBR,EAAM0B,EAAKjD,MAAM0sG,QAAaprG,IAC9B2B,EAAOA,EAAK2H,KAAK4C,OACb/J,GAAQR,EAAKjD,MAAO,UAAW2J,KAAKS,IAAI,EAAG9I,EAAY2B,EAAKjD,MAAM0sG,UAClEzpG,EAAK6D,UAEbxE,EAAMkF,KAAKvE,EACf,CACA/B,EAAQsG,KAAKxC,EAAAA,KAAc1C,GAC/B,CACOxB,EAAAA,EACED,EAAAA,CACb,CAEO,OAAEi+B,MAAAA,EAAOG,OAAAA,EAAQ6xE,KAAAA,EAC5B,CAIA,SAAS,GACL7vG,EACAJ,EACAC,EACAa,EACAL,EACAJ,EACAK,GAEA,MAAMc,EAASpB,EAAG8P,IAAInG,KAAKyB,OACvB/J,EAAQ8D,GAAe/D,GAC3B,IAAIM,EAAOZ,EACP,KAAQlB,EAAIi+B,MACZ,IAAK,IAAI77B,EAAM,EAAGpB,EAAS,EAAGoB,EAAMpC,EAAIo+B,OAAQh8B,IAAO,CAC7C,QAAUnC,EAAM+H,MAAM5F,GAC5BpB,GAAUH,EAAQyH,SAClB,MAAMlH,EAAQ,GACV,MAEAwG,EADqB,MAArB/G,EAAQsJ,WAAqBtJ,EAAQsJ,UAAUJ,MAAQtI,EAAMogG,KACvD//F,IAAUA,EAAQL,EAAMogG,KAAKxsF,iBAC5BnU,IAAcA,EAAYO,EAAMwrG,YAAY53F,iBACvD,IAAK,IAAI/S,EAAItC,EAAIi+B,MAAO37B,EAAI7B,EAAO6B,IAAKlB,EAAMuF,KAAKiB,GAChDxH,EAAAA,OAAOA,EAAGqpB,QAAQ/iB,MAAMhG,GAASkB,IAAIZ,EAAS,EAAIF,GAAQM,EACjE,CAEA,KAASpB,EAAIo+B,OAAQ,CACrB,MAAMh8B,EAAQ,GACd,IAAK,IAAIhB,EAAI,EAAGwG,GAAS,EAAIw2B,OAAS,GAAKp+B,EAAIi+B,MAAO78B,EAAI0H,KAAKS,IAAIvJ,EAAIi+B,MAAOx9B,GAAQW,IAAK,CACvF,MAAMkB,IACFlB,GAAKpB,EAAIi+B,QAAiBh+B,EAAMmS,OAAOpS,EAAI4B,IAAIgG,EAAQxG,IAAuB2I,MAAQtI,EAAMwrG,YAChG7qG,EAAMuE,KACFrE,EACMpB,IAAcA,EAAYO,EAAMwrG,YAAY53F,iBAC5CvT,IAAUA,EAAQL,EAAMogG,KAAKxsF,iBAE3C,CAEM,QAAW5T,EAAM2mG,IAAIz7F,OAAO,KAAMxI,EAAAA,KAAc/B,IAClDvB,EAAO,GACX,IAAK,IAAIO,EAAIpB,EAAIo+B,OAAQh9B,EAAIf,EAAQe,IAAKP,EAAK8F,KAAK3F,GACpDZ,EAAGyN,OAAOzN,EAAGqpB,QAAQ/iB,MAAMhG,GAASkB,IAAId,EAAQb,EAAMqI,SAAW,GAAIzH,EACzE,CACO,SAAYiB,IAAAA,EACvB,CAKA,SAAS,GACL1B,EACAJ,EACAC,EACAa,EACAL,EACAJ,EACAK,EACAc,GAEI,GAAO,GAAP,GAAYd,GAAOV,EAAIo+B,OAAe,SAC1C,IAAI38B,GAAQ,EACZ,IAAK,IAAIK,EAAMrB,EAAMqB,EAAMzB,EAAOyB,IAAO,CACrC,MAAMZ,EAAQR,EAAMV,EAAIi+B,MAAQn8B,EAC5BM,EAAMpC,EAAI4B,IAAIV,GAClB,GAAIlB,EAAI4B,IAAIV,EAAQlB,EAAIi+B,QAAU77B,EAAK,CAC3BX,GAAAA,EACF,QAAOxB,EAAMmS,OAAOhQ,IAClBqe,IAAK5f,EAAS08B,KAAMn8B,GAAapB,EAAIqrG,SAASjpG,GACtDhC,EAAG+tB,cACC/tB,EAAGqpB,QAAQ/iB,MAAMlF,GAASI,IAAIQ,EAAMtB,GACpC,KACA8B,GAAQ5B,EAAK7B,MAAO,UAAWuB,EAAMG,IAEtCT,EAAAA,OACCA,EAAGqpB,QAAQ/iB,MAAMlF,GAASI,IAAI5B,EAAI0rG,WAAWhrG,EAAKU,EAAUnB,IAC5De,EAAK+I,KAAKsL,cAAczS,GAAQ5B,EAAK7B,MAAO,UAAW0B,EAAUG,EAAK7B,MAAM0sG,QAAanrG,KAEtFoB,GAAAA,EAAK3C,MAAMysG,QAAa,CACnC,CACJ,CACO,QACX,CAKA,SAAS,GACLxrG,EACAJ,EACAC,EACAa,EACAL,EACAJ,EACAK,EACAc,GAEI,GAAQ,GAAR,GAAad,GAAQV,EAAIi+B,MAAc,SAC3C,IAAIx8B,GAAQ,EACZ,IAAK,IAAIK,EAAMrB,EAAKqB,EAAMzB,EAAQyB,IAAO,CACrC,MAAMZ,EAAQY,EAAM9B,EAAIi+B,MAAQv9B,EAC5B0B,EAAMpC,EAAI4B,IAAIV,GAClB,GAAIlB,EAAI4B,IAAIV,EAAQ,IAAMkB,EAAK,CACnBX,GAAAA,EACF,QAAOxB,EAAMmS,OAAOhQ,GACtBvB,EAAWb,EAAIsrG,SAASlpG,GACtBhB,EAAYhB,EAAGqpB,QAAQ/iB,MAAMlF,GAASI,IAAIQ,EAAMtB,GACtDV,EAAG+tB,cACC/sB,EACA,KACAsC,GAAc1C,EAAK7B,MAAOuB,EAAOG,EAAUG,EAAK7B,MAAMysG,SAAclrG,EAAOG,KAE/ET,EAAGyN,OACCzM,EAAYJ,EAAKsH,SACjBtH,EAAK+I,KAAKsL,cAAc3R,GAAc1C,EAAK7B,MAAO,EAAGuB,EAAOG,KAEzDiB,GAAAA,EAAK3C,MAAM0sG,QAAa,CACnC,CACJ,CACO,QACX,CAIO,SAAS,GACZzrG,EACAJ,EACAC,EACAa,EACAL,GAEA,IAAIJ,EAASJ,EAAaG,EAAM8P,IAAIkC,OAAOnS,EAAa,GAAKG,EAAM8P,IAC/DxP,EAAMY,GAAS0C,IAAI3D,GACjB,MAAEogB,IAAAA,EAAK8c,KAAAA,GAASz8B,EAChBgB,EAAQL,EAAOhB,EAAMw9B,MACvB/8B,EAASM,EAAMf,EAAM29B,OACnBh8B,EAAKhC,EAAM2rB,GACjB,IAAI/qB,EAAU,EACI,aACdX,EAASJ,EAAamC,EAAG8N,IAAIkC,OAAOnS,EAAa,GAAKmC,EAAG8N,IACnDxP,EAAAA,GAASsD,IAAI3D,GACTW,EAAAA,EAAGyoB,QAAQN,KAAK/iB,MAC9B,CAKI8pG,GAAU9tG,EAAI1B,EAAKL,EAAOJ,EAAY6B,EAAOZ,EAAQF,IAAiBH,IACtEmoF,GAAkB5mF,EAAI1B,EAAKL,EAAOJ,EAAYwB,EAAMK,EAAON,EAAKR,IAAiBH,IACjFmoF,GAAkB5mF,EAAI1B,EAAKL,EAAOJ,EAAYwB,EAAMK,EAAOZ,EAAQF,IAAiBH,IACpFgpF,GAAgBznF,EAAI1B,EAAKL,EAAOJ,EAAYuB,EAAKN,EAAQO,EAAMT,IAAiBH,IAChFgpF,GAAgBznF,EAAI1B,EAAKL,EAAOJ,EAAYuB,EAAKN,EAAQY,EAAOd,IAAiBH,IAErF,IAAK,IAAIO,EAAMI,EAAKJ,EAAMF,EAAQE,IAAO,CACrC,MAAMwG,EAAOlH,EAAIgrG,WAAWtqG,EAAKK,EAAMpB,GACnCiC,EAAK5B,EAAIgrG,WAAWtqG,EAAKU,EAAOzB,GACjC+B,EAAAA,QACCA,EAAGqnB,QAAQ/iB,MAAM1F,GAASY,IAAIgG,EAAO3H,GACrCmC,EAAGqnB,QAAQ/iB,MAAM1F,GAASY,IAAIU,EAAKrC,GACnC,IAAIsjF,GAAM9iF,EAAMwvG,KAAK7uG,EAAMI,GAAkB,EAAG,GAExD,CACOX,IACJuB,EAAAA,aACC,IAAIP,GACAO,EAAG8N,IAAIsB,QAAQvR,EAAaS,EAAIgrG,WAAWlqG,EAAKC,EAAMpB,IACtD+B,EAAG8N,IAAIsB,QAAQvR,EAAaS,EAAIgrG,WAAWxqG,EAAS,EAAGY,EAAQ,EAAGzB,MAG1EL,EAASoC,EACb,CCxSa,SAAe,IAAIU,GAAU,cAK1C,SAAS,GAAmB1C,EAAWJ,EAAWC,EAAgBa,GAC9D,MAAML,EAAUL,EAAI0H,WAChBzH,EAAUL,EAAI8H,WAClB9H,EAAO,IAAK,IAAIU,EAAI,EAAGc,EAAI,EAAGd,EAAIL,EAASK,IAAK,CACtC,QAAQV,EAAIgI,MAAMtH,GACf,UAAOc,EAAGN,EAAI4H,KAAKC,IAAItI,EAASC,EAAI,GAAIoB,EAAOZ,EAAGY,IACvD,GAAI1B,EAAI4H,MAAMlG,IAASL,EAAO,CAC1BD,EAAIM,EAAO,EACX7B,GAAUwB,EAAM6G,SAChB,SAAS,CACb,CAEJxH,EAAEW,EAAOxB,GACTuB,EAAQf,GAAWL,EAAI4H,MAAMxG,GAAG0G,WAAWzG,GAAQomF,GAAmBznF,EAAI4H,MAAMxG,GAAIC,EAAOxB,EAAS,EAAGa,GAClGW,EAAMwH,aAAa,EAAGxH,EAAMwE,QAAQqB,KAAMxG,EAAGb,EAAS,GAC3DA,GAAUwB,EAAM6G,QACpB,CACJ,CAQO,SAAS,GAAUlI,EAAoBJ,GACtC,IAAAC,EACE,QAAQ,CAACQ,EAAYJ,KACY,SAA/BI,EAAKsJ,KAAK9H,KAAK0pG,YAAyB1rG,EAAKkwG,GAAS/vG,EAAOK,EAAMJ,EAAKJ,GAAxE,EAER,OAAKD,EACIA,EAASkQ,KAAO9P,EAAM8P,KAAK23E,GAAmB7nF,EAASkQ,IAAK9P,EAAM8P,IAAK,EAAGpP,GAD9DV,EAAAA,IAAIoJ,YAAY1I,GAE9Bb,CACX,CAKyB,cAAoBD,EAAaC,EAAkBa,GAClE,QAAMQ,GAAS0C,IAAIhE,GACzB,IAAKS,EAAI2qG,SAAiB,SACrBtqG,IAAIA,EAAKV,EAAM2rB,IAIpB,MAAM1rB,EAAU,GAChB,IAAK,IAAIoB,EAAI,EAAGA,EAAIhB,EAAI29B,OAAQ38B,IAAKpB,EAAQsG,KAAK,GAClD,IAAK,IAAIlF,EAAI,EAAGA,EAAIhB,EAAI2qG,SAAShlG,OAAQ3E,IAAK,CACpC,QAAOhB,EAAI2qG,SAAS3pG,GACtB,GAAa,aAAb,EAAKsI,KAAqB,CAC1B,MAAM7I,EAAOlB,EAAMoS,OAAOtQ,EAAK+F,KAC/B,IAAK,IAAIzF,EAAI,EAAGA,EAAIlB,EAAK/B,MAAM0sG,QAAYzpG,IAAa/B,EAAAA,EAAK+nG,IAAMhmG,IAAMN,EAAKhB,EAC3EA,EAAAA,cACCA,EAAG2oB,QAAQ7nB,IAAI3B,EAAW,EAAI6B,EAAK+F,KACnC,KACAnE,GAAcxC,EAAK/B,MAAO+B,EAAK/B,MAAMysG,QAAa9pG,EAAKhB,EAAGgB,EAAKhB,GACnE,SACoB,WAAbgB,EAAKiI,KACJ1J,EAAAA,EAAK+nG,MAAQtmG,EAAKhB,OAAA,GACN,oBAAbgB,EAAKiI,KAA4B,CACxC,MAAM7I,EAAOlB,EAAMoS,OAAOtQ,EAAK+F,KAC/B/G,EAAGqtB,cACCrtB,EAAG2oB,QAAQ7nB,IAAI3B,EAAW,EAAI6B,EAAK+F,KACnC,KACAjF,GAAQ1B,EAAK/B,MAAO,UAAW+B,EAAK/B,MAAM0sG,QAAa/pG,EAAKhB,GAChE,SACoB,qBAAbgB,EAAKiI,KAA6B,CACzC,MAAM7I,EAAOlB,EAAMoS,OAAOtQ,EAAK+F,KAC/B/G,EAAGqtB,cACCrtB,EAAG2oB,QAAQ7nB,IAAI3B,EAAW,EAAI6B,EAAK+F,KACnC,KACAjF,GAAQ1B,EAAK/B,MAAO,WAAY2C,EAAKgqG,UAE7C,CACJ,CACA,IAAIprG,EAAOc,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAQ+F,OAAQ3E,IAC5BpB,EAAQoB,KACK,MAATf,IAAuBA,EAAAA,GACpBc,EAAAA,GAMN,QAAAC,EAAI,EAAGK,EAAM7B,EAAW,EAAGwB,EAAIhB,EAAI29B,OAAQ38B,IAAK,CAC/C,QAAMzB,EAAMgI,MAAMvG,GAClBW,EAAMN,EAAMZ,EAAIoH,SAChBtH,EAAMX,EAAQoB,GACpB,GAAIT,EAAM,EAAG,CACT,IAAIH,EAAgB,OAChBK,EAAImJ,aACYxJ,EAAAA,EAAIwJ,WAAWN,KAAK9H,KAAK0pG,WAE7C,MAAMvqG,EAAQ,GACL,UAAI,EAAGkB,EAAItB,EAAKsB,IAAKlB,EAAMuF,KAAKpB,GAAenF,EAAMoL,QAAQ3K,GAAewU,iBAC/E,QAAa,MAAK3U,GAASe,EAAI,GAAMD,GAAQC,EAAcW,EAAM,EAAhBN,EAAM,EAC7DhB,EAAG+M,OAAO/M,EAAG2oB,QAAQ7nB,IAAIgG,GAAOxG,EACpC,CACMU,EAAAA,CACV,CACA,OAAOhB,EAAGw2B,QAAQ84E,GAAc,CAAEC,WAAW,GACjD,CCvGa,SAAkB,IAAIvtG,GAAU,kBAE7C,SAAS,GAAU1C,EAAkBJ,GACjC,KAAOA,GAAOA,GAAOI,EAAK8a,IAAKlb,EAAOA,EAAgB+f,WAClD,GAAiC,MAA5B/f,EAAgBggB,UAAiD,MAA5BhgB,EAAgBggB,SAAyB,QAE3F,CAEA,SAAS,GAAe5f,EAAkBJ,GAChC,QAAWI,EAAKqiC,YAAY,CAAElF,KAAMv9B,EAAMu4C,QAAS93B,IAAKzgB,EAAMw4C,UACpE,OAAKv4C,GACEA,EAAWikF,GAAW9jF,EAAKyX,MAAM3H,IAAIsB,QAAQvR,EAAS4H,MADvC,IAE1B,CAEA,SAAS,GAAgBzH,EAAkBJ,GACvC,MAAMC,EAAaD,EACf,KAAWuzC,SAAWtzC,EAAWuzC,QAAS,OAE9C,MAAM1yC,EAAe6nF,GAAUvoF,EAAMH,EAAWgP,QAC5C,MACJ,GAAIhP,EAAWyzC,UAAYtzC,EAAKyX,MAAM2d,qBAAqB3zB,GAEvDxB,EAAiBD,EAAKyX,MAAM2d,UAAUu2E,YAAa9rG,GACnDA,EAAW85C,sBAAe,GAE1B95C,EAAWyzC,UACX5yC,GACwD,OAA7C,KAAWV,EAAKyX,MAAM2d,UAAUhC,WAE3C0xD,GAAe9kF,EAAMH,GAAa4H,KAAOpH,EAAQoH,IAIjDxH,EAAiBI,EAASR,GAC1BA,EAAW85C,sBAAe,IAClBj5C,EAER,OAKJ,SAAST,EAAiBoB,EAAsBK,GACxC,MAAQojF,GAAe9kF,EAAM0B,GACjC,MAAMM,EAAmD,MAAxCY,GAAgB62B,SAASz5B,EAAKyX,OAC/C,IAAK3W,IAAU4pF,GAAYrpF,EAASP,GAC5B,OACC,OADiBA,EAAAA,CACX,CAEf,MAAMF,EAAY,IAAIa,GAAcJ,EAASP,GAC7C,GAAIkB,IAAahC,EAAKyX,MAAM2d,UAAU1qB,GAAG9J,GAAY,CACjD,MAAMH,EAAKT,EAAKyX,MAAMkU,GAAG0J,aAAaz0B,GAClCoB,GAAavB,EAAAA,QAAQmC,GAAiBvB,EAAQoG,KAClDzH,EAAKgyC,SAASvxC,EAClB,CACJ,CAGgB,aACPT,EAAAA,KAAKuF,oBAAoB,UAAWjF,GACpCN,EAAAA,KAAKuF,oBAAoB,YAAajF,GACtCN,EAAAA,KAAKuF,oBAAoB,YAAanE,GACC,MAAxCwB,GAAgB62B,SAASz5B,EAAKyX,QAAgBzX,EAAKgyC,SAAShyC,EAAKyX,MAAMkU,GAAGuL,QAAQt0B,IAAkB,GAC5G,CAEA,SAAS,EAAKvB,GACV,MAAMK,EAASkB,GAAgB62B,SAASz5B,EAAKyX,OACzC,MACJ,GAAc,MAAV/V,EAEAZ,EAAUd,EAAKyX,MAAM3H,IAAIsB,QAAQ1P,QAAM,GAChC6mF,GAAUvoF,EAAMqB,EAAMwN,SAAWnO,IAE9BI,EAAAA,GAAed,EAAMH,IAC1BiB,GAAS,OAAOR,IAErBQ,GAASb,EAAiBa,EAASO,EAC3C,CACKrB,EAAAA,KAAK0F,iBAAiB,UAAWpF,GACjCN,EAAAA,KAAK0F,iBAAiB,YAAapF,GACnCN,EAAAA,KAAK0F,iBAAiB,YAAatE,EAC5C,CAEA,SAAS,GAAkBpB,EAAkBJ,GACnC,QAAMI,EAAKyX,MAAM3H,IACnBpP,EAAQojF,GAAWjkF,EAAIuR,QAAQxR,IACnC,QAAKc,IACAV,EAAAA,SAASA,EAAKyX,MAAMkU,GAAG0J,aAAa,IAAI5zB,GAAcf,MACpD,EACX,CAEA,SAAS,GACLV,EACAJ,EACAC,GAEI,SAAU6K,GAAG1K,EAAMo1B,aACnBx1B,GAAUA,EAASI,EAAM2rB,GAAG0J,aAAax1B,GAAWw3B,mBACjD,EACX,CAEA,SAAS,GAAYr3B,EAAkBJ,EAAcC,GAC7C,KAAOG,EAAAA,MAAMo1B,qBAAqB8xD,IAAuB,YACvD,MAAE7zD,MAAAA,GAAUrzB,EAAKyX,MAAM2d,UAC7B,IAAK,IAAI/0B,EAAIK,EAAMoN,MAAQ,EAAGzN,GAAK,EAAGA,IAAK,CACvC,MAAMJ,EAASS,EAAM+I,KAAKpJ,GAE1B,IADYR,EAAM,EAAIa,EAAM6J,MAAMlK,GAAKK,EAAMqP,WAAW1P,MAC1CR,EAAM,EAAI,EAAII,EAAOyH,YAAoB,YACnD,GAAiC,QAAjC,EAAOiC,KAAK9H,KAAK0pG,WAA2D,eAAjCtrG,EAAO0J,KAAK9H,KAAK0pG,UAA+B,CACrF,QAAU7qG,EAAMsP,OAAO3P,GACvBgB,EAAiB,QAARzB,EAAkBC,EAAM,EAAI,OAAS,KAAQA,EAAM,EAAI,QAAU,OAChF,OAAOG,EAAKilC,eAAe5jC,GAAUD,EAAU,IACnD,CACJ,CACO,WACX,CAEA,SAAS,GAAMpB,EAAcJ,GAClB,OAACC,EAAOa,EAAUL,KACrB,MAAMJ,EAAMJ,EAAMu1B,UAClB,GAAIn1B,aAAewB,GACR,UAAkB5B,EAAOa,EAAU4B,GAAUoyB,KAAKz0B,EAAI2rG,UAAWhsG,IAExE,GAAQ,SAAR,IAAoBK,EAAIoK,MAAc,SAC1C,MAAM/J,EAAM8pF,GAAY/pF,EAAoBL,EAAMJ,GAClD,GAAW,MAAPU,EAAoB,SACxB,GAAY,SAARN,EACA,OAAOomF,GAAkBvmF,EAAOa,EAAU4B,GAAUoyB,KAAK70B,EAAMiQ,IAAIsB,QAAQnR,EAAIke,KAAOve,GAAMA,IACzF,CACG,QAAQC,EAAMiQ,IAAIsB,QAAQ9Q,GAC5Be,EAAQ0nF,GAAS3nF,EAAOpB,EAAMJ,GAC9B,MACA,OAAgB8B,EAAhB,EAAgBA,GAAUgzB,KAAKrzB,EAAO,GAACzB,EAC5B,EAAY8B,GAAUgzB,KAAK70B,EAAMiQ,IAAIsB,QAAQhQ,EAAM4O,QAAQ,KAAM,GAClEtO,GAAUgzB,KAAK70B,EAAMiQ,IAAIsB,QAAQhQ,EAAM6O,OAAO,IAAK,GAC1Dm2E,GAAkBvmF,EAAOa,EAAUgB,EAC9C,EAER,CAEA,SAAS,GAAW1B,EAAcJ,GACvB,OAACC,EAAOa,EAAUL,KACrB,IAAIJ,EAAMJ,EAAMu1B,UACZ,kBAAiB3zB,IAAgB,CACjC,MAAML,EAAMgpF,GAAY/pF,EAAoBL,EAAMJ,GAClD,GAAW,MAAPwB,EAAoB,SACxBnB,EAAM,IAAIwB,GAAc5B,EAAMiQ,IAAIsB,QAAQhQ,GAC9C,CACA,MAAMd,EAAQyoF,GAAU9oF,EAAsB2rG,UAAW5rG,EAAMJ,GAC/D,QAAKU,GACE8lF,GAAkBvmF,EAAOa,EAAU,IAAIe,GAAexB,EAAsB0rG,YAAarrG,GADhG,CAGR,CAEA,SAAS,GAAoBN,EAAoBJ,GAC7C,MAAMC,EAAMG,EAAMo1B,UAClB,KAAqBv1B,aAAAA,IAAuB,SAC5C,GAAID,EAAU,CACJ,QAAKI,EAAM2rB,GACbtrB,EAAc8E,GAAenF,EAAMoL,QAAQq2F,KAAKxsF,gBAAgBpP,QAChEhG,EAAAA,aAAY,CAACI,EAAMK,KACdL,EAAK4F,QAAQ6E,GAAGrK,IACdK,EAAAA,QACCA,EAAG2oB,QAAQ7nB,IAAIlB,EAAM,GACrBI,EAAG2oB,QAAQ7nB,IAAIlB,EAAML,EAAKiI,SAAW,GACrC,IAAIi7E,GAAM9iF,EAAa,EAAG,GAJ7B,IAOLK,EAAGoyB,YAAYlzB,EAASc,EAChC,CACO,QACX,CAEA,MAAMwvG,GAAgBvoB,GAAe,CACjCwoB,UAAWpsB,GAAM,SAAU,GAC3BqsB,WAAYrsB,GAAM,QAAS,GAC3BssB,QAAStsB,GAAM,QAAS,GACxBusB,UAAWvsB,GAAM,OAAQ,GAEzB,kBAAmBoG,GAAW,SAAU,GACxC,mBAAoBA,GAAW,QAAS,GACxC,gBAAiBA,GAAW,QAAS,GACrC,kBAAmBA,GAAW,OAAQ,GAEtCiH,UAAWxN,GACX,gBAAiBA,GACjB2sB,OAAQ3sB,GACR,aAAcA,KAGU,cAAkBhkF,EAAUC,GAChD,IAACuC,GAAUpC,EAAKyX,OAAe,SAC/B,MAAQ+4F,GAAY3wG,GAClB,QAAMG,EAAKyX,MAAM2d,UACvB,GAAI/0B,aAAeoB,GAAe,CACzBf,IACOA,EAAAA,CACJm9B,MAAO,EACPG,OAAQ,EACR6xE,KAAM,CAAC9rG,EAAAA,KAAcmhF,GAAS//E,GAAenF,EAAKyX,MAAMrM,QAAQq2F,KAAM5hG,OAExE,QAAQQ,EAAIsrG,YAAYliG,MAAM,GAChCnJ,EAAQD,EAAIsrG,YAAYziG,OAAO,GAC7B9H,EAAOF,GAAS0C,IAAI3D,GAAOmrG,YAAY/qG,EAAIsrG,YAAYlkG,IAAMnH,EAAOD,EAAIurG,UAAUnkG,IAAMnH,GACtF,YAAUI,EAAOU,EAAKg8B,MAAQh8B,EAAK+7B,KAAM/7B,EAAKk8B,OAASl8B,EAAKif,KACpEsqE,GAAY3qF,EAAKyX,MAAOzX,EAAKgyC,SAAU1xC,EAAOc,EAAMV,IAC7C,KACAA,EAAO,CACR,QAAQ8iF,GAAcxjF,EAAKyX,OAC7BnX,EAAQL,EAAMiJ,OAAO,GACzB,UAAYlJ,EAAKyX,MAAOzX,EAAKgyC,SAAU1xC,EAAOY,GAAS0C,IAAI3D,EAAMwJ,MAAM,IAAIwhG,SAAShrG,EAAMwH,IAAMnH,GAAQI,IACjG,EAEA,QAEf,CAEO,SAAS,IAAe+vG,wBAAAA,GAA0B,GAAU,CAAC,GAChE,OAAO,IAAIlsB,GAAO,CACdx+E,IAAKnD,GAKL6U,MAAO,CACHggB,OACW,WACX,EACA9M,MAAM/qB,EAAIC,GACA,QAAMD,EAAGu3B,QAAQv0B,IACvB,GAAW,MAAPlC,EAAoB,OAAQ,GAAR,EAAY,KAAOA,EACvC,GAAO,MAAP,IAAgBd,EAAGkzB,WAAmB,SAC1C,MAAQtL,QAAAA,EAAS/f,IAAAA,GAAQ7H,EAAGypB,QAAQrB,UAAUnoB,GAC9C,OAAOQ,EAAU,KAAOJ,CAC5B,GAGJs5B,MAAO,CACHklB,YAAay8C,GAEbv0C,gBAAiB,CACbzM,UAAWw2D,IAGfC,uBAAuB/wG,GACnB,OAA4C,MAAxCgD,GAAgB62B,SAAS75B,EAAK6X,OAAuB7X,EAAK6X,MAAM2d,UAE7D,IACX,EAEA8jB,kBAAAA,GAEA+P,cAAAA,GAEA2nD,YAAAA,IAGJ/3E,kBAAkBj5B,EAAGC,EAAUa,GAC3B,OAAOg7F,GAAmBh7F,EAAOmwG,GAAUnwG,EAAOb,GAAWG,EACjE,GAER,CClQO,MAAM8wG,GAAgB,CACzBC,SAAU,WACVC,SAAU,WACVC,UAAW,aAMF9W,GAAWpS,GAAa,YACxBc,GAAWd,GAAa,YACxBgS,GAAahS,GAAa,cAC1BmpB,GAAcnpB,GAAa,eAE3BopB,GAAQ9pB,IAAkErnF,IAAD,CAE9EoL,OAAQ,KAAM,CACV3B,KAAM,CACFsU,MAAO,IACAqlE,GAAOrlE,MACVurE,cAAe,CACX52E,MAAQ9S,GAAuB,UAAdA,EAAK+J,KACtBi9E,OAAQ,CAAChnF,EAAOC,EAAMa,KAClB,MAAML,EAAQR,EAAK6hG,MACbzhG,EAAYJ,EAAK0lC,SAA4B/jC,KAAI,CAAClB,EAAGc,KAAJ,IAChDd,EACHohG,MAAAA,EACA0P,SAAgB,IAANhwG,MAEdxB,EAAMomF,SAAStlF,GACfd,EAAM4Q,KAAKvQ,GACXL,EAAMqmF,WAFN,GAKRlR,WAAY,CACRriE,MAAQ9S,GAA4B,UAAnBA,EAAK+J,KAAKxJ,KAC3BymF,OAAQ,CAAChnF,EAAOC,K,MACN,QAAY,WAAKgG,QAAQoE,iBAAb,IAAyBpE,QAC3C,IAAKnF,EAAW,OAEhB,MAAML,EAA2B,GACvBK,EAAAA,SAASJ,IACTD,EAAAA,KAAKC,EAAKvB,MAAM4tG,UAAhB,IAEV/sG,EAAMomF,SAAS,aAAS,EAAW,CAAE0b,MAAAA,IAC/B9hG,EAAAA,KAAKC,EAAKgG,SAChBjG,EAAMqmF,WALI,IAStBqmB,UAAW,IACJlpB,GAAOkpB,UACVhjB,cAAe,CACX52E,MAAQ9S,GAAuB,aAAdA,EAAK+J,KACtBi9E,OAAQ,CAAChnF,EAAOC,EAAMa,KAClB,MAAML,EAAQR,EAAK6hG,MACbzhG,EAAYJ,EAAK0lC,SAA4B/jC,KAAI,CAAClB,EAAGc,KAAJ,IAChDd,EACHohG,MAAOrhG,EAAMe,GACbgwG,SAAUvxG,EAAKuxG,aAEnBxxG,EAAMomF,SAAStlF,GACfd,EAAM4Q,KAAKvQ,GACXL,EAAMqmF,WAFN,GAKRlR,WAAY,CACRriE,MAAQ9S,GAA4B,cAAnBA,EAAK+J,KAAKxJ,KAC3BymF,OAAQ,CAAChnF,EAAOC,KACZD,EAAMomF,SAAS,YACTpmF,EAAAA,KAAKC,EAAKgG,SAChBjG,EAAMqmF,WAFN,IAMZsmB,WAAY,IACLnpB,GAAOmpB,WACVjjB,cAAe,CACX52E,MAAQ9S,GAAuB,cAAdA,EAAK+J,OAAyB/J,EAAKwxG,SACpDxqB,OAAQ,CAAChnF,EAAOC,EAAMa,KAClB,MAAML,EAAQR,EAAK6hG,MACnB9hG,EACKomF,SAAStlF,EAAM,CAAEisG,UAAWtsG,IAC5B2lF,SAASpmF,EAAMwL,OAAOI,MAAM6xD,WAC5B7sD,KAAK3Q,EAAK0lC,UACV0gD,YACAA,WALL,GAQRlR,WAAY,CACRriE,MAAQ9S,GAA4B,eAAnBA,EAAK+J,KAAKxJ,KAC3BymF,OAAQ,CAAChnF,EAAOC,KACZD,EAAMomF,SAAS,aAAax1E,KAAK3Q,EAAKgG,SAASogF,WAA/C,IAIZwmB,aAAc,IACPrpB,GAAOqpB,aACVnjB,cAAe,CACX52E,MAAQ9S,GAAuB,cAAdA,EAAK+J,QAA0B/J,EAAKwxG,SACrDxqB,OAAQ,CAAChnF,EAAOC,EAAMa,KAClB,MAAML,EAAQR,EAAK6hG,MACnB9hG,EAAMomF,SAAStlF,EAAM,CAAEisG,UAAWtsG,IAClCT,EAAMomF,SAASpmF,EAAMwL,OAAOI,MAAM6xD,WAC5Bz9D,EAAAA,KAAKC,EAAK0lC,UAChB3lC,EAAMqmF,YACNrmF,EAAMqmF,WAJN,GAORlR,WAAY,CACRriE,MAAQ9S,GAA4B,iBAAnBA,EAAK+J,KAAKxJ,KAC3BymF,OAAQ,CAAChnF,EAAOC,KACZD,EAAMomF,SAAS,aACTpmF,EAAAA,KAAKC,EAAKgG,SAChBjG,EAAMqmF,WAFN,OAQpB2Q,WAAY,CAACh3F,EAAUC,IAAQ,CAC3B,IAAIqoF,GAAU,YAAY,CAACxnF,EAAOL,EAAQJ,EAAOK,KAC7C,MAAMc,EAASV,EAAMoP,IAAIsB,QAAQnR,GACjC,IAAKmB,EAAOqI,MAAM,GAAGyJ,eAAe9R,EAAOmJ,OAAO,GAAInJ,EAAO2O,YAAY,GAAInQ,EAASme,OAC3E,YAEX,MAAM1c,EAAYqnF,GAAY7oF,EAAI+D,IAAIihB,KAChCnjB,EAAKhB,EAAMirB,GAAGwG,iBAAiBlyB,EAAOK,EAAKe,GAAWg2B,iBACrD,SAAGhC,aAAa6xD,GAAc36E,OAAO7K,EAAGoO,IAAK7P,EAAQ,GAArD,KAGfusD,SAAU,CAAC5sD,EAAGC,IAAQ,CAClBiD,GAAUq3F,IAAU,IAAMhR,IAAc,KACxCrmF,GAAU+lF,IAAU,IAAMM,GAAa,KACvCrmF,GAAUi3F,IAAY,IAAM6B,GAAU/7F,EAAI+D,IAAIihB,IAAWrZ,MAAM6xD,aAC/Dv6D,GAAUouG,IAAa,IAAM,CAACxwG,EAAOL,KAC3B,MAAE+0B,UAAAA,EAAWzJ,GAAAA,GAAOjrB,GAClBuG,KAAAA,GAAShH,EACXoB,EAAQqnF,GAAY7oF,EAAI+D,IAAIihB,KAC5BnjB,EAAMpB,EAAGw2B,qBAAqBz1B,GAC9BP,EAAMwB,GAAUyxB,SAASryB,EAAIoO,IAAIsB,QAAQhQ,GAAO,GAAG,GACzD,OAAIN,IACWT,MAAAA,GAAAA,EAAAA,EAAIg1B,aAAav0B,MAEzB,CAHP,KAMR+1F,UAAW,CACP,CAACia,GAAcC,UAAWzsB,GAAeuE,GAAU,SACnD,CAACioB,GAAcE,UAAW1sB,GAAe6V,GAAU,SACnD,CAAC2W,GAAcG,WAAY3sB,GAAeyV,GAAY,cAE1DjD,aAAc,CAACl3F,EAAGC,IACP,CAAC+tE,GAAe/tE,EAAKG,GAAQouG,KAAuBiD,KAAkBC,UrEpK5EjrB,GAAgB,IACtBkrB,MACAC,GACHC,cAAe,gBACfC,SAAU,YsEADpsB,GAAsByC,GAAa,uBAE1CwB,GAAK,iBACEooB,GAAgBvqB,IAAkBpnF,IAAD,CAEtC6D,GAAAA,GACAuH,OAAQ,KAAM,CACViF,WAAW,EACX0L,SAAU,CACN,CAAErB,IAAK,OACP,CAAEC,MAAO,kBAAmBe,SAAW9b,GAAqB,iBAAVA,IAEtD+lB,MAAQ/lB,GAAS,CAAC,MAAO,CAAE+sC,MAAO3sC,EAAMo2F,aAAax2F,EAAKb,MAAO,oBACjEuqF,cAAe,CACX52E,MAAQ9S,GAAuB,WAAdA,EAAK+J,KACtBi9E,OAAQ,CAAChnF,EAAOC,EAAMa,KAClBd,EAAMsmF,SAASxlF,GACTd,EAAAA,KAAKC,EAAK0lC,UAChB3lC,EAAMumF,UAAUzlF,EAFhB,GAKRq0E,WAAY,CACRriE,MAAQ9S,GAASA,EAAK+J,KAAKxJ,OAASopF,GACpC3C,OAAQ,CAAChnF,EAAOC,KACND,EAAAA,SAASC,EAAM,SAAf,KAIlB2sD,SAAW5sD,GAAa,CAACkD,GAAUwiF,IAAqB,IAAMmV,GAAW76F,MACzEi3F,UAAW,CACP,CAACxQ,GAAcorB,eAAgBntB,GAAegB,GAAqB,kBC1BlED,GAAoB0C,GAAa,qBACjC5C,GAAmB4C,GAAa,oBAChCxC,GAAmBwC,GAAa,oBAChC3D,GAAmB2D,GAAa,oBAEhC6pB,GAAevnB,IAAkBrqF,IAC1C,MAAMJ,EAAK,iBAEJ,OACHiE,GAAAA,EACAuH,OAASvL,IAAD,CACJ2Y,MAAO,WACP3S,QAAS,mBACTkrB,UAAU,EACVlV,SAAU,GACV9c,MAAO,CACHuuE,QAAS,CACLt1D,SAAS,IAGjB+D,SAAU,CACN,CACIrB,IAAK,4BACLgB,SAAWhb,IACH,kBAAiB0oD,aACjB,MAAMy7B,EAAmBnkF,GAE7B,MAAO,CAAE4sE,QAAoC,SAA3B5sE,EAAIuvF,QAAQ3iB,QAA9B,IAIZ3nD,MAAQjlB,IACE,QAAW+lB,SAASR,cAAc,SACxC,SAAStc,KAAO,WACPtJ,EAAAA,QAAUK,EAAK3B,MAAMuuE,QAC9BjtE,EAAS+tC,UAAYpuC,EAAMo2F,aAAa11F,EAAK3B,MAAO,2BAC3CsB,EAAAA,SAAYJ,IACjB,MAAMK,EAASL,EAAM4O,OACrB,KAAwBvO,aAAAA,kBAAmB,OACrC,QAAOT,EAAI+D,IAAIukF,IAEjB,IAAC/mF,EAAK2uC,SAGN,YAFS1vC,EAAAA,SAAWA,EAASitE,SAKjC,MAAQjtD,IAAAA,EAAK8c,KAAAA,GAAS78B,EAAOq9B,wBACvB78B,EAASM,EAAKihC,YAAY,CAAEhiB,IAAAA,EAAK8c,KAAAA,IACvC,IAAKr8B,EAAQ,OAEP,MAAE6qB,GAAAA,GAAOvqB,EAAKqW,MAEpBrW,EAAK4wC,SACDhwC,EAAG+rB,cAAcjtB,EAAOssB,YAAQ,EAAW,CACvCkgD,QAAShtE,EAAOgtE,UAFxB,EAMG,CACH,KACA,CACI,YAAa,YACb,eAAgB5sE,EAAK3B,MAAMuuE,QAAa,OAAS,QACjD3gC,MAAO3sC,EAAMo2F,aAAa11F,EAAK3B,MAAO,mBAE1CsB,EACA,CAAC,OAAQ,CAAEssC,MAAO3sC,EAAMo2F,aAAa11F,EAAK3B,MAAO,wBAA0B,GAlC/E,EAqCJuqF,cAAe,CACX52E,MAAO,EAAG/I,KAAAA,EAAM2jE,QAAAA,KACI,aAAT5sE,GAAmC,OAAZL,EAElCumF,OAAQ,CAAClmF,EAAOL,EAAMJ,KAClBS,EAAMslF,SAAS/lF,EAAM,CAAEqtE,QAASjtE,EAAKitE,UAC/B5sE,EAAAA,KAAKL,EAAKklC,UAChB7kC,EAAMulF,WAFN,GAKRlR,WAAY,CACRriE,MAAQhS,GAASA,EAAKiJ,KAAKxJ,OAASP,EACpCgnF,OAAQ,CAAClmF,EAAOL,KACNK,EAAAA,SAAS,gBAAY,EAAW,CAAE4sE,QAASjtE,EAAKtB,MAAMuuE,UACtD5sE,EAAAA,KAAKL,EAAKwF,SAChBnF,EAAMulF,WAFA,KAMlB2Q,WAAa/2F,GAAa,CACtBgqF,GAAkB,uBAAwBhqF,GAAWa,IAAD,CAChD4sE,QAAqC,MAA5B5sE,EAAMA,EAAMsF,OAAS,QAGtCwmD,SAAW3sD,GAAa,CACpBiD,GAAUuiF,IAAmB,IAAM+U,GAAcv6F,KACjDiD,GAAUqiF,IAAkB,IAAMqF,GAAa3qF,KAC/CiD,GAAUyiF,IAAkB,IAAMwR,GAAal3F,KAC/CiD,GAAUshF,IAAkB,IAAMyC,GAAOhnF,MAE7Cg3F,UAAW,CACP,CAACxQ,GAAciT,cAAehV,GAAee,GAAmB,SAChE,CAACgB,GAAckT,cAAejV,GAAea,GAAkB,SAC/D,CAACkB,GAAcmT,cAAelV,GAAeiB,GAAkB,SAC/D,CAACc,GAAcqrB,UAAWptB,GAAeF,GAAkB,cAE/DjmD,KAAM,IAAM,CAACt+B,EAAMa,EAAML,KACrB,IAAIJ,EAAWJ,EAEf,MAAMS,EAAWN,EAAMq2F,aAAazyF,IAA2B,iBAAkB,CAC7EmsC,SAAU,IAAMrvC,EAAKqvC,SACrBgiD,SAAWjxF,IACD,MAAE6qB,GAAAA,GAAOjrB,EAAK+W,MACpB/W,EAAKsxC,SACDhwC,EAAG+rB,cAAc1tB,SAAU,EAAW,CAClCitE,QAASxsE,IAFjB,IAQR,IAAKR,EAAU,MAAO,CAAC,EAEjB,MAAEwa,IAAAA,EAAK0H,WAAAA,EAAY4tE,SAAAA,GAAa9vF,EACtC,SAASL,GAEF,CACH6a,IAAAA,EACA0H,WAAAA,EACAne,OAASvD,GACDA,EAAY6I,KAAKxJ,OAASP,IAEnBK,EAAAA,EACXyB,EAASzB,IAEF,GAXf,EApHD,IlSqDE4xG,GAAMlmD,GAAAA,OAAgB,IAC5Bo7B,GACHS,IAAQ,IAAMwS,KACdmX,KACAQ,KACAC,KACAlb,KACAjO,OmSzESqpB,GAAiB,IAAIn4E,GAAU,UAO/Bo4E,GAAiB,IAAIp4E,GAAU,UAO/Bq4E,GAAmB,IAAIr4E,GAAU,cCMjCs4E,GAAc,KACzB,IAAIvhD,GAAQ,EACZ,MAAO,CAAC1uD,EAAGd,KACT,GAAIwvD,EAAO,CACTA,GAAQ,EACR,IACE1uD,GAGD,CAJD,QAGE0uD,GAAQ,CACT,CACF,WAAgBxqD,IAANhF,GACTA,GACD,CAVH,ECxBWkhC,GAAQ15B,KAAK05B,MAEbwY,IADOlyC,KAAKy9D,KACNz9D,KAAKkyC,KAsBXjyC,IArBOD,KAAKwpG,KACJxpG,KAAKqC,MACLrC,KAAKypG,MACNzpG,KAAK0pG,KACN1pG,KAAKitF,IACJjtF,KAAK2pG,KAgBN,CAACjxG,EAAGoG,IAAMpG,EAAIoG,EAAIpG,EAAIoG,GAQ5B2B,GAAM,CAAC/H,EAAGoG,IAAMpG,EAAIoG,EAAIpG,EAAIoG,EAI5Bqf,IAFQjQ,OAAO07F,MAET5pG,KAAKme,KAeX0rF,IANO7pG,KAAK8pG,KAMK9xG,GAAW,IAANA,EAAUA,EAAI,EAAI,EAAIA,EAAI,GCtChDg5B,IALSnoB,OAAOm4C,OAKTn4C,OAAOmoB,MAkBdl4B,GAAM,CAAC2K,EAAKnK,KACvB,MAAMusE,EAAU,GAChB,IAAK,MAAMxoE,KAAOoG,EAChBoiE,EAAQhoE,KAAKvE,EAAEmK,EAAIpG,GAAMA,IAE3B,OAAOwoE,CAAP,EAOWvoE,GAASmG,GAAOutB,GAAKvtB,GAAKnG,OAqB1BgiF,GAAQ,CAAC77E,EAAKnK,KACzB,IAAK,MAAM+D,KAAOoG,EAChB,IAAKnK,EAAEmK,EAAIpG,GAAMA,GACf,OAAO,EAGX,OAAO,CAAP,EAUW0sG,GAAc,CAACtmG,EAAKpG,IAAQwL,OAAOzL,UAAUuT,eAAeC,KAAKnN,EAAKpG,GAOtE2sG,GAAY,CAACtxG,EAAGoG,IAAMpG,IAAMoG,GAAMxB,GAAO5E,KAAO4E,GAAOwB,IAAMwgF,GAAM5mF,GAAG,CAACyO,EAAK9J,UAAiBG,IAAR2J,GAAqB4iG,GAAYjrG,EAAGzB,KAASyB,EAAEzB,KAAS8J,ICvF7ItD,GAAS,IAAM,IAAIi4E,ICkCnBmuB,GAAmB,CAACvxG,EAAGoG,KAClC,IAAI21B,EAAO,EACPC,EAAQ,EACZ,MAAOD,EAAO/7B,EAAE4E,QAAUm3B,EAAO31B,EAAExB,QAAU5E,EAAE+7B,KAAU31B,EAAE21B,GACzDA,IAEF,MAAOC,EAAQD,EAAO/7B,EAAE4E,QAAUo3B,EAAQD,EAAO31B,EAAExB,QAAU5E,EAAEA,EAAE4E,OAASo3B,EAAQ,KAAO51B,EAAEA,EAAExB,OAASo3B,EAAQ,GAC5GA,IAEF,MAAO,CACL7yB,MAAO4yB,EACP92B,OAAQjF,EAAE4E,OAASm3B,EAAOC,EAC1B3vB,OAAQjG,EAAElB,MAAM62B,EAAM31B,EAAExB,OAASo3B,GAHnC,EAWWw1E,GAAaD,GCjDbpmG,GAAStM,GAAK,IAAIH,MAAMG,GAOxB4yG,GAAsB,KACjC,MAAMtmG,GAAO,uBAAb,EAQWumG,GAAiB,KAC5B,MAAMvmG,GAAO,kBAAb,ECdWA,GAAS,IAAM,IAAI/I,IAUnBiH,GAAOhJ,IAClB,MAAMnB,EAAIiM,KAEV,OADA9K,EAAEsF,SAAQ,CAAC7D,EAAG07E,KAAQt+E,EAAE8D,IAAIw6E,EAAG17E,EAAT,IACf5C,CAAP,EAkBWyyG,GAAiB,CAACvxG,EAAKuE,EAAKitG,KACvC,IAAI5uG,EAAM5C,EAAIoC,IAAImC,GAIlB,YAHYG,IAAR9B,GACF5C,EAAI4C,IAAI2B,EAAK3B,EAAM4uG,KAEd5uG,CAAP,EAcW5C,GAAM,CAACC,EAAGO,KACrB,MAAMixG,EAAM,GACZ,IAAK,MAAOltG,EAAK9G,KAAUwC,EACzBwxG,EAAI1sG,KAAKvE,EAAE/C,EAAO8G,IAEpB,OAAOktG,CAAP,EAeWzhC,GAAM,CAAC/vE,EAAGO,KACrB,IAAK,MAAO+D,EAAK9G,KAAUwC,EACzB,GAAIO,EAAE/C,EAAO8G,GACX,OAAO,EAGX,OAAO,CAAP,EC7EW+D,GAAOopG,GAAOA,EAAIA,EAAIltG,OAAS,GAsB/BmtG,GAAW,CAACC,EAAM1iB,KAC7B,IAAK,IAAIrvF,EAAI,EAAGA,EAAIqvF,EAAI1qF,OAAQ3E,IAC9B+xG,EAAK7sG,KAAKmqF,EAAIrvF,GACf,EAWU4F,GAAO3F,MAAM2F,KAyCb1F,GAAUD,MAAMC,QC3EtB,MAAM8xG,GACXtzG,cAKEvB,KAAK80G,WAAa9xG,IACnB,CAMD7C,GAAIwB,EAAM6B,GACRR,GAAmBhD,KAAK80G,WAAYnzG,EAAMiE,IAAYihB,IAAIrjB,EAC3D,CAMDuxG,KAAMpzG,EAAM6B,GAIV,MAAMwxG,EAAK,IAAIC,KACbj1G,KAAKq9B,IAAI17B,EAAMqzG,GACfxxG,KAAKyxG,EAAL,EAEFj1G,KAAKG,GAAGwB,EAAMqzG,EACf,CAMD33E,IAAK17B,EAAM6B,GACT,MAAM0xG,EAAYl1G,KAAK80G,WAAW1vG,IAAIzD,QACpB+F,IAAdwtG,IACFA,EAAUphF,OAAOtwB,GACM,IAAnB0xG,EAAUxsG,MACZ1I,KAAK80G,WAAWhhF,OAAOnyB,GAG5B,CAWDwzG,KAAMxzG,EAAMszG,GAEV,OAAOnoG,IAAY9M,KAAK80G,WAAW1vG,IAAIzD,IAASqB,MAAckC,UAAUqD,SAAQ/E,GAAKA,KAAKyxG,IAC3F,CAEDvtE,UACE1nC,KAAK80G,WAAa9xG,IACnB,ECvEI,MAAMw4C,GAAeD,OAAOC,aAO7Bn6B,IANuBk6B,OAAO65D,cAMhB3zG,GAAKA,EAAE4f,eAErBg0F,GAAgB,QAMTC,GAAW7zG,GAAKA,EAAE0N,QAAQkmG,GAAe,IAEhDE,GAAqB,WAOdC,GAAgB,CAAC/zG,EAAGg0G,IAAcH,GAAS7zG,EAAE0N,QAAQomG,IAAoBrhG,GAAU,GAAEuhG,IAAYp0F,GAAYnN,QAa7GwhG,GAAsBnjG,IACjC,MAAMojG,EAAgBC,SAASC,mBAAmBtjG,IAC5CswB,EAAM8yE,EAAcnuG,OACpBsuG,EAAM,IAAIjf,WAAWh0D,GAC3B,IAAK,IAAIhgC,EAAI,EAAGA,EAAIggC,EAAKhgC,IACvBizG,EAAIjzG,GAA4B8yG,EAAc1L,YAAYpnG,GAE5D,OAAOizG,CAAP,EAIWC,GAAqE,qBAAhBC,YAA8B,IAAIA,YAAgB,KAMvGC,GAAoB1jG,GAAOwjG,GAAgBjkC,OAAOv/D,GAOlD2jG,GAAaH,GAAkBE,GAAoBP,GAsBzD,IAAIS,GAAyC,qBAAhBC,YAA8B,KAAO,IAAIA,YAAY,QAAS,CAAEv+B,OAAO,EAAMw+B,WAAW,IAGxHF,IAAuE,IAApDA,GAAgBluC,OAAO,IAAI4uB,YAAcrvF,SAO9D2uG,GAAkB,MAOb,MC9FMG,GAAkB5xG,QAAWgD,IAANhD,EAAkB,KAAOA,ECD7D,MAAM6xG,GACJh1G,cACEvB,KAAKgD,IAAM,IAAIgC,GAChB,CAMDwxG,QAASjvG,EAAKkvG,GACZz2G,KAAKgD,IAAI4C,IAAI2B,EAAKkvG,EACnB,CAKDC,QAASnvG,GACP,OAAOvH,KAAKgD,IAAIoC,IAAImC,EACrB,EAOH,IAAIovG,GAAgB,IAAIJ,GACpBK,IAAc,EAElB,IAG8B,qBAAjBC,eACTF,GAAgBE,aAChBD,IAAc,EAEH,CAAb,MAAOx1G,IAAM,CAMR,MAAM01G,GAAaH,GASbpjB,GAAWwjB,GAAgBH,IAAe1vG,iBAAiB,UAA+B6vG,GChD1Fj4D,GAA4B,qBAAZq8B,SAA2BA,QAAQ67B,SAAW,cAAc7+F,KAAKgjE,QAAQ67B,QAAQr1G,MAEjGs1G,GAA8B,qBAAX/uF,SAA2B42B,GAEjB,qBAAdzjB,WAA4B,MAAMljB,KAAKkjB,UAAUkB,UAK7E,IAAI26E,GACJ,MAAMjC,GAAO,GAGPkC,GAAgB,KACpB,QAAezvG,IAAXwvG,GACF,GAAIp4D,GAAQ,CACVo4D,GAASl0G,KACT,MAAMo0G,EAAQj8B,QAAQk8B,KACtB,IAAIC,EAAgB,KAEpB,IAAK,IAAIz0G,EAAI,EAAGA,EAAIu0G,EAAM5vG,OAAQ3E,IAAK,CACrC,MAAM00G,EAAOH,EAAMv0G,GACH,MAAZ00G,EAAK,IACe,OAAlBD,GACFJ,GAAOtxG,IAAI0xG,EAAe,IAE5BA,EAAgBC,GAEM,OAAlBD,GACFJ,GAAOtxG,IAAI0xG,EAAeC,GAC1BD,EAAgB,MAEhBrC,GAAKltG,KAAKwvG,EAGf,CACqB,OAAlBD,GACFJ,GAAOtxG,IAAI0xG,EAAe,GAG7B,KAA8B,kBAAb/K,UAChB2K,GAASl0G,MAEPupG,SAASl2F,QAAU,KAAKvO,MAAM,GAAG0P,MAAM,KAAKjP,SAAQivG,IACpD,GAAkB,IAAdA,EAAGhwG,OAAc,CACnB,MAAOD,EAAK9G,GAAS+2G,EAAGhgG,MAAM,KAC9B0/F,GAAOtxG,IAAK,KAAIwP,GAAqB7N,EAAK,OAAQ9G,GAClDy2G,GAAOtxG,IAAK,IAAGwP,GAAqB7N,EAAK,OAAQ9G,EAClD,MAGHy2G,GAASl0G,KAGb,OAAOk0G,EAAP,EAQWO,GAAW91G,GAAQw1G,KAAgB7nE,IAAI3tC,GAgBvC+1G,GAAc/1G,GAAiBg2G,GAAT74D,GAAoCq8B,CAAAA,SAAAA,aAAAA,SAAAA,eAAYx5E,EAAK47D,eAA6Cq6C,GAAAA,QAA2Bj2G,IAanJk2G,GAAUl2G,GAAQ81G,GAAS,KAAO91G,IAA+B,OAAtB+1G,GAAY/1G,GC1FvDm2G,ID6FaD,GAAQ,cC7FKh1E,GAAO,IAAIg0D,WAAWh0D,IAShDk1E,GAAsC,CAACv4C,EAAQw4C,EAAYxwG,IAAW,IAAIqvF,WAAWr3B,EAAQw4C,EAAYxwG,GAOzGywG,GAAkCz4C,GAAU,IAAIq3B,WAAWr3B,GAOlE04C,GAAkBxhB,IACtB,IAAIj1F,EAAI,GACR,IAAK,IAAIoB,EAAI,EAAGA,EAAI6zF,EAAMyhB,WAAYt1G,IACpCpB,GAAK2T,GAAoBshF,EAAM7zF,IAGjC,OAAOu1G,KAAK32G,EAAZ,EAOI42G,GAAe3hB,GAAS4hB,OAAO7vG,KAAKiuF,EAAMl3B,OAAQk3B,EAAMshB,WAAYthB,EAAMyhB,YAAY70G,SAAS,UAO/Fi1G,GAAoB92G,IAExB,MAAMmB,EAAI41G,KAAK/2G,GACTi1F,EAAQohB,GAAwBl1G,EAAE4E,QACxC,IAAK,IAAI3E,EAAI,EAAGA,EAAID,EAAE4E,OAAQ3E,IAC5B6zF,EAAM7zF,GAAKD,EAAEwa,WAAWva,GAE1B,OAAO6zF,CAAP,EAMI+hB,GAAiBh3G,IACrB,MAAMq0G,EAAMwC,OAAO7vG,KAAKhH,EAAG,UAC3B,OAAO,IAAIo1F,WAAWif,EAAIt2C,OAAQs2C,EAAIkC,WAAYlC,EAAIqC,WAAtD,EAIWO,GAAWC,GAAgBT,GAAkBG,GAG7CO,GAAaD,GAAgBJ,GAAoBE,GAQjDI,GAAiBC,IAC5B,MAAMC,EAASjB,GAAwBgB,EAAWX,YAElD,OADAY,EAAOnzG,IAAIkzG,GACJC,CAAP,EC7EWC,GAAO,EACPC,GAAO,EACPC,GAAO,EACPC,GAAO,EAEPC,GAAO,GACPC,GAAO,GACPC,GAAO,IAoCPC,GAAQ,GACRC,GAAQ,GACRC,GAAQ,IA2BRC,GAAS,WC5ETC,GAAmBvhG,OAAOuhG,iBAc1BC,IAbmBxhG,OAAOyhG,iBAadzhG,OAAOwhG,WAAP,CAAqBE,GAAsB,kBAARA,GAAoBC,SAASD,IAAQE,GAAWF,KAASA,IAChG1hG,OAAO07F,MACJ17F,OAAO0vD,SCYxB,MAAMmyC,GACX14G,cACEvB,KAAKk6G,KAAO,EACZl6G,KAAKm6G,KAAO,IAAItjB,WAAW,KAI3B72F,KAAKo6G,KAAO,EACb,EAOI,MAAMC,GAAgB,IAAM,IAAIJ,GAS1BzyG,GAAS8yG,IACpB,IAAIz3E,EAAMy3E,EAAQJ,KAClB,IAAK,IAAIr3G,EAAI,EAAGA,EAAIy3G,EAAQF,KAAK5yG,OAAQ3E,IACvCggC,GAAOy3E,EAAQF,KAAKv3G,GAAG2E,OAEzB,OAAOq7B,CAAP,EAUW03E,GAAeD,IAC1B,MAAME,EAAW,IAAI3jB,WAAWrvF,GAAO8yG,IACvC,IAAI7tG,EAAS,EACb,IAAK,IAAI5J,EAAI,EAAGA,EAAIy3G,EAAQF,KAAK5yG,OAAQ3E,IAAK,CAC5C,MAAMP,EAAIg4G,EAAQF,KAAKv3G,GACvB23G,EAAS50G,IAAItD,EAAGmK,GAChBA,GAAUnK,EAAEkF,MACb,CAED,OADAgzG,EAAS50G,IAAI45D,GAA2C86C,EAAQH,KAAK36C,OAAQ,EAAG86C,EAAQJ,MAAOztG,GACxF+tG,CAAP,EAUWC,GAAY,CAACH,EAASz3E,KACjC,MAAM63E,EAAYJ,EAAQH,KAAK3yG,OAC3BkzG,EAAYJ,EAAQJ,KAAOr3E,IAC7By3E,EAAQF,KAAKryG,KAAKy3D,GAA2C86C,EAAQH,KAAK36C,OAAQ,EAAG86C,EAAQJ,OAC7FI,EAAQH,KAAO,IAAItjB,WAAsC,EAA3BmjB,GAASU,EAAW73E,IAClDy3E,EAAQJ,KAAO,EAChB,EAUU1lD,GAAQ,CAAC8lD,EAASR,KAC7B,MAAMY,EAAYJ,EAAQH,KAAK3yG,OAC3B8yG,EAAQJ,OAASQ,IACnBJ,EAAQF,KAAKryG,KAAKuyG,EAAQH,MAC1BG,EAAQH,KAAO,IAAItjB,WAAuB,EAAZ6jB,GAC9BJ,EAAQJ,KAAO,GAEjBI,EAAQH,KAAKG,EAAQJ,QAAUJ,CAA/B,EAqCWa,GAAanmD,GAsFbomD,GAAe,CAACN,EAASR,KACpC,MAAOA,EAAMe,GACXrmD,GAAM8lD,EAASO,GAAeA,GAAef,GAC7CA,EAAME,GAAWF,EAAM,KAEzBtlD,GAAM8lD,EAASO,GAAef,EAA9B,EAYWgB,GAAc,CAACR,EAASR,KACnC,MAAMiB,EAAaf,GAAoBF,GACnCiB,IACFjB,GAAOA,GAGTtlD,GAAM8lD,GAAUR,EAAMe,GAAeA,GAAc,IAAME,EAAaF,GAAc,GAAMA,GAAef,GACzGA,EAAME,GAAWF,EAAM,IAGvB,MAAOA,EAAM,EACXtlD,GAAM8lD,GAAUR,EAAMe,GAAeA,GAAc,GAAMA,GAAef,GACxEA,EAAME,GAAWF,EAAM,IACxB,EAMGkB,GAAa,IAAInkB,WAAW,KAC5BokB,GAAeD,GAAWxzG,OAAS,EAS5B0zG,GAAwB,CAACZ,EAAS/nG,KAC7C,GAAIA,EAAI/K,OAASyzG,GAAc,CAG7B,MAAMptE,EAAUz4B,GAAAA,WAAkC7C,EAAKyoG,IAAYntE,SAAW,EAC9E+sE,GAAaN,EAASzsE,GACtB,IAAK,IAAIhrC,EAAI,EAAGA,EAAIgrC,EAAShrC,IAC3B2xD,GAAM8lD,EAASU,GAAWn4G,GAE7B,MACCs4G,GAAmBb,EAASllG,GAAkB7C,GAC/C,EAUU6oG,GAA0B,CAACd,EAAS/nG,KAC/C,MAAMojG,EAAgBC,SAASC,mBAAmBtjG,IAC5CswB,EAAM8yE,EAAcnuG,OAC1BozG,GAAaN,EAASz3E,GACtB,IAAK,IAAIhgC,EAAI,EAAGA,EAAIggC,EAAKhgC,IACvB2xD,GAAM8lD,EAAgC3E,EAAc1L,YAAYpnG,GACjE,EAWUw4G,GAAiBjmG,GAAyB8lG,GAAwBE,GAsBlEE,GAAkB,CAAChB,EAASxB,KACvC,MAAM4B,EAAYJ,EAAQH,KAAK3yG,OACzB0yG,EAAOI,EAAQJ,KACfqB,EAAcvB,GAASU,EAAYR,EAAMpB,EAAWtxG,QACpDg0G,EAAe1C,EAAWtxG,OAAS+zG,EACzCjB,EAAQH,KAAKv0G,IAAIkzG,EAAW2C,SAAS,EAAGF,GAAcrB,GACtDI,EAAQJ,MAAQqB,EACZC,EAAe,IAGjBlB,EAAQF,KAAKryG,KAAKuyG,EAAQH,MAE1BG,EAAQH,KAAO,IAAItjB,WAAWmjB,GAAqB,EAAZU,EAAec,IAEtDlB,EAAQH,KAAKv0G,IAAIkzG,EAAW2C,SAASF,IACrCjB,EAAQJ,KAAOsB,EAChB,EAUUL,GAAqB,CAACb,EAASxB,KAC1C8B,GAAaN,EAASxB,EAAWX,YACjCmD,GAAgBhB,EAASxB,EAAzB,EAoBW4C,GAAkB,CAACpB,EAASz3E,KACvC43E,GAAUH,EAASz3E,GACnB,MAAM84E,EAAQ,IAAIC,SAAStB,EAAQH,KAAK36C,OAAQ86C,EAAQJ,KAAMr3E,GAE9D,OADAy3E,EAAQJ,MAAQr3E,EACT84E,CAAP,EAOWE,GAAe,CAACvB,EAASR,IAAQ4B,GAAgBpB,EAAS,GAAGwB,WAAW,EAAGhC,GAAK,GAMhFiC,GAAe,CAACzB,EAASR,IAAQ4B,GAAgBpB,EAAS,GAAG0B,WAAW,EAAGlC,GAAK,GAMhFmC,GAAgB,CAAC3B,EAASR,IAA4B4B,GAAgBpB,EAAS,GAAI4B,YAAY,EAAGpC,GAAK,GAQ9GqC,GAAe,IAAIP,SAAS,IAAIQ,YAAY,IAO5CC,GAAYvC,IAChBqC,GAAaL,WAAW,EAAGhC,GACpBqC,GAAaG,WAAW,KAAOxC,GAwC3ByC,GAAW,CAACjC,EAAS18D,KAChC,cAAeA,GACb,IAAK,SAEH4W,GAAM8lD,EAAS,KACfe,GAAef,EAAS18D,GACxB,MACF,IAAK,SACC4+D,GAAiB5+D,IAASo8D,GAASp8D,IAASi9D,IAE9CrmD,GAAM8lD,EAAS,KACfQ,GAAYR,EAAS18D,IACZy+D,GAAUz+D,IAEnB4W,GAAM8lD,EAAS,KACfuB,GAAavB,EAAS18D,KAGtB4W,GAAM8lD,EAAS,KACfyB,GAAazB,EAAS18D,IAExB,MACF,IAAK,SAEH4W,GAAM8lD,EAAS,KACf2B,GAAc3B,EAAS18D,GACvB,MACF,IAAK,SACH,GAAa,OAATA,EAEF4W,GAAM8lD,EAAS,UACV,GAAI18D,aAAgB96C,MAAO,CAEhC0xD,GAAM8lD,EAAS,KACfM,GAAaN,EAAS18D,EAAKp2C,QAC3B,IAAK,IAAI3E,EAAI,EAAGA,EAAI+6C,EAAKp2C,OAAQ3E,IAC/B05G,GAASjC,EAAS18D,EAAK/6C,GAE1B,MAAM,GAAI+6C,aAAgBi5C,WAEzBriC,GAAM8lD,EAAS,KACfa,GAAmBb,EAAS18D,OACvB,CAEL4W,GAAM8lD,EAAS,KACf,MAAMp/E,EAAOnoB,OAAOmoB,KAAK0iB,GACzBg9D,GAAaN,EAASp/E,EAAK1zB,QAC3B,IAAK,IAAI3E,EAAI,EAAGA,EAAIq4B,EAAK1zB,OAAQ3E,IAAK,CACpC,MAAM0E,EAAM2zB,EAAKr4B,GACjBw4G,GAAef,EAAS/yG,GACxBg1G,GAASjC,EAAS18D,EAAKr2C,GACxB,CACF,CACD,MACF,IAAK,UAEHitD,GAAM8lD,EAAS18D,EAAO,IAAM,KAC5B,MACF,QAEE4W,GAAM8lD,EAAS,KA3DnB,EA8EK,MAAMmC,WAAmBxC,GAI9B14G,YAAam7G,GACXh7G,QAIA1B,KAAK0D,EAAIg5G,EAKT18G,KAAKyB,EAAI,KACTzB,KAAKoyB,MAAQ,CACd,CAKDoiC,MAAO9vD,GACD1E,KAAKyB,IAAMiD,EACb1E,KAAKoyB,SAEDpyB,KAAKoyB,MAAQ,GAEfwoF,GAAa56G,KAAMA,KAAKoyB,MAAQ,GAElCpyB,KAAKoyB,MAAQ,EAEbpyB,KAAK0D,EAAE1D,KAAM0E,GACb1E,KAAKyB,EAAIiD,EAEZ,EAyEH,MAAMi4G,GAAyBrC,IAEzBA,EAAQloF,MAAQ,IAIlB0oF,GAAYR,EAAQA,QAA2B,IAAlBA,EAAQloF,MAAckoF,EAAQ74G,GAAK64G,EAAQ74G,GACpE64G,EAAQloF,MAAQ,GAClBwoF,GAAaN,EAAQA,QAASA,EAAQloF,MAAQ,GAEjD,EAWI,MAAMwqF,GACXr7G,cACEvB,KAAKs6G,QAAU,IAAIL,GAInBj6G,KAAKyB,EAAI,EACTzB,KAAKoyB,MAAQ,CACd,CAKDoiC,MAAO9vD,GACD1E,KAAKyB,IAAMiD,EACb1E,KAAKoyB,SAELuqF,GAAuB38G,MACvBA,KAAKoyB,MAAQ,EACbpyB,KAAKyB,EAAIiD,EAEZ,CAED61G,eAEE,OADAoC,GAAuB38G,MAChBu6G,GAAav6G,KAAKs6G,QAC1B,EA2CH,MAAMuC,GAA4BvC,IAChC,GAAIA,EAAQloF,MAAQ,EAAG,CAGrB,MAAM0qF,EAA6B,EAAfxC,EAAQ/wF,MAA8B,IAAlB+wF,EAAQloF,MAAc,EAAI,GAIlE0oF,GAAYR,EAAQA,QAASwC,GACzBxC,EAAQloF,MAAQ,GAClBwoF,GAAaN,EAAQA,QAASA,EAAQloF,MAAQ,EAEjD,GAoBI,MAAM2qF,GACXx7G,cACEvB,KAAKs6G,QAAU,IAAIL,GAInBj6G,KAAKyB,EAAI,EACTzB,KAAKoyB,MAAQ,EACbpyB,KAAKupB,KAAO,CACb,CAKDirC,MAAO9vD,GACD1E,KAAKupB,OAAS7kB,EAAI1E,KAAKyB,GACzBzB,KAAKyB,EAAIiD,EACT1E,KAAKoyB,UAELyqF,GAA0B78G,MAC1BA,KAAKoyB,MAAQ,EACbpyB,KAAKupB,KAAO7kB,EAAI1E,KAAKyB,EACrBzB,KAAKyB,EAAIiD,EAEZ,CAED61G,eAEE,OADAsC,GAA0B78G,MACnBu6G,GAAav6G,KAAKs6G,QAC1B,EAaI,MAAM0C,GACXz7G,cAIEvB,KAAKi9G,KAAO,GACZj9G,KAAKyB,EAAI,GACTzB,KAAKk9G,MAAQ,IAAIN,EAClB,CAKDpoD,MAAOp/C,GACLpV,KAAKyB,GAAK2T,EACNpV,KAAKyB,EAAE+F,OAAS,KAClBxH,KAAKi9G,KAAKl1G,KAAK/H,KAAKyB,GACpBzB,KAAKyB,EAAI,IAEXzB,KAAKk9G,MAAM1oD,MAAMp/C,EAAO5N,OACzB,CAED+yG,eACE,MAAMD,EAAU,IAAIL,GAKpB,OAJAj6G,KAAKi9G,KAAKl1G,KAAK/H,KAAKyB,GACpBzB,KAAKyB,EAAI,GACT45G,GAAef,EAASt6G,KAAKi9G,KAAK95G,KAAK,KACvCm4G,GAAgBhB,EAASt6G,KAAKk9G,MAAM3C,gBAC7BA,GAAaD,EACrB,ECjzBI,MAAM6C,GAIX57G,YAAau3G,GAMX94G,KAAK00G,IAAMoE,EAMX94G,KAAKiJ,IAAM,CACZ,EAQI,MAAMm0G,GAAgBtE,GAAc,IAAIqE,GAAQrE,GAO1CuE,GAAaC,GAAWA,EAAQr0G,MAAQq0G,EAAQ5I,IAAIltG,OA4BpD+1G,GAAiB,CAACD,EAASz6E,KACtC,MAAMlD,EAAO6/B,GAA2C89C,EAAQ5I,IAAIl1C,OAAQ89C,EAAQr0G,IAAMq0G,EAAQ5I,IAAIsD,WAAYn1E,GAElH,OADAy6E,EAAQr0G,KAAO45B,EACRlD,CAAP,EAaW69E,GAAoBF,GAAWC,GAAeD,EAASG,GAAYH,IAwBnEI,GAAYJ,GAAWA,EAAQ5I,IAAI4I,EAAQr0G,OAmG3Cw0G,GAAcH,IACzB,IAAIxD,EAAM,EACN6D,EAAO,EACX,MAAO,EAAM,CACX,MAAM77G,EAAIw7G,EAAQ5I,IAAI4I,EAAQr0G,OAI9B,GAFA6wG,IAAah4G,EAAI+4G,IAAgB8C,EACjCA,GAAQ,IACJ77G,EAAI+4G,GACN,OAAOf,EAGT,GAAIA,EAAM0C,GACR,MAAM,IAAIl7G,MAAM,wBAEnB,GAcUs8G,GAAaN,IACxB,IAAIx7G,EAAIw7G,EAAQ5I,IAAI4I,EAAQr0G,OACxB6wG,EAAMh4G,EAAI+4G,GACV8C,EAAO,GACX,MAAM3J,GAAQlyG,EAAI+4G,IAAe,GAAK,EAAI,EAC1C,GAA0B,KAArB/4G,EAAI+4G,IAEP,OAAO7G,EAAO8F,EAEhB,MAAO,EAAM,CAKX,GAJAh4G,EAAIw7G,EAAQ5I,IAAI4I,EAAQr0G,OAExB6wG,IAAah4G,EAAI+4G,IAAgB8C,EACjCA,GAAQ,IACJ77G,EAAI+4G,GACN,OAAO7G,EAAO8F,EAGhB,GAAIA,EAAM0C,GACR,MAAM,IAAIl7G,MAAM,wBAEnB,GA6CUu8G,GAAyBP,IACpC,IAAIQ,EAAeL,GAAYH,GAC/B,GAAqB,IAAjBQ,EACF,MAAO,GACF,CACL,IAAInI,EAAgBp6D,OAAO65D,cAAcsI,GAAUJ,IACnD,KAAMQ,EAAe,IACnB,MAAOA,IACLnI,GAAiBp6D,OAAO65D,cAAcsI,GAAUJ,SAGlD,MAAOQ,EAAe,EAAG,CACvB,MAAMC,EAAUD,EAAe,IAAQA,EAAe,IAEhDpnB,EAAQ4mB,EAAQ5I,IAAI+G,SAAS6B,EAAQr0G,IAAKq0G,EAAQr0G,IAAM80G,GAC9DT,EAAQr0G,KAAO80G,EAEfpI,GAAiBp6D,OAAO65D,cAAcjpF,MAAM,KAA0BuqE,GACtEonB,GAAgBC,CACjB,CAEH,OAAO5jC,mBAAmB6rB,OAAO2P,GAClC,GAQUqI,GAAuBV,GAChBloG,GAAAA,OAA+BooG,GAAkBF,IAYxDW,GAAgB7oG,GAAyB4oG,GAAuBH,GAqBhEK,GAAmB,CAACZ,EAASz6E,KACxC,MAAMs7E,EAAK,IAAIvC,SAAS0B,EAAQ5I,IAAIl1C,OAAQ89C,EAAQ5I,IAAIsD,WAAasF,EAAQr0G,IAAK45B,GAElF,OADAy6E,EAAQr0G,KAAO45B,EACRs7E,CAAP,EAMWC,GAAcd,GAAWY,GAAiBZ,EAAS,GAAGhB,WAAW,GAAG,GAKpE+B,GAAcf,GAAWY,GAAiBZ,EAAS,GAAGgB,WAAW,GAAG,GAKpEC,GAAejB,GAA+BY,GAAiBZ,EAAS,GAAIkB,YAAY,GAAG,GAUlGC,GAAqB,CACzBnB,IADyB,EAEzBA,GAAW,KACXM,GACAQ,GACAC,GACAE,GACAjB,IAAW,EACXA,IAAW,EACXW,GACAX,IACE,MAAMz6E,EAAM46E,GAAYH,GAIlB3vG,EAAM,CAAC,EACb,IAAK,IAAI9K,EAAI,EAAGA,EAAIggC,EAAKhgC,IAAK,CAC5B,MAAM0E,EAAM02G,GAAcX,GAC1B3vG,EAAIpG,GAAOm3G,GAAQpB,EACpB,CACD,OAAO3vG,CAAP,EAEF2vG,IACE,MAAMz6E,EAAM46E,GAAYH,GAClB5I,EAAM,GACZ,IAAK,IAAI7xG,EAAI,EAAGA,EAAIggC,EAAKhgC,IACvB6xG,EAAI3sG,KAAK22G,GAAQpB,IAEnB,OAAO5I,CAAP,EAEF8I,IAMWkB,GAAUpB,GAAWmB,GAAmB,IAAMf,GAAUJ,IAAUA,GAOxE,MAAMqB,WAAmBxB,GAK9B57G,YAAau3G,EAAY8F,GACvBl9G,MAAMo3G,GAIN94G,KAAK4+G,OAASA,EAKd5+G,KAAKyB,EAAI,KACTzB,KAAKoyB,MAAQ,CACd,CAEDysF,OAUE,OATmB,IAAf7+G,KAAKoyB,QACPpyB,KAAKyB,EAAIzB,KAAK4+G,OAAO5+G,MACjBq9G,GAAWr9G,MACbA,KAAKoyB,MAAQqrF,GAAYz9G,MAAQ,EAEjCA,KAAKoyB,OAAS,GAGlBpyB,KAAKoyB,QACoBpyB,KAAzB,CACD,EA0DI,MAAM8+G,WAA0B3B,GAIrC57G,YAAau3G,GACXp3G,MAAMo3G,GAIN94G,KAAKyB,EAAI,EACTzB,KAAKoyB,MAAQ,CACd,CAEDysF,OACE,GAAmB,IAAf7+G,KAAKoyB,MAAa,CACpBpyB,KAAKyB,EAAIm8G,GAAW59G,MAEpB,MAAM+6G,EAAaf,GAAoBh6G,KAAKyB,GAC5CzB,KAAKoyB,MAAQ,EACT2oF,IACF/6G,KAAKyB,GAAKzB,KAAKyB,EACfzB,KAAKoyB,MAAQqrF,GAAYz9G,MAAQ,EAEpC,CAED,OADAA,KAAKoyB,QACyBpyB,KAA9B,CACD,EAgCI,MAAM++G,WAA6B5B,GAIxC57G,YAAau3G,GACXp3G,MAAMo3G,GAIN94G,KAAKyB,EAAI,EACTzB,KAAKoyB,MAAQ,EACbpyB,KAAKupB,KAAO,CACb,CAKDs1F,OACE,GAAmB,IAAf7+G,KAAKoyB,MAAa,CACpB,MAAM7I,EAAOq0F,GAAW59G,MAElBg/G,EAAkB,EAAPz1F,EACjBvpB,KAAKupB,KAAOywF,GAAWzwF,EAAO,GAC9BvpB,KAAKoyB,MAAQ,EACT4sF,IACFh/G,KAAKoyB,MAAQqrF,GAAYz9G,MAAQ,EAEpC,CAGD,OAFAA,KAAKyB,GAAKzB,KAAKupB,KACfvpB,KAAKoyB,QACEpyB,KAAKyB,CACb,EAGI,MAAMw9G,GAIX19G,YAAau3G,GACX94G,KAAKs9G,QAAU,IAAIwB,GAAkBhG,GACrC94G,KAAKuS,IAAM0rG,GAAcj+G,KAAKs9G,SAI9Bt9G,KAAKk/G,KAAO,CACb,CAKDL,OACE,MAAMp0G,EAAMzK,KAAKk/G,KAAOl/G,KAAKs9G,QAAQuB,OAC/BpK,EAAMz0G,KAAKuS,IAAIzK,MAAM9H,KAAKk/G,KAAMz0G,GAEtC,OADAzK,KAAKk/G,KAAOz0G,EACLgqG,CACR,EC3pB0C,qBAAXvsF,QAA+D,qBAAvBA,OAAOi3F,aAA+Bj3F,OAAOi3F,YAAhH,MAEDC,GAA8B,qBAAXzoB,OAAyB,KAAOA,OAK5C0oB,GAAmC,OAAdD,GAC9Bv8E,IAEA,MAAMizE,EAAM,IAAIsG,YAAYv5E,GACtB6xE,EAAM,IAAI7d,WAAWif,GAE3B,OADAsJ,GAAUxoB,gBAAgB8d,GACnBoB,CAAP,EAEAjzE,IAEA,MAAMizE,EAAM,IAAIsG,YAAYv5E,GACtB6xE,EAAM,IAAI7d,WAAWif,GAC3B,IAAK,IAAIjzG,EAAI,EAAGA,EAAIggC,EAAKhgC,IACvB6xG,EAAI7xG,GAAKqH,KAAKy9D,KAAsB,WAAhBz9D,KAAKusF,WAA2B,GAEtD,OAAOqf,CAAP,ECVSwJ,GAAOp1G,KAAKusF,OAEZ8oB,GAAS,IAAM,IAAIC,YAAYH,GAAmB,IAAI,GAYtDI,GAAQ/K,GAAOA,EAAIsF,GAAWsF,KAAS5K,EAAIltG,SAGlDk4G,GAAiB,CAAC,MAAQ,KAAO,KAAO,KAAO,KACxCC,GAAS,IAAMD,GAAevwG,QAAQ,UAAmCjM,IACnFA,EAAIq8G,KAAW,IAAMr8G,EAAI,GAAGI,SAAS,MCb3ByK,GAASvK,GAAgC,IAAI6C,QAAQ7C,GCJrDo8G,GAAU,CAACC,EAAI5K,EAAMpyG,EAAI,KACpC,IACE,KAAOA,EAAIg9G,EAAGr4G,OAAQ3E,IACpBg9G,EAAGh9G,MAAMoyG,EAMZ,CARD,QAKMpyG,EAAIg9G,EAAGr4G,QACTo4G,GAAQC,EAAI5K,EAAMpyG,EAAI,EAEzB,GA2BUi9G,GAAiB,CAACl9G,EAAGoG,IAAMpG,IAAMoG,EAgBjC+2G,GAAe,CAACn9G,EAAGoG,KAC9B,GAAS,MAALpG,GAAkB,MAALoG,EACf,OAAO82G,GAAel9G,EAAGoG,GAE3B,GAAIpG,EAAErB,cAAgByH,EAAEzH,YACtB,OAAO,EAET,GAAIqB,IAAMoG,EACR,OAAO,EAET,OAAQpG,EAAErB,aACR,KAAK66G,YACHx5G,EAAI,IAAIi0F,WAAWj0F,GACnBoG,EAAI,IAAI6tF,WAAW7tF,GAErB,KAAK6tF,WACH,GAAIj0F,EAAEu1G,aAAenvG,EAAEmvG,WACrB,OAAO,EAET,IAAK,IAAIt1G,EAAI,EAAGA,EAAID,EAAE4E,OAAQ3E,IAC5B,GAAID,EAAEC,KAAOmG,EAAEnG,GACb,OAAO,EAGX,MAEF,KAAKmjF,IACH,GAAIpjF,EAAE8F,OAASM,EAAEN,KACf,OAAO,EAET,IAAK,MAAMjI,KAASmC,EAClB,IAAKoG,EAAEsmC,IAAI7uC,GACT,OAAO,EAGX,MAEF,KAAKuE,IACH,GAAIpC,EAAE8F,OAASM,EAAEN,KACf,OAAO,EAET,IAAK,MAAMnB,KAAO3E,EAAEs4B,OAClB,IAAKlyB,EAAEsmC,IAAI/nC,KAASw4G,GAAan9G,EAAEwC,IAAImC,GAAMyB,EAAE5D,IAAImC,IACjD,OAAO,EAGX,MAEF,KAAKwL,OACH,GAAI6M,GAAchd,KAAOgd,GAAc5W,GACrC,OAAO,EAET,IAAK,MAAMzB,KAAO3E,EAChB,IAAKgd,GAAmBhd,EAAG2E,KAASw4G,GAAan9G,EAAE2E,GAAMyB,EAAEzB,IACzD,OAAO,EAGX,MACF,KAAKzE,MACH,GAAIF,EAAE4E,SAAWwB,EAAExB,OACjB,OAAO,EAET,IAAK,IAAI3E,EAAI,EAAGA,EAAID,EAAE4E,OAAQ3E,IAC5B,IAAKk9G,GAAan9G,EAAEC,GAAImG,EAAEnG,IACxB,OAAO,EAGX,MACF,QACE,OAAO,EAEX,OAAO,CAAP,EC/HWkL,GAASpI,OCFf,MAAMq6G,GAKXz+G,YAAao9B,EAAMC,GACjB5+B,KAAK2+B,KAAOA,EACZ3+B,KAAK4+B,MAAQA,CACd,EASI,MAAM7wB,GAAS,CAAC4wB,EAAMC,IAAU,IAAIohF,GAAKrhF,EAAMC,GCXzCttB,GAAmD,qBAAb2W,SAA2BA,SAAW,CAAC,EAmL7Eg4F,IA5J2D,qBAAdpkG,WAA4B,IAAIA,UA4J1D5Y,GAAKD,GAAQC,GAAG,CAACxC,EAAO8G,IAAS,GAAEA,KAAO9G,OAAU0C,KAAK,KC7K5E+8G,IDqPe5uG,GAAI6uG,aACP7uG,GAAI8uG,UACK9uG,GAAI+uG,mBACV/uG,GAAIgvG,aACHhvG,GAAIivG,cACCjvG,GAAIkvG,mBACAlvG,GAAImvG,uBC3Pf9oF,KAAKC,KCJnB8oF,GAAOC,KACPC,GAASD,KACTE,GAAOF,KACPG,GAAOH,KACPI,GAAQJ,KACRK,GAAML,KACNM,GAASN,KACTO,GAASP,KACTQ,GAAUR,KAKjBS,GAAmB,CACvB,CAACV,IAAOW,GAAY,cAAe,QACnC,CAACT,IAASS,GAAY,cAAe,UACrC,CAACR,IAAOQ,GAAY,QAAS,QAC7B,CAACN,IAAQM,GAAY,QAAS,SAC9B,CAACP,IAAOO,GAAY,QAAS,QAC7B,CAACL,IAAMK,GAAY,QAAS,OAC5B,CAACJ,IAASI,GAAY,QAAS,UAC/B,CAACH,IAASG,GAAY,QAAS,UAC/B,CAACF,IAAUE,GAAY,QAAS,UAG5BC,GAAgB,CACpB,CAACZ,IAAO,OACR,CAACE,IAAS,OACV,CAACC,IAAO,QACR,CAACE,IAAQ,QACT,CAACD,IAAO,QACR,CAACE,IAAM,QACP,CAACC,IAAS,QACV,CAACC,IAAS,cACV,CAACC,IAAU,QAQPI,GAA4BtM,IAChC,MAAMuM,EAAa,GACbxlG,EAAS,GACTylG,EAAez+G,KAIrB,IAAI0+G,EAAU,GAEV7+G,EAAI,EAER,KAAOA,EAAIoyG,EAAKztG,OAAQ3E,IAAK,CAC3B,MAAM8+G,EAAM1M,EAAKpyG,GAEXsZ,EAAQilG,GAAiBO,GAC/B,QAAcj6G,IAAVyU,EACFslG,EAAa77G,IAAIuW,EAAMwiB,KAAMxiB,EAAMyiB,WAC9B,CACL,GAAI+iF,EAAIpgH,cAAgBg6C,QAAUomE,EAAIpgH,cAAgB6W,OASpD,MAT4D,CAC5D,MAAM+D,EAAQG,GAAqBmlG,GAC/B5+G,EAAI,GAAKsZ,EAAM3U,OAAS,GAC1Bg6G,EAAWz5G,KAAK,KAAO45G,GACvB3lG,EAAOjU,KAAKoU,IAEZqlG,EAAWz5G,KAAK45G,EAEnB,CAGF,CACF,CAQD,IANI9+G,EAAI,IAEN6+G,EAAU1lG,EACV0lG,EAAQ5uF,QAAQ0uF,EAAWr+G,KAAK,MAG3BN,EAAIoyG,EAAKztG,OAAQ3E,IAAK,CAC3B,MAAM8+G,EAAM1M,EAAKpyG,GACX8+G,aAAeh8G,QACnB+7G,EAAQ35G,KAAK45G,EAEhB,CACD,OAAOD,CAAP,EAOIE,GAAyB3M,IAC7B,MAAMuM,EAAa,GACbE,EAAU,GAGhB,IAAI7+G,EAAI,EAER,KAAOA,EAAIoyG,EAAKztG,OAAQ3E,IAAK,CAC3B,MAAM8+G,EAAM1M,EAAKpyG,GAEXsZ,EAAQmlG,GAAcK,GAC5B,QAAcj6G,IAAVyU,EACFqlG,EAAWz5G,KAAKoU,OACX,CACL,GAAIwlG,EAAIpgH,cAAgBg6C,QAAUomE,EAAIpgH,cAAgB6W,OAGpD,MAFAopG,EAAWz5G,KAAK45G,EAInB,CACF,CAOD,IANI9+G,EAAI,IAEN2+G,EAAWz5G,KAAK,QAChB25G,EAAQ35G,KAAKy5G,EAAWr+G,KAAK,MAGxBN,EAAIoyG,EAAKztG,OAAQ3E,IAAK,CAC3B,MAAM8+G,EAAM1M,EAAKpyG,GAEX8+G,aAAeh8G,QACnB+7G,EAAQ35G,KAAK45G,EAEhB,CACD,OAAOD,CAAP,EAIIG,GAAqBlJ,GAAaiJ,GAAyBL,GAKpDO,GAAQ,IAAI7M,KACvBj/E,QAAQmhE,OAAO0qB,GAAmB5M,IAElC8M,GAAUx5G,SAAQy5G,GAAMA,EAAGF,MAAM7M,IAAjC,EAgFW8M,GAAY,IAAI/7B,IAuJPtuD,KAMf,MC7WMuqF,GAAiBjwG,IAAQ,CAIpC,CAACrM,OAAOqxE,YACN,OAAOh3E,IACR,EAEDgS,SAQWkwG,GAAiB,CAAClrC,EAAUroC,IAAWszE,IAAe,KACjE,IAAIxN,EACJ,GACEA,EAAMz9B,EAAShlE,cACPyiG,EAAIvuG,OAASyoC,EAAO8lE,EAAIh0G,QAClC,OAAOg0G,CAAP,IAQW0N,GAAc,CAACnrC,EAAUorC,IAASH,IAAe,KAC5D,MAAM,KAAE/7G,EAAF,MAAQzF,GAAUu2E,EAAShlE,OACjC,MAAO,CAAE9L,OAAMzF,MAAOyF,OAAOwB,EAAY06G,EAAK3hH,GAA9C,IC3CK,MAAM4hH,GAKX9gH,YAAa+gH,EAAOz/E,GAIlB7iC,KAAKsiH,MAAQA,EAIbtiH,KAAK6iC,IAAMA,CACZ,EAUI,MAAM0/E,GACXhhH,cAIEvB,KAAKwiH,QAAU,IAAIx9G,GACpB,EAYS,MAACy9G,GAAwB,CAACC,EAAaC,EAAIn/G,IACrDm/G,EAAGH,QAAQj6G,SAAQ,CAACq6G,EAASC,KAC3B,MAAMC,EAAyCJ,EAAYpxG,IAAI5K,MAAM87G,QAAQp9G,IAAIy9G,GACjF,IAAK,IAAIhgH,EAAI,EAAGA,EAAI+/G,EAAQp7G,OAAQ3E,IAAK,CACvC,MAAMonB,EAAM24F,EAAQ//G,GACpBkgH,GAAeL,EAAaI,EAAS74F,EAAIq4F,MAAOr4F,EAAI4Y,IAAKr/B,EAC1D,KAWQw/G,GAAc,CAACC,EAAKX,KAC/B,IAAI3jF,EAAO,EACPC,EAAQqkF,EAAIz7G,OAAS,EACzB,MAAOm3B,GAAQC,EAAO,CACpB,MAAMskF,EAAWlJ,IAAYr7E,EAAOC,GAAS,GACvCukF,EAAMF,EAAIC,GACVE,EAAWD,EAAIb,MACrB,GAAIc,GAAYd,EAAO,CACrB,GAAIA,EAAQc,EAAWD,EAAItgF,IACzB,OAAOqgF,EAETvkF,EAAOukF,EAAW,CACnB,MACCtkF,EAAQskF,EAAW,CAEtB,CACD,OAAO,IAAP,EAWWG,GAAY,CAACV,EAAIt9G,KAC5B,MAAM49G,EAAMN,EAAGH,QAAQp9G,IAAIC,EAAGi+G,QAC9B,YAAe57G,IAARu7G,GAAoD,OAA/BD,GAAYC,EAAK59G,EAAGi9G,MAAhD,EASWiB,GAAwBZ,IACnCA,EAAGH,QAAQj6G,SAAQi7G,IAMjB,IAAI3gH,EAAG6C,EACP,IANA89G,EAAKv1G,MAAK,CAACrL,EAAGoG,IAAMpG,EAAE0/G,MAAQt5G,EAAEs5G,QAM3Bz/G,EAAI,EAAG6C,EAAI,EAAG7C,EAAI2gH,EAAKh8G,OAAQ3E,IAAK,CACvC,MAAM87B,EAAO6kF,EAAK99G,EAAI,GAChBk5B,EAAQ4kF,EAAK3gH,GACf87B,EAAK2jF,MAAQ3jF,EAAKkE,KAAOjE,EAAM0jF,MACjC3jF,EAAKkE,IAAMm3E,GAASr7E,EAAKkE,IAAKjE,EAAM0jF,MAAQ1jF,EAAMiE,IAAMlE,EAAK2jF,QAEzD58G,EAAI7C,IACN2gH,EAAK99G,GAAKk5B,GAEZl5B,IAEH,CACD89G,EAAKh8G,OAAS9B,CAAd,GAnBF,EA2BW+9G,GAAkBC,IAC7B,MAAMp1B,EAAS,IAAIi0B,GACnB,IAAK,IAAIoB,EAAO,EAAGA,EAAOD,EAAIl8G,OAAQm8G,IACpCD,EAAIC,GAAMnB,QAAQj6G,SAAQ,CAACq7G,EAAUN,KACnC,IAAKh1B,EAAOk0B,QAAQlzE,IAAIg0E,GAAS,CAM/B,MAAME,EAAOI,EAAS97G,QACtB,IAAK,IAAIjF,EAAI8gH,EAAO,EAAG9gH,EAAI6gH,EAAIl8G,OAAQ3E,IACrCiK,GAAe02G,EAAME,EAAI7gH,GAAG2/G,QAAQp9G,IAAIk+G,IAAW,IAErDh1B,EAAOk0B,QAAQ58G,IAAI09G,EAAQE,EAC5B,KAIL,OADAD,GAAsBj1B,GACfA,CAAP,EAYWu1B,GAAiB,CAAClB,EAAIW,EAAQhB,EAAO96G,KAChDxE,GAAmB2/G,EAAGH,QAASc,GAAQ,IAAM,KAAIv7G,KAAK,IAAIs6G,GAAWC,EAAO96G,GAA5E,EAGWs8G,GAAkB,IAAM,IAAIvB,GAS5BwB,GAAiCC,IAC5C,MAAMrB,EAAKmB,KAuBX,OAtBAE,EAAGxB,QAAQj6G,SAAQ,CAACu6G,EAASQ,KAI3B,MAAMW,EAAU,GAChB,IAAK,IAAIphH,EAAI,EAAGA,EAAIigH,EAAQt7G,OAAQ3E,IAAK,CACvC,MAAMqhH,EAASpB,EAAQjgH,GACvB,GAAIqhH,EAAOl7F,QAAS,CAClB,MAAMs5F,EAAQ4B,EAAO7+G,GAAGi9G,MACxB,IAAIz/E,EAAMqhF,EAAO18G,OACjB,GAAI3E,EAAI,EAAIigH,EAAQt7G,OAClB,IAAK,IAAIwK,EAAO8wG,EAAQjgH,EAAI,GAAIA,EAAI,EAAIigH,EAAQt7G,QAAUwK,EAAKgX,QAAShX,EAAO8wG,EAAc,KAAJjgH,GACvFggC,GAAO7wB,EAAKxK,OAGhBy8G,EAAQl8G,KAAK,IAAIs6G,GAAWC,EAAOz/E,GACpC,CACF,CACGohF,EAAQz8G,OAAS,GACnBm7G,EAAGH,QAAQ58G,IAAI09G,EAAQW,EACxB,IAEItB,CAAP,EAUWwB,GAAiB,CAAC7J,EAASqI,KACtCn7C,GAAsB8yC,EAAQ8J,YAAazB,EAAGH,QAAQ95G,MACtDi6G,EAAGH,QAAQj6G,SAAQ,CAAC07G,EAASX,KAC3BhJ,EAAQ+J,gBACR78C,GAAsB8yC,EAAQ8J,YAAad,GAC3C,MAAMzgF,EAAMohF,EAAQz8G,OACpBggE,GAAsB8yC,EAAQ8J,YAAavhF,GAC3C,IAAK,IAAIhgC,EAAI,EAAGA,EAAIggC,EAAKhgC,IAAK,CAC5B,MAAM8vD,EAAOsxD,EAAQphH,GACrBy3G,EAAQgK,aAAa3xD,EAAK2vD,OAC1BhI,EAAQiK,WAAW5xD,EAAK9vB,IACzB,IATH,EAoBW2hF,GAAgBlH,IAC3B,MAAMqF,EAAK,IAAIJ,GACTkC,EAAaC,GAAqBpH,EAAQqH,aAChD,IAAK,IAAI9hH,EAAI,EAAGA,EAAI4hH,EAAY5hH,IAAK,CACnCy6G,EAAQ+G,gBACR,MAAMf,EAASoB,GAAqBpH,EAAQqH,aACtCC,EAAkBF,GAAqBpH,EAAQqH,aACrD,GAAIC,EAAkB,EAAG,CACvB,MAAMC,EAAU7hH,GAAmB2/G,EAAGH,QAASc,GAAQ,IAAM,KAC7D,IAAK,IAAIzgH,EAAI,EAAGA,EAAI+hH,EAAiB/hH,IACnCgiH,EAAQ98G,KAAK,IAAIs6G,GAAW/E,EAAQwH,cAAexH,EAAQyH,aAE9D,CACF,CACD,OAAOpC,CAAP,EAgBWqC,GAAwB,CAAC1H,EAASoF,EAAah8G,KAC1D,MAAMu+G,EAAc,IAAI1C,GAClBkC,EAAaC,GAAqBpH,EAAQqH,aAChD,IAAK,IAAI9hH,EAAI,EAAGA,EAAI4hH,EAAY5hH,IAAK,CACnCy6G,EAAQ+G,gBACR,MAAMf,EAASoB,GAAqBpH,EAAQqH,aACtCC,EAAkBF,GAAqBpH,EAAQqH,aAC/C7B,EAAUp8G,EAAM87G,QAAQp9G,IAAIk+G,IAAW,GACvCrqG,EAAQgiB,GAASv0B,EAAO48G,GAC9B,IAAK,IAAIzgH,EAAI,EAAGA,EAAI+hH,EAAiB/hH,IAAK,CACxC,MAAMy/G,EAAQhF,EAAQwH,cAChBI,EAAW5C,EAAQhF,EAAQyH,YACjC,GAAIzC,EAAQrpG,EAAO,CACbA,EAAQisG,GACVrB,GAAeoB,EAAa3B,EAAQrqG,EAAOisG,EAAWjsG,GAExD,IAAIlN,EAAQo5G,GAAYrC,EAASR,GAM7B4B,EAASpB,EAAQ/2G,IAEhBm4G,EAAOl7F,SAAWk7F,EAAO7+G,GAAGi9G,MAAQA,IACvCQ,EAAQ96G,OAAO+D,EAAQ,EAAG,EAAGq5G,GAAU1C,EAAawB,EAAQ5B,EAAQ4B,EAAO7+G,GAAGi9G,QAC9Ev2G,KAEF,MAAOA,EAAQ+2G,EAAQt7G,OAAQ,CAG7B,GADA08G,EAASpB,EAAQ/2G,OACbm4G,EAAO7+G,GAAGi9G,MAAQ4C,GAQpB,MAPKhB,EAAOl7F,UACNk8F,EAAWhB,EAAO7+G,GAAGi9G,MAAQ4B,EAAO18G,QACtCs7G,EAAQ96G,OAAO+D,EAAO,EAAGq5G,GAAU1C,EAAawB,EAAQgB,EAAWhB,EAAO7+G,GAAGi9G,QAE/E4B,EAAOpwF,OAAO4uF,GAKnB,CACF,MACCmB,GAAeoB,EAAa3B,EAAQhB,EAAO4C,EAAW5C,EAEzD,CACF,CACD,GAAI2C,EAAYzC,QAAQ95G,KAAO,EAAG,CAChC,MAAMi6G,EAAK,IAAI0C,GAGf,OAFA79C,GAAsBm7C,EAAGyB,YAAa,GACtCD,GAAexB,EAAIsC,GACZtC,EAAGpI,cACX,CACD,OAAO,IAAP,EC/SW+K,GAAsB7uB,GAiB5B,MAAM8uB,WAAY1Q,GAIvBtzG,aAAa,KAAEikH,EAAO/uB,KAAT,aAA0BgvB,EAAe,KAAzC,GAA+CC,GAAK,EAApD,SAA0DC,EAAW,MAAM,GAA3E,KAAiFluF,EAAO,KAAxF,SAA8FmuF,GAAW,EAAzG,WAAgHC,GAAa,GAAS,CAAC,GAClJnkH,QACA1B,KAAK0lH,GAAKA,EACV1lH,KAAK2lH,SAAWA,EAChB3lH,KAAK8lH,SAAWR,KAChBtlH,KAAKwlH,KAAOA,EACZxlH,KAAKylH,aAAeA,EAIpBzlH,KAAK+lH,MAAQ,IAAI/gH,IACjBhF,KAAK0G,MAAQ,IAAIs/G,GAIjBhmH,KAAKimH,aAAe,KAIpBjmH,KAAKkmH,qBAAuB,GAI5BlmH,KAAKmmH,QAAU,IAAIngC,IAKnBhmF,KAAKomH,MAAQ,KACbpmH,KAAK6lH,WAAaA,EAClB7lH,KAAK4lH,SAAWA,EAChB5lH,KAAKy3B,KAAOA,EACZz3B,KAAKqmH,UAAW,EAChBrmH,KAAKsmH,WAAaC,IAAe3zG,IAC/B5S,KAAKG,GAAG,QAAQ,KACdH,KAAKqmH,UAAW,EAChBzzG,EAAQ5S,KAAR,GAFF,GAKH,CASDwmH,OACE,MAAM7zD,EAAO3yD,KAAKomH,MACL,OAATzzD,GAAkB3yD,KAAK6lH,YACzBY,GAA6B9zD,EAAKnoD,OAAQ8G,KAAKoxG,IAC7CA,EAAYgE,cAAc7/F,IAAI7mB,KAA9B,GACC,MAAM,GAEXA,KAAK6lH,YAAa,CACnB,CAEDc,aACE,OAAO3mH,KAAKmmH,OACb,CAEDS,iBACE,OAAO,IAAI5gC,IAAIljF,MAAM2F,KAAKzI,KAAKmmH,SAASnjH,KAAIsO,GAAOA,EAAIk0G,OACxD,CAaDiB,SAAUjjH,EAAG0tC,EAAS,MACpBu1E,GAASzmH,KAAMwD,EAAG0tC,EACnB,CA4BD9rC,IAAKzD,EAAMklH,EAAkBC,IAC3B,MAAM37G,EAAOnI,GAAmBhD,KAAK+lH,MAAOpkH,GAAM,KAEhD,MAAMN,EAAI,IAAIwlH,EAEd,OADAxlH,EAAE0lH,WAAW/mH,KAAM,MACZqB,CAAP,IAEI2lH,EAAS77G,EAAK5J,YACpB,GAAIslH,IAAoBC,IAAgBE,IAAWH,EAAiB,CAClE,GAAIG,IAAWF,GAAc,CAE3B,MAAMzlH,EAAI,IAAIwlH,EACdxlH,EAAEqoB,KAAOve,EAAKue,KACdve,EAAKue,KAAKnhB,SAAgCrG,IACxC,KAAa,OAANA,EAAYA,EAAIA,EAAEy8B,KAEvBz8B,EAAEsI,OAASnJ,CACZ,IAEHA,EAAE4lH,OAAS97G,EAAK87G,OAChB,IAAK,IAAI/kH,EAAIb,EAAE4lH,OAAc,OAAN/kH,EAAYA,EAAIA,EAAE08B,MACvC18B,EAAEsI,OAASnJ,EAKb,OAHAA,EAAE6lH,QAAU/7G,EAAK+7G,QACjBlnH,KAAK+lH,MAAMngH,IAAIjE,EAAMN,GACrBA,EAAE0lH,WAAW/mH,KAAM,MACZqB,CACR,CACC,MAAM,IAAIC,MAAO,sBAAqBK,0DAEzC,CACD,OAAOwJ,CACR,CASDg8G,SAAUxlH,EAAO,IAEf,OAAO3B,KAAKoF,IAAIzD,EAAMylH,GACvB,CAQDC,QAAS1lH,EAAO,IAEd,OAAO3B,KAAKoF,IAAIzD,EAAM2lH,GACvB,CASD/7F,OAAQ5pB,EAAO,IAEb,OAAO3B,KAAKoF,IAAIzD,EAAM4lH,GACvB,CAQDC,eAAgB7lH,EAAO,IAErB,OAAO3B,KAAKoF,IAAIzD,EAAM8lH,GACvB,CAUDrkH,SAIE,MAAMkO,EAAM,CAAC,EAMb,OAJAtR,KAAK+lH,MAAMx9G,SAAQ,CAAC9H,EAAO8G,KACzB+J,EAAI/J,GAAO9G,EAAM2C,QAAjB,IAGKkO,CACR,CAKDo2B,UACE56B,GAAW9M,KAAKmmH,SAAS59G,SAAQm/G,GAAUA,EAAOhgF,YAClD,MAAMirB,EAAO3yD,KAAKomH,MAClB,GAAa,OAATzzD,EAAe,CACjB3yD,KAAKomH,MAAQ,KACb,MAAM/+G,EAAqCsrD,EAAKtrD,QAChDA,EAAQiK,IAAM,IAAIi0G,GAAI,CAAEC,KAAMxlH,KAAKwlH,QAASn+G,EAAQsgH,KAAM9B,YAAY,IACtEx+G,EAAQiK,IAAI80G,MAAQzzD,EACpB8zD,GAA6B9zD,EAAMnoD,OAAO8G,KAAKoxG,IAC7C,MAAMpxG,EAAMjK,EAAQiK,IACfqhD,EAAK3pC,SACR05F,EAAYkF,aAAa/gG,IAAIvV,GAE/BoxG,EAAYmF,eAAehhG,IAAI7mB,KAA/B,GACC,MAAM,EACV,CACDA,KAAKm1G,KAAK,YAAa,EAAC,IACxBn1G,KAAKm1G,KAAK,UAAW,CAACn1G,OACtB0B,MAAMgmC,SACP,CAMDvnC,GAAI2nH,EAAWtkH,GACb9B,MAAMvB,GAAG2nH,EAAWtkH,EACrB,CAMD65B,IAAKyqF,EAAWtkH,GACd9B,MAAM27B,IAAIyqF,EAAWtkH,EACtB,EC1RI,MAAMukH,GAIXxmH,YAAa+7G,GACXt9G,KAAK2kH,YAAcrH,CACpB,CAED+G,gBAEC,CAKDS,cACE,OAAOJ,GAAqB1kH,KAAK2kH,YAClC,CAKDI,YACE,OAAOL,GAAqB1kH,KAAK2kH,YAClC,EAGI,MAAMqD,WAAwBD,GAInCE,aACE,OAAOC,GAASxD,GAAqB1kH,KAAK2kH,aAAcD,GAAqB1kH,KAAK2kH,aACnF,CAKDwD,cACE,OAAOD,GAASxD,GAAqB1kH,KAAK2kH,aAAcD,GAAqB1kH,KAAK2kH,aACnF,CAMDyD,aACE,OAAO1D,GAAqB1kH,KAAK2kH,YAClC,CAKD0D,WACE,OAAO3D,GAAmB1kH,KAAK2kH,YAChC,CAKD2D,aACE,OAAO5D,GAAuB1kH,KAAK2kH,YACpC,CAKD4D,iBACE,OAAkD,IAA3C7D,GAAqB1kH,KAAK2kH,YAClC,CAKD6D,cACE,OAAO9D,GAAqB1kH,KAAK2kH,YAClC,CAOD8D,UACE,OAAO/D,GAAqB1kH,KAAK2kH,YAClC,CAKDjG,UACE,OAAOgG,GAAiB1kH,KAAK2kH,YAC9B,CAKD+D,UACE,OAAOlpD,GAAsBklD,GAA2B1kH,KAAK2kH,aAC9D,CAODgE,WACE,OAAO5mH,KAAKuZ,MAAMopG,GAAuB1kH,KAAK2kH,aAC/C,CAKDiE,UACE,OAAOlE,GAAuB1kH,KAAK2kH,YACpC,EAGI,MAAMkE,GAIXtnH,YAAa+7G,GAIXt9G,KAAK8oH,UAAY,EACjB9oH,KAAK2kH,YAAcrH,CACpB,CAED+G,gBACErkH,KAAK8oH,UAAY,CAClB,CAKDhE,cAEE,OADA9kH,KAAK8oH,WAAapE,GAAqB1kH,KAAK2kH,aACrC3kH,KAAK8oH,SACb,CAKD/D,YACE,MAAMx7F,EAAOm7F,GAAqB1kH,KAAK2kH,aAAe,EAEtD,OADA3kH,KAAK8oH,WAAav/F,EACXA,CACR,EAGI,MAAMw/F,WAAwBF,GAInCtnH,YAAa+7G,GACX57G,MAAM47G,GAONt9G,KAAKk7B,KAAO,GACZwpF,GAAqBpH,GACrBt9G,KAAKgpH,gBAAkB,IAAItE,GAA8BA,GAA2BpH,IACpFt9G,KAAKipH,cAAgB,IAAIvE,GAA2BA,GAA2BpH,IAC/Et9G,KAAKkpH,iBAAmB,IAAIxE,GAA8BA,GAA2BpH,IACrFt9G,KAAKmpH,kBAAoB,IAAIzE,GAA8BA,GAA2BpH,IACtFt9G,KAAKopH,YAAc,IAAI1E,GAAoBA,GAA2BpH,GAAUoH,IAChF1kH,KAAKqpH,cAAgB,IAAI3E,GAAuBA,GAA2BpH,IAC3Et9G,KAAKspH,kBAAoB,IAAI5E,GAAoBA,GAA2BpH,GAAUoH,IACtF1kH,KAAKupH,eAAiB,IAAI7E,GAA2BA,GAA2BpH,IAChFt9G,KAAKwpH,WAAa,IAAI9E,GAA2BA,GAA2BpH,GAC7E,CAKD2K,aACE,OAAO,IAAIwB,GAAGzpH,KAAKipH,cAAcpK,OAAQ7+G,KAAKkpH,iBAAiBrK,OAChE,CAKDsJ,cACE,OAAO,IAAIsB,GAAGzpH,KAAKipH,cAAcpK,OAAQ7+G,KAAKmpH,kBAAkBtK,OACjE,CAMDuJ,aACE,OAAOpoH,KAAKipH,cAAcpK,MAC3B,CAKDwJ,WACE,OAA8BroH,KAAKopH,YAAYvK,MAChD,CAKDyJ,aACE,OAAOtoH,KAAKqpH,cAAcxK,MAC3B,CAKD0J,iBACE,OAAyC,IAAlCvoH,KAAKspH,kBAAkBzK,MAC/B,CAKD2J,cACE,OAAOxoH,KAAKupH,eAAe1K,MAC5B,CAOD4J,UACE,OAAOzoH,KAAKwpH,WAAW3K,MACxB,CAKDH,UACE,OAAOgG,GAAiB1kH,KAAK2kH,YAC9B,CAKD+D,UACE,OAAOhE,GAA2B1kH,KAAK2kH,YACxC,CASDgE,WACE,OAAOjE,GAAiB1kH,KAAK2kH,YAC9B,CAKDiE,UACE,MAAMc,EAAW1pH,KAAKgpH,gBAAgBnK,OACtC,GAAI6K,EAAW1pH,KAAKk7B,KAAK1zB,OACvB,OAAOxH,KAAKk7B,KAAKwuF,GACZ,CACL,MAAMniH,EAAMvH,KAAKqpH,cAAcxK,OAE/B,OADA7+G,KAAKk7B,KAAKnzB,KAAKR,GACRA,CACR,CACF,EC/QI,MAAMoiH,GACXpoH,cACEvB,KAAKokH,YAAc58C,IACpB,CAED+yC,eACE,OAAO/yC,GAAsBxnE,KAAKokH,YACnC,CAEDC,gBAEC,CAKDC,aAAchC,GACZ96C,GAAsBxnE,KAAKokH,YAAa9B,EACzC,CAKDiC,WAAY1hF,GACV2kC,GAAsBxnE,KAAKokH,YAAavhF,EACzC,EAGI,MAAM+mF,WAAwBD,GAInCE,YAAaxkH,GACXmiE,GAAsBxnE,KAAKokH,YAAa/+G,EAAGi+G,QAC3C97C,GAAsBxnE,KAAKokH,YAAa/+G,EAAGi9G,MAC5C,CAKDwH,aAAczkH,GACZmiE,GAAsBxnE,KAAKokH,YAAa/+G,EAAGi+G,QAC3C97C,GAAsBxnE,KAAKokH,YAAa/+G,EAAGi9G,MAC5C,CAMDyH,YAAazG,GACX97C,GAAsBxnE,KAAKokH,YAAad,EACzC,CAKD0G,UAAW1wD,GACTkO,GAAoBxnE,KAAKokH,YAAa9qD,EACvC,CAKD2wD,YAAaxoH,GACX+lE,GAAwBxnE,KAAKokH,YAAa3iH,EAC3C,CAKDyoH,gBAAiBC,GACf3iD,GAAsBxnE,KAAKokH,YAAa+F,EAAS,EAAI,EACtD,CAKDC,aAAc9wD,GACZkO,GAAsBxnE,KAAKokH,YAAa9qD,EACzC,CAOD+wD,SAAUxnF,GACR2kC,GAAsBxnE,KAAKokH,YAAavhF,EACzC,CAKD05E,SAAUvpC,GACRxL,GAAkBxnE,KAAKokH,YAAapxC,EACrC,CAKDs3C,SAAUxU,GACRtuC,GAA4BxnE,KAAKokH,YAAatO,EAC/C,CAKDyU,UAAWC,GACThjD,GAAwBxnE,KAAKokH,YAAariH,KAAKC,UAAUwoH,GAC1D,CAKDC,SAAUljH,GACRigE,GAAwBxnE,KAAKokH,YAAa78G,EAC3C,EAGI,MAAMmjH,GACXnpH,cACEvB,KAAKokH,YAAc58C,KACnBxnE,KAAK8oH,UAAY,CAClB,CAEDvO,eACE,OAAO/yC,GAAsBxnE,KAAKokH,YACnC,CAEDC,gBACErkH,KAAK8oH,UAAY,CAClB,CAKDxE,aAAchC,GACZ,MAAM/4F,EAAO+4F,EAAQtiH,KAAK8oH,UAC1B9oH,KAAK8oH,UAAYxG,EACjB96C,GAAsBxnE,KAAKokH,YAAa76F,EACzC,CAKDg7F,WAAY1hF,GACE,IAARA,GACFg0C,KAEFrP,GAAsBxnE,KAAKokH,YAAavhF,EAAM,GAC9C7iC,KAAK8oH,WAAajmF,CACnB,EAGI,MAAMwiF,WAAwBqF,GACnCnpH,cACEG,QAIA1B,KAAK2qH,OAAS,IAAI3lH,IAOlBhF,KAAK0pH,SAAW,EAChB1pH,KAAK4qH,gBAAkB,IAAIpjD,GAC3BxnE,KAAK6qH,cAAgB,IAAIrjD,GACzBxnE,KAAK8qH,iBAAmB,IAAItjD,GAC5BxnE,KAAK+qH,kBAAoB,IAAIvjD,GAC7BxnE,KAAKgrH,YAAc,IAAIxjD,GAAoBA,IAC3CxnE,KAAKirH,cAAgB,IAAIzjD,GACzBxnE,KAAKkrH,kBAAoB,IAAI1jD,GAAoBA,IACjDxnE,KAAKmrH,eAAiB,IAAI3jD,GAC1BxnE,KAAKorH,WAAa,IAAI5jD,EACvB,CAED+yC,eACE,MAAMD,EAAU9yC,KAahB,OAZAA,GAAsB8yC,EAAS,GAC/B9yC,GAA4B8yC,EAASt6G,KAAK4qH,gBAAgBrQ,gBAC1D/yC,GAA4B8yC,EAASt6G,KAAK6qH,cAActQ,gBACxD/yC,GAA4B8yC,EAASt6G,KAAK8qH,iBAAiBvQ,gBAC3D/yC,GAA4B8yC,EAASt6G,KAAK+qH,kBAAkBxQ,gBAC5D/yC,GAA4B8yC,EAAS9yC,GAAsBxnE,KAAKgrH,cAChExjD,GAA4B8yC,EAASt6G,KAAKirH,cAAc1Q,gBACxD/yC,GAA4B8yC,EAAS9yC,GAAsBxnE,KAAKkrH,oBAChE1jD,GAA4B8yC,EAASt6G,KAAKmrH,eAAe5Q,gBACzD/yC,GAA4B8yC,EAASt6G,KAAKorH,WAAW7Q,gBAErD/yC,GAAyB8yC,EAAS9yC,GAAsBxnE,KAAKokH,cACtD58C,GAAsB8yC,EAC9B,CAKDuP,YAAaxkH,GACXrF,KAAK6qH,cAAcr2D,MAAMnvD,EAAGi+G,QAC5BtjH,KAAK8qH,iBAAiBt2D,MAAMnvD,EAAGi9G,MAChC,CAKDwH,aAAczkH,GACZrF,KAAK6qH,cAAcr2D,MAAMnvD,EAAGi+G,QAC5BtjH,KAAK+qH,kBAAkBv2D,MAAMnvD,EAAGi9G,MACjC,CAKDyH,YAAazG,GACXtjH,KAAK6qH,cAAcr2D,MAAM8uD,EAC1B,CAKD0G,UAAW1wD,GACTt5D,KAAKgrH,YAAYx2D,MAAM8E,EACxB,CAKD2wD,YAAaxoH,GACXzB,KAAKirH,cAAcz2D,MAAM/yD,EAC1B,CAKDyoH,gBAAiBC,GACfnqH,KAAKkrH,kBAAkB12D,MAAM21D,EAAS,EAAI,EAC3C,CAKDC,aAAc9wD,GACZt5D,KAAKmrH,eAAe32D,MAAM8E,EAC3B,CAOD+wD,SAAUxnF,GACR7iC,KAAKorH,WAAW52D,MAAM3xB,EACvB,CAKD05E,SAAUvpC,GACRxL,GAAkBxnE,KAAKokH,YAAapxC,EACrC,CAKDs3C,SAAUxU,GACRtuC,GAA4BxnE,KAAKokH,YAAatO,EAC/C,CASDyU,UAAWC,GACThjD,GAAkBxnE,KAAKokH,YAAaoG,EACrC,CAUDC,SAAUljH,GACR,MAAM+6G,EAAQtiH,KAAK2qH,OAAOvlH,IAAImC,QAChBG,IAAV46G,GAeFtiH,KAAK4qH,gBAAgBp2D,MAAMx0D,KAAK0pH,YAChC1pH,KAAKirH,cAAcz2D,MAAMjtD,IAEzBvH,KAAK4qH,gBAAgBp2D,MAAM8tD,EAE9B,ECvQH,MAAM+I,GAAe,CAAC/Q,EAASwI,EAASQ,EAAQhB,KAE9CA,EAAQtI,GAASsI,EAAOQ,EAAQ,GAAGz9G,GAAGi9G,OACtC,MAAMgJ,EAAkBnG,GAAYrC,EAASR,GAE7C96C,GAAsB8yC,EAAQ8J,YAAatB,EAAQt7G,OAAS8jH,GAC5DhR,EAAQyP,YAAYzG,GACpB97C,GAAsB8yC,EAAQ8J,YAAa9B,GAC3C,MAAMiJ,EAAczI,EAAQwI,GAE5BC,EAAY/2D,MAAM8lD,EAASgI,EAAQiJ,EAAYlmH,GAAGi9G,OAClD,IAAK,IAAIz/G,EAAIyoH,EAAkB,EAAGzoH,EAAIigH,EAAQt7G,OAAQ3E,IACpDigH,EAAQjgH,GAAG2xD,MAAM8lD,EAAS,EAC3B,EAWUkR,GAAsB,CAAClR,EAAS5zG,EAAO+kH,KAElD,MAAMC,EAAK,IAAI1mH,IACfymH,EAAIljH,SAAQ,CAAC+5G,EAAOgB,KAEdroF,GAASv0B,EAAO48G,GAAUhB,GAC5BoJ,EAAG9lH,IAAI09G,EAAQhB,EAChB,IAEHqJ,GAAejlH,GAAO6B,SAAQ,CAAC+5G,EAAOgB,KAC/BmI,EAAIn8E,IAAIg0E,IACXoI,EAAG9lH,IAAI09G,EAAQ,EAChB,IAGH97C,GAAsB8yC,EAAQ8J,YAAasH,EAAGhjH,MAG9C5F,MAAM2F,KAAKijH,EAAGpiC,WAAWr7E,MAAK,CAACrL,EAAGoG,IAAMA,EAAE,GAAKpG,EAAE,KAAI2F,SAAQ,EAAE+6G,EAAQhB,MAErE+I,GAAa/Q,EAAS5zG,EAAM87G,QAAQp9G,IAAIk+G,GAASA,EAAQhB,EAAzD,GAFF,EAcWsJ,GAAwB,CAACtO,EAAShsG,KAI7C,MAAMu6G,EAAa7oH,KACb8oH,EAAoBpH,GAAqBpH,EAAQqH,aACvD,IAAK,IAAI9hH,EAAI,EAAGA,EAAIipH,EAAmBjpH,IAAK,CAC1C,MAAMkpH,EAAkBrH,GAAqBpH,EAAQqH,aAI/CqH,EAAO,IAAIlpH,MAAMipH,GACjBzI,EAAShG,EAAQ8K,aACvB,IAAI9F,EAAQoC,GAAqBpH,EAAQqH,aAEzCkH,EAAWjmH,IAAI09G,EAAQ,CAAEzgH,EAAG,EAAGmpH,SAC/B,IAAK,IAAInpH,EAAI,EAAGA,EAAIkpH,EAAiBlpH,IAAK,CACxC,MAAMy2D,EAAOgkD,EAAQ+K,WACrB,OAAQxN,GAAevhD,GACrB,KAAK,EAAG,CACN,MAAMz2B,EAAMy6E,EAAQmL,UACpBuD,EAAKnpH,GAAK,IAAIopH,GAAG/D,GAAS5E,EAAQhB,GAAQz/E,GAC1Cy/E,GAASz/E,EACT,KACD,CACD,KAAK,GAAI,CAEP,MAAMA,EAAM6hF,GAAqBpH,EAAQqH,aACzCqH,EAAKnpH,GAAK,IAAIqpH,GAAKhE,GAAS5E,EAAQhB,GAAQz/E,GAC5Cy/E,GAASz/E,EACT,KACD,CACD,QAAS,CAMP,MAAMspF,EAA8D,KAAxC7yD,GAAQuhD,GAAcA,KAK5CqJ,EAAS,IAAIl2B,GACjBk6B,GAAS5E,EAAQhB,GACjB,MACChpD,EAAOuhD,MAAiBA,GAAcyC,EAAQ2K,aAAe,KAC9D,MACC3uD,EAAOuhD,MAAiBA,GAAcyC,EAAQ6K,cAAgB,KAC/DgE,EAAsB7O,EAAQiL,iBAAmBj3G,EAAIlM,IAAIk4G,EAAQgL,cAAgBhL,EAAQ2K,aAAgB,KACzGkE,IAAuB7yD,EAAOuhD,MAAiBA,GAAcyC,EAAQgL,aAAe,KACpF8D,GAAgB9O,EAAShkD,IA2B3B0yD,EAAKnpH,GAAKqhH,EACV5B,GAAS4B,EAAO18G,MACjB,EAEJ,CAEF,CACD,OAAOqkH,CAAP,EA8BIQ,GAAmB,CAAC3J,EAAah8G,EAAO4lH,KAI5C,MAAMjrF,EAAQ,GAEd,IAAIkrF,EAAuBzpH,MAAM2F,KAAK6jH,EAAkBpxF,QAAQjtB,MAAK,CAACrL,EAAGoG,IAAMpG,EAAIoG,IACnF,GAAoC,IAAhCujH,EAAqB/kH,OACvB,OAAO,KAET,MAAMglH,EAAsB,KAC1B,GAAoC,IAAhCD,EAAqB/kH,OACvB,OAAO,KAET,IAAIilH,EAAmEH,EAAkBlnH,IAAImnH,EAAqBA,EAAqB/kH,OAAS,IAChJ,MAAOilH,EAAkBT,KAAKxkH,SAAWilH,EAAkB5pH,EAAG,CAE5D,GADA0pH,EAAqB90G,QACjB80G,EAAqB/kH,OAAS,GAGhC,OAAO,KAFPilH,EAAmEH,EAAkBlnH,IAAImnH,EAAqBA,EAAqB/kH,OAAS,GAI/I,CACD,OAAOilH,CAAP,EAEF,IAAIC,EAAmBF,IACvB,GAAyB,OAArBE,GAA8C,IAAjBrrF,EAAM75B,OACrC,OAAO,KAMT,MAAMmlH,EAAc,IAAI3G,GAClB4G,EAAY,IAAI5nH,IAKhB6nH,EAAkB,CAACvJ,EAAQhB,KAC/B,MAAMwK,EAASF,EAAUxnH,IAAIk+G,IACf,MAAVwJ,GAAkBA,EAASxK,IAC7BsK,EAAUhnH,IAAI09G,EAAQhB,EACvB,EAKH,IAAIyK,EAAgCL,EAAkBV,KAAyBU,EAAkB7pH,KAEjG,MAAMoW,EAAQ,IAAIjU,IAEZgoH,EAAmB,KACvB,IAAK,MAAMr6D,KAAQtxB,EAAO,CACxB,MAAMiiF,EAAS3wD,EAAKttD,GAAGi+G,OACjB2J,EAAoBX,EAAkBlnH,IAAIk+G,GAC5C2J,GAEFA,EAAkBpqH,IAClB8pH,EAAYnK,QAAQ58G,IAAI09G,EAAQ2J,EAAkBjB,KAAKlkH,MAAMmlH,EAAkBpqH,IAC/EypH,EAAkBx4F,OAAOwvF,GACzB2J,EAAkBpqH,EAAI,EACtBoqH,EAAkBjB,KAAO,IAGzBW,EAAYnK,QAAQ58G,IAAI09G,EAAQ,CAAC3wD,IAGnC45D,EAAuBA,EAAqB59E,QAAOzrC,GAAKA,IAAMogH,GAC/D,CACDjiF,EAAM75B,OAAS,CAAf,EAIF,MAAO,EAAM,CACX,GAAIulH,EAAUxrH,cAAgB2qH,GAAM,CAClC,MAAMgB,EAAalqH,GAAmBiW,EAAO8zG,EAAU1nH,GAAGi+G,QAAQ,IAAMroF,GAASv0B,EAAOqmH,EAAU1nH,GAAGi+G,UAC/Fp2G,EAASggH,EAAaH,EAAU1nH,GAAGi9G,MACzC,GAAIp1G,EAAS,EAEXm0B,EAAMt5B,KAAKglH,GACXF,EAAgBE,EAAU1nH,GAAGi+G,OAAQyJ,EAAU1nH,GAAGi9G,MAAQ,GAE1D0K,QACK,CACL,MAAMG,EAAUJ,EAAUK,WAAW1K,EAAah8G,GAClD,GAAgB,OAAZymH,EAAkB,CACpB9rF,EAAMt5B,KAAKglH,GAKX,MAAMM,EAAaf,EAAkBlnH,IAA2B+nH,IAAa,CAAEnB,KAAM,GAAInpH,EAAG,GAC5F,GAAIwqH,EAAWrB,KAAKxkH,SAAW6lH,EAAWxqH,EAInC,CACLkqH,EAAYM,EAAWrB,KAAKqB,EAAWxqH,KACvC,QACD,CALCgqH,EAAuCM,EAAUlyF,GAASv0B,EAAOymH,IACjEH,GAKH,MAAqB,IAAX9/G,GAAgBA,EAAS6/G,EAAUvlH,UAE5CulH,EAAUO,UAAU5K,EAAax1G,GACjC+L,EAAMrT,IAAImnH,EAAU1nH,GAAGi+G,OAAQyJ,EAAU1nH,GAAGi9G,MAAQyK,EAAUvlH,QAEjE,CACF,CAED,GAAI65B,EAAM75B,OAAS,EACjBulH,EAAoC1rF,EAAM5pB,WACrC,GAAyB,OAArBi1G,GAA6BA,EAAiB7pH,EAAI6pH,EAAiBV,KAAKxkH,OACjFulH,EAAoCL,EAAiBV,KAAKU,EAAiB7pH,SACtE,CAEL,GADA6pH,EAAmBF,IACM,OAArBE,EAEF,MAEAK,EAAoCL,EAAiBV,KAAKU,EAAiB7pH,IAE9E,CACF,CACD,GAAI8pH,EAAYnK,QAAQ95G,KAAO,EAAG,CAChC,MAAM4xG,EAAU,IAAI+K,GAKpB,OAJAmG,GAAoBlR,EAASqS,EAAa,IAAI3nH,KAG9CwiE,GAAsB8yC,EAAQ8J,YAAa,GACpC,CAAE+I,QAASP,EAAW/mH,OAAQy0G,EAAQC,eAC9C,CACD,OAAO,IAAP,EAUWgT,GAA8B,CAACjT,EAASoI,IAAgB8I,GAAoBlR,EAASoI,EAAYpxG,IAAI5K,MAAOg8G,EAAY8K,aAcxHC,GAAe,CAACnQ,EAASoQ,EAAMC,EAAmBC,EAAgB,IAAI7E,GAAgBzL,KACjGmJ,GAASiH,GAAMhL,IAEbA,EAAY1iE,OAAQ,EACpB,IAAI6tE,GAAQ,EACZ,MAAMv8G,EAAMoxG,EAAYpxG,IAClB5K,EAAQ4K,EAAI5K,MAEZs9G,EAAK4H,GAAsBgC,EAAet8G,GAK1Cq7G,EAAcN,GAAiB3J,EAAah8G,EAAOs9G,GACnDhjG,EAAUta,EAAMonH,eACtB,GAAI9sG,EAAS,CAEX,IAAK,MAAOsiG,EAAQhB,KAAUthG,EAAQmsG,QACpC,GAAI7K,EAAQrnF,GAASv0B,EAAO48G,GAAS,CACnCuK,GAAQ,EACR,KACD,CAEH,GAAIlB,EAAa,CAEf,IAAK,MAAOrJ,EAAQhB,KAAUqK,EAAYQ,QAAS,CACjD,MAAML,EAAS9rG,EAAQmsG,QAAQ/nH,IAAIk+G,IACrB,MAAVwJ,GAAkBA,EAASxK,IAC7BthG,EAAQmsG,QAAQvnH,IAAI09G,EAAQhB,EAE/B,CACDthG,EAAQnb,OAASkoH,GAAe,CAAC/sG,EAAQnb,OAAQ8mH,EAAY9mH,QAC9D,CACF,MACCa,EAAMonH,eAAiBnB,EAIzB,MAAMqB,EAAShJ,GAAsB4I,EAAelL,EAAah8G,GACjE,GAAIA,EAAMunH,UAAW,CAEnB,MAAMC,EAAkB,IAAInF,GAAgBrE,GAAuBh+G,EAAMunH,YACzEvJ,GAAqBwJ,EAAgBvJ,aACrC,MAAMwJ,EAAUnJ,GAAsBkJ,EAAiBxL,EAAah8G,GAGlEA,EAAMunH,UAFJD,GAAUG,EAEMJ,GAAe,CAACC,EAAQG,IAKxBH,GAAUG,CAE/B,MAECznH,EAAMunH,UAAYD,EAOpB,GAAIH,EAAO,CACT,MAAMhoH,EAA8Ca,EAAMonH,eAAgBjoH,OAC1Ea,EAAMonH,eAAiB,KACvBM,GAAc1L,EAAYpxG,IAAKzL,EAChC,IACA8nH,GAAmB,GA2BXS,GAAgB,CAACV,EAAM7nH,EAAQ8nH,EAAmBU,EAAWtF,MACxE,MAAMzL,EAAUoH,GAAuB7+G,GACvC4nH,GAAanQ,EAASoQ,EAAMC,EAAmB,IAAIU,EAAS/Q,GAA5D,EAcWgR,GAAc,CAACZ,EAAM7nH,EAAQ8nH,IAAsBS,GAAcV,EAAM7nH,EAAQ8nH,EAAmB3F,IAYlGuG,GAAqB,CAACjU,EAAShpG,EAAKk9G,EAAoB,IAAIxpH,OACvEwmH,GAAoBlR,EAAShpG,EAAI5K,MAAO8nH,GACxCrK,GAAe7J,EAASyJ,GAA+BzyG,EAAI5K,OAA3D,EAgBW+nH,GAAwB,CAACn9G,EAAKo9G,EAA2B,IAAI73B,WAAW,CAAC,IAAKyjB,EAAU,IAAI+K,MACvG,MAAMmJ,EAAoBG,GAAkBD,GAC5CH,GAAmBjU,EAAShpG,EAAKk9G,GACjC,MAAMI,EAAU,CAACtU,EAAQC,gBAQzB,GANIjpG,EAAI5K,MAAMunH,WACZW,EAAQ7mH,KAAKuJ,EAAI5K,MAAMunH,WAErB38G,EAAI5K,MAAMonH,gBACZc,EAAQ7mH,KAAK8mH,GAAav9G,EAAI5K,MAAMonH,eAAejoH,OAAQ6oH,IAEzDE,EAAQpnH,OAAS,EAAG,CACtB,GAAI8yG,EAAQ/4G,cAAgBqoH,GAC1B,OAAOkF,GAAaF,EAAQ5rH,KAAI,CAAC6C,EAAQhD,IAAY,IAANA,EAAUgD,EAASkpH,GAA0BlpH,MACvF,GAAIy0G,EAAQ/4G,cAAgB8jH,GACjC,OAAO0I,GAAea,EAEzB,CACD,OAAOA,EAAQ,EAAf,EAeWI,GAAsB,CAAC19G,EAAKo9G,IAA6BD,GAAsBn9G,EAAKo9G,EAA0B,IAAI9E,IAUlHqF,GAAkB3R,IAC7B,MAAM0G,EAAK,IAAIh/G,IACTkqH,EAAWxK,GAAqBpH,EAAQqH,aAC9C,IAAK,IAAI9hH,EAAI,EAAGA,EAAIqsH,EAAUrsH,IAAK,CACjC,MAAMygH,EAASoB,GAAqBpH,EAAQqH,aACtCrC,EAAQoC,GAAqBpH,EAAQqH,aAC3CX,EAAGp+G,IAAI09G,EAAQhB,EAChB,CACD,OAAO0B,CAAP,EAqBW2K,GAAoBQ,GAAgBF,GAAgB,IAAIlH,GAAYrD,GAAuByK,KAO3FC,GAAmB,CAAC9U,EAAS+U,KACxC7nD,GAAsB8yC,EAAQ8J,YAAaiL,EAAG3mH,MAC9C5F,MAAM2F,KAAK4mH,EAAG/lC,WAAWr7E,MAAK,CAACrL,EAAGoG,IAAMA,EAAE,GAAKpG,EAAE,KAAI2F,SAAQ,EAAE+6G,EAAQhB,MACrE96C,GAAsB8yC,EAAQ8J,YAAad,GAC3C97C,GAAsB8yC,EAAQ8J,YAAa9B,EAA3C,IAEKhI,GASIgV,GAA2B,CAAChV,EAAShpG,IAAQ89G,GAAiB9U,EAASqR,GAAer6G,EAAI5K,QAW1F6oH,GAAsB,CAACj+G,EAAKgpG,EAAU,IAAIoQ,MACjDp5G,aAAetM,IACjBoqH,GAAiB9U,EAAShpG,GAE1Bg+G,GAAyBhV,EAAShpG,GAE7BgpG,EAAQC,gBAWJiV,GAAoBl+G,GAAOi+G,GAAoBj+G,EAAK,IAAIq4G,IC3nB9D,MAAM8F,GACXluH,cAIEvB,KAAK6B,EAAI,EACV,EAUI,MAAM6tH,GAAqB,IAAM,IAAID,GAa/BE,GAA0B,CAAC5Y,EAAcvzG,IACpDuzG,EAAal1G,EAAEkG,KAAKvE,GAaTosH,GAA6B,CAAC7Y,EAAcvzG,KACvD,MAAM3B,EAAIk1G,EAAal1G,EACjBghC,EAAMhhC,EAAE2F,OACduvG,EAAal1G,EAAIA,EAAE8sC,QAAOjsC,GAAKc,IAAMd,IACjCmgC,IAAQk0E,EAAal1G,EAAE2F,QACzBwuB,QAAQ6gD,MAAM,0DACf,EA2BUg5C,GAA4B,CAAC9Y,EAAc+Y,EAAMC,IAC5DvsH,GAAUuzG,EAAal1G,EAAG,CAACiuH,EAAMC,IC/E5B,MAAMtG,GAKXloH,YAAa+hH,EAAQhB,GAKnBtiH,KAAKsjH,OAASA,EAKdtjH,KAAKsiH,MAAQA,CACd,EAUS,MAAC0N,GAAa,CAACptH,EAAGoG,IAAMpG,IAAMoG,GAAY,OAANpG,GAAoB,OAANoG,GAAcpG,EAAE0gH,SAAWt6G,EAAEs6G,QAAU1gH,EAAE0/G,QAAUt5G,EAAEs5G,MAStG4F,GAAW,CAAC5E,EAAQhB,IAAU,IAAImH,GAAGnG,EAAQhB,GAuC7C2N,GAAkB9kH,IAE7B,IAAK,MAAO5D,EAAK9G,KAAU0K,EAAKmG,IAAIy0G,MAAMz8B,UACxC,GAAI7oF,IAAU0K,EACZ,OAAO5D,EAGX,MAAMsvE,IAAN,EC3EWq5C,GAAa,CAAC1lH,EAAQpB,KACjC,MAAiB,OAAVA,EAAgB,CACrB,GAAIA,EAAMoB,SAAWA,EACnB,OAAO,EAETpB,EAA0CA,EAAMoB,OAAQ47G,KACzD,CACD,OAAO,CAAP,ECsBK,MAAM+J,GAOX5uH,YAAa4J,EAAMilH,EAAOz9D,EAAMlpC,EAAQ,GAItCzpB,KAAKmL,KAAOA,EAIZnL,KAAKowH,MAAQA,EAIbpwH,KAAK2yD,KAAOA,EAYZ3yD,KAAKypB,MAAQA,CACd,EAOS,MAuBC4mG,GAAiCxiH,GAAQ,IAAIsiH,GAA8B,MAAbtiH,EAAK1C,KAAe,KAAO+8G,GAASr6G,EAAK1C,KAAKm4G,OAAQz1G,EAAK1C,KAAKm3G,OAAQz0G,EAAKuiH,OAAS,KAAmB,MAAbviH,EAAK8kD,KAAe,KAAOu1D,GAASr6G,EAAK8kD,KAAK2wD,OAAQz1G,EAAK8kD,KAAK2vD,OAAsB,MAAdz0G,EAAK4b,MAAgB,EAAI5b,EAAK4b,OAEtQ,MAAM6mG,GAMX/uH,YAAa4J,EAAMY,EAAO0d,EAAQ,GAIhCzpB,KAAKmL,KAAOA,EAIZnL,KAAK+L,MAAQA,EACb/L,KAAKypB,MAAQA,CACd,EAUI,MAAM8mG,GAAyB,CAACplH,EAAMY,EAAO0d,EAAQ,IAAM,IAAI6mG,GAAiBnlH,EAAMY,EAAO0d,GASvF+mG,GAAyB,CAACrlH,EAAMwnD,EAAMlpC,KACjD,IAAIgnG,EAAS,KACTL,EAAQ,KAMZ,OALmB,OAAfjlH,EAAKi7G,MACPgK,EAAQH,GAAgB9kH,GAExBslH,EAASvI,GAAS/8G,EAAKi7G,MAAM/gH,GAAGi+G,OAAQn4G,EAAKi7G,MAAM/gH,GAAGi9G,OAEjD,IAAI6N,GAAiBM,EAAQL,EAAOz9D,EAAMlpC,EAAjD,EAaWinG,GAAsC,CAACvlH,EAAMY,EAAO0d,EAAQ,KACvE,IAAIpoB,EAAI8J,EAAK87G,OACb,GAAIx9F,EAAQ,EAAG,CAEb,GAAc,IAAV1d,EACF,OAAOykH,GAAuBrlH,EAAM,KAAMse,GAE5C1d,GACD,CACD,MAAa,OAAN1K,EAAY,CACjB,IAAKA,EAAE2nB,SAAW3nB,EAAEsvH,UAAW,CAC7B,GAAItvH,EAAEmG,OAASuE,EAEb,OAAOykH,GAAuBrlH,EAAM+8G,GAAS7mH,EAAEgE,GAAGi+G,OAAQjiH,EAAEgE,GAAGi9G,MAAQv2G,GAAQ0d,GAEjF1d,GAAS1K,EAAEmG,MACZ,CACD,GAAgB,OAAZnG,EAAEu9B,OAAkBnV,EAAQ,EAE9B,OAAO+mG,GAAuBrlH,EAAM9J,EAAEuvH,OAAQnnG,GAEhDpoB,EAAIA,EAAEu9B,KACP,CACD,OAAO4xF,GAAuBrlH,EAAM,KAAMse,EAA1C,EAgFWonG,GAA6C,CAACC,EAAMx/G,KAC/D,MAAM5K,EAAQ4K,EAAI5K,MACZqqH,EAAUD,EAAKn+D,KACfq+D,EAASF,EAAK3lH,KACdilH,EAAQU,EAAKV,MACb3mG,EAAQqnG,EAAKrnG,MACnB,IAAIte,EAAO,KACPY,EAAQ,EACZ,GAAgB,OAAZglH,EAAkB,CACpB,GAAI91F,GAASv0B,EAAOqqH,EAAQzN,SAAWyN,EAAQzO,MAC7C,OAAO,KAET,MAAM7N,EAAMwc,GAAavqH,EAAOqqH,GAC1BnyF,EAAQ61E,EAAI9hD,KAClB,KAAM/zB,aAAiBovD,IACrB,OAAO,KAGT,GADA7iF,EAAyCyzB,EAAMp0B,OAC5B,OAAfW,EAAKi7G,QAAmBj7G,EAAKi7G,MAAMp9F,QAAS,CAC9Cjd,EAAS6yB,EAAM5V,UAAY4V,EAAM+xF,UAAa,EAAKlc,EAAIlrF,MAAQE,GAAS,EAAI,EAAI,GAChF,IAAIvnB,EAAI08B,EAAMD,KACd,MAAa,OAANz8B,GACAA,EAAE8mB,SAAW9mB,EAAEyuH,YAClB5kH,GAAS7J,EAAEsF,QAEbtF,EAAIA,EAAEy8B,IAET,CACF,KAAM,CACL,GAAc,OAAVyxF,EACFjlH,EAAOmG,EAAIlM,IAAIgrH,OACV,IAAe,OAAXY,EAaT,MAAMn6C,KAboB,CAC1B,GAAI57C,GAASv0B,EAAOsqH,EAAO1N,SAAW0N,EAAO1O,MAE3C,OAAO,KAET,MAAM,KAAE3vD,GAASs+D,GAAavqH,EAAOsqH,GACrC,KAAIr+D,aAAgBq7B,IAAQr7B,EAAKtrD,mBAAmB6pH,IAIlD,OAAO,KAHP/lH,EAAOwnD,EAAKtrD,QAAQ8D,IAKvB,CAEA,CAECY,EADE0d,GAAS,EACHte,EAAK+7G,QAEL,CAEX,CACD,OAAOqJ,GAAuBplH,EAAMY,EAAO+kH,EAAKrnG,MAAhD,EAUW0nG,GAA2B,CAACvuH,EAAGoG,IAAMpG,IAAMoG,GAChD,OAANpG,GAAoB,OAANoG,GAAcpG,EAAEwtH,QAAUpnH,EAAEonH,OAASJ,GAAWptH,EAAE+vD,KAAM3pD,EAAE2pD,OAASq9D,GAAWptH,EAAEuI,KAAMnC,EAAEmC,OAASvI,EAAE6mB,QAAUzgB,EAAEygB,MC/SxH,MAAM2nG,GAKX7vH,YAAaohH,EAAI0M,GAIfrvH,KAAK2iH,GAAKA,EAKV3iH,KAAKqvH,GAAKA,CACX,EAQS,MAkECgC,GAAiB,CAAC1O,EAAI+I,IAAO,IAAI0F,GAASzO,EAAI+I,GAQ9C4F,IANgBD,GAAevN,KAAmB,IAAI9+G,KAM3CsM,GAAO+/G,GAAetN,GAA+BzyG,EAAI5K,OAAQilH,GAAer6G,EAAI5K,SAS/F6qH,GAAY,CAAC5+D,EAAM2+D,SAA0B5pH,IAAb4pH,GACxC3+D,EAAK3pC,QACNsoG,EAASjC,GAAG//E,IAAIqjB,EAAKttD,GAAGi+G,UAAYgO,EAASjC,GAAGjqH,IAAIutD,EAAKttD,GAAGi+G,SAAW,GAAK3wD,EAAKttD,GAAGi9G,QAAUe,GAAUiO,EAAS3O,GAAIhwD,EAAKttD,IAMjHmsH,GAA+B,CAAC9O,EAAa4O,KACxD,MAAM75F,EAAOz0B,GAAmB0/G,EAAYjrF,KAAM+5F,GAA8B5rH,IAC1Ec,EAAQg8G,EAAYpxG,IAAI5K,MAEzB+wB,EAAK6X,IAAIgiF,KACZA,EAASjC,GAAG9mH,SAAQ,CAAC+5G,EAAOgB,KACtBhB,EAAQrnF,GAASv0B,EAAO48G,IAC1BmO,GAAkB/O,EAAawF,GAAS5E,EAAQhB,GACjD,IAEHG,GAAsBC,EAAa4O,EAAS3O,IAAIhwD,QAChDl7B,EAAK5Q,IAAIyqG,GACV,EC7II,MAAMtL,GACXzkH,cAIEvB,KAAKwiH,QAAU,IAAIx9G,IAInBhF,KAAK8tH,eAAiB,KAItB9tH,KAAKiuH,UAAY,IAClB,EAaI,MAAMtC,GAAiBjlH,IAC5B,MAAMglH,EAAK,IAAI1mH,IAKf,OAJA0B,EAAM87G,QAAQj6G,SAAQ,CAACu6G,EAASQ,KAC9B,MAAMY,EAASpB,EAAQA,EAAQt7G,OAAS,GACxCkkH,EAAG9lH,IAAI09G,EAAQY,EAAO7+G,GAAGi9G,MAAQ4B,EAAO18G,OAAxC,IAEKkkH,CAAP,EAWWzwF,GAAW,CAACv0B,EAAO48G,KAC9B,MAAMR,EAAUp8G,EAAM87G,QAAQp9G,IAAIk+G,GAClC,QAAgB57G,IAAZo7G,EACF,OAAO,EAET,MAAM4O,EAAa5O,EAAQA,EAAQt7G,OAAS,GAC5C,OAAOkqH,EAAWrsH,GAAGi9G,MAAQoP,EAAWlqH,MAAxC,EA4BWmqH,GAAY,CAACjrH,EAAOw9G,KAC/B,IAAIpB,EAAUp8G,EAAM87G,QAAQp9G,IAAI8+G,EAAO7+G,GAAGi+G,QAC1C,QAAgB57G,IAAZo7G,EACFA,EAAU,GACVp8G,EAAM87G,QAAQ58G,IAAIs+G,EAAO7+G,GAAGi+G,OAAQR,OAC/B,CACL,MAAM4O,EAAa5O,EAAQA,EAAQt7G,OAAS,GAC5C,GAAIkqH,EAAWrsH,GAAGi9G,MAAQoP,EAAWlqH,SAAW08G,EAAO7+G,GAAGi9G,MACxD,MAAMzrC,IAET,CACDisC,EAAQ/6G,KAAKm8G,EAAb,EAYWiB,GAAc,CAACrC,EAASR,KACnC,IAAI3jF,EAAO,EACPC,EAAQkkF,EAAQt7G,OAAS,EACzB27G,EAAML,EAAQlkF,GACdwkF,EAAWD,EAAI99G,GAAGi9G,MACtB,GAAIc,IAAad,EACf,OAAO1jF,EAKT,IAAIskF,EAAWlJ,GAAYsI,GAASc,EAAWD,EAAI37G,OAAS,GAAMo3B,GAClE,MAAOD,GAAQC,EAAO,CAGpB,GAFAukF,EAAML,EAAQI,GACdE,EAAWD,EAAI99G,GAAGi9G,MACdc,GAAYd,EAAO,CACrB,GAAIA,EAAQc,EAAWD,EAAI37G,OACzB,OAAO07G,EAETvkF,EAAOukF,EAAW,CACnB,MACCtkF,EAAQskF,EAAW,EAErBA,EAAWlJ,IAAYr7E,EAAOC,GAAS,EACxC,CAGD,MAAMi4C,IAAN,EAaW1xE,GAAO,CAACuB,EAAOrB,KAK1B,MAAMy9G,EAAUp8G,EAAM87G,QAAQp9G,IAAIC,EAAGi+G,QACrC,OAAOR,EAAQqC,GAAYrC,EAASz9G,EAAGi9G,OAAvC,EAQW5L,GAAwDvxG,GAOxDysH,GAAsB,CAAClP,EAAaI,EAASR,KACxD,MAAMv2G,EAAQo5G,GAAYrC,EAASR,GAC7B4B,EAASpB,EAAQ/2G,GACvB,OAAIm4G,EAAO7+G,GAAGi9G,MAAQA,GAAS4B,aAAkBl2B,IAC/C80B,EAAQ96G,OAAO+D,EAAQ,EAAG,EAAGq5G,GAAU1C,EAAawB,EAAQ5B,EAAQ4B,EAAO7+G,GAAGi9G,QACvEv2G,EAAQ,GAEVA,CAAP,EAaW0lH,GAAoB,CAAC/O,EAAar9G,KAC7C,MAAMy9G,EAAsCJ,EAAYpxG,IAAI5K,MAAM87G,QAAQp9G,IAAIC,EAAGi+G,QACjF,OAAOR,EAAQ8O,GAAoBlP,EAAaI,EAASz9G,EAAGi9G,OAA5D,EAcWuP,GAAkB,CAACnP,EAAah8G,EAAOrB,KAKlD,MAAMy9G,EAAUp8G,EAAM87G,QAAQp9G,IAAIC,EAAGi+G,QAC/Bv3G,EAAQo5G,GAAYrC,EAASz9G,EAAGi9G,OAChC4B,EAASpB,EAAQ/2G,GAIvB,OAHI1G,EAAGi9G,QAAU4B,EAAO7+G,GAAGi9G,MAAQ4B,EAAO18G,OAAS,GAAK08G,EAAO3iH,cAAgB0qH,IAC7EnJ,EAAQ96G,OAAO+D,EAAQ,EAAG,EAAGq5G,GAAU1C,EAAawB,EAAQ7+G,EAAGi9G,MAAQ4B,EAAO7+G,GAAGi9G,MAAQ,IAEpF4B,CAAP,EAYW4N,GAAgB,CAACprH,EAAOw9G,EAAQ6N,KAC3C,MAAMjP,EAAyCp8G,EAAM87G,QAAQp9G,IAAI8+G,EAAO7+G,GAAGi+G,QAC3ER,EAAQqC,GAAYrC,EAASoB,EAAO7+G,GAAGi9G,QAAUyP,CAAjD,EAcWhP,GAAiB,CAACL,EAAaI,EAASkP,EAAYnvF,EAAKr/B,KACpE,GAAY,IAARq/B,EACF,OAEF,MAAMqiF,EAAW8M,EAAanvF,EAC9B,IACIqhF,EADAn4G,EAAQ6lH,GAAoBlP,EAAaI,EAASkP,GAEtD,GACE9N,EAASpB,EAAQ/2G,KACbm5G,EAAWhB,EAAO7+G,GAAGi9G,MAAQ4B,EAAO18G,QACtCoqH,GAAoBlP,EAAaI,EAASoC,GAE5C1hH,EAAE0gH,SACKn4G,EAAQ+2G,EAAQt7G,QAAUs7G,EAAQ/2G,GAAO1G,GAAGi9G,MAAQ4C,EAN7D,EChNK,MAAM3tF,GAMXh2B,YAAa+P,EAAK4/B,EAAQ8O,GAKxBhgD,KAAKsR,IAAMA,EAKXtR,KAAKiyH,UAAY,IAAI1P,GAKrBviH,KAAKwtH,YAAc7B,GAAer6G,EAAI5K,OAKtC1G,KAAKkyH,WAAa,IAAIltH,IAOtBhF,KAAKqsC,QAAU,IAAIrnC,IAMnBhF,KAAKmyH,mBAAqB,IAAIntH,IAI9BhF,KAAKoyH,cAAgB,GAIrBpyH,KAAKkxC,OAASA,EAKdlxC,KAAKy3B,KAAO,IAAIzyB,IAKhBhF,KAAKggD,MAAQA,EAIbhgD,KAAK4nH,aAAe,IAAI5hC,IAIxBhmF,KAAK6nH,eAAiB,IAAI7hC,IAI1BhmF,KAAK0mH,cAAgB,IAAI1gC,GAC1B,EAQI,MAAMqsC,GAAoC,CAAC/X,EAASoI,MACd,IAAvCA,EAAYuP,UAAUzP,QAAQ95G,OAAe1F,GAAQ0/G,EAAYwP,YAAY,CAAC5P,EAAOgB,IAAWZ,EAAY8K,YAAYpoH,IAAIk+G,KAAYhB,OAG5IiB,GAAsBb,EAAYuP,WAClC1E,GAA4BjT,EAASoI,GACrCyB,GAAe7J,EAASoI,EAAYuP,YAC7B,GAsBIK,GAA8B,CAAC5P,EAAav3G,EAAMonH,KAC7D,MAAM5/D,EAAOxnD,EAAKi7G,OACL,OAATzzD,GAAkBA,EAAKttD,GAAGi9G,OAASI,EAAY8K,YAAYpoH,IAAIutD,EAAKttD,GAAGi+G,SAAW,KAAO3wD,EAAK3pC,UAChGhmB,GAAmB0/G,EAAYr2E,QAASlhC,EAAMvF,IAAYihB,IAAI0rG,EAC/D,EAOGC,GAAqB,CAAC1P,EAAS75G,KACnC,MAAM01B,EAAOmkF,EAAQ75G,EAAM,GACrB21B,EAAQkkF,EAAQ75G,GAClB01B,EAAK3V,UAAY4V,EAAM5V,SAAW2V,EAAKp9B,cAAgBq9B,EAAMr9B,aAC3Do9B,EAAK8zF,UAAU7zF,KACjBkkF,EAAQ96G,OAAOiB,EAAK,GAChB21B,aAAiBovD,IAA4B,OAApBpvD,EAAM2zF,WAAwD3zF,EAAMp0B,OAAQkf,KAAKtkB,IAAIw5B,EAAM2zF,aAAe3zF,GACnGA,EAAMp0B,OAAQkf,KAAK9jB,IAAIg5B,EAAM2zF,UAAgC5zF,GAGpG,EAQG+zF,GAAiB,CAAC/P,EAAIj8G,EAAOi/G,KACjC,IAAK,MAAOrC,EAAQqP,KAAgBhQ,EAAGH,QAAQl5B,UAAW,CACxD,MAAMw5B,EAAyCp8G,EAAM87G,QAAQp9G,IAAIk+G,GACjE,IAAK,IAAIsP,EAAKD,EAAYnrH,OAAS,EAAGorH,GAAM,EAAGA,IAAM,CACnD,MAAMC,EAAaF,EAAYC,GACzBE,EAAqBD,EAAWvQ,MAAQuQ,EAAWhwF,IACzD,IACE,IAAIkwF,EAAK5N,GAAYrC,EAAS+P,EAAWvQ,OAAQ4B,EAASpB,EAAQiQ,GAClEA,EAAKjQ,EAAQt7G,QAAU08G,EAAO7+G,GAAGi9G,MAAQwQ,EACzC5O,EAASpB,IAAUiQ,GACnB,CACA,MAAM7O,EAASpB,EAAQiQ,GACvB,GAAIF,EAAWvQ,MAAQuQ,EAAWhwF,KAAOqhF,EAAO7+G,GAAGi9G,MACjD,MAEE4B,aAAkBl2B,IAAQk2B,EAAOl7F,UAAYk7F,EAAOx9F,MAAQi/F,EAASzB,IACvEA,EAAOwB,GAAGh/G,GAAO,EAEpB,CACF,CACF,GAOGssH,GAAoB,CAACrQ,EAAIj8G,KAG7Bi8G,EAAGH,QAAQj6G,SAAQ,CAACoqH,EAAarP,KAC/B,MAAMR,EAAyCp8G,EAAM87G,QAAQp9G,IAAIk+G,GACjE,IAAK,IAAIsP,EAAKD,EAAYnrH,OAAS,EAAGorH,GAAM,EAAGA,IAAM,CACnD,MAAMC,EAAaF,EAAYC,GAEzBK,EAAwBjZ,GAAS8I,EAAQt7G,OAAS,EAAG,EAAI29G,GAAYrC,EAAS+P,EAAWvQ,MAAQuQ,EAAWhwF,IAAM,IACxH,IACE,IAAIkwF,EAAKE,EAAuB/O,EAASpB,EAAQiQ,GACjDA,EAAK,GAAK7O,EAAO7+G,GAAGi9G,OAASuQ,EAAWvQ,MACxC4B,EAASpB,IAAUiQ,GAEnBP,GAAmB1P,EAASiQ,EAE/B,IAbH,EA+BIG,GAAsB,CAACC,EAAqBtwH,KAChD,GAAIA,EAAIswH,EAAoB3rH,OAAQ,CAClC,MAAMk7G,EAAcyQ,EAAoBtwH,GAClCyO,EAAMoxG,EAAYpxG,IAClB5K,EAAQ4K,EAAI5K,MACZi8G,EAAKD,EAAYuP,UACjBmB,EAAe1Q,EAAY0P,cACjC,IACE7O,GAAsBZ,GACtBD,EAAYwP,WAAavG,GAAejJ,EAAYpxG,IAAI5K,OACxD4K,EAAI20G,aAAe,KACnB30G,EAAI6jG,KAAK,sBAAuB,CAACuN,EAAapxG,IAQ9C,MAAMuuG,EAAK,GAEX6C,EAAYr2E,QAAQ9jC,SAAQ,CAAC8qH,EAAMC,IACjCzT,EAAG93G,MAAK,KACiB,OAAnBurH,EAASlN,OAAmBkN,EAASlN,MAAMp9F,SAC7CsqG,EAASC,cAAc7Q,EAAa2Q,EACrC,MAGLxT,EAAG93G,MAAK,KAEN26G,EAAYyP,mBAAmB5pH,SAAQ,CAAC4qD,EAAQhoD,IAC9C00G,EAAG93G,MAAK,KAGa,OAAfoD,EAAKi7G,OAAmBj7G,EAAKi7G,MAAMp9F,UACrCmqC,EAASA,EACNxkB,QAAOpQ,GACiB,OAAvBA,EAAMluB,OAAO+1G,QAAmB7nF,EAAMluB,OAAO+1G,MAAMp9F,UAEvDmqC,EACG5qD,SAAQg2B,IACPA,EAAMi1F,cAAgBroH,CAAtB,IAGJgoD,EACGllD,MAAK,CAACwlH,EAAQC,IAAWD,EAAOtiH,KAAK3J,OAASksH,EAAOviH,KAAK3J,SAG7DqoH,GAA0B1kH,EAAKwoH,KAAMxgE,EAAQuvD,GAC9C,MAGL7C,EAAG93G,MAAK,IAAMuJ,EAAI6jG,KAAK,mBAAoB,CAACuN,EAAapxG,KAAzD,IAEFsuG,GAAQC,EAAI,GA2Eb,CA1HD,QAmDMvuG,EAAIo0G,IACNgN,GAAe/P,EAAIj8G,EAAO4K,EAAIq0G,UAEhCqN,GAAkBrQ,EAAIj8G,GAGtBg8G,EAAYwP,WAAW3pH,SAAQ,CAAC+5G,EAAOgB,KACrC,MAAMsQ,EAAclR,EAAY8K,YAAYpoH,IAAIk+G,IAAW,EAC3D,GAAIsQ,IAAgBtR,EAAO,CACzB,MAAMQ,EAAyCp8G,EAAM87G,QAAQp9G,IAAIk+G,GAE3DuQ,EAAiB7Z,GAASmL,GAAYrC,EAAS8Q,GAAc,GACnE,IAAK,IAAI/wH,EAAIigH,EAAQt7G,OAAS,EAAG3E,GAAKgxH,EAAgBhxH,IACpD2vH,GAAmB1P,EAASjgH,EAE/B,KAKH,IAAK,IAAIA,EAAI,EAAGA,EAAIuwH,EAAa5rH,OAAQ3E,IAAK,CAC5C,MAAM,OAAEygH,EAAF,MAAUhB,GAAU8Q,EAAavwH,GAAGwC,GACpCy9G,EAAyCp8G,EAAM87G,QAAQp9G,IAAIk+G,GAC3DwQ,EAAoB3O,GAAYrC,EAASR,GAC3CwR,EAAoB,EAAIhR,EAAQt7G,QAClCgrH,GAAmB1P,EAASgR,EAAoB,GAE9CA,EAAoB,GACtBtB,GAAmB1P,EAASgR,EAE/B,CAOD,GANKpR,EAAY1iE,OAAS0iE,EAAYwP,WAAW9sH,IAAIkM,EAAIw0G,YAAcpD,EAAY8K,YAAYpoH,IAAIkM,EAAIw0G,YACrGiO,GAAcA,GAAgBA,GAAc,SAAUA,GAAgBA,GAAa,sEACnFziH,EAAIw0G,SAAWR,MAGjBh0G,EAAI6jG,KAAK,0BAA2B,CAACuN,EAAapxG,IAC9CA,EAAIwjG,WAAWxlE,IAAI,UAAW,CAChC,MAAMgrE,EAAU,IAAIsP,GACdvM,EAAagV,GAAkC/X,EAASoI,GAC1DrF,GACF/rG,EAAI6jG,KAAK,SAAU,CAACmF,EAAQC,eAAgBmI,EAAYxxE,OAAQ5/B,EAAKoxG,GAExE,CACD,GAAIpxG,EAAIwjG,WAAWxlE,IAAI,YAAa,CAClC,MAAMgrE,EAAU,IAAI+K,GACdhI,EAAagV,GAAkC/X,EAASoI,GAC1DrF,GACF/rG,EAAI6jG,KAAK,WAAY,CAACmF,EAAQC,eAAgBmI,EAAYxxE,OAAQ5/B,EAAKoxG,GAE1E,CACD,MAAM,aAAEkF,EAAF,cAAgBlB,EAAhB,eAA+BmB,GAAmBnF,GACpDkF,EAAal/G,KAAO,GAAKm/G,EAAen/G,KAAO,GAAKg+G,EAAch+G,KAAO,KAC3Ek/G,EAAar/G,SAAQm/G,IACnBA,EAAO5B,SAAWx0G,EAAIw0G,SACK,MAAvB4B,EAAOjC,eACTiC,EAAOjC,aAAen0G,EAAIm0G,cAE5Bn0G,EAAI60G,QAAQt/F,IAAI6gG,EAAhB,IAEFG,EAAet/G,SAAQm/G,GAAUp2G,EAAI60G,QAAQryF,OAAO4zF,KACpDp2G,EAAI6jG,KAAK,UAAW,CAAC,CAAE6e,OAAQtN,EAAen5F,MAAOq6F,EAAct6F,QAASu6F,GAAkBv2G,EAAKoxG,IACnGmF,EAAet/G,SAAQm/G,GAAUA,EAAOhgF,aAGtCyrF,EAAoB3rH,QAAU3E,EAAI,GACpCyO,EAAI40G,qBAAuB,GAC3B50G,EAAI6jG,KAAK,uBAAwB,CAAC7jG,EAAK6hH,KAEvCD,GAAoBC,EAAqBtwH,EAAI,EAEhD,CACF,GAYU4jH,GAAW,CAACn1G,EAAK9N,EAAG0tC,EAAS,KAAM8O,GAAQ,KACtD,MAAMmzE,EAAsB7hH,EAAI40G,qBAChC,IAAI+N,GAAc,EACO,OAArB3iH,EAAI20G,eACNgO,GAAc,EACd3iH,EAAI20G,aAAe,IAAI1uF,GAAYjmB,EAAK4/B,EAAQ8O,GAChDmzE,EAAoBprH,KAAKuJ,EAAI20G,cACM,IAA/BkN,EAAoB3rH,QACtB8J,EAAI6jG,KAAK,wBAAyB,CAAC7jG,IAErCA,EAAI6jG,KAAK,oBAAqB,CAAC7jG,EAAI20G,aAAc30G,KAEnD,IACE9N,EAAE8N,EAAI20G,aAaP,CAdD,QAGMgO,GAAed,EAAoB,KAAO7hH,EAAI20G,cAShDiN,GAAoBC,EAAqB,EAE5C,GCxYH,MAAMe,GAKJ3yH,YAAa4yH,EAAWC,GACtBp0H,KAAKo0H,WAAaA,EAClBp0H,KAAKm0H,UAAYA,EAIjBn0H,KAAKy3B,KAAO,IAAIzyB,GACjB,EAOH,MAAMqvH,GAA4B,CAAClnG,EAAImnG,EAAIC,KACzC9R,GAAsBt1F,EAAIonG,EAAUJ,WAAWxhE,IACzCA,aAAgBq7B,IAAQsmC,EAAGE,MAAMn4G,MAAKlR,GAAQ+kH,GAAW/kH,EAAMwnD,MACjE8hE,GAAS9hE,GAAM,EAChB,GAHH,EAaI+hE,GAAe,CAACC,EAAatzF,EAAOuzF,KAKxC,IAAI/rH,EAAS,KAKTgsH,EAAM,KACV,MAAMvjH,EAAMqjH,EAAYrjH,IAClBkjH,EAAQG,EAAYH,MA4D1B,GA3DA/N,GAASn1G,GAAKoxG,IACZ,MAAOrhF,EAAM75B,OAAS,GAAgB,OAAXqB,EAAiB,CAC1C,MAAMnC,EAAQ4K,EAAI5K,MACZ6tH,EAAsClzF,EAAM5pB,MAI5Cq9G,EAAc,IAAI9uC,IAIlB+uC,EAAgB,GACtB,IAAIC,GAAkB,EACtBvS,GAAsBC,EAAa6R,EAAUH,YAAYlQ,IACvD,GAAIA,aAAkBl2B,GAAM,CAC1B,GAAsB,OAAlBk2B,EAAO+Q,OAAiB,CAC1B,IAAI,KAAEtiE,EAAF,KAAQppC,GAAS0nG,GAAavqH,EAAOw9G,EAAO7+G,IAC5CkkB,EAAO,IACTopC,EAAO8+D,GAAkB/O,EAAawF,GAASv1D,EAAKttD,GAAGi+G,OAAQ3wD,EAAKttD,GAAGi9G,MAAQ/4F,KAEjF26F,EAASvxD,CACV,EACIuxD,EAAOl7F,SAAWwrG,EAAMn4G,MAAKlR,GAAQ+kH,GAAW/kH,EAA2B+4G,MAC9E6Q,EAAchtH,KAAKm8G,EAEtB,KAEHzB,GAAsBC,EAAa6R,EAAUJ,WAAWjQ,IAEpDA,aAAkBl2B,IAClBwmC,EAAMn4G,MAAKlR,GAAQ+kH,GAAW/kH,EAAM+4G,OAEnCb,GAAUkR,EAAUH,WAAYlQ,EAAO7+G,KAExCyvH,EAAYjuG,IAAIq9F,EACjB,IAEH4Q,EAAYvsH,SAAQ27G,IAClB8Q,EAA2H,OAAzGE,GAASxS,EAAawB,EAAQ4Q,EAAaP,EAAUH,WAAYO,EAAYQ,yBAAoCH,CAAnI,IAIF,IAAK,IAAInyH,EAAIkyH,EAAcvtH,OAAS,EAAG3E,GAAK,EAAGA,IAAK,CAClD,MAAM8vD,EAAOoiE,EAAclyH,GACvB8xH,EAAYS,aAAaziE,KAC3BA,EAAK7+B,OAAO4uF,GACZsS,GAAkB,EAErB,CACDnsH,EAASmsH,EAAkBT,EAAY,IACxC,CACD7R,EAAYr2E,QAAQ9jC,SAAQ,CAAC8sH,EAAUlqH,KAEjCkqH,EAAS/lF,IAAI,OAASnkC,EAAKmqH,gBAC7BnqH,EAAKmqH,cAAc9tH,OAAS,EAC7B,IAEHqtH,EAAMnS,CAAN,GACCiS,GACW,MAAV9rH,EAAgB,CAClB,MAAMspH,EAAqB0C,EAAI1C,mBAC/BwC,EAAYxf,KAAK,oBAAqB,CAAC,CAAEof,UAAW1rH,EAAQsC,KAAMypH,EAAWzC,sBAAsBwC,GACpG,CACD,OAAO9rH,CAAP,EAyBK,MAAM0sH,WAAoB1gB,GAK/BtzG,YAAai0H,GAAW,eACtBC,EAAiB,IADK,mBAEtBC,EAAqBvoG,KAAM,GAFL,aAGtBioG,EAAe,MAAM,GAHC,eAItBO,EAAiB,IAAI3vC,IAAI,CAAC,OAJJ,uBAKtBmvC,GAAyB,EALH,IAMtB7jH,GAA0BxE,GAAc0oH,GAAaA,EAAU,GAAGlkH,IAAMkkH,EAAUlkH,MAChF,CAAC,GACH5P,QAIA1B,KAAKw0H,MAAQ,GACbx0H,KAAK41H,WAAWJ,GAChBx1H,KAAKo1H,aAAeA,EACpBO,EAAe9uG,IAAI7mB,MACnBA,KAAK21H,eAAiBA,EACtB31H,KAAK01H,mBAAqBA,EAI1B11H,KAAK61H,UAAY,GAIjB71H,KAAK81H,UAAY,GAMjB91H,KAAK+1H,SAAU,EACf/1H,KAAKg2H,SAAU,EACfh2H,KAAKsR,IAAMA,EACXtR,KAAKi2H,WAAa,EAClBj2H,KAAKm1H,uBAAyBA,EAI9Bn1H,KAAKk2H,wBAA0BxT,IAE7B,IACG1iH,KAAK01H,mBAAmBhT,KACxB1iH,KAAKw0H,MAAMn4G,MAAKlR,GAAQu3G,EAAYyP,mBAAmB7iF,IAAInkC,OAC1DnL,KAAK21H,eAAermF,IAAIozE,EAAYxxE,WAAawxE,EAAYxxE,SAAWlxC,KAAK21H,eAAermF,IAAIozE,EAAYxxE,OAAO3vC,cAErH,OAEF,MAAMw0H,EAAU/1H,KAAK+1H,QACfC,EAAUh2H,KAAKg2H,QACf30F,EAAQ00F,EAAU/1H,KAAK81H,UAAY91H,KAAK61H,UAC1CE,EACF/1H,KAAKm2H,gBACKH,GAEVh2H,KAAKi/C,OAAM,GAAO,GAEpB,MAAMm1E,EAAa,IAAI7R,GACvBG,EAAYwP,WAAW3pH,SAAQ,CAAC6tH,EAAU9S,KACxC,MAAM+S,EAAa3T,EAAY8K,YAAYpoH,IAAIk+G,IAAW,EACpDzgF,EAAMuzF,EAAWC,EACnBxzF,EAAM,GACRghF,GAAeuQ,EAAY9Q,EAAQ+S,EAAYxzF,EAChD,IAEH,MAAMjL,EAAMF,KACZ,IAAI4+F,GAAS,EACb,GAAI1+F,EAAM53B,KAAKi2H,WAAaR,GAAkBp0F,EAAM75B,OAAS,IAAMuuH,IAAYC,EAAS,CAEtF,MAAMO,EAASl1F,EAAMA,EAAM75B,OAAS,GACpC+uH,EAAOpC,UAAY1Q,GAAgB,CAAC8S,EAAOpC,UAAWzR,EAAYuP,YAClEsE,EAAOnC,WAAa3Q,GAAgB,CAAC8S,EAAOnC,WAAYA,GACzD,MAEC/yF,EAAMt5B,KAAK,IAAImsH,GAAUxR,EAAYuP,UAAWmC,IAChDkC,GAAS,EAENP,GAAYC,IACfh2H,KAAKi2H,WAAar+F,GAGpB6qF,GAAsBC,EAAaA,EAAYuP,WAAwCt/D,IACjFA,aAAgBq7B,IAAQhuF,KAAKw0H,MAAMn4G,MAAKlR,GAAQ+kH,GAAW/kH,EAAMwnD,MACnE8hE,GAAS9hE,GAAM,EAChB,IAEH,MAAM6jE,EAAc,CAAC,CAAEjC,UAAWlzF,EAAMA,EAAM75B,OAAS,GAAI0pC,OAAQwxE,EAAYxxE,OAAQ/lC,KAAM4qH,EAAU,OAAS,OAAQ5D,mBAAoBzP,EAAYyP,oBAAsBnyH,MAC1Ks2H,EACFt2H,KAAKm1G,KAAK,mBAAoBqhB,GAE9Bx2H,KAAKm1G,KAAK,qBAAsBqhB,EACjC,EAEHx2H,KAAKsR,IAAInR,GAAG,mBAAoBH,KAAKk2H,yBACrCl2H,KAAKsR,IAAInR,GAAG,WAAW,KACrBH,KAAK0nC,SAAL,GAEH,CAKDkuF,WAAYa,GACVA,EAAS3pH,GAAc2pH,GAAUA,EAAS,CAACA,GAC3CA,EAAOluH,SAAQmuH,IACT12H,KAAKw0H,MAAMhrC,OAAMnB,GAAMA,IAAOquC,KAChC12H,KAAKw0H,MAAMzsH,KAAK2uH,EACjB,GAEJ,CAKDC,iBAAkBzlF,GAChBlxC,KAAK21H,eAAe9uG,IAAIqqB,EACzB,CAKD0lF,oBAAqB1lF,GACnBlxC,KAAK21H,eAAe7hG,OAAOod,EAC5B,CAED+N,MAAO43E,GAAiB,EAAMC,GAAiB,IACxCD,GAAkB72H,KAAK+2H,WAAeD,GAAkB92H,KAAKg3H,YAChEh3H,KAAKsR,IAAIm1G,UAASt5F,IACZ0pG,IACF72H,KAAK61H,UAAUttH,SAAQoqD,GAAQ0hE,GAA0BlnG,EAAIntB,KAAM2yD,KACnE3yD,KAAK61H,UAAY,IAEfiB,IACF92H,KAAK81H,UAAUvtH,SAAQoqD,GAAQ0hE,GAA0BlnG,EAAIntB,KAAM2yD,KACnE3yD,KAAK81H,UAAY,IAEnB91H,KAAKm1G,KAAK,gBAAiB,CAAC,CAAE8hB,iBAAkBJ,EAAgBK,iBAAkBJ,IAAlF,GAGL,CAsBDX,gBACEn2H,KAAKi2H,WAAa,CACnB,CAODhlC,OAEE,IAAIwjB,EADJz0G,KAAK+1H,SAAU,EAEf,IACEthB,EAAMigB,GAAa10H,KAAMA,KAAK61H,UAAW,OAG1C,CAJD,QAGE71H,KAAK+1H,SAAU,CAChB,CACD,OAAOthB,CACR,CAODvkB,OAEE,IAAIukB,EADJz0G,KAAKg2H,SAAU,EAEf,IACEvhB,EAAMigB,GAAa10H,KAAMA,KAAK81H,UAAW,OAG1C,CAJD,QAGE91H,KAAKg2H,SAAU,CAChB,CACD,OAAOvhB,CACR,CAODsiB,UACE,OAAO/2H,KAAK61H,UAAUruH,OAAS,CAChC,CAODwvH,UACE,OAAOh3H,KAAK81H,UAAUtuH,OAAS,CAChC,CAEDkgC,UACE1nC,KAAK21H,eAAe7hG,OAAO9zB,MAC3BA,KAAKsR,IAAI+rB,IAAI,mBAAoBr9B,KAAKk2H,yBACtCx0H,MAAMgmC,SACP,ECnWH,SAAWyvF,GAA2B7Z,GACpC,MAAMwO,EAAoBpH,GAAqBpH,EAAQqH,aACvD,IAAK,IAAI9hH,EAAI,EAAGA,EAAIipH,EAAmBjpH,IAAK,CAC1C,MAAMkpH,EAAkBrH,GAAqBpH,EAAQqH,aAC/CrB,EAAShG,EAAQ8K,aACvB,IAAI9F,EAAQoC,GAAqBpH,EAAQqH,aACzC,IAAK,IAAI9hH,EAAI,EAAGA,EAAIkpH,EAAiBlpH,IAAK,CACxC,MAAMy2D,EAAOgkD,EAAQ+K,WAErB,GAAa,KAAT/uD,EAAa,CACf,MAAMz2B,EAAM6hF,GAAqBpH,EAAQqH,mBACnC,IAAIuH,GAAKhE,GAAS5E,EAAQhB,GAAQz/E,GACxCy/E,GAASz/E,CACV,MAAM,GAA8B,KAAzBg4E,GAAevhD,GAAa,CACtC,MAAM6yD,EAA8D,KAAxC7yD,GAAQuhD,GAAcA,KAK5CqJ,EAAS,IAAIl2B,GACjBk6B,GAAS5E,EAAQhB,GACjB,MACChpD,EAAOuhD,MAAiBA,GAAcyC,EAAQ2K,aAAe,KAC9D,MACC3uD,EAAOuhD,MAAiBA,GAAcyC,EAAQ6K,cAAgB,KAE/DgE,EAAsB7O,EAAQiL,iBAAmBjL,EAAQgL,aAAehL,EAAQ2K,aAAgB,KAChGkE,IAAuB7yD,EAAOuhD,MAAiBA,GAAcyC,EAAQgL,aAAe,KACpF8D,GAAgB9O,EAAShkD,UAErB4qD,EACN5B,GAAS4B,EAAO18G,MACjB,KAAM,CACL,MAAMq7B,EAAMy6E,EAAQmL,gBACd,IAAIwD,GAAG/D,GAAS5E,EAAQhB,GAAQz/E,GACtCy/E,GAASz/E,CACV,CACF,CACF,CACF,CAEM,MAAMu0F,GAKX71H,YAAa+7G,EAAS+Z,GACpBr3H,KAAKs3H,IAAMH,GAA0B7Z,GAIrCt9G,KAAKu3H,KAAO,KACZv3H,KAAKkG,MAAO,EACZlG,KAAKq3H,YAAcA,EACnBr3H,KAAKgS,MACN,CAKDA,OAEE,GACEhS,KAAKu3H,KAAOv3H,KAAKs3H,IAAItlH,OAAOvR,OAAS,WAC9BT,KAAKq3H,aAA6B,OAAdr3H,KAAKu3H,MAAiBv3H,KAAKu3H,KAAKh2H,cAAgB2qH,IAC7E,OAAOlsH,KAAKu3H,IACb,EAkDI,MAAMC,GAIXj2H,YAAa+4G,GACXt6G,KAAKy3H,WAAa,EAClBz3H,KAAKq2H,WAAa,EAClBr2H,KAAK6tC,QAAU,EACf7tC,KAAKs6G,QAAUA,EAWft6G,KAAK03H,cAAgB,EACtB,EAOS,MAAC5I,GAAeF,GAAWb,GAAea,EAAS5G,GAAiB4B,IAmH1E+N,GAAc,CAACh5F,EAAMpV,KACzB,GAAIoV,EAAKp9B,cAAgB0qH,GAAI,CAC3B,MAAM,OAAE3I,EAAF,MAAUhB,GAAU3jF,EAAKt5B,GAC/B,OAAO,IAAI4mH,GAAG/D,GAAS5E,EAAQhB,EAAQ/4F,GAAOoV,EAAKn3B,OAAS+hB,EAC7D,CAAM,GAAIoV,EAAKp9B,cAAgB2qH,GAAM,CACpC,MAAM,OAAE5I,EAAF,MAAUhB,GAAU3jF,EAAKt5B,GAC/B,OAAO,IAAI6mH,GAAKhE,GAAS5E,EAAQhB,EAAQ/4F,GAAOoV,EAAKn3B,OAAS+hB,EAC/D,CAAM,CACL,MAAMquG,EAAgCj5F,GAChC,OAAE2kF,EAAF,MAAUhB,GAAUsV,EAASvyH,GACnC,OAAO,IAAI2oF,GACTk6B,GAAS5E,EAAQhB,EAAQ/4F,GACzB,KACA2+F,GAAS5E,EAAQhB,EAAQ/4F,EAAO,GAChC,KACAquG,EAASC,YACTD,EAASptH,OACTotH,EAASrF,UACTqF,EAASvwH,QAAQW,OAAOuhB,GAE3B,GAYUwkG,GAAiB,CAACa,EAASP,EAAWtF,GAAiB+O,EAAWzS,MAC7E,GAAuB,IAAnBuJ,EAAQpnH,OACV,OAAOonH,EAAQ,GAEjB,MAAMmJ,EAAiBnJ,EAAQ5rH,KAAI6C,GAAU,IAAIwoH,EAAS3J,GAAuB7+G,MACjF,IAAImyH,EAAqBD,EAAe/0H,KAAIs6G,GAAW,IAAI8Z,GAAiB9Z,GAAS,KAMjF2a,EAAY,KAEhB,MAAMC,EAAgB,IAAIJ,EAEpBK,EAAoB,IAAIX,GAAiBU,GAM/C,MAAO,EAAM,CAoBX,GAlBAF,EAAqBA,EAAmBrpF,QAAOwS,GAAoB,OAAbA,EAAIo2E,OAC1DS,EAAmB/pH,MACuB,CAACmqH,EAAMC,KAC7C,GAAID,EAAKb,KAAKlyH,GAAGi+G,SAAW+U,EAAKd,KAAKlyH,GAAGi+G,OAAQ,CAC/C,MAAMgV,EAAYF,EAAKb,KAAKlyH,GAAGi9G,MAAQ+V,EAAKd,KAAKlyH,GAAGi9G,MACpD,OAAkB,IAAdgW,EAEKF,EAAKb,KAAKh2H,cAAgB82H,EAAKd,KAAKh2H,YACvC,EACA62H,EAAKb,KAAKh2H,cAAgB2qH,GAAO,GAAK,EAEnCoM,CAEV,CACC,OAAOD,EAAKd,KAAKlyH,GAAGi+G,OAAS8U,EAAKb,KAAKlyH,GAAGi+G,MAC3C,IAG6B,IAA9B0U,EAAmBxwH,OACrB,MAEF,MAAM+wH,EAAcP,EAAmB,GAGjCQ,EAAwCD,EAAYhB,KAAMlyH,GAAGi+G,OAEnE,GAAkB,OAAd2U,EAAoB,CACtB,IAAIV,EAAwCgB,EAAYhB,KACpDkB,GAAW,EAIf,MAAgB,OAATlB,GAAiBA,EAAKlyH,GAAGi9G,MAAQiV,EAAK/vH,QAAUywH,EAAU/T,OAAO7+G,GAAGi9G,MAAQ2V,EAAU/T,OAAO18G,QAAU+vH,EAAKlyH,GAAGi+G,QAAU2U,EAAU/T,OAAO7+G,GAAGi+G,OAClJiU,EAAOgB,EAAYvmH,OACnBymH,GAAW,EAEb,GACW,OAATlB,GACAA,EAAKlyH,GAAGi+G,SAAWkV,GAClBC,GAAYlB,EAAKlyH,GAAGi9G,MAAQ2V,EAAU/T,OAAO7+G,GAAGi9G,MAAQ2V,EAAU/T,OAAO18G,OAE1E,SAGF,GAAIgxH,IAAgBP,EAAU/T,OAAO7+G,GAAGi+G,OACtCoV,GAA8BP,EAAmBF,EAAU/T,OAAQ+T,EAAU/qH,QAC7E+qH,EAAY,CAAE/T,OAAQqT,EAAMrqH,OAAQ,GACpCqrH,EAAYvmH,YAEZ,GAAIimH,EAAU/T,OAAO7+G,GAAGi9G,MAAQ2V,EAAU/T,OAAO18G,OAAS+vH,EAAKlyH,GAAGi9G,MAEhE,GAAI2V,EAAU/T,OAAO3iH,cAAgB2qH,GAEnC+L,EAAU/T,OAAO18G,OAAS+vH,EAAKlyH,GAAGi9G,MAAQiV,EAAK/vH,OAASywH,EAAU/T,OAAO7+G,GAAGi9G,UACvE,CACLoW,GAA8BP,EAAmBF,EAAU/T,OAAQ+T,EAAU/qH,QAC7E,MAAMqc,EAAOguG,EAAKlyH,GAAGi9G,MAAQ2V,EAAU/T,OAAO7+G,GAAGi9G,MAAQ2V,EAAU/T,OAAO18G,OAIpE08G,EAAS,IAAIgI,GAAKhE,GAASsQ,EAAaP,EAAU/T,OAAO7+G,GAAGi9G,MAAQ2V,EAAU/T,OAAO18G,QAAS+hB,GACpG0uG,EAAY,CAAE/T,SAAQh3G,OAAQ,EAC/B,KACI,CACL,MAAMqc,EAAO0uG,EAAU/T,OAAO7+G,GAAGi9G,MAAQ2V,EAAU/T,OAAO18G,OAAS+vH,EAAKlyH,GAAGi9G,MACvE/4F,EAAO,IACL0uG,EAAU/T,OAAO3iH,cAAgB2qH,GAEnC+L,EAAU/T,OAAO18G,QAAU+hB,EAE3BguG,EAAOI,GAAYJ,EAAMhuG,IAGxB0uG,EAAU/T,OAAOuO,UAA8B8E,KAClDmB,GAA8BP,EAAmBF,EAAU/T,OAAQ+T,EAAU/qH,QAC7E+qH,EAAY,CAAE/T,OAAQqT,EAAMrqH,OAAQ,GACpCqrH,EAAYvmH,OAEf,CAEJ,MACCimH,EAAY,CAAE/T,OAAkCqU,EAAYhB,KAAOrqH,OAAQ,GAC3EqrH,EAAYvmH,OAEd,IACE,IAAIA,EAAOumH,EAAYhB,KACd,OAATvlH,GAAiBA,EAAK3M,GAAGi+G,SAAWkV,GAAexmH,EAAK3M,GAAGi9G,QAAU2V,EAAU/T,OAAO7+G,GAAGi9G,MAAQ2V,EAAU/T,OAAO18G,QAAUwK,EAAKzQ,cAAgB2qH,GACjJl6G,EAAOumH,EAAYvmH,OAEnB0mH,GAA8BP,EAAmBF,EAAU/T,OAAQ+T,EAAU/qH,QAC7E+qH,EAAY,CAAE/T,OAAQlyG,EAAM9E,OAAQ,EAEvC,CACiB,OAAd+qH,IACFS,GAA8BP,EAAmBF,EAAU/T,OAAQ+T,EAAU/qH,QAC7E+qH,EAAY,MAEdU,GAAwBR,GAExB,MAAMzU,EAAMqU,EAAe/0H,KAAIs6G,GAAWkH,GAAclH,KAClDqF,EAAKc,GAAgBC,GAE3B,OADAS,GAAe+T,EAAevV,GACvBuV,EAAc3d,cAArB,EASWsU,GAAe,CAAChpH,EAAQwpH,EAAIhB,EAAWtF,GAAiB+O,EAAWzS,MAC9E,MAAMpsG,EAAQ01G,GAAkBU,GAC1B/U,EAAU,IAAIwd,EACdc,EAAmB,IAAIpB,GAAiBld,GACxCgD,EAAU,IAAI+Q,EAAS3J,GAAuB7+G,IAC9C+4G,EAAS,IAAIwY,GAAiB9Z,GAAS,GAC7C,MAAOsB,EAAO2Y,KAAM,CAClB,MAAMA,EAAO3Y,EAAO2Y,KACdE,EAAaF,EAAKlyH,GAAGi+G,OACrBuV,EAAU5/G,EAAM7T,IAAIqyH,IAAe,EACzC,GAAI7Y,EAAO2Y,KAAKh2H,cAAgB2qH,GAKhC,GAAIqL,EAAKlyH,GAAGi9G,MAAQiV,EAAK/vH,OAASqxH,EAAS,CACzCH,GAA8BE,EAAkBrB,EAAMvd,GAAS6e,EAAUtB,EAAKlyH,GAAGi9G,MAAO,IACxF1D,EAAO5sG,OACP,MAAO4sG,EAAO2Y,MAAQ3Y,EAAO2Y,KAAKlyH,GAAGi+G,SAAWmU,EAC9CiB,GAA8BE,EAAkBha,EAAO2Y,KAAM,GAC7D3Y,EAAO5sG,MAEV,MAEC,MAAO4sG,EAAO2Y,MAAQ3Y,EAAO2Y,KAAKlyH,GAAGi+G,SAAWmU,GAAc7Y,EAAO2Y,KAAKlyH,GAAGi9G,MAAQ1D,EAAO2Y,KAAK/vH,QAAUqxH,EACzGja,EAAO5sG,YAbT4sG,EAAO5sG,MAgBV,CACD2mH,GAAwBC,GAExB,MAAMjW,EAAK6B,GAAclH,GAEzB,OADA6G,GAAe7J,EAASqI,GACjBrI,EAAQC,cAAf,EAYIue,GAAwBC,IACxBA,EAAWlrF,QAAU,IACvBkrF,EAAWrB,cAAc3vH,KAAK,CAAE8lC,QAASkrF,EAAWlrF,QAASu2E,YAAa58C,GAAsBuxD,EAAWze,QAAQ8J,eACnH2U,EAAWze,QAAQ8J,YAAc58C,KACjCuxD,EAAWlrF,QAAU,EACtB,EAQG6qF,GAAgC,CAACK,EAAY7U,EAAQh3G,KAErD6rH,EAAWlrF,QAAU,GAAKkrF,EAAWtB,aAAevT,EAAO7+G,GAAGi+G,QAChEwV,GAAsBC,GAEG,IAAvBA,EAAWlrF,UACbkrF,EAAWtB,WAAavT,EAAO7+G,GAAGi+G,OAElCyV,EAAWze,QAAQyP,YAAY7F,EAAO7+G,GAAGi+G,QAEzC97C,GAAsBuxD,EAAWze,QAAQ8J,YAAaF,EAAO7+G,GAAGi9G,MAAQp1G,IAE1Eg3G,EAAO1vD,MAAMukE,EAAWze,QAASptG,GACjC6rH,EAAWlrF,SAAX,EASI8qF,GAA2BI,IAC/BD,GAAsBC,GAGtB,MAAM3U,EAAc2U,EAAWze,QAAQ8J,YAQvC58C,GAAsB48C,EAAa2U,EAAWrB,cAAclwH,QAE5D,IAAK,IAAI3E,EAAI,EAAGA,EAAIk2H,EAAWrB,cAAclwH,OAAQ3E,IAAK,CACxD,MAAMm2H,EAAcD,EAAWrB,cAAc70H,GAK7C2kE,GAAsB48C,EAAa4U,EAAYnrF,SAE/C25B,GAAyB48C,EAAa4U,EAAY5U,YACnD,GAQU6U,GAAsB,CAACpzH,EAAQwoH,EAAUyJ,KACpD,MAAMoB,EAAgB,IAAI7K,EAAS3J,GAAuB7+G,IACpDszH,EAAc,IAAI/B,GAAiB8B,GAAe,GAClDhB,EAAgB,IAAIJ,EACpBiB,EAAa,IAAIvB,GAAiBU,GAExC,IAAK,IAAIX,EAAO4B,EAAY5B,KAAe,OAATA,EAAeA,EAAO4B,EAAYnnH,OAClE0mH,GAA8BK,EAAYxB,EAAM,GAElDoB,GAAwBI,GACxB,MAAMpW,EAAK6B,GAAc0U,GAEzB,OADA/U,GAAe+T,EAAevV,GACvBuV,EAAc3d,cAArB,EAWWwU,GAA4BlpH,GAAUozH,GAAoBpzH,EAAQkjH,GAAiBa,ICvjBzF,MAAMwP,GAKX73H,YAAa8O,EAAQqyG,GAKnB1iH,KAAKqQ,OAASA,EAKdrQ,KAAKwzH,cAAgBnjH,EAKrBrQ,KAAK0iH,YAAcA,EAInB1iH,KAAKq5H,SAAW,KAIhBr5H,KAAKs5H,MAAQ,KAIbt5H,KAAKu5H,OAAS,IACf,CAeGpoH,WAEF,OAAOqoH,GAAUx5H,KAAKwzH,cAAexzH,KAAKqQ,OAC3C,CAUDuyG,QAASsB,GACP,OAAOb,GAAUrjH,KAAK0iH,YAAYuP,UAAW/N,EAAO7+G,GACrD,CAKG61B,WACF,GAAmB,OAAfl7B,KAAKs5H,MAAgB,CACvB,MAAMp+F,EAAO,IAAIl2B,IACXqL,EAASrQ,KAAKqQ,OACdg8B,EAAyCrsC,KAAK0iH,YAAYr2E,QAAQjnC,IAAIiL,GAC5Eg8B,EAAQ9jC,SAAQhB,IACd,GAAY,OAARA,EAAc,CAChB,MAAMorD,EAA4BtiD,EAAOqZ,KAAKtkB,IAAImC,GAIlD,IAAI6kF,EACA/hD,EACJ,GAAIrqC,KAAKy5H,KAAK9mE,GAAO,CACnB,IAAIr5B,EAAOq5B,EAAKh0B,KAChB,MAAgB,OAATrF,GAAiBt5B,KAAKy5H,KAAKngG,GAChCA,EAAOA,EAAKqF,KAEd,GAAI3+B,KAAK4iH,QAAQjwD,GAAO,CACtB,GAAa,OAATr5B,IAAiBt5B,KAAK4iH,QAAQtpF,GAIhC,OAHA8yD,EAAS,SACT/hD,EAAWv9B,GAAWwsB,EAAKjyB,QAAQ0c,aAItC,MACc,OAATuV,GAAiBt5B,KAAK4iH,QAAQtpF,IAChC8yD,EAAS,SACT/hD,EAAWv9B,GAAWwsB,EAAKjyB,QAAQ0c,gBAEnCqoE,EAAS,MACT/hD,OAAW3iC,EAGhB,KAAM,CACL,IAAI1H,KAAK4iH,QAAQjwD,GAIf,OAHAy5B,EAAS,SACT/hD,EAAWv9B,GAA+B6lD,EAAKtrD,QAAQ0c,aAI1D,CACDmX,EAAKt1B,IAAI2B,EAAK,CAAE6kF,SAAQ/hD,YACzB,KAEHrqC,KAAKs5H,MAAQp+F,CACd,CACD,OAAOl7B,KAAKs5H,KACb,CAKGI,YACF,OAAO15H,KAAK25H,QAAQD,KACrB,CAUDD,KAAMvV,GACJ,OAAOA,EAAO7+G,GAAGi9G,QAAUtiH,KAAK0iH,YAAY8K,YAAYpoH,IAAI8+G,EAAO7+G,GAAGi+G,SAAW,EAClF,CAKGqW,cACF,IAAIA,EAAU35H,KAAKq5H,SACnB,GAAgB,OAAZM,EAAkB,CACpB,MAAMtpH,EAASrQ,KAAKqQ,OACdkd,EAAQ3nB,KACRojB,EAAUpjB,KAIV8zH,EAAQ,GACdC,EAAU,CACRpsG,QACAvE,UACA0wG,QACAx+F,KAAMl7B,KAAKk7B,MAEb,MAAMmR,EAAyCrsC,KAAK0iH,YAAYr2E,QAAQjnC,IAAIiL,GAC5E,GAAIg8B,EAAQiD,IAAI,MAAO,CAIrB,IAAIinF,EAAS,KACb,MAAMqD,EAAS,KACTrD,GACFmD,EAAM3xH,KAAKwuH,EACZ,EAEH,IAAK,IAAI5jE,EAAOtiD,EAAO42G,OAAiB,OAATt0D,EAAeA,EAAOA,EAAK/zB,MACpD+zB,EAAK3pC,QACHhpB,KAAK4iH,QAAQjwD,KAAU3yD,KAAKy5H,KAAK9mE,KACpB,OAAX4jE,QAAqC7uH,IAAlB6uH,EAAOziG,SAC5B8lG,IACArD,EAAS,CAAEziG,OAAQ,IAErByiG,EAAOziG,QAAU6+B,EAAKnrD,OACtBwhB,EAAQnC,IAAI8rC,IAGV3yD,KAAKy5H,KAAK9mE,IACG,OAAX4jE,QAAqC7uH,IAAlB6uH,EAAOtnH,SAC5B2qH,IACArD,EAAS,CAAEtnH,OAAQ,KAErBsnH,EAAOtnH,OAASsnH,EAAOtnH,OAAO/G,OAAOyqD,EAAKtrD,QAAQ0c,cAClDwJ,EAAM1G,IAAI8rC,KAEK,OAAX4jE,QAAqC7uH,IAAlB6uH,EAAOsD,SAC5BD,IACArD,EAAS,CAAEsD,OAAQ,IAErBtD,EAAOsD,QAAUlnE,EAAKnrD,QAIb,OAAX+uH,QAAqC7uH,IAAlB6uH,EAAOsD,QAC5BD,GAEH,CACD55H,KAAKq5H,SAAWM,CACjB,CACD,OAAO,CACR,EAoBH,MAAMH,GAAY,CAAChvH,EAAQpB,KACzB,MAAM+H,EAAO,GACb,MAAuB,OAAhB/H,EAAMg9G,OAAkBh9G,IAAUoB,EAAQ,CAC/C,GAA8B,OAA1BpB,EAAMg9G,MAAMmM,UAEdphH,EAAK2hB,QAAQ1pB,EAAMg9G,MAAMmM,eACpB,CAEL,IAAI1vH,EAAI,EACJK,EAAsCkG,EAAMg9G,MAAM57G,OAAQy8G,OAC9D,MAAO/jH,IAAMkG,EAAMg9G,OAAe,OAANljH,EACrBA,EAAE8lB,SACLnmB,IAEFK,EAAIA,EAAE07B,MAERztB,EAAK2hB,QAAQjwB,EACd,CACDuG,EAA0CA,EAAMg9G,MAAM57G,MACvD,CACD,OAAO2G,CAAP,ECzOI2oH,GAAkB,GASxB,IAAIC,GAA8B,EAE3B,MAAMC,GAKXz4H,YAAaU,EAAG8J,GACd9J,EAAE04D,QAAS,EACX36D,KAAKiC,EAAIA,EACTjC,KAAK+L,MAAQA,EACb/L,KAAKi6H,UAAYF,IAClB,EAMH,MAAMG,GAAyBv/D,IAAYA,EAAOs/D,UAAYF,IAAnB,EASrCI,GAAkB,CAACx/D,EAAQ14D,EAAG8J,KAClC4uD,EAAO14D,EAAE04D,QAAS,EAClBA,EAAO14D,EAAIA,EACXA,EAAE04D,QAAS,EACXA,EAAO5uD,MAAQA,EACf4uD,EAAOs/D,UAAYF,IAAnB,EAQIK,GAAe,CAACC,EAAcp4H,EAAG8J,KACrC,GAAIsuH,EAAa7yH,QAAUsyH,GAAiB,CAE1C,MAAMn/D,EAAS0/D,EAAa13H,QAAO,CAACC,EAAGoG,IAAMpG,EAAEq3H,UAAYjxH,EAAEixH,UAAYr3H,EAAIoG,IAE7E,OADAmxH,GAAgBx/D,EAAQ14D,EAAG8J,GACpB4uD,CACR,CAAM,CAEL,MAAM2/D,EAAK,IAAIN,GAAkB/3H,EAAG8J,GAEpC,OADAsuH,EAAatyH,KAAKuyH,GACXA,CACR,GAeUC,GAAa,CAACC,EAAQzuH,KACjC,GAAsB,OAAlByuH,EAAOvT,QAA6B,IAAVl7G,GAAwC,OAAzByuH,EAAOlF,cAClD,OAAO,KAET,MAAM36D,EAAyC,IAAhC6/D,EAAOlF,cAAc9tH,OAAe,KAAOgzH,EAAOlF,cAAc3yH,QAAO,CAACC,EAAGoG,IAAMgxG,GAASjuG,EAAQnJ,EAAEmJ,OAASiuG,GAASjuG,EAAQ/C,EAAE+C,OAASnJ,EAAIoG,IAC5J,IAAI/G,EAAIu4H,EAAOvT,OACXwT,EAAS,EACE,OAAX9/D,IACF14D,EAAI04D,EAAO14D,EACXw4H,EAAS9/D,EAAO5uD,MAChBmuH,GAAuBv/D,IAGzB,MAAmB,OAAZ14D,EAAE28B,OAAkB67F,EAAS1uH,EAAO,CACzC,IAAK9J,EAAE+mB,SAAW/mB,EAAE0uH,UAAW,CAC7B,GAAI5kH,EAAQ0uH,EAASx4H,EAAEuF,OACrB,MAEFizH,GAAUx4H,EAAEuF,MACb,CACDvF,EAAIA,EAAE28B,KACP,CAED,MAAkB,OAAX38B,EAAE08B,MAAiB87F,EAAS1uH,EACjC9J,EAAIA,EAAE08B,MACD18B,EAAE+mB,SAAW/mB,EAAE0uH,YAClB8J,GAAUx4H,EAAEuF,QAMhB,MAAkB,OAAXvF,EAAE08B,MAAiB18B,EAAE08B,KAAKt5B,GAAGi+G,SAAWrhH,EAAEoD,GAAGi+G,QAAUrhH,EAAE08B,KAAKt5B,GAAGi9G,MAAQrgH,EAAE08B,KAAKn3B,SAAWvF,EAAEoD,GAAGi9G,MACrGrgH,EAAIA,EAAE08B,MACD18B,EAAE+mB,SAAW/mB,EAAE0uH,YAClB8J,GAAUx4H,EAAEuF,QA4BhB,OAAe,OAAXmzD,GAAmBq/C,GAASr/C,EAAO5uD,MAAQ0uH,GAA4Cx4H,EAAEuI,OAAQhD,OAASsyH,IAE5GK,GAAgBx/D,EAAQ14D,EAAGw4H,GACpB9/D,GAGAy/D,GAAaI,EAAOlF,cAAerzH,EAAGw4H,EAC9C,EAYUC,GAAsB,CAACL,EAActuH,EAAO82B,KACvD,IAAK,IAAIhgC,EAAIw3H,EAAa7yH,OAAS,EAAG3E,GAAK,EAAGA,IAAK,CACjD,MAAMI,EAAIo3H,EAAax3H,GACvB,GAAIggC,EAAM,EAAG,CAIX,IAAI5gC,EAAIgB,EAAEhB,EACVA,EAAE04D,QAAS,EAIX,MAAO14D,IAAMA,EAAE+mB,UAAY/mB,EAAE0uH,WAC3B1uH,EAAIA,EAAE08B,KACF18B,IAAMA,EAAE+mB,SAAW/mB,EAAE0uH,YAEvB1tH,EAAE8I,OAAS9J,EAAEuF,QAGjB,GAAU,OAANvF,IAA2B,IAAbA,EAAE04D,OAAiB,CAEnC0/D,EAAaryH,OAAOnF,EAAG,GACvB,QACD,CACDI,EAAEhB,EAAIA,EACNA,EAAE04D,QAAS,CACZ,EACG5uD,EAAQ9I,EAAE8I,OAAU82B,EAAM,GAAK92B,IAAU9I,EAAE8I,SAC7C9I,EAAE8I,MAAQiuG,GAASjuG,EAAO9I,EAAE8I,MAAQ82B,GAEvC,GA4BU83F,GAAoB,CAACxvH,EAAMu3G,EAAankF,KACnD,MAAMq8F,EAAczvH,EACdgnH,EAAqBzP,EAAYyP,mBACvC,MAAO,EAAM,CAGX,GADAnvH,GAAmBmvH,EAAoBhnH,GAAM,IAAM,KAAIpD,KAAKw2B,GACzC,OAAfpzB,EAAKi7G,MACP,MAEFj7G,EAAyCA,EAAKi7G,MAAM57G,MACrD,CACDqlH,GAA0B+K,EAAYC,IAAKt8F,EAAOmkF,EAAlD,EAOK,MAAMoE,GACXvlH,cAIEvB,KAAKomH,MAAQ,KAIbpmH,KAAK0pB,KAAO,IAAI1kB,IAIhBhF,KAAKinH,OAAS,KAIdjnH,KAAKsR,IAAM,KACXtR,KAAKknH,QAAU,EAKflnH,KAAK66H,IAAMnL,KAKX1vH,KAAK2zH,KAAOjE,KAIZ1vH,KAAKs1H,cAAgB,IACtB,CAKG9qH,aACF,OAAOxK,KAAKomH,MAA0CpmH,KAAKomH,MAAM57G,OAAU,IAC5E,CAYDu8G,WAAY/iH,EAAG2uD,GACb3yD,KAAKsR,IAAMtN,EACXhE,KAAKomH,MAAQzzD,CACd,CAKDmoE,QACE,MAAMjkD,IACP,CAKDkkD,QACE,MAAMlkD,IACP,CAKDmkD,OAAQ1gB,GAAY,CAKhB2gB,aACF,IAAI/4H,EAAIlC,KAAKinH,OACb,MAAa,OAAN/kH,GAAcA,EAAE8mB,QACrB9mB,EAAIA,EAAE08B,MAER,OAAO18B,CACR,CASDqxH,cAAe7Q,EAAawY,IACrBxY,EAAY1iE,OAAShgD,KAAKs1H,gBAC7Bt1H,KAAKs1H,cAAc9tH,OAAS,EAE/B,CAOD08C,QAAS1gD,GACPmsH,GAAwB3vH,KAAK66H,IAAKr3H,EACnC,CAOD23H,YAAa33H,GACXmsH,GAAwB3vH,KAAK2zH,KAAMnwH,EACpC,CAOD43H,UAAW53H,GACTosH,GAA2B5vH,KAAK66H,IAAKr3H,EACtC,CAOD63H,cAAe73H,GACbosH,GAA2B5vH,KAAK2zH,KAAMnwH,EACvC,CAMDJ,SAAY,EAYP,MAAMk4H,GAAgB,CAACnwH,EAAMT,EAAOD,KACrCC,EAAQ,IACVA,EAAQS,EAAK+7G,QAAUx8G,GAErBD,EAAM,IACRA,EAAMU,EAAK+7G,QAAUz8G,GAEvB,IAAIo4B,EAAMp4B,EAAMC,EAChB,MAAM6wH,EAAK,GACX,IAAIr5H,EAAIiJ,EAAK87G,OACb,MAAa,OAAN/kH,GAAc2gC,EAAM,EAAG,CAC5B,GAAI3gC,EAAEyuH,YAAczuH,EAAE8mB,QAAS,CAC7B,MAAM9lB,EAAIhB,EAAEmF,QAAQ0c,aACpB,GAAI7gB,EAAEsE,QAAUkD,EACdA,GAASxH,EAAEsE,WACN,CACL,IAAK,IAAI3E,EAAI6H,EAAO7H,EAAIK,EAAEsE,QAAUq7B,EAAM,EAAGhgC,IAC3C04H,EAAGxzH,KAAK7E,EAAEL,IACVggC,IAEFn4B,EAAQ,CACT,CACF,CACDxI,EAAIA,EAAE08B,KACP,CACD,OAAO28F,CAAP,EAUWC,GAAkBrwH,IAC7B,MAAMowH,EAAK,GACX,IAAIr5H,EAAIiJ,EAAK87G,OACb,MAAa,OAAN/kH,EAAY,CACjB,GAAIA,EAAEyuH,YAAczuH,EAAE8mB,QAAS,CAC7B,MAAM9lB,EAAIhB,EAAEmF,QAAQ0c,aACpB,IAAK,IAAIlhB,EAAI,EAAGA,EAAIK,EAAEsE,OAAQ3E,IAC5B04H,EAAGxzH,KAAK7E,EAAEL,GAEb,CACDX,EAAIA,EAAE08B,KACP,CACD,OAAO28F,CAAP,EAWWE,GAA0B,CAACtwH,EAAMmmH,KAC5C,MAAMiK,EAAK,GACX,IAAIr5H,EAAIiJ,EAAK87G,OACb,MAAa,OAAN/kH,EAAY,CACjB,GAAIA,EAAEyuH,WAAaY,GAAUrvH,EAAGovH,GAAW,CACzC,MAAMpuH,EAAIhB,EAAEmF,QAAQ0c,aACpB,IAAK,IAAIlhB,EAAI,EAAGA,EAAIK,EAAEsE,OAAQ3E,IAC5B04H,EAAGxzH,KAAK7E,EAAEL,GAEb,CACDX,EAAIA,EAAE08B,KACP,CACD,OAAO28F,CAAP,EAYWG,GAAkB,CAACvwH,EAAM3H,KACpC,IAAIuI,EAAQ,EACR7J,EAAIiJ,EAAK87G,OACb,MAAa,OAAN/kH,EAAY,CACjB,GAAIA,EAAEyuH,YAAczuH,EAAE8mB,QAAS,CAC7B,MAAM9lB,EAAIhB,EAAEmF,QAAQ0c,aACpB,IAAK,IAAIlhB,EAAI,EAAGA,EAAIK,EAAEsE,OAAQ3E,IAC5BW,EAAEN,EAAEL,GAAIkJ,IAASZ,EAEpB,CACDjJ,EAAIA,EAAE08B,KACP,GAYU+8F,GAAc,CAACxwH,EAAM3H,KAIhC,MAAMqF,EAAS,GAIf,OAHA6yH,GAAgBvwH,GAAM,CAACjI,EAAGL,KACxBgG,EAAOd,KAAKvE,EAAEN,EAAGL,EAAGsI,GAApB,IAEKtC,CAAP,EAUW+yH,GAAyBzwH,IACpC,IAAIjJ,EAAIiJ,EAAK87G,OAIT4U,EAAiB,KACjBC,EAAsB,EAC1B,MAAO,CACL,CAACn2H,OAAOqxE,YACN,OAAOh3E,IACR,EACDgS,KAAM,KAEJ,GAAuB,OAAnB6pH,EAAyB,CAC3B,MAAa,OAAN35H,GAAcA,EAAE8mB,QACrB9mB,EAAIA,EAAE08B,MAGR,GAAU,OAAN18B,EACF,MAAO,CACLgE,MAAM,EACNzF,WAAOiH,GAIXm0H,EAAiB35H,EAAEmF,QAAQ0c,aAC3B+3G,EAAsB,EACtB55H,EAAIA,EAAE08B,KACP,CACD,MAAMn+B,EAAQo7H,EAAeC,KAK7B,OAHID,EAAer0H,QAAUs0H,IAC3BD,EAAiB,MAEZ,CACL31H,MAAM,EACNzF,QAFF,EA3BJ,EAoEWs7H,GAAc,CAAC5wH,EAAMY,KAChC,MAAM4uD,EAAS4/D,GAAWpvH,EAAMY,GAChC,IAAI7J,EAAIiJ,EAAK87G,OAKb,IAJe,OAAXtsD,IACFz4D,EAAIy4D,EAAO14D,EACX8J,GAAS4uD,EAAO5uD,OAEL,OAAN7J,EAAYA,EAAIA,EAAE08B,MACvB,IAAK18B,EAAE8mB,SAAW9mB,EAAEyuH,UAAW,CAC7B,GAAI5kH,EAAQ7J,EAAEsF,OACZ,OAAOtF,EAAEmF,QAAQ0c,aAAahY,GAEhCA,GAAS7J,EAAEsF,MACZ,CACF,EAYUw0H,GAA8B,CAACtZ,EAAal4G,EAAQyxH,EAAe50H,KAC9E,IAAIs3B,EAAOs9F,EACX,MAAM3qH,EAAMoxG,EAAYpxG,IAClB4qH,EAAc5qH,EAAIw0G,SAClBp/G,EAAQ4K,EAAI5K,MACZk4B,EAA0B,OAAlBq9F,EAAyBzxH,EAAOy8G,OAASgV,EAAcr9F,MAIrE,IAAIu9F,EAAc,GAClB,MAAMC,EAAkB,KAClBD,EAAY30H,OAAS,IACvBm3B,EAAO,IAAIqvD,GAAKk6B,GAASgU,EAAajhG,GAASv0B,EAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQhyF,EAAOA,GAASA,EAAMv5B,GAAImF,EAAQ,KAAM,IAAI6xH,GAAWF,IACvJx9F,EAAK2uF,UAAU5K,EAAa,GAC5ByZ,EAAc,GACf,EAEH90H,EAAQkB,SAAQrF,IACd,GAAU,OAANA,EACFi5H,EAAYp0H,KAAK7E,QAEjB,OAAQA,EAAE3B,aACR,KAAK6W,OACL,KAAKrF,OACL,KAAK67B,QACL,KAAK9rC,MACL,KAAKy4C,OACH4gF,EAAYp0H,KAAK7E,GACjB,MACF,QAEE,OADAk5H,IACQl5H,EAAE3B,aACR,KAAKs1F,WACL,KAAKulB,YACHz9E,EAAO,IAAIqvD,GAAKk6B,GAASgU,EAAajhG,GAASv0B,EAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQhyF,EAAOA,GAASA,EAAMv5B,GAAImF,EAAQ,KAAM,IAAI8xH,GAAc,IAAIzlC,WAAsC3zF,KACpMy7B,EAAK2uF,UAAU5K,EAAa,GAC5B,MACF,KAAK6C,GACH5mF,EAAO,IAAIqvD,GAAKk6B,GAASgU,EAAajhG,GAASv0B,EAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQhyF,EAAOA,GAASA,EAAMv5B,GAAImF,EAAQ,KAAM,IAAI+xH,GAA+Br5H,IAC3Ky7B,EAAK2uF,UAAU5K,EAAa,GAC5B,MACF,QACE,KAAIx/G,aAAa4jH,IAIf,MAAM,IAAIxlH,MAAM,+CAHhBq9B,EAAO,IAAIqvD,GAAKk6B,GAASgU,EAAajhG,GAASv0B,EAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQhyF,EAAOA,GAASA,EAAMv5B,GAAImF,EAAQ,KAAM,IAAI0mH,GAAYhuH,IACxJy7B,EAAK2uF,UAAU5K,EAAa,IAMvC,IAEH0Z,GAAiB,EAGbI,GAAiB3lD,GAAa,oBAWvB4lD,GAAyB,CAAC/Z,EAAal4G,EAAQuB,EAAO1E,KACjE,GAAI0E,EAAQvB,EAAO08G,QACjB,MAAMsV,GAER,GAAc,IAAVzwH,EAIF,OAHIvB,EAAO8qH,eACToF,GAAoBlwH,EAAO8qH,cAAevpH,EAAO1E,EAAQG,QAEpDw0H,GAA4BtZ,EAAal4G,EAAQ,KAAMnD,GAEhE,MAAMoJ,EAAa1E,EACb4uD,EAAS4/D,GAAW/vH,EAAQuB,GAClC,IAAI7J,EAAIsI,EAAOy8G,OAWf,IAVe,OAAXtsD,IACFz4D,EAAIy4D,EAAO14D,EACX8J,GAAS4uD,EAAO5uD,MAEF,IAAVA,IAEF7J,EAAIA,EAAEo3B,KACNvtB,GAAU7J,GAAKA,EAAEyuH,YAAczuH,EAAE8mB,QAAW9mB,EAAEsF,OAAS,IAG9C,OAANtF,EAAYA,EAAIA,EAAE08B,MACvB,IAAK18B,EAAE8mB,SAAW9mB,EAAEyuH,UAAW,CAC7B,GAAI5kH,GAAS7J,EAAEsF,OAAQ,CACjBuE,EAAQ7J,EAAEsF,QAEZiqH,GAAkB/O,EAAawF,GAAShmH,EAAEmD,GAAGi+G,OAAQphH,EAAEmD,GAAGi9G,MAAQv2G,IAEpE,KACD,CACDA,GAAS7J,EAAEsF,MACZ,CAKH,OAHIgD,EAAO8qH,eACToF,GAAoBlwH,EAAO8qH,cAAe7kH,EAAYpJ,EAAQG,QAEzDw0H,GAA4BtZ,EAAal4G,EAAQtI,EAAGmF,EAA3D,EAcWq1H,GAAuB,CAACha,EAAal4G,EAAQnD,KAExD,MAAMszD,GAAUnwD,EAAO8qH,eAAiB,IAAI3yH,QAAO,CAACg6H,EAAWC,IAAeA,EAAW7wH,MAAQ4wH,EAAU5wH,MAAQ6wH,EAAaD,GAAW,CAAE5wH,MAAO,EAAG9J,EAAGuI,EAAOy8G,SACjK,IAAI/kH,EAAIy4D,EAAO14D,EACf,GAAIC,EACF,MAAOA,EAAE08B,MACP18B,EAAIA,EAAE08B,MAGV,OAAOo9F,GAA4BtZ,EAAal4G,EAAQtI,EAAGmF,EAA3D,EAYWw1H,GAAiB,CAACna,EAAal4G,EAAQuB,EAAOvE,KACzD,GAAe,IAAXA,EAAgB,OACpB,MAAMiJ,EAAa1E,EACb+wH,EAAct1H,EACdmzD,EAAS4/D,GAAW/vH,EAAQuB,GAClC,IAAI7J,EAAIsI,EAAOy8G,OAMf,IALe,OAAXtsD,IACFz4D,EAAIy4D,EAAO14D,EACX8J,GAAS4uD,EAAO5uD,OAGL,OAAN7J,GAAc6J,EAAQ,EAAG7J,EAAIA,EAAE08B,OAC/B18B,EAAE8mB,SAAW9mB,EAAEyuH,YACd5kH,EAAQ7J,EAAEsF,QACZiqH,GAAkB/O,EAAawF,GAAShmH,EAAEmD,GAAGi+G,OAAQphH,EAAEmD,GAAGi9G,MAAQv2G,IAEpEA,GAAS7J,EAAEsF,QAIf,MAAOA,EAAS,GAAW,OAANtF,EACdA,EAAE8mB,UACDxhB,EAAStF,EAAEsF,QACbiqH,GAAkB/O,EAAawF,GAAShmH,EAAEmD,GAAGi+G,OAAQphH,EAAEmD,GAAGi9G,MAAQ96G,IAEpEtF,EAAE4xB,OAAO4uF,GACTl7G,GAAUtF,EAAEsF,QAEdtF,EAAIA,EAAE08B,MAER,GAAIp3B,EAAS,EACX,MAAMg1H,GAEJhyH,EAAO8qH,eACToF,GAAoBlwH,EAAO8qH,cAAe7kH,GAAaqsH,EAAct1H,EACtE,EAWUu1H,GAAgB,CAACra,EAAal4G,EAAQjD,KACjD,MAAMrE,EAAIsH,EAAOkf,KAAKtkB,IAAImC,QAChBG,IAANxE,GACFA,EAAE4wB,OAAO4uF,EACV,EAYUsa,GAAa,CAACta,EAAal4G,EAAQjD,EAAK9G,KACnD,MAAMk+B,EAAOn0B,EAAOkf,KAAKtkB,IAAImC,IAAQ,KAC/B+J,EAAMoxG,EAAYpxG,IAClB4qH,EAAc5qH,EAAIw0G,SACxB,IAAIz+G,EACJ,GAAa,MAAT5G,EACF4G,EAAU,IAAIg1H,GAAW,CAAC57H,SAE1B,OAAQA,EAAMc,aACZ,KAAK6W,OACL,KAAKrF,OACL,KAAK67B,QACL,KAAK9rC,MACL,KAAKy4C,OACHl0C,EAAU,IAAIg1H,GAAW,CAAC57H,IAC1B,MACF,KAAKo2F,WACHxvF,EAAU,IAAIi1H,GAAyC77H,GACvD,MACF,KAAK8kH,GACHl+G,EAAU,IAAIk1H,GAA+B97H,GAC7C,MACF,QACE,KAAIA,aAAiBqmH,IAGnB,MAAM,IAAIxlH,MAAM,2BAFhB+F,EAAU,IAAI6pH,GAAYzwH,GAMlC,IAAIutF,GAAKk6B,GAASgU,EAAajhG,GAAS3pB,EAAI5K,MAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQ,KAAM,KAAMpmH,EAAQjD,EAAKF,GAASimH,UAAU5K,EAAa,EAAtJ,EAWWua,GAAa,CAACzyH,EAAQjD,KACjC,MAAM8J,EAAM7G,EAAOkf,KAAKtkB,IAAImC,GAC5B,YAAeG,IAAR2J,GAAsBA,EAAI2X,aAAqDthB,EAA3C2J,EAAIhK,QAAQ0c,aAAa1S,EAAI7J,OAAS,EAAjF,EAUW01H,GAAiB1yH,IAI5B,MAAMiqG,EAAM,CAAC,EAMb,OALAjqG,EAAOkf,KAAKnhB,SAAQ,CAAC9H,EAAO8G,KACrB9G,EAAMuoB,UACTyrF,EAAIltG,GAAO9G,EAAM4G,QAAQ0c,aAAatjB,EAAM+G,OAAS,GACtD,IAEIitG,CAAP,EAWW0oB,GAAa,CAAC3yH,EAAQjD,KACjC,MAAM8J,EAAM7G,EAAOkf,KAAKtkB,IAAImC,GAC5B,YAAeG,IAAR2J,IAAsBA,EAAI2X,OAAjC,EA2BWo0G,GAAoBp6H,GAAOg0E,GAAwBh0E,EAAIsmF,WAAqC70B,IAAUA,EAAM,GAAGzrC,UC34BrH,MAAMq0G,WAAoBjE,GAK/B73H,YAAai5H,EAAQ9X,GACnBhhH,MAAM84H,EAAQ9X,GACd1iH,KAAKimH,aAAevD,CACrB,EASI,MAAM0E,WAAeN,GAC1BvlH,cACEG,QAKA1B,KAAKs9H,eAAiB,GAItBt9H,KAAKs1H,cAAgB,EACtB,CAQU,YAAE9lE,GACX,MAAM5sD,EAAI,IAAIwkH,GAEd,OADAxkH,EAAEmF,KAAKynD,GACA5sD,CACR,CAYDmkH,WAAY/iH,EAAG2uD,GACbjxD,MAAMqlH,WAAW/iH,EAAG2uD,GACpB3yD,KAAKiP,OAAO,EAA8BjP,KAAKs9H,gBAC/Ct9H,KAAKs9H,eAAiB,IACvB,CAEDxC,QACE,OAAO,IAAI1T,EACZ,CAKD2T,QACE,MAAMrmB,EAAM,IAAI0S,GAIhB,OAHA1S,EAAIzlG,OAAO,EAAGjP,KAAKu9H,UAAUv6H,KAAIw6H,GAC/BA,aAAc1W,GAAe0W,EAAGzC,QAAUyC,KAErC9oB,CACR,CAEGltG,aACF,OAA+B,OAAxBxH,KAAKs9H,eAA0Bt9H,KAAKknH,QAAUlnH,KAAKs9H,eAAe91H,MAC1E,CAQD+rH,cAAe7Q,EAAawY,GAC1Bx5H,MAAM6xH,cAAc7Q,EAAawY,GACjCP,GAAkB36H,KAAM0iH,EAAa,IAAI2a,GAAYr9H,KAAM0iH,GAC5D,CAkBDzzG,OAAQlD,EAAO1E,GACI,OAAbrH,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjB+Z,GAAuB/Z,EAAa1iH,KAAM+L,EAAO1E,EAAjD,IAGyBrH,KAAKs9H,eAAgBt1H,OAAO+D,EAAO,KAAM1E,EAEvE,CASDU,KAAMV,GACa,OAAbrH,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBga,GAAqBha,EAAa1iH,KAAMqH,EAAxC,IAGyBrH,KAAKs9H,eAAgBv1H,QAAQV,EAE3D,CAODyrB,QAASzrB,GACPrH,KAAKiP,OAAO,EAAG5H,EAChB,CAQDysB,OAAQ/nB,EAAOvE,EAAS,GACL,OAAbxH,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBma,GAAena,EAAa1iH,KAAM+L,EAAOvE,EAAzC,IAGyBxH,KAAKs9H,eAAgBt1H,OAAO+D,EAAOvE,EAEjE,CAQDpC,IAAK2G,GACH,OAAOgwH,GAAY/7H,KAAM+L,EAC1B,CAODwxH,UACE,OAAO/B,GAAgBx7H,KACxB,CASD8H,MAAO4C,EAAQ,EAAGD,EAAMzK,KAAKwH,QAC3B,OAAO8zH,GAAct7H,KAAM0K,EAAOD,EACnC,CAODrH,SACE,OAAOpD,KAAKgD,KAAIE,GAAKA,aAAa4jH,GAAe5jH,EAAEE,SAAWF,GAC/D,CAWDF,IAAKQ,GACH,OAAOm4H,GAAY37H,KAA0BwD,EAC9C,CAOD+E,QAAS/E,GACPk4H,GAAgB17H,KAAMwD,EACvB,CAKe,CAAfmC,OAAOqxE,YACN,OAAO4kD,GAAuB57H,KAC/B,CAKDg7H,OAAQ1gB,GACNA,EAAQ8P,aAAaqT,GACtB,EASI,MAAMC,GAAapgB,GAAW,IAAI8J,GChPlC,MAAMuW,WAAkBvE,GAM7B73H,YAAaq8H,EAAMlb,EAAa2Q,GAC9B3xH,MAAMk8H,EAAMlb,GACZ1iH,KAAK69H,YAAcxK,CACpB,EAUI,MAAM9L,WAAaT,GAKxBvlH,YAAa+nF,GACX5nF,QAKA1B,KAAKs9H,eAAiB,KAGpBt9H,KAAKs9H,oBADS51H,IAAZ4hF,EACoB,IAAItkF,IAEJ,IAAIA,IAAIskF,EAEjC,CAYDy9B,WAAY/iH,EAAG2uD,GACbjxD,MAAMqlH,WAAW/iH,EAAG2uD,GACc3yD,KAAKs9H,eAAgB/0H,SAAQ,CAAC9H,EAAO8G,KACrEvH,KAAK4F,IAAI2B,EAAK9G,EAAd,IAEFT,KAAKs9H,eAAiB,IACvB,CAEDxC,QACE,OAAO,IAAIvT,EACZ,CAKDwT,QACE,MAAM/3H,EAAM,IAAIukH,GAIhB,OAHAvnH,KAAKuI,SAAQ,CAAC9H,EAAO8G,KACnBvE,EAAI4C,IAAI2B,EAAK9G,aAAiBqmH,GAAermH,EAAMs6H,QAAUt6H,EAA7D,IAEKuC,CACR,CAQDuwH,cAAe7Q,EAAawY,GAC1BP,GAAkB36H,KAAM0iH,EAAa,IAAIib,GAAU39H,KAAM0iH,EAAawY,GACvE,CAOD93H,SAIE,MAAMJ,EAAM,CAAC,EAOb,OANAhD,KAAK0pB,KAAKnhB,SAAQ,CAACoqD,EAAMprD,KACvB,IAAKorD,EAAK3pC,QAAS,CACjB,MAAMtkB,EAAIiuD,EAAKtrD,QAAQ0c,aAAa4uC,EAAKnrD,OAAS,GAClDxE,EAAIuE,GAAO7C,aAAaoiH,GAAepiH,EAAEtB,SAAWsB,CACrD,KAEI1B,CACR,CAOG0F,WACF,MAAO,IAAI00H,GAAkBp9H,KAAK0pB,OAAOliB,MAC1C,CAOD0zB,OACE,OAAO87C,GAAqBomD,GAAkBp9H,KAAK0pB,OAA6BhlB,GAAKA,EAAE,IACxF,CAODQ,SACE,OAAO8xE,GAAqBomD,GAAkBp9H,KAAK0pB,OAA6BhlB,GAAKA,EAAE,GAAG2C,QAAQ0c,aAAarf,EAAE,GAAG8C,OAAS,IAC9H,CAOD8hF,UACE,OAAOtS,GAAqBomD,GAAkBp9H,KAAK0pB,OAA6BhlB,GAAK,CAACA,EAAE,GAAIA,EAAE,GAAG2C,QAAQ0c,aAAarf,EAAE,GAAG8C,OAAS,KACrI,CAODe,QAAS/E,GAIP,MAAMR,EAAM,CAAC,EAMb,OALAhD,KAAK0pB,KAAKnhB,SAAQ,CAACoqD,EAAMprD,KAClBorD,EAAK3pC,SACRxlB,EAAEmvD,EAAKtrD,QAAQ0c,aAAa4uC,EAAKnrD,OAAS,GAAID,EAAKvH,KACpD,IAEIgD,CACR,CAOe,CAAf2C,OAAOqxE,YACN,OAAOh3E,KAAKspF,SACb,CAODx1D,OAAQvsB,GACW,OAAbvH,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBqa,GAAcra,EAAa1iH,KAAMuH,EAAjC,IAG+BvH,KAAKs9H,eAAgBxpG,OAAOvsB,EAEhE,CAQD3B,IAAK2B,EAAK9G,GAQR,OAPiB,OAAbT,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBsa,GAAWta,EAAa1iH,KAAMuH,EAAK9G,EAAnC,IAG+BT,KAAKs9H,eAAgB13H,IAAI2B,EAAK9G,GAE1DA,CACR,CAQD2E,IAAKmC,GACH,OAA2B01H,GAAWj9H,KAAMuH,EAC7C,CAQD+nC,IAAK/nC,GACH,OAAO41H,GAAWn9H,KAAMuH,EACzB,CAKD03C,QACmB,OAAbj/C,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjB1iH,KAAKuI,SAAQ,SAAU9H,EAAO8G,EAAKvE,GACjC+5H,GAAcra,EAAa1/G,EAAKuE,EACjC,GAFD,IAK+BvH,KAAKs9H,eAAgBr+E,OAEzD,CAKD+7E,OAAQ1gB,GACNA,EAAQ8P,aAAa0T,GACtB,EASI,MAAMC,GAAWzgB,GAAW,IAAIiK,GCtOjCyW,GAAa,CAACp7H,EAAGoG,IAAMpG,IAAMoG,GAAmB,kBAANpG,GAA+B,kBAANoG,GAAkBpG,GAAKoG,GAAK4W,GAAiBhd,EAAGoG,GAElH,MAAMi1H,GAOX18H,YAAao9B,EAAMC,EAAO7yB,EAAOmyH,GAC/Bl+H,KAAK2+B,KAAOA,EACZ3+B,KAAK4+B,MAAQA,EACb5+B,KAAK+L,MAAQA,EACb/L,KAAKk+H,kBAAoBA,CAC1B,CAKDC,UAIE,OAHmB,OAAfn+H,KAAK4+B,OACPi4C,KAEM72E,KAAK4+B,MAAMv3B,QAAQ9F,aACzB,KAAK68H,GACEp+H,KAAK4+B,MAAM5V,SACdq1G,GAAwBr+H,KAAKk+H,kBAAiDl+H,KAAK4+B,MAAMv3B,SAE3F,MACF,QACOrH,KAAK4+B,MAAM5V,UACdhpB,KAAK+L,OAAS/L,KAAK4+B,MAAMp3B,QAE3B,MAEJxH,KAAK2+B,KAAO3+B,KAAK4+B,MACjB5+B,KAAK4+B,MAAQ5+B,KAAK4+B,MAAMA,KACzB,EAYH,MAAM0/F,GAAmB,CAAC5b,EAAaz5G,EAAKmpB,KAC1C,MAAqB,OAAdnpB,EAAI21B,OAAkBxM,EAAQ,EAAG,CACtC,OAAQnpB,EAAI21B,MAAMv3B,QAAQ9F,aACxB,KAAK68H,GACEn1H,EAAI21B,MAAM5V,SACbq1G,GAAwBp1H,EAAIi1H,kBAAiDj1H,EAAI21B,MAAMv3B,SAEzF,MACF,QACO4B,EAAI21B,MAAM5V,UACToJ,EAAQnpB,EAAI21B,MAAMp3B,QAEpBiqH,GAAkB/O,EAAawF,GAASj/G,EAAI21B,MAAMv5B,GAAGi+G,OAAQr6G,EAAI21B,MAAMv5B,GAAGi9G,MAAQlwF,IAEpFnpB,EAAI8C,OAAS9C,EAAI21B,MAAMp3B,OACvB4qB,GAASnpB,EAAI21B,MAAMp3B,QAErB,MAEJyB,EAAI01B,KAAO11B,EAAI21B,MACf31B,EAAI21B,MAAQ31B,EAAI21B,MAAMA,KAEvB,CACD,OAAO31B,CAAP,EAYIs1H,GAAe,CAAC7b,EAAal4G,EAAQuB,KACzC,MAAMmyH,EAAoB,IAAIl5H,IACxB21D,EAAS4/D,GAAW/vH,EAAQuB,GAClC,GAAI4uD,EAAQ,CACV,MAAM1xD,EAAM,IAAIg1H,GAAqBtjE,EAAO14D,EAAE08B,KAAMg8B,EAAO14D,EAAG04D,EAAO5uD,MAAOmyH,GAC5E,OAAOI,GAAiB5b,EAAaz5G,EAAK8C,EAAQ4uD,EAAO5uD,MAC1D,CAAM,CACL,MAAM9C,EAAM,IAAIg1H,GAAqB,KAAMzzH,EAAOy8G,OAAQ,EAAGiX,GAC7D,OAAOI,GAAiB5b,EAAaz5G,EAAK8C,EAC3C,GAcGyyH,GAA0B,CAAC9b,EAAal4G,EAAQi0H,EAASC,KAE7D,MACoB,OAAlBD,EAAQ7/F,SACoB,IAA1B6/F,EAAQ7/F,MAAM5V,SACZy1G,EAAQ7/F,MAAMv3B,QAAQ9F,cAAgB68H,IACtCJ,GAAWU,EAAkBt5H,IAAkCq5H,EAAQ7/F,MAAMv3B,QAASE,KAAoCk3H,EAAQ7/F,MAAMv3B,QAAS5G,QAIhJg+H,EAAQ7/F,MAAM5V,SACjB01G,EAAkB5qG,OAAqC2qG,EAAQ7/F,MAAMv3B,QAASE,KAEhFk3H,EAAQN,UAEV,MAAM7sH,EAAMoxG,EAAYpxG,IAClB4qH,EAAc5qH,EAAIw0G,SACxB4Y,EAAkBn2H,SAAQ,CAAC8I,EAAK9J,KAC9B,MAAMo3B,EAAO8/F,EAAQ9/F,KACfC,EAAQ6/F,EAAQ7/F,MAChB+/F,EAAa,IAAI3wC,GAAKk6B,GAASgU,EAAajhG,GAAS3pB,EAAI5K,MAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQhyF,EAAOA,GAASA,EAAMv5B,GAAImF,EAAQ,KAAM,IAAI4zH,GAAc72H,EAAK8J,IAC/KstH,EAAWrR,UAAU5K,EAAa,GAClC+b,EAAQ7/F,MAAQ+/F,EAChBF,EAAQN,SAAR,GANF,EAiBIE,GAA0B,CAACH,EAAmBU,KAClD,MAAM,IAAEr3H,EAAF,MAAO9G,GAAUm+H,EACT,OAAVn+H,EACFy9H,EAAkBpqG,OAAOvsB,GAEzB22H,EAAkBt4H,IAAI2B,EAAK9G,EAC5B,EAUGo+H,GAA2B,CAACJ,EAASv7E,KAEzC,MAAO,EAAM,CACX,GAAsB,OAAlBu7E,EAAQ7/F,MACV,MACK,KAAI6/F,EAAQ7/F,MAAM5V,SAAYy1G,EAAQ7/F,MAAMv3B,QAAQ9F,cAAgB68H,IAAiBJ,GAAW96E,EAA0Cu7E,EAAQ7/F,MAAMv3B,QAAUE,MAAQ,KAAoCk3H,EAAQ7/F,MAAMv3B,QAAS5G,QAG1O,MAEFg+H,EAAQN,SACT,GAaGW,GAAmB,CAACpc,EAAal4G,EAAQi0H,EAASv7E,KACtD,MAAM5xC,EAAMoxG,EAAYpxG,IAClB4qH,EAAc5qH,EAAIw0G,SAClB4Y,EAAoB,IAAI15H,IAE9B,IAAK,MAAMuC,KAAO27C,EAAY,CAC5B,MAAM7xC,EAAM6xC,EAAW37C,GACjBw3H,EAAaN,EAAQP,kBAAkB94H,IAAImC,IAAQ,KACzD,IAAKy2H,GAAWe,EAAY1tH,GAAM,CAEhCqtH,EAAkB94H,IAAI2B,EAAKw3H,GAC3B,MAAM,KAAEpgG,EAAF,MAAQC,GAAU6/F,EACxBA,EAAQ7/F,MAAQ,IAAIovD,GAAKk6B,GAASgU,EAAajhG,GAAS3pB,EAAI5K,MAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQhyF,EAAOA,GAASA,EAAMv5B,GAAImF,EAAQ,KAAM,IAAI4zH,GAAc72H,EAAK8J,IAC5KotH,EAAQ7/F,MAAM0uF,UAAU5K,EAAa,GACrC+b,EAAQN,SACT,CACF,CACD,OAAOO,CAAP,EAaIjmG,GAAa,CAACiqF,EAAal4G,EAAQi0H,EAASj1H,EAAM05C,KACtDu7E,EAAQP,kBAAkB31H,SAAQ,CAAC8I,EAAK9J,UACdG,IAApBw7C,EAAW37C,KACb27C,EAAW37C,GAAO,KACnB,IAEH,MAAM+J,EAAMoxG,EAAYpxG,IAClB4qH,EAAc5qH,EAAIw0G,SACxB+Y,GAAyBJ,EAASv7E,GAClC,MAAMw7E,EAAoBI,GAAiBpc,EAAal4G,EAAQi0H,EAASv7E,GAEnE77C,EAAUmC,EAAKjI,cAAgBg6C,OAAS,IAAIyjF,GAAqCx1H,GAAUA,aAAgBs9G,GAAe,IAAIoK,GAAY1nH,GAAQ,IAAIy1H,GAAaz1H,GACzK,IAAI,KAAEm1B,EAAF,MAAQC,EAAR,MAAe7yB,GAAU0yH,EACzBj0H,EAAO8qH,eACToF,GAAoBlwH,EAAO8qH,cAAemJ,EAAQ1yH,MAAO1E,EAAQ63H,aAEnEtgG,EAAQ,IAAIovD,GAAKk6B,GAASgU,EAAajhG,GAAS3pB,EAAI5K,MAAOw1H,IAAev9F,EAAMA,GAAQA,EAAKiyF,OAAQhyF,EAAOA,GAASA,EAAMv5B,GAAImF,EAAQ,KAAMnD,GAC7Iu3B,EAAM0uF,UAAU5K,EAAa,GAC7B+b,EAAQ7/F,MAAQA,EAChB6/F,EAAQ1yH,MAAQA,EAChB0yH,EAAQN,UACRK,GAAwB9b,EAAal4G,EAAQi0H,EAASC,EAAtD,EAaIS,GAAa,CAACzc,EAAal4G,EAAQi0H,EAASj3H,EAAQ07C,KACxD,MAAM5xC,EAAMoxG,EAAYpxG,IAClB4qH,EAAc5qH,EAAIw0G,SACxB+Y,GAAyBJ,EAASv7E,GAClC,MAAMw7E,EAAoBI,GAAiBpc,EAAal4G,EAAQi0H,EAASv7E,GAKzEk8E,EAAe,MACK,OAAlBX,EAAQ7/F,QACPp3B,EAAS,GAENk3H,EAAkBh2H,KAAO,IACxB+1H,EAAQ7/F,MAAM5V,SAAWy1G,EAAQ7/F,MAAMv3B,QAAQ9F,cAAgB68H,KAGpE,CACA,IAAKK,EAAQ7/F,MAAM5V,QACjB,OAAQy1G,EAAQ7/F,MAAMv3B,QAAQ9F,aAC5B,KAAK68H,GAAe,CAClB,MAAM,IAAE72H,EAAF,MAAO9G,GAAwCg+H,EAAQ7/F,MAAMv3B,QAC7DiS,EAAO4pC,EAAW37C,GACxB,QAAaG,IAAT4R,EAAoB,CACtB,GAAI0kH,GAAW1kH,EAAM7Y,GACnBi+H,EAAkB5qG,OAAOvsB,OACpB,CACL,GAAe,IAAXC,EAGF,MAAM43H,EAERV,EAAkB94H,IAAI2B,EAAK9G,EAC5B,CACDg+H,EAAQ7/F,MAAM9K,OAAO4uF,EACtB,MACC+b,EAAQP,kBAAkBt4H,IAAI2B,EAAK9G,GAErC,KACD,CACD,QACM+G,EAASi3H,EAAQ7/F,MAAMp3B,QACzBiqH,GAAkB/O,EAAawF,GAASuW,EAAQ7/F,MAAMv5B,GAAGi+G,OAAQmb,EAAQ7/F,MAAMv5B,GAAGi9G,MAAQ96G,IAE5FA,GAAUi3H,EAAQ7/F,MAAMp3B,OACxB,MAGNi3H,EAAQN,SACT,CAID,GAAI32H,EAAS,EAAG,CACd,IAAI63H,EAAW,GACf,KAAO73H,EAAS,EAAGA,IACjB63H,GAAY,KAEdZ,EAAQ7/F,MAAQ,IAAIovD,GAAKk6B,GAASgU,EAAajhG,GAAS3pB,EAAI5K,MAAOw1H,IAAeuC,EAAQ9/F,KAAM8/F,EAAQ9/F,MAAQ8/F,EAAQ9/F,KAAKiyF,OAAQ6N,EAAQ7/F,MAAO6/F,EAAQ7/F,OAAS6/F,EAAQ7/F,MAAMv5B,GAAImF,EAAQ,KAAM,IAAIw0H,GAAcK,IACvNZ,EAAQ7/F,MAAM0uF,UAAU5K,EAAa,GACrC+b,EAAQN,SACT,CACDK,GAAwB9b,EAAal4G,EAAQi0H,EAASC,EAAtD,EAgBIY,GAAuB,CAAC5c,EAAah4G,EAAO6sH,EAAMgI,EAAiBC,KACvE,IAAI/0H,EAAM8sH,EACV,MAAMkI,EAAgBz8H,GAASw8H,GAC/B,MAAO/0H,KAASA,EAAIkmH,WAAalmH,EAAIue,SAC9Bve,EAAIue,SAAWve,EAAIpD,QAAQ9F,cAAgB68H,IAC9CC,GAAwBoB,EAA6Ch1H,EAAIpD,SAE3EoD,EAAMA,EAAIm0B,MAEZ,IAAI8gG,EAAW,EACXC,GAAmB,EACvB,MAAOj1H,IAAUD,EAAK,CAIpB,GAHI8sH,IAAS7sH,IACXi1H,GAAmB,IAEhBj1H,EAAMse,QAAS,CAClB,MAAM3hB,EAAUqD,EAAMrD,QACtB,OAAQA,EAAQ9F,aACd,KAAK68H,GAAe,CAClB,MAAM,IAAE72H,EAAF,MAAO9G,GAAwC4G,GAChDo4H,EAAcr6H,IAAImC,IAAQ,QAAU9G,IAAU8+H,EAAgBn6H,IAAImC,IAAQ,QAAU9G,IAEvFiK,EAAMopB,OAAO4uF,GACbgd,IACKC,IAAqBH,EAAep6H,IAAImC,IAAQ,QAAU9G,IAAU8+H,EAAgBn6H,IAAImC,IAAQ,QAAU9G,GAC7G++H,EAAe1rG,OAAOvsB,IAG1B,KACD,EAEJ,CACDmD,EAA6BA,EAAMk0B,KACpC,CACD,OAAO8gG,CAAP,EAOIE,GAAkC,CAACld,EAAa/vD,KAEpD,MAAOA,GAAQA,EAAK/zB,QAAU+zB,EAAK/zB,MAAM5V,UAAY2pC,EAAK/zB,MAAM+xF,WAC9Dh+D,EAAOA,EAAK/zB,MAEd,MAAMr+B,EAAQ,IAAIylF,IAElB,MAAOrzB,IAASA,EAAK3pC,UAAY2pC,EAAKg+D,WAAY,CAChD,IAAKh+D,EAAK3pC,SAAW2pC,EAAKtrD,QAAQ9F,cAAgB68H,GAAe,CAC/D,MAAM72H,EAAoCorD,EAAKtrD,QAASE,IACpDhH,EAAM+uC,IAAI/nC,GACZorD,EAAK7+B,OAAO4uF,GAEZniH,EAAMsmB,IAAItf,EAEb,CACDorD,EAAOA,EAAKh0B,IACb,GAeUkhG,GAAyB10H,IACpC,IAAIspG,EAAM,EAsBV,OArBAgS,GAA6Bt7G,EAAKmG,KAAMoxG,IACtC,IAAIh4G,EAA6BS,EAAK87G,OAClCx8G,EAAMU,EAAK87G,OACXsY,EAAkBv8H,KACtB,MAAMk7H,EAAoBl7H,GAASu8H,GACnC,MAAO90H,EAAK,CACV,IAAoB,IAAhBA,EAAIue,QACN,OAAQve,EAAIpD,QAAQ9F,aAClB,KAAK68H,GACHC,GAAwBH,EAAiDzzH,EAAIpD,SAC7E,MACF,QACEotG,GAAO6qB,GAAqB5c,EAAah4G,EAAOD,EAAK80H,EAAiBrB,GACtEqB,EAAkBv8H,GAASk7H,GAC3BxzH,EAAQD,EACR,MAGNA,EAAMA,EAAIm0B,KACX,KAEI61E,CAAP,EAYIqrB,GAAa,CAACpd,EAAa+b,EAASj3H,KACxC,MAAMs1H,EAAct1H,EACdu4H,EAAa/8H,GAASy7H,EAAQP,mBAC9BxzH,EAAQ+zH,EAAQ7/F,MACtB,MAAOp3B,EAAS,GAAuB,OAAlBi3H,EAAQ7/F,MAAgB,CAC3C,IAA8B,IAA1B6/F,EAAQ7/F,MAAM5V,QAChB,OAAQy1G,EAAQ7/F,MAAMv3B,QAAQ9F,aAC5B,KAAK2vH,GACL,KAAK+N,GACL,KAAKD,GACCx3H,EAASi3H,EAAQ7/F,MAAMp3B,QACzBiqH,GAAkB/O,EAAawF,GAASuW,EAAQ7/F,MAAMv5B,GAAGi+G,OAAQmb,EAAQ7/F,MAAMv5B,GAAGi9G,MAAQ96G,IAE5FA,GAAUi3H,EAAQ7/F,MAAMp3B,OACxBi3H,EAAQ7/F,MAAM9K,OAAO4uF,GACrB,MAGN+b,EAAQN,SACT,CACGzzH,GACF40H,GAAqB5c,EAAah4G,EAAO+zH,EAAQ7/F,MAAOmhG,EAAYtB,EAAQP,mBAE9E,MAAM1zH,GAAgEi0H,EAAQ9/F,MAAQ8/F,EAAQ7/F,OAAOp0B,OAIrG,OAHIA,EAAO8qH,eACToF,GAAoBlwH,EAAO8qH,cAAemJ,EAAQ1yH,OAAQ+wH,EAAct1H,GAEnEi3H,CAAP,EAkCK,MAAMuB,WAAmB5G,GAM9B73H,YAAa0+H,EAAOvd,EAAa2Q,GAC/B3xH,MAAMu+H,EAAOvd,GAMb1iH,KAAKkgI,kBAAmB,EAKxBlgI,KAAK69H,YAAc,IAAI73C,IACvBqtC,EAAK9qH,SAASwH,IACA,OAARA,EACF/P,KAAKkgI,kBAAmB,EAExBlgI,KAAK69H,YAAYh3G,IAAI9W,EACtB,GAEJ,CAKG4pH,cACF,GAAsB,OAAlB35H,KAAKq5H,SAAmB,CAI1B,MAAMM,EAAU,CACdz+F,KAAMl7B,KAAKk7B,KACXw+F,MAAO15H,KAAK05H,MACZnsG,MAAO,IAAIy4D,IACXh9D,QAAS,IAAIg9D,KAEfhmF,KAAKq5H,SAAWM,CACjB,CACD,OAA2B35H,KAA3B,QACD,CAUG05H,YACF,GAAoB,OAAhB15H,KAAKu5H,OAAiB,CACxB,MAAMv1H,EAAwBhE,KAAKqQ,OAAOiB,IAIpCooH,EAAQ,GACdjT,GAASziH,GAAG0+G,IACV,MAAMwb,EAAoB,IAAIl5H,IACxBm7H,EAAgB,IAAIn7H,IAC1B,IAAI2tD,EAAO3yD,KAAKqQ,OAAO42G,OAInB76B,EAAS,KAIb,MAAMlpC,EAAa,CAAC,EAIpB,IAAIj0C,EAAS,GACT4qH,EAAS,EACTuG,EAAY,EAChB,MAAMC,EAAQ,KACZ,GAAe,OAAXj0C,EAAiB,CAInB,IAAIk0C,EACJ,OAAQl0C,GACN,IAAK,SACHk0C,EAAK,CAAExsG,OAAQssG,GACfA,EAAY,EACZ,MACF,IAAK,SACHE,EAAK,CAAErxH,UACHivH,EAAkBx1H,KAAO,IAC3B43H,EAAGp9E,WAAa,CAAC,EACjBg7E,EAAkB31H,SAAQ,CAAC9H,EAAO8G,KAClB,OAAV9G,IACF6/H,EAAGp9E,WAAW37C,GAAO9G,EACtB,KAGLwO,EAAS,GACT,MACF,IAAK,SAEH,GADAqxH,EAAK,CAAEzG,UACH9mH,OAAOmoB,KAAKgoB,GAAY17C,OAAS,EAAG,CACtC84H,EAAGp9E,WAAa,CAAC,EACjB,IAAK,MAAM37C,KAAO27C,EAChBo9E,EAAGp9E,WAAW37C,GAAO27C,EAAW37C,EAEnC,CACDsyH,EAAS,EACT,MAEJH,EAAM3xH,KAAKu4H,GACXl0C,EAAS,IACV,GAEH,MAAgB,OAATz5B,EAAe,CACpB,OAAQA,EAAKtrD,QAAQ9F,aACnB,KAAK2vH,GACL,KAAK+N,GACCj/H,KAAKy5H,KAAK9mE,GACP3yD,KAAK4iH,QAAQjwD,KAChB0tE,IACAj0C,EAAS,SACTn9E,EAAS0jD,EAAKtrD,QAAQ0c,aAAa,GACnCs8G,KAEOrgI,KAAK4iH,QAAQjwD,IACP,WAAXy5B,IACFi0C,IACAj0C,EAAS,UAEXg0C,GAAa,GACHztE,EAAK3pC,UACA,WAAXojE,IACFi0C,IACAj0C,EAAS,UAEXytC,GAAU,GAEZ,MACF,KAAKmF,GACCh/H,KAAKy5H,KAAK9mE,GACP3yD,KAAK4iH,QAAQjwD,KACD,WAAXy5B,IACFi0C,IACAj0C,EAAS,UAEXn9E,GAAwC0jD,EAAKtrD,QAASkL,KAE/CvS,KAAK4iH,QAAQjwD,IACP,WAAXy5B,IACFi0C,IACAj0C,EAAS,UAEXg0C,GAAaztE,EAAKnrD,QACRmrD,EAAK3pC,UACA,WAAXojE,IACFi0C,IACAj0C,EAAS,UAEXytC,GAAUlnE,EAAKnrD,QAEjB,MACF,KAAK42H,GAAe,CAClB,MAAM,IAAE72H,EAAF,MAAO9G,GAAwCkyD,EAAKtrD,QAC1D,GAAIrH,KAAKy5H,KAAK9mE,IACZ,IAAK3yD,KAAK4iH,QAAQjwD,GAAO,CACvB,MAAM4tE,EAASrC,EAAkB94H,IAAImC,IAAQ,KACxCy2H,GAAWuC,EAAQ9/H,GASH,OAAVA,GACTkyD,EAAK7+B,OAAO4uF,IATG,WAAXt2B,GACFi0C,IAEErC,GAAWv9H,EAAQ0/H,EAAc/6H,IAAImC,IAAQ,aACxC27C,EAAW37C,GAElB27C,EAAW37C,GAAO9G,EAKvB,OACI,GAAIT,KAAK4iH,QAAQjwD,GAAO,CAC7BwtE,EAAcv6H,IAAI2B,EAAK9G,GACvB,MAAM8/H,EAASrC,EAAkB94H,IAAImC,IAAQ,KACxCy2H,GAAWuC,EAAQ9/H,KACP,WAAX2rF,GACFi0C,IAEFn9E,EAAW37C,GAAOg5H,EAErB,MAAM,IAAK5tE,EAAK3pC,QAAS,CACxBm3G,EAAcv6H,IAAI2B,EAAK9G,GACvB,MAAM6Y,EAAO4pC,EAAW37C,QACXG,IAAT4R,IACG0kH,GAAW1kH,EAAM7Y,GASF,OAAT6Y,GACTq5C,EAAK7+B,OAAO4uF,IATG,WAAXt2B,GACFi0C,IAEY,OAAV5/H,SACKyiD,EAAW37C,GAElB27C,EAAW37C,GAAO9G,GAMzB,CACIkyD,EAAK3pC,UACO,WAAXojE,GACFi0C,IAEFhC,GAAwBH,EAAiDvrE,EAAKtrD,UAEhF,KACD,EAEHsrD,EAAOA,EAAK/zB,KACb,CACDyhG,IACA,MAAO3G,EAAMlyH,OAAS,EAAG,CACvB,MAAM+uH,EAASmD,EAAMA,EAAMlyH,OAAS,GACpC,QAAsBE,IAAlB6uH,EAAOsD,aAA8CnyH,IAAtB6uH,EAAOrzE,WAIxC,MAFAw2E,EAAMjiH,KAIT,KAEHzX,KAAKu5H,OAASG,CACf,CACD,OAA2B15H,KAA3B,MACD,EAYI,MAAMsnH,WAAcR,GAIzBvlH,YAAa6T,GACX1T,QAKA1B,KAAKwgI,cAAsB94H,IAAX0N,EAAuB,CAAC,IAAMpV,KAAKiP,OAAO,EAAGmG,IAAW,GAIxEpV,KAAKs1H,cAAgB,EACtB,CAOG9tH,aACF,OAAOxH,KAAKknH,OACb,CAMDH,WAAY/iH,EAAG2uD,GACbjxD,MAAMqlH,WAAW/iH,EAAG2uD,GACpB,IACkC3yD,KAAKwgI,SAAUj4H,SAAQ/E,GAAKA,KAG7D,CAFC,MAAOpC,IACP40B,QAAQ6gD,MAAMz1E,GACf,CACDpB,KAAKwgI,SAAW,IACjB,CAED1F,QACE,OAAO,IAAIxT,EACZ,CAKDyT,QACE,MAAMvxH,EAAO,IAAI89G,GAEjB,OADA99G,EAAKi3H,WAAWzgI,KAAK0gI,WACdl3H,CACR,CAQD+pH,cAAe7Q,EAAawY,GAC1Bx5H,MAAM6xH,cAAc7Q,EAAawY,GACjC,MAAM38F,EAAQ,IAAIyhG,GAAWhgI,KAAM0iH,EAAawY,GAC1C5pH,EAAMoxG,EAAYpxG,IAGxB,GAFAqpH,GAAkB36H,KAAM0iH,EAAankF,IAEhCmkF,EAAY1iE,MAAO,CAEtB,IAAI2gF,GAAsB,EAC1B,IAAK,MAAOrd,EAAQsd,KAAele,EAAYwP,WAAW5oC,UAAW,CACnE,MAAMg5B,EAAQI,EAAY8K,YAAYpoH,IAAIk+G,IAAW,EACrD,GAAIsd,IAAete,IAGnBS,GAAeL,EAA4CpxG,EAAI5K,MAAM87G,QAAQp9G,IAAIk+G,GAAUhB,EAAOse,GAAYjuE,IACvGA,EAAK3pC,SAAgC2pC,EAAMtrD,QAAQ9F,cAAgB68H,KACtEuC,GAAsB,EACvB,IAECA,GACF,KAEH,CACIA,GACHle,GAAsBC,EAAaA,EAAYuP,WAAWt/D,IACpDA,aAAgBs5D,IAAM0U,GAGtBhuE,EAAKnoD,SAAWxK,MAAQ2yD,EAAKtrD,QAAQ9F,cAAgB68H,KACvDuC,GAAsB,EACvB,IAGLla,GAASn1G,GAAMjQ,IACTs/H,EAGFd,GAAuB7/H,MAKvByiH,GAAsBphH,EAAGA,EAAE4wH,WAAWt/D,IAChCA,aAAgBs5D,IAGhBt5D,EAAKnoD,SAAWxK,MAClB4/H,GAAgCv+H,EAAGsxD,EACpC,GAEJ,GAEJ,CACF,CAODrvD,WACE,IAAIiP,EAAM,GAINrQ,EAAIlC,KAAKinH,OACb,MAAa,OAAN/kH,GACAA,EAAE8mB,SAAW9mB,EAAEyuH,WAAazuH,EAAEmF,QAAQ9F,cAAgBy9H,KACzDzsH,GAAqCrQ,EAAEmF,QAASkL,KAElDrQ,EAAIA,EAAE08B,MAER,OAAOrsB,CACR,CAQDnP,SACE,OAAOpD,KAAKsD,UACb,CAYDm9H,WAAY/G,GAAO,SAAEmH,GAAW,GAAS,CAAC,GACvB,OAAb7gI,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjB,MAAM+b,EAAU,IAAIR,GAAqB,KAAMj+H,KAAKinH,OAAQ,EAAG,IAAIjiH,KACnE,IAAK,IAAInC,EAAI,EAAGA,EAAI62H,EAAMlyH,OAAQ3E,IAAK,CACrC,MAAMy9H,EAAK5G,EAAM72H,GACjB,QAAkB6E,IAAd44H,EAAGrxH,OAAsB,CAM3B,MAAM6xH,EAAQD,GAAiC,kBAAdP,EAAGrxH,QAAuBpM,IAAM62H,EAAMlyH,OAAS,GAAuB,OAAlBi3H,EAAQ7/F,OAA0C,OAAxB0hG,EAAGrxH,OAAOnH,OAAO,GAAwCw4H,EAAGrxH,OAA5BqxH,EAAGrxH,OAAOnH,MAAM,GAAI,IAChJ,kBAARg5H,GAAoBA,EAAIt5H,OAAS,IAC1CixB,GAAWiqF,EAAa1iH,KAAMy+H,EAASqC,EAAKR,EAAGp9E,YAAc,CAAC,EAEjE,WAAwBx7C,IAAd44H,EAAGzG,OACZsF,GAAWzc,EAAa1iH,KAAMy+H,EAAS6B,EAAGzG,OAAQyG,EAAGp9E,YAAc,CAAC,QAC7Cx7C,IAAd44H,EAAGxsG,QACZgsG,GAAWpd,EAAa+b,EAAS6B,EAAGxsG,OAEvC,KAG6B9zB,KAAKwgI,SAAUz4H,MAAK,IAAM/H,KAAKygI,WAAW/G,IAE7E,CAYDgH,QAASpP,EAAUyP,EAAcC,GAI/B,MAAMC,EAAM,GACN/C,EAAoB,IAAIl5H,IACxBsM,EAA0BtR,KAAKsR,IACrC,IAAIiB,EAAM,GACNrQ,EAAIlC,KAAKinH,OACb,SAASia,IACP,GAAI3uH,EAAI/K,OAAS,EAAG,CAKlB,MAAM07C,EAAa,CAAC,EACpB,IAAIi+E,GAAgB,EACpBjD,EAAkB31H,SAAQ,CAAC9H,EAAO8G,KAChC45H,GAAgB,EAChBj+E,EAAW37C,GAAO9G,CAAlB,IAKF,MAAM6/H,EAAK,CAAErxH,OAAQsD,GACjB4uH,IACFb,EAAGp9E,WAAaA,GAElB+9E,EAAIl5H,KAAKu4H,GACT/tH,EAAM,EACP,CACF,CA+DD,OA5DAk0G,GAASn1G,GAAKoxG,IACR4O,GACFE,GAA6B9O,EAAa4O,GAExCyP,GACFvP,GAA6B9O,EAAaqe,GAE5C,MAAa,OAAN7+H,EAAY,CACjB,GAAIqvH,GAAUrvH,EAAGovH,SAA+B5pH,IAAjBq5H,GAA8BxP,GAAUrvH,EAAG6+H,GACxE,OAAQ7+H,EAAEmF,QAAQ9F,aAChB,KAAKy9H,GAAe,CAClB,MAAMtyH,EAAMwxH,EAAkB94H,IAAI,gBACjBsC,IAAb4pH,GAA2BC,GAAUrvH,EAAGovH,QAKhB5pH,IAAjBq5H,GAA+BxP,GAAUrvH,EAAG6+H,QAKpCr5H,IAARgF,IACTw0H,IACAhD,EAAkBpqG,OAAO,iBANbpsB,IAARgF,GAAqBA,EAAI00H,OAASl/H,EAAEmD,GAAGi+G,QAAwB,UAAd52G,EAAIuM,QACvDioH,IACAhD,EAAkBt4H,IAAI,UAAWo7H,EAAiBA,EAAe,QAAS9+H,EAAEmD,IAAM,CAAE8F,KAAM,gBAPhFzD,IAARgF,GAAqBA,EAAI00H,OAASl/H,EAAEmD,GAAGi+G,QAAwB,YAAd52G,EAAIuM,QACvDioH,IACAhD,EAAkBt4H,IAAI,UAAWo7H,EAAiBA,EAAe,UAAW9+H,EAAEmD,IAAM,CAAE8F,KAAM,aAWhGoH,GAAqCrQ,EAAEmF,QAASkL,IAChD,KACD,CACD,KAAK2+G,GACL,KAAK+N,GAAc,CACjBiC,IAIA,MAAMZ,EAAK,CACTrxH,OAAQ/M,EAAEmF,QAAQ0c,aAAa,IAEjC,GAAIm6G,EAAkBx1H,KAAO,EAAG,CAC9B,MAAMnI,EAA2C,CAAC,EAClD+/H,EAAGp9E,WAAa3iD,EAChB29H,EAAkB31H,SAAQ,CAAC9H,EAAO8G,KAChChH,EAAMgH,GAAO9G,CAAb,GAEH,CACDwgI,EAAIl5H,KAAKu4H,GACT,KACD,CACD,KAAKlC,GACC7M,GAAUrvH,EAAGovH,KACf4P,IACA7C,GAAwBH,EAAiDh8H,EAAEmF,UAE7E,MAGNnF,EAAIA,EAAE08B,KACP,CACDsiG,GAAS,GACR1P,IACIyP,CACR,CAYDhyH,OAAQlD,EAAOvC,EAAM05C,GACnB,GAAI15C,EAAKhC,QAAU,EACjB,OAEF,MAAMxD,EAAIhE,KAAKsR,IACL,OAANtN,EACFyiH,GAASziH,GAAG0+G,IACV,MAAMz5G,EAAMs1H,GAAa7b,EAAa1iH,KAAM+L,GACvCm3C,IACHA,EAAa,CAAC,EAEdj6C,EAAIi1H,kBAAkB31H,SAAQ,CAAC7D,EAAG07E,KAAQl9B,EAAWk9B,GAAK17E,CAAhB,KAE5C+zB,GAAWiqF,EAAa1iH,KAAMiJ,EAAKO,EAAM05C,EAAzC,IAG8BljD,KAAKwgI,SAAUz4H,MAAK,IAAM/H,KAAKiP,OAAOlD,EAAOvC,EAAM05C,IAEtF,CAYDm+E,YAAat1H,EAAOy+G,EAAOtnE,EAAa,CAAC,GACvC,MAAMl/C,EAAIhE,KAAKsR,IACL,OAANtN,EACFyiH,GAASziH,GAAG0+G,IACV,MAAMz5G,EAAMs1H,GAAa7b,EAAa1iH,KAAM+L,GAC5C0sB,GAAWiqF,EAAa1iH,KAAMiJ,EAAKuhH,EAAOtnE,EAA1C,IAG8BljD,KAAKwgI,SAAUz4H,MAAK,IAAM/H,KAAKqhI,YAAYt1H,EAAOy+G,EAAOtnE,IAE5F,CAUDpvB,OAAQ/nB,EAAOvE,GACb,GAAe,IAAXA,EACF,OAEF,MAAMxD,EAAIhE,KAAKsR,IACL,OAANtN,EACFyiH,GAASziH,GAAG0+G,IACVod,GAAWpd,EAAa6b,GAAa7b,EAAa1iH,KAAM+L,GAAQvE,EAAhE,IAG8BxH,KAAKwgI,SAAUz4H,MAAK,IAAM/H,KAAK8zB,OAAO/nB,EAAOvE,IAEhF,CAYDo3H,OAAQ7yH,EAAOvE,EAAQ07C,GACrB,GAAe,IAAX17C,EACF,OAEF,MAAMxD,EAAIhE,KAAKsR,IACL,OAANtN,EACFyiH,GAASziH,GAAG0+G,IACV,MAAMz5G,EAAMs1H,GAAa7b,EAAa1iH,KAAM+L,GAC1B,OAAd9C,EAAI21B,OAGRugG,GAAWzc,EAAa1iH,KAAMiJ,EAAKzB,EAAQ07C,EAA3C,IAG8BljD,KAAKwgI,SAAUz4H,MAAK,IAAM/H,KAAK4+H,OAAO7yH,EAAOvE,EAAQ07C,IAExF,CAWD3V,gBAAiBwX,GACE,OAAb/kD,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBqa,GAAcra,EAAa1iH,KAAM+kD,EAAjC,IAG8B/kD,KAAKwgI,SAAUz4H,MAAK,IAAM/H,KAAKutC,gBAAgBwX,IAElF,CAYDp9B,aAAco9B,EAAeu8E,GACV,OAAbthI,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBsa,GAAWta,EAAa1iH,KAAM+kD,EAAeu8E,EAA7C,IAG8BthI,KAAKwgI,SAAUz4H,MAAK,IAAM/H,KAAK2nB,aAAao9B,EAAeu8E,IAE9F,CAaDt/G,aAAc+iC,GACZ,OAA2Bk4E,GAAWj9H,KAAM+kD,EAC7C,CAYDw8E,cAAejQ,GACb,OAAO4L,GAAcl9H,KACtB,CAKDg7H,OAAQ1gB,GACNA,EAAQ8P,aAAaoX,GACtB,EAUI,MAAMC,GAAYnkB,GAAW,IAAIgK,GCjrCjC,MAAMoa,GAKXngI,YAAa2/B,EAAM19B,EAAI,MAAM,IAC3BxD,KAAK2hI,QAAUn+H,EACfxD,KAAKsnD,MAAQpmB,EAIblhC,KAAK4hI,aAAoC1gG,EAAK+lF,OAC9CjnH,KAAK6hI,YAAa,CACnB,CAEe,CAAfl8H,OAAOqxE,YACN,OAAOh3E,IACR,CASDgS,OAIE,IAAI9P,EAAIlC,KAAK4hI,aACTz2H,EAAOjJ,GAAKA,EAAEmF,SAA+BnF,EAAEmF,QAAS8D,KAC5D,GAAU,OAANjJ,KAAgBlC,KAAK6hI,YAAc3/H,EAAE8mB,UAAYhpB,KAAK2hI,QAAQx2H,IAChE,GAEE,GADAA,EAA2BjJ,EAAEmF,QAAS8D,KACjCjJ,EAAE8mB,SAAY7d,EAAK5J,cAAgBugI,IAAe32H,EAAK5J,cAAgBkmH,IAAiC,OAAhBt8G,EAAK87G,OAKhG,MAAa,OAAN/kH,EAAY,CACjB,GAAgB,OAAZA,EAAE08B,MAAgB,CACpB18B,EAAIA,EAAE08B,MACN,KACD,CACC18B,EADSA,EAAEsI,SAAWxK,KAAKsnD,MACvB,KAEkCplD,EAAEsI,OAAQ47G,KAEnD,MAZDlkH,EAAIiJ,EAAK87G,aAcE,OAAN/kH,IAAeA,EAAE8mB,UAAYhpB,KAAK2hI,QAAoCz/H,EAAEmF,QAAS8D,QAG5F,OADAnL,KAAK6hI,YAAa,EACR,OAAN3/H,EAEK,CAAEzB,WAAOiH,EAAWxB,MAAM,IAEnClG,KAAK4hI,aAAe1/H,EACb,CAAEzB,MAA2ByB,EAAEmF,QAAS8D,KAAMjF,MAAM,GAC5D,EAYI,MAAMuhH,WAAqBX,GAChCvlH,cACEG,QAIA1B,KAAKs9H,eAAiB,EACvB,CAKG7xH,iBACF,MAAMD,EAAQxL,KAAKi7H,OACnB,OAAOzvH,EAAQA,EAAMnE,QAAQ0c,aAAa,GAAK,IAChD,CAYDgjG,WAAY/iH,EAAG2uD,GACbjxD,MAAMqlH,WAAW/iH,EAAG2uD,GACpB3yD,KAAKiP,OAAO,EAA8BjP,KAAKs9H,gBAC/Ct9H,KAAKs9H,eAAiB,IACvB,CAEDxC,QACE,OAAO,IAAIrT,EACZ,CAKDsT,QACE,MAAMyC,EAAK,IAAI/V,GAGf,OADA+V,EAAGvuH,OAAO,EAAGjP,KAAKu9H,UAAUv6H,KAAI2vD,GAAQA,aAAgBm0D,GAAen0D,EAAKooE,QAAUpoE,KAC/E6qE,CACR,CAEGh2H,aACF,OAA+B,OAAxBxH,KAAKs9H,eAA0Bt9H,KAAKknH,QAAUlnH,KAAKs9H,eAAe91H,MAC1E,CAmBDu6H,iBAAkBpzF,GAChB,OAAO,IAAI+yF,GAAe1hI,KAAM2uC,EACjC,CAiBDzqB,cAAe89G,GACbA,EAAQA,EAAMzkE,cAEd,MAAMyZ,EAAW,IAAI0qD,GAAe1hI,MAAMyjC,GAAWA,EAAQriB,UAAYqiB,EAAQriB,SAASm8C,gBAAkBykE,IACtGhwH,EAAOglE,EAAShlE,OACtB,OAAIA,EAAK9L,KACA,KAEA8L,EAAKvR,KAEf,CAaDg3C,iBAAkBuqF,GAGhB,OAFAA,EAAQA,EAAMzkE,cAEPz6D,MAAM2F,KAAK,IAAIi5H,GAAe1hI,MAAMyjC,GAAWA,EAAQriB,UAAYqiB,EAAQriB,SAASm8C,gBAAkBykE,IAC9G,CAQDzO,cAAe7Q,EAAawY,GAC1BP,GAAkB36H,KAAM0iH,EAAa,IAAIuf,GAAUjiI,KAAMk7H,EAAYxY,GACtE,CAODp/G,WACE,OAAOq4H,GAAY37H,MAAMkiI,GAAOA,EAAI5+H,aAAYH,KAAK,GACtD,CAKDC,SACE,OAAOpD,KAAKsD,UACb,CAiBD6jB,MAAOg7G,EAAYl6G,SAAUm6G,EAAQ,CAAC,EAAGC,GACvC,MAAM9zH,EAAW4zH,EAAU17G,yBAO3B,YANgB/e,IAAZ26H,GACFA,EAAQC,mBAAmB/zH,EAAUvO,MAEvC07H,GAAgB17H,MAAMuiI,IACpBh0H,EAASy/B,aAAau0F,EAAQp7G,MAAMg7G,EAAWC,EAAOC,GAAU,KAAhE,IAEK9zH,CACR,CAYDU,OAAQlD,EAAO1E,GACI,OAAbrH,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjB+Z,GAAuB/Z,EAAa1iH,KAAM+L,EAAO1E,EAAjD,IAIFrH,KAAKs9H,eAAet1H,OAAO+D,EAAO,KAAM1E,EAE3C,CAYDm7H,YAAathI,EAAKmG,GAChB,GAAiB,OAAbrH,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjB,MAAM+f,EAAWvhI,GAAOA,aAAe4lH,GAAgB5lH,EAAIklH,MAAQllH,EACnE86H,GAA4BtZ,EAAa1iH,KAAMyiI,EAASp7H,EAAxD,QAEG,CACL,MAAMq7H,EAAgC1iI,KAAKs9H,eACrCvxH,EAAgB,OAAR7K,EAAe,EAAIwhI,EAAGp2H,WAAUkxH,GAAMA,IAAOt8H,IAAO,EAClE,GAAc,IAAV6K,GAAuB,OAAR7K,EACjB,MAAM21E,GAAa,4BAErB6rD,EAAG16H,OAAO+D,EAAO,KAAM1E,EACxB,CACF,CAQDysB,OAAQ/nB,EAAOvE,EAAS,GACL,OAAbxH,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBma,GAAena,EAAa1iH,KAAM+L,EAAOvE,EAAzC,IAIFxH,KAAKs9H,eAAet1H,OAAO+D,EAAOvE,EAErC,CAOD+1H,UACE,OAAO/B,GAAgBx7H,KACxB,CAOD+H,KAAMV,GACJrH,KAAKiP,OAAOjP,KAAKwH,OAAQH,EAC1B,CAODyrB,QAASzrB,GACPrH,KAAKiP,OAAO,EAAG5H,EAChB,CAQDjC,IAAK2G,GACH,OAAOgwH,GAAY/7H,KAAM+L,EAC1B,CASDjE,MAAO4C,EAAQ,EAAGD,EAAMzK,KAAKwH,QAC3B,OAAO8zH,GAAct7H,KAAM0K,EAAOD,EACnC,CAODlC,QAAS/E,GACPk4H,GAAgB17H,KAAMwD,EACvB,CAUDw3H,OAAQ1gB,GACNA,EAAQ8P,aAAauY,GACtB,EAUI,MAAMC,GAAmBtlB,GAAW,IAAImK,GC9ZxC,MAAMqa,WAAoBra,GAC/BlmH,YAAa6f,EAAW,aACtB1f,QACA1B,KAAKohB,SAAWA,EAIhBphB,KAAK6iI,aAAe,IAAI79H,GACzB,CAKGqf,kBACF,MAAMniB,EAAIlC,KAAKomH,MAAQpmH,KAAKomH,MAAMp0G,KAAO,KACzC,OAAO9P,EAAqEA,EAAEmF,QAAS8D,KAAQ,IAChG,CAKG23H,kBACF,MAAM5gI,EAAIlC,KAAKomH,MAAQpmH,KAAKomH,MAAM9sF,KAAO,KACzC,OAAOp3B,EAAqEA,EAAEmF,QAAS8D,KAAQ,IAChG,CAYD47G,WAAY/iH,EAAG2uD,GACbjxD,MAAMqlH,WAAW/iH,EAAG2uD,GACe3yD,KAAK6iI,aAAet6H,SAAQ,CAAC9H,EAAO8G,KACrEvH,KAAK2nB,aAAapgB,EAAK9G,EAAvB,IAEFT,KAAK6iI,aAAe,IACrB,CAOD/H,QACE,OAAO,IAAIgH,GAAY9hI,KAAKohB,SAC7B,CAKD25G,QACE,MAAMyC,EAAK,IAAIsE,GAAY9hI,KAAKohB,UAC1B7gB,EAAQP,KAAKuhI,gBACnB,IAAK,MAAMh6H,KAAOhH,EAChBi9H,EAAG71G,aAAapgB,EAAKhH,EAAMgH,IAI7B,OADAi2H,EAAGvuH,OAAO,EAAGjP,KAAKu9H,UAAUv6H,KAAI2vD,GAAQA,aAAgBm0D,GAAen0D,EAAKooE,QAAUpoE,KAC/E6qE,CACR,CAWDl6H,WACE,MAAM/C,EAAQP,KAAKuhI,gBACbwB,EAAgB,GAChB7nG,EAAO,GACb,IAAK,MAAM3zB,KAAOhH,EAChB26B,EAAKnzB,KAAKR,GAEZ2zB,EAAKjtB,OACL,MAAM+0H,EAAU9nG,EAAK1zB,OACrB,IAAK,IAAI3E,EAAI,EAAGA,EAAImgI,EAASngI,IAAK,CAChC,MAAM0E,EAAM2zB,EAAKr4B,GACjBkgI,EAAch7H,KAAKR,EAAM,KAAOhH,EAAMgH,GAAO,IAC9C,CACD,MAAM6Z,EAAWphB,KAAKohB,SAAS6hH,oBACzBC,EAAcH,EAAcv7H,OAAS,EAAI,IAAMu7H,EAAc5/H,KAAK,KAAO,GAC/E,MAAQ,IAAGie,IAAW8hH,KAAexhI,MAAM4B,eAAe8d,IAC3D,CASDmsB,gBAAiBwX,GACE,OAAb/kD,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBqa,GAAcra,EAAa1iH,KAAM+kD,EAAjC,IAG8B/kD,KAAK6iI,aAAc/uG,OAAOixB,EAE7D,CAUDp9B,aAAco9B,EAAeu8E,GACV,OAAbthI,KAAKsR,IACPm1G,GAASzmH,KAAKsR,KAAKoxG,IACjBsa,GAAWta,EAAa1iH,KAAM+kD,EAAeu8E,EAA7C,IAG+BthI,KAAK6iI,aAAcj9H,IAAIm/C,EAAeu8E,EAE1E,CAWDt/G,aAAc+iC,GACZ,OAA2Bk4E,GAAWj9H,KAAM+kD,EAC7C,CAUDja,aAAcia,GACZ,OAA2Bo4E,GAAWn9H,KAAM+kD,EAC7C,CAUDw8E,cAAejQ,GACb,OAAO4L,GAAcl9H,KACtB,CAiBDmnB,MAAOg7G,EAAYl6G,SAAUm6G,EAAQ,CAAC,EAAGC,GACvC,MAAM/lH,EAAM6lH,EAAU16G,cAAcznB,KAAKohB,UACnC7gB,EAAQP,KAAKuhI,gBACnB,IAAK,MAAMh6H,KAAOhH,EAChB+b,EAAIqL,aAAapgB,EAAKhH,EAAMgH,IAQ9B,OANAm0H,GAAgB17H,MAAMmjI,IACpB7mH,EAAI0J,YAAYm9G,EAAKh8G,MAAMg7G,EAAWC,EAAOC,GAA7C,SAEc36H,IAAZ26H,GACFA,EAAQC,mBAAmBhmH,EAAKtc,MAE3Bsc,CACR,CAUD0+G,OAAQ1gB,GACNA,EAAQ8P,aAAagZ,IACrB9oB,EAAQmQ,SAASzqH,KAAKohB,SACvB,EASI,MAAMiiH,GAAkB/lB,GAAW,IAAIwkB,GAAYxkB,EAAQsL,WCnO3D,MAAMqZ,WAAkB7I,GAQ7B73H,YAAa8O,EAAQgjH,EAAM3Q,GACzBhhH,MAAM2O,EAAQqyG,GAMd1iH,KAAKkgI,kBAAmB,EAKxBlgI,KAAKsjI,kBAAoB,IAAIt9C,IAC7BqtC,EAAK9qH,SAASwH,IACA,OAARA,EACF/P,KAAKkgI,kBAAmB,EAExBlgI,KAAKsjI,kBAAkBz8G,IAAI9W,EAC5B,GAEJ,EC1BI,MAAMwzH,WAAiBhc,GAI5BhmH,YAAaiiI,GACX9hI,QAIA1B,KAAKwjI,SAAWA,CACjB,CAKD1I,QACE,OAAO,IAAIyI,GAASvjI,KAAKwjI,SAC1B,CAKDzI,QACE,MAAMyC,EAAK,IAAI+F,GAASvjI,KAAKwjI,UAI7B,OAHAxjI,KAAKuI,SAAQ,CAAC9H,EAAO8G,KACnBi2H,EAAG53H,IAAI2B,EAAK9G,EAAZ,IAEK+8H,CACR,CAiBDr2G,MAAOg7G,EAAYl6G,SAAUm6G,EAAQ,CAAC,EAAGC,GACvC,MAAMtyE,EAAOqyE,EAAMpiI,KAAKwjI,UACxB,IAAIlnH,EAUJ,OAREA,OADW5U,IAATqoD,EACIA,EAAK0zE,UAAUzjI,MAEfioB,SAASR,cAAcznB,KAAKwjI,UAEpClnH,EAAIqL,aAAa,gBAAiB3nB,KAAKwjI,eACvB97H,IAAZ26H,GACFA,EAAQC,mBAAmBhmH,EAAKtc,MAE3Bsc,CACR,CAUD0+G,OAAQ1gB,GACNA,EAAQ8P,aAAasZ,IACrBppB,EAAQmQ,SAASzqH,KAAKwjI,SACvB,EAUI,MAAMG,GAAermB,GAC1B,IAAIimB,GAASjmB,EAAQsL,WCnFhB,MAAMgb,WAAiBtc,GAIxBjjG,kBACF,MAAMniB,EAAIlC,KAAKomH,MAAQpmH,KAAKomH,MAAMp0G,KAAO,KACzC,OAAO9P,EAAqEA,EAAEmF,QAAS8D,KAAQ,IAChG,CAKG23H,kBACF,MAAM5gI,EAAIlC,KAAKomH,MAAQpmH,KAAKomH,MAAM9sF,KAAO,KACzC,OAAOp3B,EAAqEA,EAAEmF,QAAS8D,KAAQ,IAChG,CAED2vH,QACE,OAAO,IAAI8I,EACZ,CAKD7I,QACE,MAAMvxH,EAAO,IAAIo6H,GAEjB,OADAp6H,EAAKi3H,WAAWzgI,KAAK0gI,WACdl3H,CACR,CAiBD2d,MAAOg7G,EAAYl6G,SAAUm6G,EAAOC,GAClC,MAAM/lH,EAAM6lH,EAAUz+G,eAAe1jB,KAAKsD,YAI1C,YAHgBoE,IAAZ26H,GACFA,EAAQC,mBAAmBhmH,EAAKtc,MAE3Bsc,CACR,CAEDhZ,WAEE,OAAOtD,KAAK0gI,UAAU19H,KAAI02H,IACxB,MAAMmK,EAAc,GACpB,IAAK,MAAMziH,KAAYs4G,EAAMx2E,WAAY,CACvC,MAAM3iD,EAAQ,GACd,IAAK,MAAMgH,KAAOmyH,EAAMx2E,WAAW9hC,GACjC7gB,EAAMwH,KAAK,CAAER,MAAK9G,MAAOi5H,EAAMx2E,WAAW9hC,GAAU7Z,KAGtDhH,EAAM0N,MAAK,CAACrL,EAAGoG,IAAMpG,EAAE2E,IAAMyB,EAAEzB,KAAO,EAAI,IAC1Cs8H,EAAY97H,KAAK,CAAEqZ,WAAU7gB,SAC9B,CAEDsjI,EAAY51H,MAAK,CAACrL,EAAGoG,IAAMpG,EAAEwe,SAAWpY,EAAEoY,UAAY,EAAI,IAE1D,IAAI7O,EAAM,GACV,IAAK,IAAI1P,EAAI,EAAGA,EAAIghI,EAAYr8H,OAAQ3E,IAAK,CAC3C,MAAMoI,EAAO44H,EAAYhhI,GACzB0P,GAAQ,IAAGtH,EAAKmW,WAChB,IAAK,IAAI1b,EAAI,EAAGA,EAAIuF,EAAK1K,MAAMiH,OAAQ9B,IAAK,CAC1C,MAAM4T,EAAOrO,EAAK1K,MAAMmF,GACxB6M,GAAQ,IAAG+G,EAAK/R,QAAQ+R,EAAK7Y,QAC9B,CACD8R,GAAO,GACR,CACDA,GAAOmnH,EAAMzqH,OACb,IAAK,IAAIpM,EAAIghI,EAAYr8H,OAAS,EAAG3E,GAAK,EAAGA,IAC3C0P,GAAQ,KAAIsxH,EAAYhhI,GAAGue,YAE7B,OAAO7O,CAAP,IACCpP,KAAK,GACT,CAKDC,SACE,OAAOpD,KAAKsD,UACb,CAKD03H,OAAQ1gB,GACNA,EAAQ8P,aAAa0Z,GACtB,EAUI,MAAMC,GAAezmB,GAAW,IAAIsmB,GCjHpC,MAAMI,GAKXziI,YAAa8D,EAAImC,GACfxH,KAAKqF,GAAKA,EACVrF,KAAKwH,OAASA,CACf,CAKGwhB,cACF,MAAM6tD,IACP,CASD47C,UAAW7zF,GACT,OAAO,CACR,CAOD41B,MAAO8lD,EAASptG,EAAQ+2H,GACtB,MAAMptD,IACP,CAMDy2C,UAAW5K,EAAax1G,GACtB,MAAM2pE,IACP,EC3CI,MAAMqtD,GAAoB,EAK1B,MAAMjY,WAAW+X,GAClBh7G,cACF,OAAO,CACR,CAED8K,SAAY,CAMZ2+F,UAAW7zF,GACT,OAAI5+B,KAAKuB,cAAgBq9B,EAAMr9B,cAG/BvB,KAAKwH,QAAUo3B,EAAMp3B,QACd,EACR,CAMD8lH,UAAW5K,EAAax1G,GAClBA,EAAS,IACXlN,KAAKqF,GAAGi9G,OAASp1G,EACjBlN,KAAKwH,QAAU0F,GAEjBykH,GAAUjP,EAAYpxG,IAAI5K,MAAO1G,KAClC,CAMDw0D,MAAO8lD,EAASptG,GACdotG,EAAQ0P,UAAUka,IAClB5pB,EAAQ+P,SAASrqH,KAAKwH,OAAS0F,EAChC,CAODkgH,WAAY1K,EAAah8G,GACvB,OAAO,IACR,ECrDI,MAAM41H,GAIX/6H,YAAa8F,GACXrH,KAAKqH,QAAUA,CAChB,CAKD63H,YACE,OAAO,CACR,CAKDn7G,aACE,MAAO,CAAC/jB,KAAKqH,QACd,CAKD88H,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAIqwH,GAAct8H,KAAKqH,QAC/B,CAMDW,OAAQkF,GACN,MAAM2pE,IACP,CAMD47C,UAAW7zF,GACT,OAAO,CACR,CAMD0uF,UAAW5K,EAAa/vD,GAAQ,CAIhC7+B,OAAQ4uF,GAAe,CAIvBgD,GAAIh/G,GAAS,CAKb8tD,MAAO8lD,EAASptG,GACdotG,EAAQgQ,SAAStqH,KAAKqH,QACvB,CAKD+8H,SACE,OAAO,CACR,EAOI,MAAMC,GAAoB/mB,GAAW,IAAIgf,GAAchf,EAAQoL,WCrF/D,MAAM4b,GAIX/iI,YAAashC,GACX7iC,KAAK6iC,IAAMA,CACZ,CAKDq8F,YACE,OAAOl/H,KAAK6iC,GACb,CAKD9e,aACE,MAAO,EACR,CAKDogH,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAIq4H,GAAetkI,KAAK6iC,IAChC,CAMD76B,OAAQkF,GACN,MAAM0xB,EAAQ,IAAI0lG,GAAetkI,KAAK6iC,IAAM31B,GAE5C,OADAlN,KAAK6iC,IAAM31B,EACJ0xB,CACR,CAMD6zF,UAAW7zF,GAET,OADA5+B,KAAK6iC,KAAOjE,EAAMiE,KACX,CACR,CAMDyqF,UAAW5K,EAAa/vD,GACtBkxD,GAAenB,EAAYuP,UAAWt/D,EAAKttD,GAAGi+G,OAAQ3wD,EAAKttD,GAAGi9G,MAAOtiH,KAAK6iC,KAC1E8vB,EAAK4xE,aACN,CAKDzwG,OAAQ4uF,GAAe,CAIvBgD,GAAIh/G,GAAS,CAKb8tD,MAAO8lD,EAASptG,GACdotG,EAAQ+P,SAASrqH,KAAK6iC,IAAM31B,EAC7B,CAKDk3H,SACE,OAAO,CACR,EASI,MAAMI,GAAqBlnB,GAAW,IAAIgnB,GAAehnB,EAAQmL,WCzFlEgc,GAAoB,CAACjf,EAAMmC,IAAS,IAAIpC,GAAI,CAAEC,UAASmC,EAAM9B,WAAY8B,EAAK9B,YAAc8B,EAAK/B,WAAY,IAK5G,MAAM2W,GAIXh7H,YAAa+P,GACPA,EAAI80G,OACNpwF,QAAQ6gD,MAAM,2HAKhB72E,KAAKsR,IAAMA,EAIX,MAAMq2G,EAAO,CAAC,EACd3nH,KAAK2nH,KAAOA,EACPr2G,EAAIo0G,KACPiC,EAAKjC,IAAK,GAERp0G,EAAIs0G,WACN+B,EAAK/B,UAAW,GAED,OAAbt0G,EAAImmB,OACNkwF,EAAKlwF,KAAOnmB,EAAImmB,KAEnB,CAKDynG,YACE,OAAO,CACR,CAKDn7G,aACE,MAAO,CAAC/jB,KAAKsR,IACd,CAKD6yH,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAIswH,GAAWkI,GAAkBzkI,KAAKsR,IAAIk0G,KAAMxlH,KAAK2nH,MAC7D,CAMD3/G,OAAQkF,GACN,MAAM2pE,IACP,CAMD47C,UAAW7zF,GACT,OAAO,CACR,CAMD0uF,UAAW5K,EAAa/vD,GAEtB3yD,KAAKsR,IAAI80G,MAAQzzD,EACjB+vD,EAAYkF,aAAa/gG,IAAI7mB,KAAKsR,KAC9BtR,KAAKsR,IAAIu0G,YACXnD,EAAYgE,cAAc7/F,IAAI7mB,KAAKsR,IAEtC,CAKDwiB,OAAQ4uF,GACFA,EAAYkF,aAAat4E,IAAItvC,KAAKsR,KACpCoxG,EAAYkF,aAAa9zF,OAAO9zB,KAAKsR,KAErCoxG,EAAYmF,eAAehhG,IAAI7mB,KAAKsR,IAEvC,CAKDo0G,GAAIh/G,GAAU,CAMd8tD,MAAO8lD,EAASptG,GACdotG,EAAQ2P,YAAYjqH,KAAKsR,IAAIk0G,MAC7BlL,EAAQiC,SAASv8G,KAAK2nH,KACvB,CAKDyc,SACE,OAAO,CACR,EASI,MAAMM,GAAiBpnB,GAAW,IAAIif,GAAWkI,GAAkBnnB,EAAQgL,aAAchL,EAAQoB,YClIjG,MAAMugB,GAIX19H,YAAaipH,GACXxqH,KAAKwqH,MAAQA,CACd,CAKD0U,YACE,OAAO,CACR,CAKDn7G,aACE,MAAO,CAAC/jB,KAAKwqH,MACd,CAKD2Z,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAIgzH,GAAaj/H,KAAKwqH,MAC9B,CAMDxiH,OAAQkF,GACN,MAAM2pE,IACP,CAMD47C,UAAW7zF,GACT,OAAO,CACR,CAMD0uF,UAAW5K,EAAa/vD,GAAQ,CAIhC7+B,OAAQ4uF,GAAe,CAIvBgD,GAAIh/G,GAAS,CAKb8tD,MAAO8lD,EAASptG,GACdotG,EAAQiQ,UAAUvqH,KAAKwqH,MACxB,CAKD4Z,SACE,OAAO,CACR,EASI,MAAMO,GAAmBrnB,GAAW,IAAI2hB,GAAa3hB,EAAQqL,YCvF7D,MAAMyV,GAKX78H,YAAagG,EAAK9G,GAChBT,KAAKuH,IAAMA,EACXvH,KAAKS,MAAQA,CACd,CAKDy+H,YACE,OAAO,CACR,CAKDn7G,aACE,MAAO,EACR,CAKDogH,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAImyH,GAAcp+H,KAAKuH,IAAKvH,KAAKS,MACzC,CAMDuH,OAAQkF,GACN,MAAM2pE,IACP,CAMD47C,UAAW7zF,GACT,OAAO,CACR,CAMD0uF,UAAW5K,EAAa/vD,GAEYA,EAAKnoD,OAAQ8qH,cAAgB,IAChE,CAKDxhG,OAAQ4uF,GAAe,CAIvBgD,GAAIh/G,GAAS,CAKb8tD,MAAO8lD,EAASptG,GACdotG,EAAQmQ,SAASzqH,KAAKuH,KACtB+yG,EAAQiQ,UAAUvqH,KAAKS,MACxB,CAKD2jI,SACE,OAAO,CACR,EAOI,MAAMQ,GAAoBtnB,GAAW,IAAI8gB,GAAc9gB,EAAQsL,UAAWtL,EAAQqL,YC/FlF,MAAMkc,GAIXtjI,YAAamzG,GAIX10G,KAAK00G,IAAMA,CACZ,CAKDwqB,YACE,OAAOl/H,KAAK00G,IAAIltG,MACjB,CAKDuc,aACE,OAAO/jB,KAAK00G,GACb,CAKDyvB,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAI44H,GAAY7kI,KAAK00G,IAC7B,CAMD1sG,OAAQkF,GACN,MAAM0xB,EAAQ,IAAIimG,GAAY7kI,KAAK00G,IAAI5sG,MAAMoF,IAE7C,OADAlN,KAAK00G,IAAM10G,KAAK00G,IAAI5sG,MAAM,EAAGoF,GACtB0xB,CACR,CAMD6zF,UAAW7zF,GAET,OADA5+B,KAAK00G,IAAM10G,KAAK00G,IAAIxsG,OAAO02B,EAAM81E,MAC1B,CACR,CAMD4Y,UAAW5K,EAAa/vD,GAAQ,CAIhC7+B,OAAQ4uF,GAAe,CAIvBgD,GAAIh/G,GAAS,CAKb8tD,MAAO8lD,EAASptG,GACd,MAAM21B,EAAM7iC,KAAK00G,IAAIltG,OACrB8yG,EAAQ+P,SAASxnF,EAAM31B,GACvB,IAAK,IAAIrK,EAAIqK,EAAQrK,EAAIggC,EAAKhgC,IAAK,CACjC,MAAMK,EAAIlD,KAAK00G,IAAI7xG,GACnBy3G,EAAQ2P,iBAAkBviH,IAANxE,EAAkB,YAAcnB,KAAKC,UAAUkB,GACpE,CACF,CAKDkhI,SACE,OAAO,CACR,EASI,MAAMU,GAAkBxnB,IAC7B,MAAMz6E,EAAMy6E,EAAQmL,UACd8S,EAAK,GACX,IAAK,IAAI14H,EAAI,EAAGA,EAAIggC,EAAKhgC,IAAK,CAC5B,MAAMK,EAAIo6G,EAAQgL,aACR,cAANplH,EACFq4H,EAAGxzH,UAAKL,GAER6zH,EAAGxzH,KAAKhG,KAAKuZ,MAAMpY,GAEtB,CACD,OAAO,IAAI2hI,GAAYtJ,EAAvB,EChHK,MAAMc,GAIX96H,YAAamzG,GAIX10G,KAAK00G,IAAMA,CACZ,CAKDwqB,YACE,OAAOl/H,KAAK00G,IAAIltG,MACjB,CAKDuc,aACE,OAAO/jB,KAAK00G,GACb,CAKDyvB,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAIowH,GAAWr8H,KAAK00G,IAC5B,CAMD1sG,OAAQkF,GACN,MAAM0xB,EAAQ,IAAIy9F,GAAWr8H,KAAK00G,IAAI5sG,MAAMoF,IAE5C,OADAlN,KAAK00G,IAAM10G,KAAK00G,IAAI5sG,MAAM,EAAGoF,GACtB0xB,CACR,CAMD6zF,UAAW7zF,GAET,OADA5+B,KAAK00G,IAAM10G,KAAK00G,IAAIxsG,OAAO02B,EAAM81E,MAC1B,CACR,CAMD4Y,UAAW5K,EAAa/vD,GAAQ,CAIhC7+B,OAAQ4uF,GAAe,CAIvBgD,GAAIh/G,GAAS,CAKb8tD,MAAO8lD,EAASptG,GACd,MAAM21B,EAAM7iC,KAAK00G,IAAIltG,OACrB8yG,EAAQ+P,SAASxnF,EAAM31B,GACvB,IAAK,IAAIrK,EAAIqK,EAAQrK,EAAIggC,EAAKhgC,IAAK,CACjC,MAAMK,EAAIlD,KAAK00G,IAAI7xG,GACnBy3G,EAAQiC,SAASr5G,EAClB,CACF,CAKDkhI,SACE,OAAO,CACR,EAOI,MAAMW,GAAiBznB,IAC5B,MAAMz6E,EAAMy6E,EAAQmL,UACd8S,EAAK,GACX,IAAK,IAAI14H,EAAI,EAAGA,EAAIggC,EAAKhgC,IACvB04H,EAAGxzH,KAAKu1G,EAAQoB,WAElB,OAAO,IAAI2d,GAAWd,EAAtB,ECnGK,MAAMyD,GAIXz9H,YAAagR,GAIXvS,KAAKuS,IAAMA,CACZ,CAKD2sH,YACE,OAAOl/H,KAAKuS,IAAI/K,MACjB,CAKDuc,aACE,OAAO/jB,KAAKuS,IAAIiF,MAAM,GACvB,CAKD2sH,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAI+yH,GAAch/H,KAAKuS,IAC/B,CAMDvK,OAAQkF,GACN,MAAM0xB,EAAQ,IAAIogG,GAAch/H,KAAKuS,IAAIzK,MAAMoF,IAC/ClN,KAAKuS,IAAMvS,KAAKuS,IAAIzK,MAAM,EAAGoF,GAG7B,MAAM83H,EAAgBhlI,KAAKuS,IAAI6K,WAAWlQ,EAAS,GASnD,OARI83H,GAAiB,OAAUA,GAAiB,QAI9ChlI,KAAKuS,IAAMvS,KAAKuS,IAAIzK,MAAM,EAAGoF,EAAS,GAAK,IAE3C0xB,EAAMrsB,IAAM,IAAMqsB,EAAMrsB,IAAIzK,MAAM,IAE7B82B,CACR,CAMD6zF,UAAW7zF,GAET,OADA5+B,KAAKuS,KAAOqsB,EAAMrsB,KACX,CACR,CAMD+6G,UAAW5K,EAAa/vD,GAAQ,CAIhC7+B,OAAQ4uF,GAAe,CAIvBgD,GAAIh/G,GAAS,CAKb8tD,MAAO8lD,EAASptG,GACdotG,EAAQ2P,YAAuB,IAAX/8G,EAAelN,KAAKuS,IAAMvS,KAAKuS,IAAIzK,MAAMoF,GAC9D,CAKDk3H,SACE,OAAO,CACR,EASI,MAAMa,GAAoB3nB,GAAW,IAAI0hB,GAAc1hB,EAAQgL,cC7FzD4c,GAAW,CACtBxH,GACAK,GACA0D,GACA4B,GACAT,GACAe,GACAI,IAGWtG,GAAc,EACdK,GAAY,EACZ0D,GAAa,EACb4B,GAAmB,EACnBT,GAAoB,EACpBe,GAAgB,EAChBI,GAAgB,EAKtB,MAAM5S,GAIX3vH,YAAa4J,GAIXnL,KAAKmL,KAAOA,CACb,CAKD+zH,YACE,OAAO,CACR,CAKDn7G,aACE,MAAO,CAAC/jB,KAAKmL,KACd,CAKDg5H,cACE,OAAO,CACR,CAKDl4H,OACE,OAAO,IAAIilH,GAAYlxH,KAAKmL,KAAK2vH,QAClC,CAMD9yH,OAAQkF,GACN,MAAM2pE,IACP,CAMD47C,UAAW7zF,GACT,OAAO,CACR,CAMD0uF,UAAW5K,EAAa/vD,GACtB3yD,KAAKmL,KAAK47G,WAAWrE,EAAYpxG,IAAKqhD,EACvC,CAKD7+B,OAAQ4uF,GACN,IAAI/vD,EAAO3yD,KAAKmL,KAAK87G,OACrB,MAAgB,OAATt0D,EACAA,EAAK3pC,QAOR05F,EAAY0P,cAAcrqH,KAAK4qD,GAN/BA,EAAK7+B,OAAO4uF,GAQd/vD,EAAOA,EAAK/zB,MAEd5+B,KAAKmL,KAAKue,KAAKnhB,SAAQoqD,IAChBA,EAAK3pC,QAIR05F,EAAY0P,cAAcrqH,KAAK4qD,GAH/BA,EAAK7+B,OAAO4uF,EAIb,IAEHA,EAAYr2E,QAAQvY,OAAO9zB,KAAKmL,KACjC,CAKDu6G,GAAIh/G,GACF,IAAIisD,EAAO3yD,KAAKmL,KAAK87G,OACrB,MAAgB,OAATt0D,EACLA,EAAK+yD,GAAGh/G,GAAO,GACfisD,EAAOA,EAAK/zB,MAEd5+B,KAAKmL,KAAK87G,OAAS,KACnBjnH,KAAKmL,KAAKue,KAAKnhB,SAA0CoqD,IACvD,MAAgB,OAATA,EACLA,EAAK+yD,GAAGh/G,GAAO,GACfisD,EAAOA,EAAKh0B,IACb,IAEH3+B,KAAKmL,KAAKue,KAAO,IAAI1kB,GACtB,CAMDwvD,MAAO8lD,EAASptG,GACdlN,KAAKmL,KAAK6vH,OAAO1gB,EAClB,CAKD8pB,SACE,OAAO,CACR,EASI,MAAMe,GAAkB7nB,GAAW,IAAI4T,GAAYgU,GAAS5nB,EAAQkL,eAAelL,ICrI7E2T,GAAe,CAACvqH,EAAOrB,KAIlC,IAEIstD,EAFAyyE,EAAS//H,EACTkkB,EAAO,EAEX,GACMA,EAAO,IACT67G,EAASld,GAASkd,EAAO9hB,OAAQ8hB,EAAO9iB,MAAQ/4F,IAElDopC,EAAO+jD,GAAQhwG,EAAO0+H,GACtB77G,EAAO67G,EAAO9iB,MAAQ3vD,EAAKttD,GAAGi9G,MAC9B8iB,EAASzyE,EAAKsiE,aACI,OAAXmQ,GAAmBzyE,aAAgBq7B,IAC5C,MAAO,CACLr7B,OAAMppC,OADR,EAcWkrG,GAAW,CAAC9hE,EAAMjsC,KAC7B,MAAgB,OAATisC,GAAiBA,EAAKjsC,OAASA,EACpCisC,EAAKjsC,KAAOA,EACZisC,EAAyCA,EAAKnoD,OAAQ47G,KACvD,EAaUhB,GAAY,CAAC1C,EAAakV,EAAUruG,KAE/C,MAAM,OAAE+5F,EAAF,MAAUhB,GAAUsV,EAASvyH,GAC7BggI,EAAY,IAAIr3C,GACpBk6B,GAAS5E,EAAQhB,EAAQ/4F,GACzBquG,EACA1P,GAAS5E,EAAQhB,EAAQ/4F,EAAO,GAChCquG,EAASh5F,MACTg5F,EAASC,YACTD,EAASptH,OACTotH,EAASrF,UACTqF,EAASvwH,QAAQW,OAAOuhB,IAwB1B,OAtBIquG,EAAS5uG,SACXq8G,EAAUd,cAER3M,EAASlxG,OACX2+G,EAAU3+G,MAAO,GAEK,OAApBkxG,EAAS3C,SACXoQ,EAAUpQ,OAAS/M,GAAS0P,EAAS3C,OAAO3R,OAAQsU,EAAS3C,OAAO3S,MAAQ/4F,IAG9EquG,EAASh5F,MAAQymG,EAEO,OAApBA,EAAUzmG,QACZymG,EAAUzmG,MAAMD,KAAO0mG,GAGzB3iB,EAAY0P,cAAcrqH,KAAKs9H,GAEH,OAAxBA,EAAU9S,WAA0C,OAApB8S,EAAUzmG,OACVymG,EAAU76H,OAAQkf,KAAK9jB,IAAIy/H,EAAU9S,UAAW8S,GAEpFzN,EAASpwH,OAAS+hB,EACX87G,CAAP,EAgBWnQ,GAAW,CAACxS,EAAa/vD,EAAM2yE,EAAWvQ,EAAeI,KACpE,MAAM7jH,EAAMoxG,EAAYpxG,IAClB5K,EAAQ4K,EAAI5K,MACZ6+H,EAAcj0H,EAAIw0G,SAClBmP,EAAStiE,EAAKsiE,OACpB,GAAe,OAAXA,EACF,OAAOxD,GAAkB/O,EAAauS,GAExC,IAQIr2F,EARA4mG,EAA+C7yE,EAAKnoD,OAAQ47G,MAI5DznF,EAAO,KAMX,GAAmB,OAAf6mG,IAA8C,IAAvBA,EAAWx8G,QAAkB,CAEtD,GAA0B,OAAtBw8G,EAAWvQ,UAAqBqQ,EAAUh2F,IAAIk2F,IAAuG,OAAxFtQ,GAASxS,EAAa8iB,EAAYF,EAAWvQ,EAAeI,IAC3H,OAAO,KAET,MAA6B,OAAtBqQ,EAAWvQ,OAChBuQ,EAAa/T,GAAkB/O,EAAa8iB,EAAWvQ,OAE1D,CACD,MAAMrnG,EAA4B,OAAf43G,EAAwD7yE,EAAKnoD,OAAsCg7H,EAAWn+H,QAAS8D,KAE1I,GAAuB,OAAnBwnD,EAAK4/D,UAAoB,CAE3B5zF,EAAOg0B,EAAKh0B,KACZC,EAAQ+zB,EAER,MAAgB,OAATh0B,EAAe,CAIpB,IAAI8mG,EAAY9mG,EAEhB,MAAqB,OAAd8mG,GAAwDA,EAAUj7H,OAAQ47G,QAAUof,EACzFC,EAAiC,OAArBA,EAAUxQ,OAAkB,KAAOxD,GAAkB/O,EAAa+iB,EAAUxQ,QAE1F,GAAkB,OAAdwQ,GAAwDA,EAAUj7H,OAAQ47G,QAAUof,EAAY,CAClG7mG,EAAO8mG,EACP,KACD,CACD9mG,EAAOA,EAAKA,IACb,CACD,MAAiB,OAAVC,EAAgB,CAIrB,IAAI8mG,EAAa9mG,EAEjB,MAAsB,OAAf8mG,GAAyDA,EAAWl7H,OAAQ47G,QAAUof,EAC3FE,EAAmC,OAAtBA,EAAWzQ,OAAkB,KAAOxD,GAAkB/O,EAAagjB,EAAWzQ,QAE7F,GAAmB,OAAfyQ,GAAyDA,EAAWl7H,OAAQ47G,QAAUof,EAAY,CACpG5mG,EAAQ8mG,EACR,KACD,CACD9mG,EAAQA,EAAMA,KACf,CACF,MAEC,GADAA,EAAQ,KACJ+zB,EAAK/zB,QAAUu2F,EAAwB,CACzCx2F,EAAOg0B,EAGP,MAAgB,OAATh0B,GAAgC,OAAfA,EAAKC,OAAkBykF,GAAU0R,EAAep2F,EAAKC,MAAMv5B,IACjFs5B,EAAOA,EAAKC,MAId,MAAgB,OAATD,GAAiC,OAAhBA,EAAKs2F,OAC3Bt2F,EAAO8yF,GAAkB/O,EAAa/jF,EAAKs2F,QAE7C,GAAIt2F,GAAuB,OAAfA,EAAKC,MAGf,OAAO,IAEV,MACCD,EAAO/Q,EAAWlE,KAAKtkB,IAAIutD,EAAK4/D,YAAc,KAGlD,MAAMoT,EAAY1qG,GAASv0B,EAAO6+H,GAC5BK,EAAS1d,GAASqd,EAAaI,GAC/BE,EAAa,IAAI73C,GACrB43C,EACAjnG,EAAMA,GAAQA,EAAKiyF,OACnBhyF,EAAOA,GAASA,EAAMv5B,GACtBuoB,EACA+kC,EAAK4/D,UACL5/D,EAAKtrD,QAAQ4E,QAKf,OAHA0mD,EAAKsiE,OAAS2Q,EACdnR,GAASoR,GAAY,GACrBA,EAAWvY,UAAU5K,EAAa,GAC3BmjB,CAAP,EAMK,MAAM73C,WAAag2C,GAWxBziI,YAAa8D,EAAIs5B,EAAMuS,EAAQtS,EAAOi5F,EAAartH,EAAQ+nH,EAAWlrH,GACpE3F,MAAM2D,EAAIgC,EAAQ63H,aAKlBl/H,KAAKkxC,OAASA,EAKdlxC,KAAK2+B,KAAOA,EAKZ3+B,KAAK4+B,MAAQA,EAKb5+B,KAAK63H,YAAcA,EAInB73H,KAAKwK,OAASA,EAQdxK,KAAKuyH,UAAYA,EAMjBvyH,KAAKi1H,OAAS,KAIdj1H,KAAKqH,QAAUA,EAQfrH,KAAKs5D,KAAOt5D,KAAKqH,QAAQ88H,cAAgBtpB,GAAc,CACxD,CAOGlgD,WAAQmrE,IACJ9lI,KAAKs5D,KAAOuhD,IAAe,IAAOirB,IACtC9lI,KAAKs5D,MAAQuhD,GAEhB,CAEGlgD,aACF,OAAQ36D,KAAKs5D,KAAOuhD,IAAe,CACpC,CAKGn0F,WACF,OAAQ1mB,KAAKs5D,KAAOuhD,IAAe,CACpC,CAEGn0F,SAAMq/G,GACJ/lI,KAAK0mB,OAASq/G,IAChB/lI,KAAKs5D,MAAQuhD,GAEhB,CAEG8V,gBACF,OAAQ3wH,KAAKs5D,KAAOuhD,IAAe,CACpC,CAMG7xF,cACF,OAAQhpB,KAAKs5D,KAAOuhD,IAAe,CACpC,CAEG7xF,YAASg9G,GACPhmI,KAAKgpB,UAAYg9G,IACnBhmI,KAAKs5D,MAAQuhD,GAEhB,CAED0pB,cACEvkI,KAAKs5D,MAAQuhD,EACd,CASDuS,WAAY1K,EAAah8G,GACvB,GAAI1G,KAAKkxC,QAAUlxC,KAAKkxC,OAAOoyE,SAAWtjH,KAAKqF,GAAGi+G,QAAUtjH,KAAKkxC,OAAOoxE,OAASrnF,GAASv0B,EAAO1G,KAAKkxC,OAAOoyE,QAC3G,OAAOtjH,KAAKkxC,OAAOoyE,OAErB,GAAItjH,KAAK63H,aAAe73H,KAAK63H,YAAYvU,SAAWtjH,KAAKqF,GAAGi+G,QAAUtjH,KAAK63H,YAAYvV,OAASrnF,GAASv0B,EAAO1G,KAAK63H,YAAYvU,QAC/H,OAAOtjH,KAAK63H,YAAYvU,OAE1B,GAAItjH,KAAKwK,QAAUxK,KAAKwK,OAAOjJ,cAAgBkoH,IAAMzpH,KAAKqF,GAAGi+G,SAAWtjH,KAAKwK,OAAO84G,QAAUtjH,KAAKwK,OAAO83G,OAASrnF,GAASv0B,EAAO1G,KAAKwK,OAAO84G,QAC7I,OAAOtjH,KAAKwK,OAAO84G,OAiBrB,GAZItjH,KAAKkxC,SACPlxC,KAAK2+B,KAAOkzF,GAAgBnP,EAAah8G,EAAO1G,KAAKkxC,QACrDlxC,KAAKkxC,OAASlxC,KAAK2+B,KAAKiyF,QAEtB5wH,KAAK63H,cACP73H,KAAK4+B,MAAQ6yF,GAAkB/O,EAAa1iH,KAAK63H,aACjD73H,KAAK63H,YAAc73H,KAAK4+B,MAAMv5B,KAE3BrF,KAAK2+B,MAAQ3+B,KAAK2+B,KAAKp9B,cAAgB0qH,IAAQjsH,KAAK4+B,OAAS5+B,KAAK4+B,MAAMr9B,cAAgB0qH,MAC3FjsH,KAAKwK,OAAS,MAGXxK,KAAKwK,QASH,GAAIxK,KAAKwK,OAAOjJ,cAAgBkoH,GAAI,CACzC,MAAM+b,EAAa9uB,GAAQhwG,EAAO1G,KAAKwK,QACnCg7H,EAAWjkI,cAAgB0qH,GAC7BjsH,KAAKwK,OAAS,KAEdxK,KAAKwK,OAAqCg7H,EAAWn+H,QAAS8D,IAEjE,OAfKnL,KAAK2+B,MAAQ3+B,KAAK2+B,KAAKp9B,cAAgBysF,KACzChuF,KAAKwK,OAASxK,KAAK2+B,KAAKn0B,OACxBxK,KAAKuyH,UAAYvyH,KAAK2+B,KAAK4zF,WAEzBvyH,KAAK4+B,OAAS5+B,KAAK4+B,MAAMr9B,cAAgBysF,KAC3ChuF,KAAKwK,OAASxK,KAAK4+B,MAAMp0B,OACzBxK,KAAKuyH,UAAYvyH,KAAK4+B,MAAM2zF,WAUhC,OAAO,IACR,CAMDjF,UAAW5K,EAAax1G,GAStB,GARIA,EAAS,IACXlN,KAAKqF,GAAGi9G,OAASp1G,EACjBlN,KAAK2+B,KAAOkzF,GAAgBnP,EAAaA,EAAYpxG,IAAI5K,MAAOwhH,GAASloH,KAAKqF,GAAGi+G,OAAQtjH,KAAKqF,GAAGi9G,MAAQ,IACzGtiH,KAAKkxC,OAASlxC,KAAK2+B,KAAKiyF,OACxB5wH,KAAKqH,QAAUrH,KAAKqH,QAAQW,OAAOkF,GACnClN,KAAKwH,QAAU0F,GAGblN,KAAKwK,OAAQ,CACf,IAAMxK,KAAK2+B,QAAU3+B,KAAK4+B,OAA6B,OAApB5+B,KAAK4+B,MAAMD,OAAoB3+B,KAAK2+B,MAAQ3+B,KAAK2+B,KAAKC,QAAU5+B,KAAK4+B,MAAQ,CAI9G,IAKIp9B,EALAm9B,EAAO3+B,KAAK2+B,KAOhB,GAAa,OAATA,EACFn9B,EAAIm9B,EAAKC,WACJ,GAAuB,OAAnB5+B,KAAKuyH,UAAoB,CAClC/wH,EAAsCxB,KAAKwK,OAAQkf,KAAKtkB,IAAIpF,KAAKuyH,YAAc,KAC/E,MAAa,OAAN/wH,GAAyB,OAAXA,EAAEm9B,KACrBn9B,EAAIA,EAAEm9B,IAET,MACCn9B,EAAsCxB,KAAKwK,OAAQy8G,OAOrD,MAAMgf,EAAmB,IAAIjgD,IAIvBkgD,EAAoB,IAAIlgD,IAI9B,MAAa,OAANxkF,GAAcA,IAAMxB,KAAK4+B,MAAO,CAGrC,GAFAsnG,EAAkBr/G,IAAIrlB,GACtBykI,EAAiBp/G,IAAIrlB,GACjBwuH,GAAWhwH,KAAKkxC,OAAQ1vC,EAAE0vC,SAE5B,GAAI1vC,EAAE6D,GAAGi+G,OAAStjH,KAAKqF,GAAGi+G,OACxB3kF,EAAOn9B,EACPykI,EAAiBhnF,aACZ,GAAI+wE,GAAWhwH,KAAK63H,YAAar2H,EAAEq2H,aAGxC,UAEG,IAAiB,OAAbr2H,EAAE0vC,SAAmBg1F,EAAkB52F,IAAIonE,GAAQgM,EAAYpxG,IAAI5K,MAAOlF,EAAE0vC,SAOrF,MALK+0F,EAAiB32F,IAAIonE,GAAQgM,EAAYpxG,IAAI5K,MAAOlF,EAAE0vC,WACzDvS,EAAOn9B,EACPykI,EAAiBhnF,QAIpB,CACDz9C,EAAIA,EAAEo9B,KACP,CACD5+B,KAAK2+B,KAAOA,CACb,CAED,GAAkB,OAAd3+B,KAAK2+B,KAAe,CACtB,MAAMC,EAAQ5+B,KAAK2+B,KAAKC,MACxB5+B,KAAK4+B,MAAQA,EACb5+B,KAAK2+B,KAAKC,MAAQ5+B,IACnB,KAAM,CACL,IAAI8B,EACJ,GAAuB,OAAnB9B,KAAKuyH,UAAoB,CAC3BzwH,EAAsC9B,KAAKwK,OAAQkf,KAAKtkB,IAAIpF,KAAKuyH,YAAc,KAC/E,MAAa,OAANzwH,GAAyB,OAAXA,EAAE68B,KACrB78B,EAAIA,EAAE68B,IAET,MACC78B,EAAsC9B,KAAKwK,OAAQy8G,OAChBjnH,KAAKwK,OAAQy8G,OAASjnH,KAE3DA,KAAK4+B,MAAQ98B,CACd,CACkB,OAAf9B,KAAK4+B,MACP5+B,KAAK4+B,MAAMD,KAAO3+B,KACU,OAAnBA,KAAKuyH,YAEoBvyH,KAAKwK,OAAQkf,KAAK9jB,IAAI5F,KAAKuyH,UAAWvyH,MACtD,OAAdA,KAAK2+B,MAEP3+B,KAAK2+B,KAAK7K,OAAO4uF,IAIE,OAAnB1iH,KAAKuyH,WAAsBvyH,KAAK2wH,YAAc3wH,KAAKgpB,UACnBhpB,KAAKwK,OAAQ08G,SAAWlnH,KAAKwH,QAEjEmqH,GAAUjP,EAAYpxG,IAAI5K,MAAO1G,MACjCA,KAAKqH,QAAQimH,UAAU5K,EAAa1iH,MAEpCsyH,GAA4B5P,EAA+C1iH,KAAKwK,OAASxK,KAAKuyH,YAChC,OAAvBvyH,KAAKwK,OAAQ47G,OAAoDpmH,KAAKwK,OAAQ47G,MAAMp9F,SAAgC,OAAnBhpB,KAAKuyH,WAAqC,OAAfvyH,KAAK4+B,QAEtK5+B,KAAK8zB,OAAO4uF,EAEf,MAEC,IAAIuJ,GAAGjsH,KAAKqF,GAAIrF,KAAKwH,QAAQ8lH,UAAU5K,EAAa,EAEvD,CAKG1wG,WACF,IAAI9P,EAAIlC,KAAK4+B,MACb,MAAa,OAAN18B,GAAcA,EAAE8mB,QACrB9mB,EAAIA,EAAE08B,MAER,OAAO18B,CACR,CAKGo3B,WACF,IAAIp3B,EAAIlC,KAAK2+B,KACb,MAAa,OAANz8B,GAAcA,EAAE8mB,QACrB9mB,EAAIA,EAAEy8B,KAER,OAAOz8B,CACR,CAKG0uH,aAEF,OAAuB,IAAhB5wH,KAAKwH,OAAexH,KAAKqF,GAAK6iH,GAASloH,KAAKqF,GAAGi+G,OAAQtjH,KAAKqF,GAAGi9G,MAAQtiH,KAAKwH,OAAS,EAC7F,CAQDirH,UAAW7zF,GACT,GACE5+B,KAAKuB,cAAgBq9B,EAAMr9B,aAC3ByuH,GAAWpxF,EAAMsS,OAAQlxC,KAAK4wH,SAC9B5wH,KAAK4+B,QAAUA,GACfoxF,GAAWhwH,KAAK63H,YAAaj5F,EAAMi5F,cACnC73H,KAAKqF,GAAGi+G,SAAW1kF,EAAMv5B,GAAGi+G,QAC5BtjH,KAAKqF,GAAGi9G,MAAQtiH,KAAKwH,SAAWo3B,EAAMv5B,GAAGi9G,OACzCtiH,KAAKgpB,UAAY4V,EAAM5V,SACP,OAAhBhpB,KAAKi1H,QACY,OAAjBr2F,EAAMq2F,QACNj1H,KAAKqH,QAAQ9F,cAAgBq9B,EAAMv3B,QAAQ9F,aAC3CvB,KAAKqH,QAAQorH,UAAU7zF,EAAMv3B,SAC7B,CACA,MAAMgzH,EAAiDr6H,KAAKwK,OAAQ8qH,cAqBpE,OApBI+E,GACFA,EAAa9xH,SAAQoyD,IACfA,EAAO14D,IAAM28B,IAEf+7B,EAAO14D,EAAIjC,MAENA,KAAKgpB,SAAWhpB,KAAK2wH,YACxBh2D,EAAO5uD,OAAS/L,KAAKwH,QAExB,IAGDo3B,EAAMlY,OACR1mB,KAAK0mB,MAAO,GAEd1mB,KAAK4+B,MAAQA,EAAMA,MACA,OAAf5+B,KAAK4+B,QACP5+B,KAAK4+B,MAAMD,KAAO3+B,MAEpBA,KAAKwH,QAAUo3B,EAAMp3B,QACd,CACR,CACD,OAAO,CACR,CAODssB,OAAQ4uF,GACN,IAAK1iH,KAAKgpB,QAAS,CACjB,MAAMxe,EAA2CxK,KAAKwK,OAElDxK,KAAK2wH,WAAgC,OAAnB3wH,KAAKuyH,YACzB/nH,EAAO08G,SAAWlnH,KAAKwH,QAEzBxH,KAAKukI,cACL1gB,GAAenB,EAAYuP,UAAWjyH,KAAKqF,GAAGi+G,OAAQtjH,KAAKqF,GAAGi9G,MAAOtiH,KAAKwH,QAC1E8qH,GAA4B5P,EAAal4G,EAAQxK,KAAKuyH,WACtDvyH,KAAKqH,QAAQysB,OAAO4uF,EACrB,CACF,CAMDgD,GAAIh/G,EAAOy/H,GACT,IAAKnmI,KAAKgpB,QACR,MAAM6tD,KAER72E,KAAKqH,QAAQq+G,GAAGh/G,GACZy/H,EACFrU,GAAcprH,EAAO1G,KAAM,IAAIisH,GAAGjsH,KAAKqF,GAAIrF,KAAKwH,SAEhDxH,KAAKqH,QAAU,IAAIi9H,GAAetkI,KAAKwH,OAE1C,CAWDgtD,MAAO8lD,EAASptG,GACd,MAAMgkC,EAAShkC,EAAS,EAAIg7G,GAASloH,KAAKqF,GAAGi+G,OAAQtjH,KAAKqF,GAAGi9G,MAAQp1G,EAAS,GAAKlN,KAAKkxC,OAClF2mF,EAAc73H,KAAK63H,YACnBtF,EAAYvyH,KAAKuyH,UACjBj5D,EAAQt5D,KAAKqH,QAAQ+8H,SAAWvpB,IACxB,OAAX3pE,EAAkB,EAAI2pE,KACN,OAAhBgd,EAAuB,EAAIhd,KACb,OAAd0X,EAAqB,EAAI1X,IAQ5B,GAPAP,EAAQ0P,UAAU1wD,GACH,OAAXpoB,GACFopE,EAAQuP,YAAY34E,GAEF,OAAhB2mF,GACFvd,EAAQwP,aAAa+N,GAER,OAAX3mF,GAAmC,OAAhB2mF,EAAsB,CAC3C,MAAMrtH,EAA2CxK,KAAKwK,OACtD,QAAqB9C,IAAjB8C,EAAO47G,MAAqB,CAC9B,MAAMof,EAAah7H,EAAO47G,MAC1B,GAAmB,OAAfof,EAAqB,CAGvB,MAAMY,EAAOnW,GAAgBzlH,GAC7B8vG,EAAQ4P,iBAAgB,GACxB5P,EAAQ2P,YAAYmc,EACrB,MACC9rB,EAAQ4P,iBAAgB,GACxB5P,EAAQuP,YAAY2b,EAAWngI,GAElC,MAAUmF,EAAOjJ,cAAgBg6C,QAChC++D,EAAQ4P,iBAAgB,GACxB5P,EAAQ2P,YAAYz/G,IACXA,EAAOjJ,cAAgBkoH,IAChCnP,EAAQ4P,iBAAgB,GACxB5P,EAAQuP,YAAYr/G,IAEpBqsE,KAEgB,OAAd07C,GACFjY,EAAQ2P,YAAYsI,EAEvB,CACDvyH,KAAKqH,QAAQmtD,MAAM8lD,EAASptG,EAC7B,EAOI,MAAMk/G,GAAkB,CAAC9O,EAAShkD,IAAS+sE,GAAY/sE,EAAOuhD,IAAcyC,GAOtE+oB,GAAc,CACzB,KAAQxvD,IAAA,EACR2tD,GACAM,GACAT,GACAY,GACAN,GACAC,GACAO,GACAJ,GACAL,GACA,KAAQ7tD,IAAA,GCpsBGyvD,GAAsB,GAK5B,MAAMpa,WAAa8X,GACpBh7G,cACF,OAAO,CACR,CAED8K,SAAY,CAMZ2+F,UAAW7zF,GACT,OAAI5+B,KAAKuB,cAAgBq9B,EAAMr9B,cAG/BvB,KAAKwH,QAAUo3B,EAAMp3B,QACd,EACR,CAMD8lH,UAAW5K,EAAax1G,GAEtB2pE,IACD,CAMDriB,MAAO8lD,EAASptG,GACdotG,EAAQ0P,UAAUsc,IAElB9+D,GAAsB8yC,EAAQ8J,YAAapkH,KAAKwH,OAAS0F,EAC1D,CAODkgH,WAAY1K,EAAah8G,GACvB,OAAO,IACR,ECqCH,MAAM6/H,GAAgD,qBAAfC,WACnCA,WACkB,qBAAXt+G,OACLA,OAEkB,qBAAX29E,OAAyBA,OAAS,CAAC,EAE1C4gC,GAAmB,eAEK,IAA1BF,GAAIE,KAeNzwG,QAAQ6gD,MAAM,6HAEhB0vD,GAAIE,KAAoB,EC5GxB,MAyBMC,GAAqBC,GAAiB,MAI1CplI,YAAaqlI,GACX5mI,KAAK4N,EAAIg5H,CACV,CAEDl/F,UACEi/F,EAAc3mI,KAAK4N,EACpB,GAGGi5H,GAAUH,GAAmBptF,cAOtBwtF,GAAU,CAACA,EAASnmI,IAAa,IAAIkmI,GAAQ5/H,WAAWtG,EAAUmmI,IC/BlEvV,IDiCImV,GAAmBK,eAUXL,IAAmB/kB,GAAwC,qBAA1BzmB,uBAAyCqC,qBAAqBokB,KAW3G+kB,IAAmB/kB,GAAqC,qBAAvBqlB,oBAAsCA,mBAAmBrlB,KCtD9E,CAAChvD,EAAM2+D,SACjB5pH,IAAb4pH,GACK3+D,EAAK3pC,QACLsoG,EAASjC,GAAG//E,IAAIqjB,EAAKttD,GAAGi+G,SACxBgO,EAASjC,GAAGjqH,IAAIutD,EAAKttD,GAAGi+G,QAAW3wD,EAAKttD,GAAGi9G,QAC3Cl9B,GAAYksC,EAAS3O,GAAIhwD,EAAKttD,KAwB/B4hI,GAAgB,CAAC,CAAEC,MAAO,YAAaC,KAAM,YAQ7CC,GAAe,CAACC,EAAcC,EAAQlG,KAE1C,IAAKiG,EAAa/3F,IAAI8xF,GAAO,CAC3B,GAAIiG,EAAa3+H,KAAO4+H,EAAO9/H,OAAQ,CACrC,MAAM+/H,EAAa3hI,KACnByhI,EAAa9+H,SAAS2qE,GAAUq0D,EAAW1gH,IAAIqsD,KAC/Co0D,EAASA,EAAO34F,QAAQukC,IAAWq0D,EAAWj4F,IAAI4jC,IACnD,CACDm0D,EAAazhI,IAAIw7H,EAAM3qC,GAAa6wC,GACrC,CACD,OAAgCD,EAAajiI,IAAIg8H,EAAjD,EAWWoG,GAAc,CAACC,GAC1BH,SAASL,GACTI,eAAe,IAAIriI,IACnB0iI,oBAAoB,KACpBC,gBAAgB,UACd,CAAC,KACH,IACIC,EADAC,GAAwB,EAE5B,MAAMluG,EAAS,IAAImB,GAAO,CACxBC,MAAO,CACLwW,SAAWt4B,IACT,MAAM6uH,EAAYx0B,GAAer4E,SAAShiB,GAC1C,OAA6B,MAAtB6uH,EAAUxW,UAA8C,MAA1BwW,EAAU/G,YAA/C,GAGJx5H,IAAK+rG,GACLr6F,MAAO,CACLggB,KAAM,CAAC8uG,EAAWC,KACT,CACL78H,KAAMs8H,EACNn2H,IAAKm2H,EAAan2H,IAClB+wH,QAAS,KACT/Q,SAAU,KACVyP,aAAc,KACdkH,gBAAgB,EAChBC,cAAc,EACdZ,SACAD,eACAK,sBAGJv7G,MAAO,CAACgB,EAAIg7G,KACV,MAAMtiF,EAAS14B,EAAGwL,QAAQ26E,IAC1B,QAAe5rG,IAAXm+C,EAAsB,CACxBsiF,EAAcp1H,OAAOm4C,OAAO,CAAC,EAAGi9E,GAChC,IAAK,MAAM5gI,KAAOs+C,EAChBsiF,EAAY5gI,GAAOs+C,EAAOt+C,EAE7B,CA0CD,OAzCA4gI,EAAYD,cAA8C,IAA/B/6G,EAAGwL,QAAQ,gBAEtCwvG,EAAYF,oBAA4BvgI,IAAXm+C,KACzBA,EAAOoiF,eACiB,OAAxBE,EAAY9F,eAED36H,IAAXm+C,GACoB,MAAnBA,EAAOyrE,UAA2C,MAAvBzrE,EAAOk7E,cAGnCqH,GAAkB,GAAG,KAEM,MAAvBD,EAAY9F,SAAmB8F,EAAY9F,QAAQ54E,cAI/B,MAAlB5D,EAAO0T,QACT4uE,EAAY9F,QAAQgG,gBAClBxiF,EAAOyrE,SACPzrE,EAAOk7E,aACPoH,IAGFA,EAAY9F,QAAQgG,gBAClBxiF,EAAOyrE,SACPzrE,EAAOyrE,SACP6W,UAGKA,EAAY5uE,eACZ4uE,EAAY7W,gBACZ6W,EAAYpH,aACnBoH,EAAY9F,QAAQiG,KAAI,KACtBH,EAAY9F,QAAQkG,oBAClBJ,EAAY9F,QAAQmG,gBAAgBvvH,MAAM3H,IAD5C,KAIH,KAIA62H,CAAP,GAGJxoG,KAAOA,IACL,MAAM0iG,EAAU,IAAIoG,GAAmBhB,EAAc9nG,GAUrD,OATuB,MAAnBioG,GACFA,EAAgBlgG,UAGlBkgG,EAAkBQ,GAAkB,GAAG,KACrC/F,EAAQqG,iBACR/oG,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAGuL,QAAQ46E,GAAgB,CAAE+uB,aACtDsF,GAAe,IAEV,CACL9hI,OAAQ,KACN,MAAMsiI,EAAcxuG,EAAOsB,SAAS0E,EAAK1mB,OACzC,GAC0B,MAAxBkvH,EAAY7W,UAAgD,MAA5B6W,EAAYpH,eAG1C8G,GAGM,OAFNloG,EAAK1mB,MAAM3H,IAAIjK,QAAQ0B,cACrB42B,EAAK1mB,MAAM3H,IAAInG,KAAKsL,gBAAgBpP,UAEtC,CAEA,GADAwgI,GAAwB,GAEO,IAA7BM,EAAYD,eACXC,EAAYF,eACb,CACA,MAAMU,EAAmBp1B,GAAet4E,SAAS0E,EAAK1mB,OAIhDq7G,EAAKqU,GAAoBA,EAAiBhU,YAC5CL,GACFA,EAAG6B,eAEN,CACDkM,EAAQiG,KAAI,KACVH,EAAY72H,IAAIm1G,UAAUt5F,IACxBA,EAAGsK,KAAK7xB,IAAI,eAAgBuiI,EAAYD,cACxC7F,EAAQkG,oBAAoB5oG,EAAK1mB,MAAM3H,IAAvC,GACCgiG,GAHH,GAKH,CACF,EAEH5rE,QAAS,KACPkgG,EAAgBlgG,UAChB26F,EAAQ36F,SAAR,EArCJ,IA0CJ,OAAO/N,CAAP,EAQIivG,GAA2B,CAACz7G,EAAI07G,EAAQxG,KAC5C,GAAe,OAAXwG,GAAqC,OAAlBA,EAAO9zG,QAAmC,OAAhB8zG,EAAOlpH,KAAe,CACrE,MAAMoV,EAAS+zG,GACbzG,EAAQ/wH,IACR+wH,EAAQl3H,KACR09H,EAAO9zG,OACPstG,EAAQx3G,SAEJlL,EAAOmpH,GACXzG,EAAQ/wH,IACR+wH,EAAQl3H,KACR09H,EAAOlpH,KACP0iH,EAAQx3G,SAEK,OAAXkK,GAA4B,OAATpV,IACrBwN,EAAKA,EAAG0J,aAAaxB,GAActnB,OAAOof,EAAG7b,IAAKyjB,EAAQpV,IAE7D,GAGUopH,GAAuB,CAACC,EAAW/vH,KAAZ,CAClC8b,OAAQk0G,GACNhwH,EAAM2d,UAAU7B,OAChBi0G,EAAU79H,KACV69H,EAAUn+G,SAEZlL,KAAMspH,GACJhwH,EAAM2d,UAAUjX,KAChBqpH,EAAU79H,KACV69H,EAAUn+G,WASP,MAAM49G,GAKXlnI,YAAakmI,EAAce,GACzBxoI,KAAKmL,KAAOs8H,EACZznI,KAAKwoI,gBAAkBA,EACvBxoI,KAAKsoI,IAAM70B,KACXzzG,KAAKypD,aAAc,EAInBzpD,KAAK6qB,QAAU,IAAI7lB,IACnBhF,KAAKkpI,iBAAmBlpI,KAAKmpI,aAAa1tH,KAAKzb,MAK/CA,KAAKsR,IAAMm2H,EAAan2H,IAIxBtR,KAAKopI,2BAA6B,KAClCppI,KAAKqpI,sBAAwB,KACa,OAApCrpI,KAAKopI,6BACPppI,KAAKopI,2BAA6BL,GAChC/oI,KACAwoI,EAAgBvvH,OAEnB,EAEHjZ,KAAKspI,qBAAuB,KAC1BtpI,KAAKopI,2BAA6B,IAAlC,EAGFppI,KAAKsR,IAAInR,GAAG,wBAAyBH,KAAKqpI,uBAC1CrpI,KAAKsR,IAAInR,GAAG,uBAAwBH,KAAKspI,sBACzC7B,EAAatM,YAAYn7H,KAAKkpI,kBAE9BlpI,KAAKupI,oBAAsB,IAC5B,CAOG1U,UACF,OAAO70H,KAAKwoI,gBAAgBvvH,MAAMkU,GAAGuL,QAAQ,gBAAgB,EAC9D,CAED8wG,uBACE,QAAKxpI,KAAKwoI,gBAAgBh3F,aACtBi4F,IAAsD,OAA7BzpI,KAAKupI,sBAEhCnB,GAAkB,GAAG,KACnBpoI,KAAKupI,oBAAsB,IAA3B,IAEFvpI,KAAKupI,oBAAsBvpI,KAAK0pI,yBAE3B1pI,KAAKupI,oBACb,CAEDG,wBACE,MAAM9yG,EAAY52B,KAAKwoI,gBAAgBlhF,MAAMve,eAEvC9a,EAAQjuB,KAAKwoI,gBAAgBlhF,MAAMrqB,cACzChP,EAAMkP,SAASvG,EAAUqS,WAAYrS,EAAUsS,cAC/Cjb,EAAMiP,OAAOtG,EAAUkP,UAAWlP,EAAUoP,aAK5C,MAAMvD,EAAQxU,EAAMyU,iBACC,IAAjBD,EAAMj7B,QAEJymB,EAAMgW,gBAAkBhW,EAAMgQ,WAChChQ,EAAM+uB,mBAAmB/uB,EAAMgW,gBAInC,MAAM9D,EAAWlS,EAAMkR,wBACjBzC,EAAkBpgB,GAAAA,gBAExB,OAAO6jB,EAASrB,QAAU,GAAKqB,EAASvB,OAAS,GAC/CuB,EAASxB,OACNzW,OAAOyhH,YAAcjtG,EAAgBmC,aAAe,IACvDsB,EAASte,MAAQqG,OAAO+Y,aAAevE,EAAgBqC,cAAgB,EAC1E,CAED6qG,eAAgBtY,EAAUyP,GACnBA,IACHA,EAAe37C,GAAiBA,KAAqB,IAAIpgF,MAE3DhF,KAAKwoI,gBAAgBh1F,SACnBxzC,KAAK60H,IAAIn8F,QAAQ46E,GAAgB,CAAEge,WAAUyP,iBAEhD,CAED8I,mBACE7pI,KAAK6qB,QAAU,IAAI7lB,IACnBhF,KAAKsoI,KAAI,KACP,MAAMwB,EAAkB9pI,KAAKmL,KAAKoyH,UAAUv6H,KAAK3B,GAC/C0oI,GAC+B1oI,EAC7BrB,KAAKwoI,gBAAgBvvH,MAAMrM,OAC3B5M,KAAK6qB,WAEP8jB,QAAQzsC,GAAY,OAANA,IAEVirB,EAAKntB,KAAK60H,IAAI1lH,QAClB,EACAnP,KAAKwoI,gBAAgBvvH,MAAM3H,IAAIjK,QAAQqB,KACvC,IAAIshI,GAAaA,EAAAA,KAAqBF,GAAkB,EAAG,IAE7D38G,EAAGuL,QAAQ46E,GAAgB,CAAEge,SAAU,KAAMyP,aAAc,OAC3D/gI,KAAKwoI,gBAAgBh1F,SAASrmB,EAA9B,GAEH,CAEDu7G,iBACE1oI,KAAK6qB,QAAU,IAAI7lB,IACnBhF,KAAKsoI,KAAI,KACP,MAAMwB,EAAkB9pI,KAAKmL,KAAKoyH,UAAUv6H,KAAK3B,GAC/C0oI,GAC+B1oI,EAC7BrB,KAAKwoI,gBAAgBvvH,MAAMrM,OAC3B5M,KAAK6qB,WAEP8jB,QAAQzsC,GAAY,OAANA,IAEVirB,EAAKntB,KAAK60H,IAAI1lH,QAClB,EACAnP,KAAKwoI,gBAAgBvvH,MAAM3H,IAAIjK,QAAQqB,KACvC,IAAIshI,GAAaA,EAAAA,KAAqBF,GAAkB,EAAG,IAE7D9pI,KAAKwoI,gBAAgBh1F,SACnBrmB,EAAGuL,QAAQ46E,GAAgB,CAAE20B,gBAAgB,IAD/C,GAIH,CAODI,gBAAiB/W,EAAUyP,EAAcoH,GAClC7W,IACHA,EAAWlsC,GAAWplF,KAAKsR,MAG7BtR,KAAK6qB,QAAU,IAAI7lB,IACnBhF,KAAKsoI,KAAI,KACPtoI,KAAKsR,IAAIm1G,UAAU/D,IAGjB,MAAMunB,EAAM9B,EAAYT,kBACpBuC,GACFA,EAAIvmB,IAAIn7G,SAASo6G,IACfv9B,GAAwBs9B,EAAaC,GAAKyD,OAA1C,IAOJ,MAAM4a,EAAiB,CAAC71H,EAAM9F,KAC5B,MAAM+7H,EAAgB,UAATj2H,EACT8+H,EAAIC,kBAAkB7kI,EAAGi+G,QACzB2mB,EAAIE,mBAAmB9kI,GAC3B,MAAO,CACL+7H,OACAj2H,OACA+nE,MAAOk0D,GACLe,EAAYd,aACZc,EAAYb,OACZlG,GANJ,EAWI0I,EAAkB1kD,GACtBplF,KAAKmL,KACL,IAAIi6E,GAAW27C,EAAape,GAAI2O,EAASjC,KACzCrsH,KAAK3B,IAEFA,EAAE+kH,MAAMp9F,SAAWuoG,GAAUlwH,EAAE+kH,MAAOkL,IACvCC,GAAUlwH,EAAE+kH,MAAO2a,GAEZgJ,GACL1oI,EACArB,KAAKwoI,gBAAgBvvH,MAAMrM,OAC3B,IAAI5H,IACJssH,EACAyP,EACAC,GAKK,OAERryF,QAAQzsC,GAAY,OAANA,IAEXirB,EAAKntB,KAAK60H,IAAI1lH,QAClB,EACAnP,KAAKwoI,gBAAgBvvH,MAAM3H,IAAIjK,QAAQqB,KACvC,IAAIshI,GAAaA,EAAAA,KAAqBF,GAAkB,EAAG,IAE7D9pI,KAAKwoI,gBAAgBh1F,SACnBrmB,EAAGuL,QAAQ46E,GAAgB,CAAE20B,gBAAgB,IAD/C,GAGC30B,GA3DH,GA6DH,CAMD61B,aAAch2E,EAAQuvD,GACpB,MAAMolB,EAAYx0B,GAAer4E,SAASj7B,KAAKwoI,gBAAgBvvH,OAE3C,IAAlBk6C,EAAO3rD,QAAsC,MAAtBsgI,EAAUxW,UACP,MAA1BwW,EAAU/G,aAMZ/gI,KAAKsoI,KAAI,KAKP,MAAM8B,EAAU,CAACx8H,EAAGzC,IAASnL,KAAK6qB,QAAQiJ,OAAO3oB,GACjDi6E,GACEs9B,EACAA,EAAYuP,WACX/N,GACCA,EAAO3iH,cAAgB6jF,IACvBplF,KAAK6qB,QAAQiJ,OAC0CowF,EAClD78G,QAAS8D,QAGlBu3G,EAAYr2E,QAAQ9jC,QAAQ6hI,GAC5B1nB,EAAYyP,mBAAmB5pH,QAAQ6hI,GACvC,MAAMN,EAAkB9pI,KAAKmL,KAAKoyH,UAAUv6H,KAAK3B,GAC/CgpI,GAC2ChpI,EACzCrB,KAAKwoI,gBAAgBvvH,MAAMrM,OAC3B5M,KAAK6qB,WAEP8jB,QAAQzsC,GAAY,OAANA,IAEhB,IAAIirB,EAAKntB,KAAK60H,IAAI1lH,QAChB,EACAnP,KAAKwoI,gBAAgBvvH,MAAM3H,IAAIjK,QAAQqB,KACvC,IAAIshI,GAAaA,EAAAA,KAAqBF,GAAkB,EAAG,IAE7DlB,GAAyBz7G,EAAIntB,KAAKopI,2BAA4BppI,MAC9DmtB,EAAKA,EAAGuL,QAAQ46E,GAAgB,CAAE20B,gBAAgB,IAEZ,OAApCjoI,KAAKopI,4BAAuCppI,KAAKwpI,wBAEjDr8G,EAAG0L,iBAEL74B,KAAKwoI,gBAAgBh1F,SAASrmB,EAA9B,IAzCAntB,KAAK4pI,eAAe9B,EAAUxW,SAAUwW,EAAU/G,aA2CrD,CAEDwH,oBAAqBj3H,GACnBtR,KAAKsR,IAAIm1G,UAAUt5F,IACjBm9G,GAAgBtqI,KAAKsR,IAAKtR,KAAKmL,KAAMmG,EAAKtR,KAAK6qB,SAC/C7qB,KAAKopI,2BAA6BL,GAChC/oI,KACAA,KAAKwoI,gBAAgBvvH,MAFvB,GAICq6F,GACJ,CAED5rE,UACE1nC,KAAKypD,aAAc,EACnBzpD,KAAKmL,KAAKkwH,cAAcr7H,KAAKkpI,kBAC7BlpI,KAAKsR,IAAI+rB,IAAI,wBAAyBr9B,KAAKqpI,uBAC3CrpI,KAAKsR,IAAI+rB,IAAI,uBAAwBr9B,KAAKspI,qBAC3C,EAaH,MAAMe,GAAwB,CAC5B7M,EACA5wH,EACAie,EACAymG,EACAyP,EACAC,KAEA,MAAM/1H,EAAmC4f,EAAQzlB,IAAIo4H,GACrD,QAAa91H,IAATuD,EAAoB,CACtB,GAAIuyH,aAAcp4C,GAChB,OAAO2kD,GACLvM,EACA5wH,EACAie,EACAymG,EACAyP,EACAC,GAGF,MAAMnqD,IAET,CACD,OAAO5rE,CAAP,EAaI8+H,GAAyB,CAC7BvM,EACA5wH,EACAie,EACAymG,EACAyP,EACAC,KAEA,MAAMj6F,EAAW,GACXwjG,EAAkBp/H,IACtB,GAAIA,EAAK5J,cAAgB6jF,GAAc,CACrC,MAAMljF,EAAImoI,GACRl/H,EACAyB,EACAie,EACAymG,EACAyP,EACAC,GAEQ,OAAN9+H,GACF6kC,EAASh/B,KAAK7F,EAEjB,KAAM,CACL,MAAMsoI,EAAKC,GACTt/H,EACAyB,EACAie,EACAymG,EACAyP,EACAC,GAES,OAAPwJ,GACFA,EAAGjiI,SAASmiI,IACQ,OAAdA,GACF3jG,EAASh/B,KAAK2iI,EACf,GAGN,QAEchjI,IAAb4pH,QAA2C5pH,IAAjBq5H,EAC5BvD,EAAGD,UAAUh1H,QAAQgiI,GAErBnlD,GAA0Bo4C,EAAI,IAAIp4C,GAAW27C,EAAape,GAAI2O,EAASjC,KACpE9mH,QAAQgiI,GAEb,IACE,MAAMhqI,EAAQi9H,EAAG+D,cAAcjQ,QACd5pH,IAAb4pH,IACGC,GAAiCiM,EAAGpX,MAAQkL,GAIrCC,GAAiCiM,EAAGpX,MAAQ2a,KACtDxgI,EAAMoqI,QAAU3J,EACZA,EAAe,QAAgCxD,EAAGpX,MAAO/gH,IACzD,CAAE8F,KAAM,UANZ5K,EAAMoqI,QAAU3J,EACZA,EAAe,UAAkCxD,EAAGpX,MAAO/gH,IAC3D,CAAE8F,KAAM,YAOhB,MAAMF,EAAO2B,EAAO3B,KAAKuyH,EAAGp8G,SAAU7gB,EAAOwmC,GAE7C,OADAlc,EAAQjlB,IAAI43H,EAAIvyH,GACTA,CAQR,CAPC,MAAO7J,IAMP,OAJsBo8H,EAAGlsH,IAAKm1G,UAAU/D,IACf8a,EAAGpX,MAAOtyF,OAAO4uF,EAAlB,GACrBpP,IACHzoF,EAAQiJ,OAAO0pG,GACR,IACR,GAaGiN,GAA2B,CAC/BjhI,EACAoD,EACAie,EACAymG,EACAyP,EACAC,KAEA,MAAMh0H,EAAQ,GACR49H,EAASphI,EAAKk3H,QAAQpP,EAAUyP,EAAcC,GACpD,IACE,IAAK,IAAIn+H,EAAI,EAAGA,EAAI+nI,EAAOpjI,OAAQ3E,IAAK,CACtC,MAAM62H,EAAQkR,EAAO/nI,GACfiL,EAAQ,GACd,IAAK,MAAM+8H,KAAYnR,EAAMx2E,WAC3Bp1C,EAAM/F,KAAK6E,EAAO0G,KAAKu3H,EAAUnR,EAAMx2E,WAAW2nF,KAEpD79H,EAAMjF,KAAK6E,EAAOpD,KAAKkwH,EAAMzqH,OAAQnB,GACtC,CAOF,CANC,MAAO1M,IAKP,OAHsBoI,EAAK8H,IAAKm1G,UAAU/D,IACjBl5G,EAAK48G,MAAOtyF,OAAO4uF,EAApB,GACrBpP,IACI,IACR,CAED,OAAOtmG,CAAP,EASI89H,GAA0B,CAAC99H,EAAO6d,KACtC,MAAM1f,EAAO,IAAIi6E,GACXs0C,EAAQ1sH,EAAMhK,KAAKiI,IAAD,CAEtBgE,OAAQhE,EAAKzB,KACb05C,WAAY6nF,GAAkB9/H,EAAK6C,WAIrC,OAFA3C,EAAKs1H,WAAW/G,GAChB7uG,EAAQjlB,IAAIuF,EAAM6B,GACX7B,CAAP,EASI6/H,GAA4B,CAAC//H,EAAM4f,KACvC,MAAM1f,EAAO,IAAIi6E,GAAan6E,EAAKE,KAAKxJ,MACxC,IAAK,MAAM4F,KAAO0D,EAAK1K,MAAO,CAC5B,MAAM8Q,EAAMpG,EAAK1K,MAAMgH,GACX,OAAR8J,GAAwB,YAAR9J,GAClB4D,EAAKwc,aAAapgB,EAAK8J,EAE1B,CAQD,OAPAlG,EAAK8D,OACH,EACAg8H,GAAsBhgI,GAAMjI,KAAKd,GAC/BgpI,GAAgChpI,EAAG2oB,MAGvCA,EAAQjlB,IAAIuF,EAAMF,GACXE,CAAP,EASI+/H,GAAkC,CAACjgI,EAAM4f,IAC7C5f,aAAgBnI,MACZgoI,GAAwB7/H,EAAM4f,GAC9BmgH,GAA0B//H,EAAM4f,GAEhCsgH,GAAY95H,GAAuB,kBAARA,GAA4B,OAARA,EAE/C2sH,GAAa,CAACoN,EAAQC,KAC1B,MAAMnwG,EAAOnoB,OAAOmoB,KAAKkwG,GAAQz8F,QAAQpnC,GAAwB,OAAhB6jI,EAAO7jI,KACxD,IAAI2E,EACFgvB,EAAK1zB,SACHuL,OAAOmoB,KAAKmwG,GAAQ18F,QAAQpnC,GAAwB,OAAhB8jI,EAAO9jI,KAAeC,OAC9D,IAAK,IAAI3E,EAAI,EAAGA,EAAIq4B,EAAK1zB,QAAU0E,EAAIrJ,IAAK,CAC1C,MAAM0E,EAAM2zB,EAAKr4B,GACXhB,EAAIupI,EAAO7jI,GACXzF,EAAIupI,EAAO9jI,GACjB2E,EAAa,YAAR3E,GAAqB1F,IAAMC,GAC7BqpI,GAAStpI,IAAMspI,GAASrpI,IAAMk8H,GAAWn8H,EAAGC,EAChD,CACD,OAAOoK,CAAP,EAWI++H,GAAyBK,IAC7B,MAAMpoI,EAAIooI,EAAMjkI,QAAQA,QAClBotG,EAAM,GACZ,IAAK,IAAI5xG,EAAI,EAAGA,EAAIK,EAAEsE,OAAQ3E,IAAK,CACjC,MAAMX,EAAIgB,EAAEL,GACZ,GAAIX,EAAEqH,OAAQ,CACZ,MAAMgiI,EAAY,GAClB,IAAK,IAAIC,EAAQtoI,EAAEL,GAAIA,EAAIK,EAAEsE,QAAUgkI,EAAMjiI,OAAQiiI,EAAQtoI,IAAIL,GAC/D0oI,EAAUxjI,KAAKyjI,GAEjB3oI,IACA4xG,EAAI1sG,KAAKwjI,EACV,MACC92B,EAAI1sG,KAAK7F,EAEZ,CACD,OAAOuyG,CAAP,EAOIg3B,GAAkB,CAACxL,EAAOyL,KAC9B,MAAMhS,EAAQuG,EAAMS,UACpB,OAAOhH,EAAMlyH,SAAWkkI,EAAOlkI,QAC7BkyH,EAAMlwC,OAAM,CAAClnF,EAAGO,IACdP,EAAE2M,SAA+By8H,EAAO7oI,GAAI2G,MAC5CoW,GAAYtd,EAAE4gD,YAAc,CAAC,GAAG17C,SAAWkkI,EAAO7oI,GAAGiL,MAAMtG,QAC3DkkI,EAAO7oI,GAAGiL,MAAM07E,OAAOl2E,GACrB0qH,GAAW17H,EAAE4gD,WAAW5vC,EAAKnI,KAAKxJ,OAAS,CAAC,EAAG2R,EAAK/S,UAL1D,EAcIorI,GAAkB,CAACjV,EAAO4U,KAC9B,GACE5U,aAAiBtxC,MAAkBkmD,aAAiBxoI,QACpD8oI,GAAclV,EAAO4U,GACrB,CACA,MAAMO,EAAoBZ,GAAsBK,GAChD,OAAO5U,EAAMxP,UAAY2kB,EAAkBrkI,QACzCw2H,GAAWtH,EAAM6K,gBAAiB+J,EAAM/qI,QACxCm2H,EAAM6G,UAAU/zC,OAAM,CAACsiD,EAAQjpI,IAC7B8oI,GAAgBG,EAAQD,EAAkBhpI,KAE/C,CACD,OAAO6zH,aAAiBtxC,IAAakmD,aAAiBxoI,OACpD2oI,GAAgB/U,EAAO4U,EADzB,EAQIS,GAAiB,CAAC9/G,EAAQ+/G,IAC9B//G,IAAW+/G,GACV//G,aAAkBnpB,OAASkpI,aAAoBlpI,OAC9CmpB,EAAOzkB,SAAWwkI,EAASxkI,QAAUykB,EAAOu9D,OAAM,CAAC5mF,EAAGC,IACtDmpI,EAASnpI,KAAOD,IASdqpI,GAA6B,CAACvV,EAAO4U,EAAOzgH,KAChD,MAAMqhH,EAAYxV,EAAM6G,UAClB4O,EAAYlB,GAAsBK,GAClCc,EAAYD,EAAU3kI,OACtB6kI,EAAYH,EAAU1kI,OACtB8kI,EAAStyB,GAASqyB,EAAWD,GACnC,IAAIztG,EAAO,EACPC,EAAQ,EACR2tG,GAAmB,EACvB,KAAO5tG,EAAO2tG,EAAQ3tG,IAAQ,CAC5B,MAAM6tG,EAAQN,EAAUvtG,GAClB8tG,EAAQN,EAAUxtG,GACxB,GAAIotG,GAAelhH,EAAQzlB,IAAIonI,GAAQC,GACrCF,GAAmB,OACd,IAAKZ,GAAgBa,EAAOC,GACjC,KAEH,CACD,KAAO9tG,EAAOC,EAAQ0tG,EAAQ1tG,IAAS,CACrC,MAAM8tG,EAASR,EAAUG,EAAYztG,EAAQ,GACvC+tG,EAASR,EAAUC,EAAYxtG,EAAQ,GAC7C,GAAImtG,GAAelhH,EAAQzlB,IAAIsnI,GAASC,GACtCJ,GAAmB,OACd,IAAKZ,GAAgBe,EAAQC,GAClC,KAEH,CACD,MAAO,CACLC,eAAgBjuG,EAAOC,EACvB2tG,mBAFF,EAMIM,GAAc5M,IAClB,IAAI1tH,EAAM,GAINrQ,EAAI+9H,EAAMhZ,OACd,MAAM6lB,EAAS,CAAC,EAChB,MAAa,OAAN5qI,EACAA,EAAE8mB,UACD9mB,EAAEyuH,WAAazuH,EAAEmF,mBAAmB+9E,GACtC7yE,GAAOrQ,EAAEmF,QAAQkL,IACRrQ,EAAEmF,mBAAmB+9E,KAC9B0nD,EAAO5qI,EAAEmF,QAAQE,KAAO,OAG5BrF,EAAIA,EAAE08B,MAER,MAAO,CACLrsB,MACAu6H,SAFF,EAaIC,GAAc,CAAC9M,EAAOyL,EAAQ7gH,KAClCA,EAAQjlB,IAAIq6H,EAAOyL,GACnB,MAAM,OAAEoB,EAAF,IAAUv6H,GAAQs6H,GAAW5M,GAC7B54H,EAAUqkI,EAAO1oI,KAAKf,IAAD,CACzBgN,OAA4BhN,EAAGuH,KAC/B05C,WAAYnwC,OAAOm4C,OAAO,CAAC,EAAG4hF,EAAQ/B,GAAkB9oI,EAAE6L,aAEtD,OAAEmB,EAAF,OAAUpH,EAAV,MAAkBkE,GAAUqoG,GAChC7hG,EACAlL,EAAQrE,KAAKE,GAAMA,EAAE+L,SAAQ9L,KAAK,KAEpC88H,EAAMnsG,OAAO/nB,EAAOlE,GACpBo4H,EAAMhxH,OAAOlD,EAAOkD,GACpBgxH,EAAMQ,WACJp5H,EAAQrE,KAAKE,IAAD,CAAU22H,OAAQ32H,EAAE+L,OAAOzH,OAAQ07C,WAAYhgD,EAAEggD,eAD/D,EAKI6nF,GAAqBj9H,IACzB,MAAMs9H,EAAS,CAAC,EAMhB,OALAt9H,EAAMvF,SAAS+K,IACU,YAAnBA,EAAKnI,KAAKxJ,OACZypI,EAAO93H,EAAKnI,KAAKxJ,MAAQ2R,EAAK/S,MAC/B,IAEI6qI,CAAP,EAUWd,GAAkB,CAACtmI,EAAGgpI,EAAcC,EAAOpiH,KACtD,GACEmiH,aAAwB5nD,IACxB4nD,EAAa5rH,WAAa6rH,EAAM9hI,KAAKxJ,KAErC,MAAM,IAAIL,MAAM,uBAIlB,GAFAupB,EAAQjlB,IAAIonI,EAAcC,GAEtBD,aAAwB5nD,GAAc,CACxC,MAAM8nD,EAAYF,EAAazL,gBACzB4L,EAASF,EAAM1sI,MACrB,IAAK,MAAMgH,KAAO4lI,EACI,OAAhBA,EAAO5lI,GACL2lI,EAAU3lI,KAAS4lI,EAAO5lI,IAAgB,YAARA,GACpCylI,EAAarlH,aAAapgB,EAAK4lI,EAAO5lI,IAGxCylI,EAAaz/F,gBAAgBhmC,GAIjC,IAAK,MAAMA,KAAO2lI,OACIxlI,IAAhBylI,EAAO5lI,IACTylI,EAAaz/F,gBAAgBhmC,EAGlC,CAED,MAAM4kI,EAAYlB,GAAsBgC,GAClCb,EAAYD,EAAU3kI,OACtB0kI,EAAYc,EAAazP,UACzB8O,EAAYH,EAAU1kI,OACtB8kI,EAAStyB,GAASoyB,EAAWC,GACnC,IAAI1tG,EAAO,EACPC,EAAQ,EAEZ,KAAOD,EAAO2tG,EAAQ3tG,IAAQ,CAC5B,MAAM6tG,EAAQN,EAAUvtG,GAClB8tG,EAAQN,EAAUxtG,GACxB,IAAKotG,GAAelhH,EAAQzlB,IAAIonI,GAAQC,GAAQ,CAC9C,IAAId,GAAgBa,EAAOC,GAIzB,MAFA5hH,EAAQjlB,IAAI4mI,EAAOC,EAItB,CACF,CAED,KAAO7tG,EAAQD,EAAO,EAAI2tG,EAAQ1tG,IAAS,CACzC,MAAM8tG,EAASR,EAAUG,EAAYztG,EAAQ,GACvC+tG,EAASR,EAAUC,EAAYxtG,EAAQ,GAC7C,IAAKmtG,GAAelhH,EAAQzlB,IAAIsnI,GAASC,GAAS,CAChD,IAAIhB,GAAgBe,EAAQC,GAI1B,MAFA9hH,EAAQjlB,IAAI8mI,EAAQC,EAIvB,CACF,CACD3oI,EAAEyiH,UAAS,KAET,MAAO4lB,EAAY1tG,EAAOC,EAAQ,GAAKwtG,EAAYztG,EAAOC,EAAQ,EAAG,CACnE,MAAM4tG,EAAQN,EAAUvtG,GAClB8tG,EAAQN,EAAUxtG,GAClB+tG,EAASR,EAAUG,EAAYztG,EAAQ,GACvC+tG,EAASR,EAAUC,EAAYxtG,EAAQ,GAC7C,GAAI4tG,aAAiBpnD,IAAaqnD,aAAiB3pI,MAC5C2oI,GAAgBe,EAAOC,IAC1BM,GAAYP,EAAOC,EAAO5hH,GAE5B8T,GAAQ,MACH,CACL,IAAIyuG,EAAaZ,aAAiBpnD,IAChCwmD,GAAcY,EAAOC,GACnBY,EAAcX,aAAkBtnD,IAClCwmD,GAAcc,EAAQC,GACxB,GAAIS,GAAcC,EAAa,CAE7B,MAAMC,EAAerB,GACUO,EACDC,EAC5B5hH,GAEI0iH,EAAgBtB,GACSS,EACDC,EAC5B9hH,GAGAyiH,EAAaf,mBAAqBgB,EAAchB,iBAEhDc,GAAc,GAEbC,EAAaf,kBAAoBgB,EAAchB,kBAIhDe,EAAaV,eAAiBW,EAAcX,eAF5CQ,GAAa,EAMbC,GAAc,CAEjB,CACGD,GACF9C,GACEtmI,EAC8BwoI,EACFC,EAC5B5hH,GAEF8T,GAAQ,GACC0uG,GACT/C,GACEtmI,EAC8B0oI,EACFC,EAC5B9hH,GAEF+T,GAAS,IAETouG,EAAal5G,OAAO6K,EAAM,GAC1BquG,EAAa/9H,OAAO0vB,EAAM,CACxBusG,GAAgCuB,EAAO5hH,KAEzC8T,GAAQ,EAEX,CACF,CACD,MAAM6uG,EAAUnB,EAAY1tG,EAAOC,EAUnC,GARgB,IAAdytG,GAAiC,IAAdD,GAAmBF,EAAU,aAAc9mD,GAI9D8mD,EAAU,GAAGp4G,OAAO,EAAGo4G,EAAU,GAAG1kI,QAC3BgmI,EAAU,GACnBR,EAAal5G,OAAO6K,EAAM6uG,GAExB7uG,EAAOC,EAAQwtG,EAAW,CAC5B,MAAMtL,EAAM,GACZ,IAAK,IAAIj+H,EAAI87B,EAAM97B,EAAIupI,EAAYxtG,EAAO/7B,IACxCi+H,EAAI/4H,KAAKmjI,GAAgCiB,EAAUtpI,GAAIgoB,IAEzDmiH,EAAa/9H,OAAO0vB,EAAMmiG,EAC3B,IACAxtB,GAvFH,EA+FIs4B,GAAgB,CAAC6B,EAAUR,MAC7BA,aAAiBnqI,QAAU2qI,EAASrsH,WAAa6rH,EAAM9hI,KAAKxJ,KC/kChE,IAAI+rI,GAAgB,KAEpB,MAAMC,GAAc,KAClB,MAAMC,EAAqDF,GAC3DA,GAAgB,KAChBE,EAAIrlI,SAAQ,CAAC+uC,EAAO3X,KAClB,MAAMxS,EAAKwS,EAAK1mB,MAAMkU,GAChB26G,EAAYx0B,GAAer4E,SAAS0E,EAAK1mB,OAC3C6uH,GAAaA,EAAUzF,UAAYyF,EAAUzF,QAAQ54E,cACvDnS,EAAM/uC,SAAQ,CAAC8I,EAAK9J,KAClB4lB,EAAGuL,QAAQnxB,EAAK8J,EAAhB,IAEFsuB,EAAK6T,SAASrmB,GACf,GARH,EAYWuL,GAAU,CAACiH,EAAMp4B,EAAK9G,KAC5BitI,KACHA,GAAgB,IAAI1oI,IACpBojI,GAAkB,EAAGuF,KAEvB3qI,GAAmB0qI,GAAe/tG,EAAM38B,IAAY4C,IAAI2B,EAAK9G,EAA7D,EAWWwoI,GAAqC,CAAChgI,EAAKkC,EAAM0f,KAC5D,GAAY,IAAR5hB,EACF,OAAOm8E,GAAsCj6E,EAAM,GAKrD,IAAIjJ,EAAoB,OAAhBiJ,EAAK8vH,OAAkB,KAAqC9vH,EAAK8vH,OAAO5zH,QAAS8D,KACzF,MAAa,OAANjJ,GAAciJ,IAASjJ,EAAG,CAC/B,GAAIA,aAAakjF,GAAW,CAC1B,GAAIljF,EAAEglH,SAAWj+G,EACf,OAAOm8E,GAAsCljF,EAAG+G,GAIlD,GAFEA,GAAO/G,EAAEglH,QAEK,OAAZhlH,EAAEkkH,OAAmC,OAAjBlkH,EAAEkkH,MAAMp0G,KAC9B9P,EAAkCA,EAAEkkH,MAAMp0G,KAAK3K,QAAS8D,SACnD,CACL,GACEjJ,EAAgB,OAAZA,EAAEkkH,MAAiB,KAAOlkH,EAAEkkH,MAAM57G,OACtCvB,UACO/G,IAAMiJ,GAAc,OAANjJ,GAA0B,OAAZA,EAAEkkH,OAAmC,OAAjBlkH,EAAEkkH,MAAMp0G,MACvD,OAAN9P,GAAcA,IAAMiJ,IAEtBjJ,EAAgB,OAAZA,EAAEkkH,MAAiB,KAA0DlkH,EAAEkkH,MAAMp0G,KAAM3K,QAAS8D,KAE3G,CACF,KAAM,CACL,MAAM0iI,GAAgChjH,EAAQzlB,IAAIlD,IAAM,CAAEwH,SAAU,IAAKA,SACzE,GAAiB,OAAbxH,EAAE+4H,QAAmBhyH,EAAM4kI,EAC7B3rI,EAAkCA,EAAE+4H,OAAO5zH,QAAS8D,KACpDlC,QACK,CACL,GAAY,IAARA,GAA2B,IAAd/G,EAAEglH,SAAiB2mB,EAAY,EAE9C,OAAO,IAAIzoD,GAA+B,OAAZljF,EAAEkkH,MAAiB,KAAOlkH,EAAEkkH,MAAM/gH,GAAgB,OAAZnD,EAAEkkH,MAAiBhhC,GAAkBljF,GAAK,KAAM,MAGtH,GADA+G,GAAO4kI,EACS,OAAZ3rI,EAAEkkH,OAAmC,OAAjBlkH,EAAEkkH,MAAMp0G,KAC9B9P,EAAkCA,EAAEkkH,MAAMp0G,KAAK3K,QAAS8D,SACnD,CACL,GAAY,IAARlC,EAGF,OADA/G,EAAgB,OAAZA,EAAEkkH,MAAiBlkH,EAAIA,EAAEkkH,MAAM57G,OAC5B,IAAI46E,GAA+B,OAAZljF,EAAEkkH,MAAiB,KAAOlkH,EAAEkkH,MAAM/gH,GAAgB,OAAZnD,EAAEkkH,MAAiBhhC,GAAkBljF,GAAK,KAAM,MAEtH,GACEA,EAA2BA,EAAEkkH,MAAO57G,OACpCvB,UACO/G,IAAMiJ,GAAiD,OAAlBjJ,EAAEkkH,MAAOp0G,MAEnD9P,IAAMiJ,IAERjJ,EAAgFA,EAAEkkH,MAAOp0G,KAAM3K,QAAS8D,KAE3G,CACF,CACF,CACD,GAAU,OAANjJ,EACF,MAAM20E,KAER,GAAY,IAAR5tE,GAAa/G,EAAEX,cAAgB6jF,IAAaljF,IAAMiJ,EACpD,OAAOqlH,GAAuBtuH,EAAEkkH,MAAM57G,OAAQtI,EAAEkkH,MAEnD,CACD,OAAOhhC,GAAsCj6E,EAAMA,EAAK+7G,QAAxD,EAGIsJ,GAAyB,CAACrlH,EAAMwnD,KACpC,IAAI89D,EAAS,KACTL,EAAQ,KAMZ,OALmB,OAAfjlH,EAAKi7G,MACPgK,EAAQhrC,GAAkBj6E,GAE1BslH,EAASrrC,GAAWj6E,EAAKi7G,MAAM/gH,GAAGi+G,OAAQn4G,EAAKi7G,MAAM/gH,GAAGi9G,OAEnD,IAAIl9B,GAAmBqrC,EAAQL,EAAOz9D,EAAKttD,GAAlD,EAUWyjI,GAAqC,CAAC9kI,EAAG8pI,EAAcC,EAAQljH,KAC1E,MAAMmjH,EAAa5oD,GAA6C2oD,EAAQ/pI,GACxE,GAAmB,OAAfgqI,GAAwBA,EAAW7iI,OAAS2iI,IAAiB1oD,GAAa0oD,EAAcE,EAAW7iI,KAAKi7G,OAC1G,OAAO,KAET,IAAIj7G,EAAO6iI,EAAW7iI,KAClBlC,EAAM,EACV,GAAIkC,EAAK5J,cAAgB6jF,GACvBn8E,EAAM+kI,EAAWjiI,WACZ,GAAmB,OAAfZ,EAAKi7G,QAAmBj7G,EAAKi7G,MAAMp9F,QAAS,CACrD,IAAI9mB,EAAIiJ,EAAK8vH,OACTp4H,EAAI,EACR,MAAOA,EAAIsI,EAAK+7G,SAAWrkH,EAAImrI,EAAWjiI,OAAe,OAAN7J,EAAY,CAC7D,IAAKA,EAAE8mB,QAAS,CACd,MAAM3nB,EAAkCa,EAAEmF,QAAS8D,KACnDtI,IAEEoG,GADE5H,aAAa+jF,GACR/jF,EAAE6lH,QAEkBr8F,EAAQzlB,IAAI/D,GAAIqI,QAE9C,CACDxH,EAA2BA,EAAE08B,KAC9B,CACD31B,GAAO,CACR,CACD,MAAOkC,IAAS2iI,GAA+B,OAAf3iI,EAAKi7G,MAAgB,CAEnD,MAAM57G,EAASW,EAAKi7G,MAAM57G,OAE1B,GAAqB,OAAjBA,EAAO47G,QAAmB57G,EAAO47G,MAAMp9F,QAAS,CAClD/f,GAAO,EACP,IAAI/G,EAAmCsI,EAAQywH,OAE/C,MAAa,OAAN/4H,EAAY,CACjB,MAAMiwD,EAA4CjwD,EAAEmF,QAAS8D,KAC7D,GAAIgnD,IAAgBhnD,EAClB,MAEGjJ,EAAE8mB,UAEH/f,GADEkpD,aAAuBizB,GAClBjzB,EAAY+0D,QAEQr8F,EAAQzlB,IAAI+sD,GAAczoD,UAGzDxH,EAAIA,EAAE08B,KACP,CACF,CACDzzB,EAAsCX,CACvC,CACD,OAAOvB,EAAM,CAAb,EAcK,SAASglI,GAAmB38H,EAAK48H,EAAc,eACpD,MAAMxgB,EAAO,IAAItoC,GACXj6E,EAAqCuiH,EAAKtoH,IAAI8oI,EAAa9oD,IACjE,OAAKj6E,EAAKmG,KAIV68H,GAA0B78H,EAAKnG,GACxBA,EAAKmG,KAJHo8G,CAKV,CAiBM,SAASygB,GAA2B78H,EAAK48H,GAC9C,MAAM/iI,EAAO+iI,GAAe,IAAI9oD,GAC1BsoC,EAAOviH,EAAKmG,IAAMnG,EAAKmG,IAAM,CAAEm1G,SAAW/D,GAAgBA,OAAYh7G,IAE5E,OADA4iI,GAAgB5c,EAAMviH,EAAMmG,EAAK,IAAItM,KAC9BmG,CACR,CA4CM,SAASijI,GAAmBxhI,EAAQ8gH,GACzC,MAAMz0G,EAAQo1H,GAAsB3gB,GACpC,OAAO16G,GAAAA,SAAcpG,EAAQqM,EAC9B,CAqBM,SAASo1H,GACd3gB,EACAwgB,EAAc,eAEd,OAAOI,GAA8B5gB,EAAKlG,eAAe0mB,GAC1D,CAQM,SAASI,GAA+BJ,GAC7C,MAAM1+E,EAAQ0+E,EAAY3Q,UAE1B,SAASl+C,EAAW1sB,GAOlB,IAAI47E,EAGJ,GAAK57E,EAAKvxC,SAwBH,CACLmtH,EAAW,CACTpjI,KAAMwnD,EAAKvxC,UAGb,MAAM7gB,EAAQoyD,EAAK4uE,gBACfxuH,OAAOmoB,KAAK36B,GAAOiH,SACrB+mI,EAAShuI,MAAQA,GAGnB,MAAMwmC,EAAW4rB,EAAK4qE,UAClBx2F,EAASv/B,SACX+mI,EAASlnI,QAAU0/B,EAAS/jC,IAAIq8E,GAAW8I,OAE9C,KAtCmB,CAClB,MAAMuxC,EAAQ/mE,EAAK+tE,UACnB6N,EAAW7U,EAAM12H,KAAKV,IACpB,MAAMkH,EAAO,CACX2B,KAAM,OACN3B,KAAMlH,EAAE2M,QAiBV,OAdI3M,EAAE4gD,aACJ15C,EAAKsE,MAAQiF,OAAOmoB,KAAK54B,EAAE4gD,YAAYlgD,KAAKmI,IAC1C,MAAM5K,EAAQ+B,EAAE4gD,WAAW/3C,GACrBmI,EAAO,CACXnI,QAOF,OAJI4H,OAAOmoB,KAAK36B,KACd+S,EAAK/S,MAAQA,GAGR+S,CAAP,KAGG9J,CAAP,GAEH,CAgBD,OAAO+kI,CACR,CAED,MAAO,CACLpjI,KAAM,MACN9D,QAASmoD,EAAMxsD,IAAIq8E,GAEtB,CCjXM,MAAM4R,GAAOh4E,IAClB,MAAM07G,EAAcphB,GAAet4E,SAAShiB,GAAO07G,YACnD,GAAmB,MAAfA,EAEF,OADAA,EAAY1jC,QACL,CACR,EAGUf,GAAOj3E,IAClB,MAAM07G,EAAcphB,GAAet4E,SAAShiB,GAAO07G,YACnD,GAAmB,MAAfA,EAEF,OADAA,EAAYzkC,QACL,CACR,EAGUs+C,GAAwB,IAAIxoD,IAAI,CAAC,cAEjCyoD,GAAsB,CAAC97E,EAAM+7E,MAAqB/7E,aAAgBq7B,OAC7Er7B,EAAKtrD,mBAAmB6pH,OACxBv+D,EAAKtrD,QAAQ8D,gBAAgBw/C,IAC5BgI,EAAKtrD,QAAQ8D,gBAAgBwjI,IAAcD,EAAep/F,IAAIqjB,EAAKtrD,QAAQ8D,KAAKiW,YACrD,IAA9BuxC,EAAKtrD,QAAQ8D,KAAK+7G,QAEL0nB,GAAc,EAAGF,iBAAiBF,GAAuB7Y,iBAAiB,GAAIhB,cAAc,MAAS,CAAC,IAAM,IAAI75F,GAAO,CAClIvzB,IAAKgsG,GACLt6F,MAAO,CACLggB,KAAM,CAAC41G,EAAU51H,KAEf,MAAM61H,EAASx7B,GAAer4E,SAAShiB,GACjC81H,EAAepa,GAAe,IAAIY,GAAYuZ,EAAO3jI,KAAM,CAC/DwqH,eAAgB,IAAI3vC,IAAI,CAACstB,IAAgBprG,OAAOytH,IAChDP,aAAeziE,GAAS87E,GAAoB97E,EAAM+7E,GAClDhZ,mBAAoBvoG,IAAsC,IAAhCA,EAAGsK,KAAKryB,IAAI,kBAExC,MAAO,CACLuvH,YAAaoa,EACbC,QAAS,KACTC,WAAYF,EAAalZ,UAAUruH,OAAS,EAC5C0nI,WAAYH,EAAajZ,UAAUtuH,OAAS,EAJ9C,EAOF2kB,MAAO,CAACgB,EAAI9b,EAAKipB,EAAUrhB,KACzB,MAAMopH,EAAU/uB,GAAer4E,SAAShiB,GAAOopH,QACzC1N,EAActjH,EAAIsjH,YAClBsa,EAAata,EAAYkB,UAAUruH,OAAS,EAC5C0nI,EAAava,EAAYmB,UAAUtuH,OAAS,EAClD,OAAI66H,EACK,CACL1N,cACAqa,QAASjG,GAAqB1G,EAAS/nG,GACvC20G,aACAC,cAGED,IAAe59H,EAAI49H,YAAcC,IAAe79H,EAAI69H,WAC/Cn8H,OAAOm4C,OAAO,CAAC,EAAG75C,EAAK,CAC5B49H,WAAYta,EAAYkB,UAAUruH,OAAS,EAC3C0nI,WAAYva,EAAYmB,UAAUtuH,OAAS,IAGtC6J,CAEV,GAGLsuB,KAAMA,IACJ,MAAMmvG,EAASx7B,GAAer4E,SAAS0E,EAAK1mB,OACtC07G,EAAcphB,GAAet4E,SAAS0E,EAAK1mB,OAAO07G,YAaxD,OAZAA,EAAYx0H,GAAG,oBAAoB,EAAGo0H,gBACpC,MAAM8N,EAAUyM,EAAOzM,QACnBA,GACF9N,EAAU98F,KAAK7xB,IAAIy8H,EAAS9uB,GAAet4E,SAAS0E,EAAK1mB,OAAO+1H,QACjE,IAEHra,EAAYx0H,GAAG,qBAAqB,EAAGo0H,gBACrC,MAAM8N,EAAUyM,EAAOzM,QACnBA,IACFA,EAAQ+G,2BAA6B7U,EAAU98F,KAAKryB,IAAIi9H,IAAYA,EAAQ+G,2BAC7E,IAEI,CACL1hG,QAAS,KACPitF,EAAYjtF,SAAZ,EAFJ,IC5ESynG,GAAkB,IA0BxB,MAAMC,WAAkBv6B,GAI7BtzG,YAAa+P,GACX5P,QACA1B,KAAKsR,IAAMA,EAIXtR,KAAK8lH,SAAWx0G,EAAIw0G,SAKpB9lH,KAAKgZ,OAAS,IAAIhU,IAIlBhF,KAAKy3B,KAAO,IAAIzyB,IAChBhF,KAAKqvI,eAAqCC,aAAY,KACpD,MAAM13G,EAAMF,KACiB,OAAzB13B,KAAKuvI,iBAA6BJ,GAAkB,GAAKv3G,EAA2C53B,KAAKy3B,KAAKryB,IAAIpF,KAAK8lH,UAAW0pB,aAEpIxvI,KAAKyvI,cAAczvI,KAAKuvI,iBAK1B,MAAM1nI,EAAS,GACf7H,KAAKy3B,KAAKlvB,SAAQ,CAACkvB,EAAMorF,KACnBA,IAAa7iH,KAAK8lH,UAAYqpB,IAAmBv3G,EAAMH,EAAK+3G,aAAexvI,KAAKgZ,OAAOs2B,IAAIuzE,IAC7Fh7G,EAAOE,KAAK86G,EACb,IAECh7G,EAAOL,OAAS,GAClBkoI,GAAsB1vI,KAAM6H,EAAQ,UACrC,GACAmyG,GAAWm1B,GAAkB,KAChC79H,EAAInR,GAAG,WAAW,KAChBH,KAAK0nC,SAAL,IAEF1nC,KAAKyvI,cAAc,CAAC,EACrB,CAED/nG,UACE1nC,KAAKm1G,KAAK,UAAW,CAACn1G,OACtBA,KAAKyvI,cAAc,MACnB/tI,MAAMgmC,UACNq/F,cAAc/mI,KAAKqvI,eACpB,CAKDE,gBACE,OAAOvvI,KAAKgZ,OAAO5T,IAAIpF,KAAK8lH,WAAa,IAC1C,CAKD2pB,cAAex2H,GACb,MAAM6sG,EAAW9lH,KAAK8lH,SAChB6pB,EAAgB3vI,KAAKy3B,KAAKryB,IAAI0gH,GAC9BxD,OAA0B56G,IAAlBioI,EAA8B,EAAIA,EAAcrtB,MAAQ,EAChEn5D,EAAYnpD,KAAKgZ,OAAO5T,IAAI0gH,GACpB,OAAV7sG,EACFjZ,KAAKgZ,OAAO8a,OAAOgyF,GAEnB9lH,KAAKgZ,OAAOpT,IAAIkgH,EAAU7sG,GAE5BjZ,KAAKy3B,KAAK7xB,IAAIkgH,EAAU,CACtBxD,QACAktB,YAAa93G,OAEf,MAAMnK,EAAQ,GACRf,EAAU,GACVojH,EAAkB,GAClBtiH,EAAU,GACF,OAAVrU,EACFqU,EAAQvlB,KAAK+9G,GACS,MAAb38D,EACI,MAATlwC,GACFsU,EAAMxlB,KAAK+9G,IAGbt5F,EAAQzkB,KAAK+9G,GACRtiH,GAAe2lD,EAAWlwC,IAC7B22H,EAAgB7nI,KAAK+9G,KAGrBv4F,EAAM/lB,OAAS,GAAKooI,EAAgBpoI,OAAS,GAAK8lB,EAAQ9lB,OAAS,IACrExH,KAAKm1G,KAAK,SAAU,CAAC,CAAE5nF,QAAOf,QAASojH,EAAiBtiH,WAAW,UAErEttB,KAAKm1G,KAAK,SAAU,CAAC,CAAE5nF,QAAOf,UAASc,WAAW,SACnD,CAMDuiH,mBAAoBr1G,EAAO/5B,GACzB,MAAMwY,EAAQjZ,KAAKuvI,gBACL,OAAVt2H,GACFjZ,KAAKyvI,cAAc,IACdx2H,EACH,CAACuhB,GAAQ/5B,GAGd,CAKDqvI,YACE,OAAO9vI,KAAKgZ,MACb,EAWI,MAAM02H,GAAwB,CAACK,EAAWvtB,EAAStxE,KACxD,MAAM5jB,EAAU,GAChB,IAAK,IAAIzqB,EAAI,EAAGA,EAAI2/G,EAAQh7G,OAAQ3E,IAAK,CACvC,MAAMijH,EAAWtD,EAAQ3/G,GACzB,GAAIktI,EAAU/2H,OAAOs2B,IAAIw2E,GAAW,CAElC,GADAiqB,EAAU/2H,OAAO8a,OAAOgyF,GACpBA,IAAaiqB,EAAUjqB,SAAU,CACnC,MAAMkqB,EAA0CD,EAAUt4G,KAAKryB,IAAI0gH,GACnEiqB,EAAUt4G,KAAK7xB,IAAIkgH,EAAU,CAC3BxD,MAAO0tB,EAAQ1tB,MAAQ,EACvBktB,YAAa93G,MAEhB,CACDpK,EAAQvlB,KAAK+9G,EACd,CACF,CACGx4F,EAAQ9lB,OAAS,IACnBuoI,EAAU56B,KAAK,SAAU,CAAC,CAAE5nF,MAAO,GAAIf,QAAS,GAAIc,WAAW4jB,IAC/D6+F,EAAU56B,KAAK,SAAU,CAAC,CAAE5nF,MAAO,GAAIf,QAAS,GAAIc,WAAW4jB,IAChE,EAQU++F,GAAwB,CAACF,EAAWvtB,EAASxpG,EAAS+2H,EAAU/2H,UAC3E,MAAM6pB,EAAM2/E,EAAQh7G,OACd8yG,EAAU9yC,KAChBA,GAAsB8yC,EAASz3E,GAC/B,IAAK,IAAIhgC,EAAI,EAAGA,EAAIggC,EAAKhgC,IAAK,CAC5B,MAAMijH,EAAWtD,EAAQ3/G,GACnBoW,EAAQD,EAAO5T,IAAI0gH,IAAa,KAChCxD,EAAwCytB,EAAUt4G,KAAKryB,IAAI0gH,GAAWxD,MAC5E96C,GAAsB8yC,EAASwL,GAC/Bt+C,GAAsB8yC,EAASgI,GAC/B96C,GAAwB8yC,EAASv4G,KAAKC,UAAUiX,GACjD,CACD,OAAOuuD,GAAsB8yC,EAA7B,EAmCW41B,GAAuB,CAACH,EAAWlqI,EAAQqrC,KACtD,MAAMosE,EAAUoH,GAAuB7+G,GACjCo0H,EAAYviG,KACZnK,EAAQ,GACRf,EAAU,GACVojH,EAAkB,GAClBtiH,EAAU,GACVuV,EAAM6hF,GAAqBpH,GACjC,IAAK,IAAIz6G,EAAI,EAAGA,EAAIggC,EAAKhgC,IAAK,CAC5B,MAAMijH,EAAWpB,GAAqBpH,GACtC,IAAIgF,EAAQoC,GAAqBpH,GACjC,MAAMrkG,EAAQlX,KAAKuZ,MAAMopG,GAAuBpH,IAC1C6yB,EAAaJ,EAAUt4G,KAAKryB,IAAI0gH,GAChC38D,EAAY4mF,EAAU/2H,OAAO5T,IAAI0gH,GACjCsqB,OAA2B1oI,IAAfyoI,EAA2B,EAAIA,EAAW7tB,OACxD8tB,EAAY9tB,GAAU8tB,IAAc9tB,GAAmB,OAAVrpG,GAAkB82H,EAAU/2H,OAAOs2B,IAAIw2E,MACxE,OAAV7sG,EAEE6sG,IAAaiqB,EAAUjqB,UAAyC,MAA7BiqB,EAAUR,gBAG/CjtB,IAEAytB,EAAU/2H,OAAO8a,OAAOgyF,GAG1BiqB,EAAU/2H,OAAOpT,IAAIkgH,EAAU7sG,GAEjC82H,EAAUt4G,KAAK7xB,IAAIkgH,EAAU,CAC3BxD,QACAktB,YAAavV,SAEIvyH,IAAfyoI,GAAsC,OAAVl3H,EAC9BsU,EAAMxlB,KAAK+9G,QACap+G,IAAfyoI,GAAsC,OAAVl3H,EACrCqU,EAAQvlB,KAAK+9G,GACM,OAAV7sG,IACJzV,GAAeyV,EAAOkwC,IACzBymF,EAAgB7nI,KAAK+9G,GAEvBt5F,EAAQzkB,KAAK+9G,IAGlB,EACGv4F,EAAM/lB,OAAS,GAAKooI,EAAgBpoI,OAAS,GAAK8lB,EAAQ9lB,OAAS,IACrEuoI,EAAU56B,KAAK,SAAU,CAAC,CACxB5nF,QAAOf,QAASojH,EAAiBtiH,WAChC4jB,KAED3jB,EAAM/lB,OAAS,GAAKglB,EAAQhlB,OAAS,GAAK8lB,EAAQ9lB,OAAS,IAC7DuoI,EAAU56B,KAAK,SAAU,CAAC,CACxB5nF,QAAOf,UAASc,WACf4jB,GACJ,EClRUm/F,GAAwBjP,IACnC,MAAM5tC,EAASvrE,SAASR,cAAc,QACtC+rE,EAAOzpD,UAAUljB,IAAI,0BACrB2sE,EAAO7rE,aAAa,QAAU,iBAAgBy5G,EAAKluD,SACnD,MAAMo9D,EAAUroH,SAASR,cAAc,OACvC6oH,EAAQ3oH,aAAa,QAAU,qBAAoBy5G,EAAKluD,SACxDo9D,EAAQtiG,aAAa/lB,SAASvE,eAAe09G,EAAKz/H,MAAO,MACzD,MAAM4uI,EAAoBtoH,SAASvE,eAAe,KAC5C8sH,EAAoBvoH,SAASvE,eAAe,KAIlD,OAHA8vE,EAAOxlD,aAAauiG,EAAmB,MACvC/8C,EAAOxlD,aAAasiG,EAAS,MAC7B98C,EAAOxlD,aAAawiG,EAAmB,MAChCh9C,CAAP,EASWi9C,GAA2BrP,IAC/B,CACLjlH,MAAQ,qBAAoBilH,EAAKluD,UACjC/kC,MAAO,8BAILuiG,GAAe,oBASRC,GAAoB,CAC/B13H,EACA82H,EACAa,EACAC,KAEA,MAAM/B,EAASx7B,GAAer4E,SAAShiB,GACjCjV,EAAI8qI,EAAOx9H,IACX2uC,EAAc,GACpB,OACqB,MAAnB6uF,EAAOxd,UAA2C,MAAvBwd,EAAO/N,cACf,OAAnB+N,EAAOzM,QAGAtiF,GAAchyC,OAAOkL,EAAM3H,IAAK,KAEzCy+H,EAAUD,YAAYvnI,SAAQ,CAACuoI,EAAIC,KACjC,GAAIA,IAAa/sI,EAAE8hH,UAGF,MAAbgrB,EAAGt9C,OAAgB,CACrB,MAAM4tC,EAAO0P,EAAG1P,MAAQ,CAAC,EACP,MAAdA,EAAKluD,MACPkuD,EAAKluD,MAAQ,UACHw9D,GAAav4H,KAAKipH,EAAKluD,QAEjCl9C,QAAQg7G,KAAK,0CAA2C5P,GAEzC,MAAbA,EAAKz/H,OACPy/H,EAAKz/H,KAAQ,SAAQovI,KAEvB,IAAIh8G,EAAS+zG,GACX9kI,EACA8qI,EAAO3jI,KACPi6E,GAAiC0rD,EAAGt9C,OAAOz+D,QAC3C+5G,EAAOzM,QAAQx3G,SAEblL,EAAOmpH,GACT9kI,EACA8qI,EAAO3jI,KACPi6E,GAAiC0rD,EAAGt9C,OAAO7zE,MAC3CmvH,EAAOzM,QAAQx3G,SAEjB,GAAe,OAAXkK,GAA4B,OAATpV,EAAe,CACpC,MAAMsxH,EAAUj3B,GAAS/gG,EAAM3H,IAAIjK,QAAQqB,KAAO,EAAG,GACrDqsB,EAASilF,GAASjlF,EAAQk8G,GAC1BtxH,EAAOq6F,GAASr6F,EAAMsxH,GACtBhxF,EAAYl4C,KACV23C,GAAWxY,OAAOvnB,GAAM,IAAMixH,EAAaxP,IAAO,CAChD75H,IAAKwpI,EAAW,GAChB/mH,KAAM,MAGV,MAAMvhB,EAAOuxG,GAASjlF,EAAQpV,GACxBrV,EAAK0vG,GAASjlF,EAAQpV,GAC5BsgC,EAAYl4C,KACV23C,GAAWpoC,OAAO7O,EAAM6B,EAAIumI,EAAgBzP,GAAO,CACjDthF,cAAc,EACdD,gBAAgB,IAGrB,CACF,KAEIE,GAAchyC,OAAOkL,EAAM3H,IAAK2uC,GAAvC,EAgBWixF,GAAgB,CAC3BnB,GAEEoB,gBAAgBd,GAChBe,mBAAmBX,GACnB1nG,eAAgB9vB,IAAUA,EAAM2d,YAC9B,CAAC,EACLy6G,EAAmB,WAEnB,IAAIv2G,GAAO,CACTvzB,IAAKisG,GACLv6F,MAAO,CACLggB,KAAMrrB,EAAGqL,GACP,OAAO03H,GACL13H,EACA82H,EACAoB,EACAC,EAEH,EACDjlH,MAAOgB,EAAIg8B,EAAWmoF,EAAWp3G,GAC/B,MAAM40G,EAASx7B,GAAer4E,SAASf,GACjCq3G,EAAepkH,EAAGwL,QAAQ66E,IAChC,OACGs7B,GAAUA,EAAO7G,gBACjBsJ,GAAgBA,EAAaC,iBAEvBb,GACLz2G,EACA61G,EACAoB,EACAC,GAGGjoF,EAAUnmD,IAAImqB,EAAGtC,QAASsC,EAAG7b,IACrC,GAEHypB,MAAO,CACLklB,YAAchnC,GACLu6F,GAAiBv4E,SAAShiB,IAGrC0mB,KAAOA,IACL,MAAM8xG,EAAoB,KAEpB9xG,EAAKuD,SACPxK,GAAQiH,EAAM6zE,GAAkB,CAAEg+B,kBAAkB,GACrD,EAEGE,EAAmB,KACvB,MAAM5C,EAASx7B,GAAer4E,SAAS0E,EAAK1mB,OAEtCjN,EAAU+jI,EAAUR,iBAAmB,CAAC,EAC9C,GAAsB,MAAlBT,EAAOzM,QAGX,GAAI1iG,EAAK6R,WAAY,CACnB,MAAM5a,EAAYmS,EAAapJ,EAAK1mB,OAI9B8b,EAASk0G,GACbryG,EAAU7B,OACV+5G,EAAO3jI,KACP2jI,EAAOzM,QAAQx3G,SAKXlL,EAAOspH,GACXryG,EAAUjX,KACVmvH,EAAO3jI,KACP2jI,EAAOzM,QAAQx3G,SAGG,MAAlB7e,EAAQwnF,QACPpO,GACCA,GAAiCp5E,EAAQwnF,OAAOz+D,QAChDA,IAEDqwD,GACCA,GAAiCp5E,EAAQwnF,OAAO7zE,MAChDA,IAGFowH,EAAUF,mBAAmBwB,EAAkB,CAC7Ct8G,SACApV,QAGL,MACmB,MAAlB3T,EAAQwnF,QAMF,OALNs1C,GACEgG,EAAOx9H,IACPw9H,EAAO3jI,KACPi6E,GAAiCp5E,EAAQwnF,OAAOz+D,QAChD+5G,EAAOzM,QAAQx3G,UAIjBklH,EAAUF,mBAAmBwB,EAAkB,KAChD,EAKH,OAHAtB,EAAU5vI,GAAG,SAAUsxI,GACvB9xG,EAAKrjB,IAAIpV,iBAAiB,UAAWwqI,GACrC/xG,EAAKrjB,IAAIpV,iBAAiB,WAAYwqI,GAC/B,CACL7rI,OAAQ6rI,EACRhqG,QAAS,KACP/H,EAAKrjB,IAAIvV,oBAAoB,UAAW2qI,GACxC/xG,EAAKrjB,IAAIvV,oBAAoB,WAAY2qI,GACzC3B,EAAU1yG,IAAI,SAAUo0G,GACxB1B,EAAUF,mBAAmBwB,EAAkB,KAA/C,EANJ,I,qYCnLO,SAAwB,IAAI3sD,GAAU,0BAE7CuE,GAAmB,CAACvjF,GAAuBwlF,GAAgB1C,GAAkBoD,I,qCAE5E,MAAM9F,GAANvkF,cAOH2B,GAAAA,KAAAA,IAUAA,GAAAA,KAAAA,IA0BAA,GAAAA,KAAAA,IA1CAA,GAAAA,KAAAA,GAAoB,CAAC,GACrBA,GAAAA,KAAAA,GAAmB,MACnBA,GAAAA,KAAAA,GAA+B,MAC/BA,GAAAA,KAAAA,GAAmB,MACnBA,GAAAA,KAAAA,IAAa,GAkDbyuI,QAAQtwI,GACJ,UAAArB,KAAKyB,GAAOJ,GACLrB,IACX,CAEA4xI,QAAQvwI,GACJ,UAAArB,KAAKwC,GAAOnB,GACLrB,IACX,CAEA6xI,WAAWxwI,GACP,UAAArB,KAAK4C,GAAWvB,GACTrB,IACX,CAEA8xI,aAAazwI,GACF,cAAA6pD,OAAOppD,GAAAA,KAAKc,IAAUvB,GACtBrB,IACX,CAEA+xI,aAAa1wI,GACT,UAAArB,KAAKiC,GAAaZ,GACXrB,IACX,CAEAgyI,cAAc3wI,EAAwBD,GAClC,IAAKU,GAAAA,KAAKL,IAAM,MAAM+B,IACtB,IAAK1B,GAAAA,KAAKU,IAAM,MAAMqlF,IACtB,MAAMhlF,EAAczB,GAAAA,CAAesC,GAA6C,IAAhCA,EAASwP,YAAY1L,QAE/DtF,EAAOe,GAAAA,KAAKwC,GAAAvB,IAAL,KAAAlE,KAAkBqB,GACzBe,EAASN,GAAAA,KAAKL,IAAK2D,IAAIZ,IACvB9B,EAAWklF,GAAkBxlF,EAAQN,GAAAA,KAAKU,KAEhD,GAAIN,GAAQW,EAAYH,EAAUR,GAAO,CACrC,MAAMwB,EAAW5B,GAAAA,KAAKU,IAAKglH,eAAe,eACjC9jH,EAAAA,OAAO,EAAGA,EAAS8D,QACtB,QAAc8jF,GAAkBppF,GAChC4C,EAAW+jF,GAAoB/kF,GACzBykF,GAAAA,GAAAA,KAAK/lF,IAAMsC,GACvBhB,EAAY4jC,SAChB,CAEO,OAAA1nC,IACX,CAEAI,UACI,IAAK0B,GAAAA,KAAKL,IAAM,MAAM+B,IACtB,GAAI1B,GAAAA,KAAKQ,IAAY,OAErB,MAAMjB,EAAeS,GAAAA,KAAKL,IAAK2D,IAAIV,IAC7BtD,EAAgB6B,GAAAA,KAAK2D,GAAA0+E,IAAL,KAAAtlF,MAChB6C,EAAUxB,EAAa6G,OAAO9G,GAEpC,UAAApB,KAAKgE,GAAAJ,IAAL,KAAA5D,KAAkB6C,GAClBhB,GAAAA,KAAKS,IAAa,GAEXtC,IACX,CAEAM,aACI,IAAKwB,GAAAA,KAAKL,IAAM,MAAM+B,IACtB,IAAK1B,GAAAA,KAAKQ,IAAmB,OAAAtC,KAG7B,MAAMoB,EAAUU,GADK9B,KAAKyB,IAAK2D,IAAIV,IACNiqC,QACxB9rC,IAAYA,EAAOQ,KAAKkE,MAAQ0hF,GAAiBp0B,SAAShyD,EAAOQ,KAAKkE,OAG3E,UAAAvH,KAAKgE,GAAAJ,IAAL,KAAA5D,KAAkBoB,GAClBS,GAAAA,KAAKS,IAAa,GAEXtC,IACX,EA/HA4C,GAAAA,IAAAA,QACAJ,GAAAA,IAAAA,QACAP,GAAAA,IAAAA,QACAR,GAAAA,IAAAA,QACAa,GAAAA,IAAAA,QAEAmD,GAAAA,IAAAA,QAAAvB,GAAAA,SAAa7C,GACT,IAAKS,GAAAA,KAAKL,IAAM,MAAM+B,IAEtB,MAAMpC,EAASU,GAAAA,KAAKL,IAAK2D,IAAIZ,IACvB3B,EAASf,GAAAA,KAAKL,IAAK2D,IAAIuB,IAGtB,OADKrC,GAAOjD,EAAOwB,EAAQzB,EAEtC,EAEAwF,GAAAA,IAAAA,QAAA0+E,GAA2B,WACvB,IAAKxjF,GAAAA,KAAKU,IAAM,MAAMqlF,IAChB,MAAEoqD,UAAAA,EAAWC,UAAAA,GAAcpwI,GAAAA,KAAKc,IAChCC,EAAOf,GAAAA,KAAKU,IAAKglH,eAAe,eAChCtlH,EAAU,CACZ0oF,GAAY/nF,EAAMxB,GAClBkkF,GAAYnkF,GACZ,IAAIgD,GAAO,CACPmD,IAAK7B,GACLq1B,MAAO,CACH0vB,cAAe78C,GAAe,CAC1B,QAAS+9E,GACT,QAASjD,GACT,cAAeA,SAK/B,GAAI5mF,GAAAA,KAAKG,IAAY,CACX,MAAEkwI,YAAAA,EAAaC,kBAAAA,GAAsBtwI,GAAAA,KAAKc,IAChDV,EAAQ6F,KAAKwjF,GAAczpF,GAAAA,KAAKG,IAAYG,EAAsCM,GACtF,CAEO,QACX,EAEAsB,GAAAA,IAAAA,QAAAJ,GAAAA,SAAavC,GACT,IAAKS,GAAAA,KAAKL,IAAM,MAAM+B,IACjB1B,GAAAA,KAAAA,IAAK8D,IAAIlB,GAAiBrD,GAE/B,MAAMD,EAAOU,GAAAA,KAAKL,IAAK2D,IAAImkF,IACrB1mF,EAAWzB,EAAK6X,MAAMyhB,YAAY,CAAElB,QAAAA,IAC1Cp4B,EAAKgkC,YAAYviC,GAGXf,GADQ9B,KAAKyB,IAAK2D,IAAIu/E,IACtBvnC,MAAMt7C,GAAAA,KAAKL,IACrB,ECrHG,MAAMknF,GAAc,CAACnnF,GAA8BikF,aAAAA,MAChD,QAAU,CAACrjF,EAAcM,EAAU,IAAMlB,EAAa4D,IAAIG,GAAY,CAACnD,EAAOM,IAC9EG,EAAYrB,EAAa4D,IAAIy8E,GAAW,aAClCxgF,CAAAA;;;;;;;;;;;;;;;;;;;;4BAqBYwB;6BACCA;cACfrB,EAAa4D,IAAIR,GAAa;cAC9BpD,EAAa4D,IAAIR,GAAa;;;;;;;;qBAQvB/B;;gCAEWzB,EAAQ;;;;;;;;;;;KAlCxB,E7WQHwnF,GAAmBriF,EAAY,IAAIu/E,GAAiB,oBACpD1F,GAAc2F,EAAY,eAE1ByV,GAAiCh6F,IACpC,QAAgB,IAAIskF,GAC1B,SAAIt/E,OAAOoiF,GAAkBvnF,GAAeoF,OAAO25E,IAC5C,gBACG,EAAIn6E,KAAKm/E,IACT,QAAehkF,EAAIgE,IAAIu/E,IACvBziF,EAAUd,EAAIgE,IAAIw/E,IACxB/hF,EAAaojF,SAAQ,KACjB0C,GAAY9lF,EAAcX,EAA1B,UAGE,EAAI+D,KAAK+jF,IACf3oF,EAAcswI,QAAQvwI,GACtBA,EAAI8E,KAAKk6E,GANT,CALJ,E8WEE19E,GAAU,CAACtB,EAAoBC,KACjC,IAAKA,EAAa,SAClB,MAAQoH,KAAAA,EAAM2G,MAAAA,EAAO9E,GAAAA,EAAIuB,MAAAA,GAAUzK,EAAMw1B,UACzC,OAAI90B,IACST,EAAKqM,QAAQtM,EAAM02B,aAAer2B,EAAMqM,SAE9C1M,EAAMkQ,IAAIsC,aAAa1R,EAAMV,EAAIH,EAHxC,EAMSuF,GAAexC,GAAa,gBAC5BmhF,GAAwB,CACjC,CACI,CACIp6E,KAAM,SACNsoF,KAAM,OACNlsF,IAAK,OACL0rC,SAAW7xC,IACC8C,GAAK9C,EAAK6X,QAG1B,CACI9N,KAAM,SACNsoF,KAAM,OACNlsF,IAAK,OACL0rC,SAAW7xC,IACCymF,GAAKzmF,EAAK6X,SAI9B,CACI,CACI9N,KAAM,SACN3B,KAAM,UACNoR,QAAS,CACL,CAAEvV,GAAI,IAAKmE,KAAM,iBACjB,CAAEnE,GAAI,IAAKmE,KAAM,kBACjB,CAAEnE,GAAI,IAAKmE,KAAM,iBACjB,CAAEnE,GAAI,IAAKmE,KAAM,eAErBypC,SAAW7xC,IACP,MAAQ6X,MAAAA,GAAU7X,EACZc,EAAUb,EAAMuL,OAAOI,MAAM4xD,QACnC,IAAK18D,EAAgB,SACf,MAAAT,EAAgBD,GAAkBqgF,GAAa3/E,EAAS,CAAE0jB,MAAAA,GAAxBi8D,CAAiCxgF,GACzE,QACMD,EAAK6X,MAAM2d,qBAAqBmvD,OACnBtkF,EAAAA,IAAMA,EAAa,IAAMA,EAAa,GAFzD,EAKJ4wI,SAAWjxI,GAAQgX,OAAOhX,GAAM,CAAC,kBAAmBgX,OAAOhX,IAAO,CAAC,eAAgB,QAG3F,CACI,CACI+J,KAAM,SACNsoF,KAAM,OACNlsF,IAAK,aACLuP,OAAS1V,GAASsB,GAAQtB,EAAK6X,MAAO7X,EAAK6X,MAAMrM,OAAOkB,MAAMg9D,QAC9D73B,SAAW7xC,IAAUA,EAAK6X,MAAMrM,OAAOkB,MAAMg9D,QAEjD,CACI3/D,KAAM,SACNsoF,KAAM,SACNlsF,IAAK,eACLuP,OAAS1V,GAASsB,GAAQtB,EAAK6X,MAAO7X,EAAK6X,MAAMrM,OAAOkB,MAAMwkI,IAC9Dr/F,SAAW7xC,IAAUA,EAAK6X,MAAMrM,OAAOkB,MAAMwkI,IAEjD,CACInnI,KAAM,SACNsoF,KAAM,gBACNlsF,IAAK,sBACLuP,OAAS1V,GAASsB,GAAQtB,EAAK6X,MAAO7X,EAAK6X,MAAMrM,OAAOkB,MAAMykI,gBAC9Dt/F,SAAW7xC,IAAUA,EAAK6X,MAAMrM,OAAOkB,MAAMykI,iBAGrD,CACI,CACIpnI,KAAM,SACNsoF,KAAM,aACNlsF,IAAK,mBACL0rC,SAAW7xC,IACP,MAAQ6X,MAAAA,GAAU7X,EACZc,EAAOb,EAAMuL,OAAOI,MAAMwlI,YAChC,OAAKtwI,IACGk+E,GAAOl+E,EAAPk+E,CAAa/+E,EADrB,GAIR,CACI8J,KAAM,SACNsoF,KAAM,cACNlsF,IAAK,oBACL0rC,SAAW7xC,IACP,MAAQ6X,MAAAA,GAAU7X,EACZc,EAAOb,EAAMuL,OAAOI,MAAMylI,aAChC,OAAKvwI,IACGk+E,GAAOl+E,EAAPk+E,CAAa/+E,EADrB,GAIR,CACI8J,KAAM,SACNsoF,KAAM,WACNlsF,IAAK,mBACL0rC,SAAW7xC,IACP,MAAQ6X,MAAAA,GAAU7X,EACZc,EAAOb,EAAMuL,OAAOI,MAAM0lI,eAChC,OAAKxwI,IACGk+E,GAAOl+E,EAAPk+E,CAAa/+E,EADrB,GAIR,CACI8J,KAAM,SACNsoF,KAAM,WACNlsF,IAAK,eACL0rC,SAAW7xC,IACP,MAAQ6X,MAAAA,GAAU7X,EACZc,EAAOb,EAAMuL,OAAOI,MAAM2lI,UAChC,OAAKzwI,IACG0oF,GAAa1oF,EAAb0oF,CAAmBvpF,EAD3B,GAIR,CACI8J,KAAM,SACNsoF,KAAM,WACNlsF,IAAK,eACL0rC,SAAW7xC,IACP,MAAQ6X,MAAAA,GAAU7X,EACZc,EAAOb,EAAMuL,OAAOI,MAAM2lI,UAChC,OAAKzwI,IACGwD,GAAaxD,EAAbwD,CAAmBrE,EAD3B,IAKZ,CACI,CACI8J,KAAM,SACNsoF,KAAM,OACNlsF,IAAK,aACLuP,OAAS1V,GAASsB,GAAQtB,EAAK6X,MAAO7X,EAAK6X,MAAMrM,OAAOkB,MAAMi7D,OAElE,CACI59D,KAAM,SACNsoF,KAAM,QACNlsF,IAAK,eAET,CACI4D,KAAM,SACNsoF,KAAM,QACNlsF,IAAK,eAET,CACI4D,KAAM,SACNsoF,KAAM,OACNlsF,IAAK,sBAGb,CACI,CACI4D,KAAM,SACNsoF,KAAM,QACNlsF,IAAK,oBAET,CACI4D,KAAM,SACNsoF,KAAM,UACNlsF,IAAK,YAET,CACI4D,KAAM,SACNsoF,KAAM,SACNlsF,IAAKX,MC7KJ+kF,GAAS,CAACvqF,EAAmBC,EAAsBa,KACtD,QAAU+lB,SAASR,cAAc,UAC/BhmB,EAAAA,aAAa,OAAQ,UACvBL,EAAAA,aAAa6kF,SAAQ,KACvBxkF,EAAQmuC,UAAY,SAEpB,MAAM9tC,EAAcV,EAAM8vF,UAAS,EAAG1L,IAAAA,MAC5B,QAAU7+E,GAAWvF,EAAMy2F,cAC1B;;;;;;;;;;;;;;oCAciBj1F,EAAQ;yBACnBA,EAAQ;;;;;;;wCAOOA,EAAQ,YAAa;6BAChCA,EAAQ;;;;;;;;;;aAvBlB,IAoCPd,GACQL,EAAAA,UAAUolB,IAAI/kB,EADtB,IAKR,MAAMN,EAAQJ,EAAMy2F,aAAazyF,IAAIR,GAAWvD,EAAOoyF,MACvD,GAAIjyF,EAAO,CACD,MAAEu7D,MAAAA,EAAOzgD,IAAAA,GAAQ9a,EACnBM,IACQL,EAAAA,aAAa,aAAcK,GAC3BL,EAAAA,aAAa,QAASK,IAElCL,EAAQukB,YAAYnjB,EAAG,MAEfpB,EAAAA,aAAa,aAAcJ,EAAOoyF,MAClChyF,EAAAA,aAAa,QAASJ,EAAOoyF,MACrChyF,EAAQyR,YAAc7R,EAAOoyF,KAGzB,SAAAvsF,iBAAiB,aAAcpF,IACnCA,EAAEq5C,iBACFr5C,EAAE0vF,kBACFtvF,EAAIkD,IAAImB,IAAauU,KAAKzZ,EAAOkG,IAAKlG,EAAOuZ,QAF7C,IAIGnZ,CALC,ECvEC8pF,GAAWnqF,IACd,QAAW6mB,SAASR,cAAc,OAC/BpmB,EAAAA,UAAUwlB,IAAI,WACvB,MAAQgxE,aAAAA,GAAiBz2F,EACzB,SAAa6kF,SAAQ,KACjB,MAAMxkF,EAAeL,EAAM8vF,UAAS,EAAG1L,IAAAA,KAC5BhkF,CAAAA;;yBAEMU,EAAakD,IAAI5B,GAAW;oCACjBtB,EAAakD,IAAIZ,GAAY,CAAC;;;gBAKtD/C,GACSJ,EAAAA,UAAUwlB,IAAIplB,EADvB,IAIDJ,CAdP,ECmBS2oF,GAAS,CAAC5oF,EAAmBC,EAAsBa,EAAUT,K,MAChE,QAAkBwmB,SAASR,cAAc,OAC/BjmB,EAAAA,UAAUqlB,IAAI,wBAAyB,QAEjD,QAAWoB,SAASR,cAAc,UAC/B3lB,EAAAA,aAAa,OAAQ,UACrBA,EAAAA,UAAU+kB,IAAI,gBAAiB,QAC/B/kB,EAAAA,iBAAiB,aAAcM,I,MACpCA,EAAE+4C,iBACF/4C,EAAEovF,kBACchwF,EAAAA,UAAUoxI,OAAO,QAC3B,QAAcpxI,EAAgB29B,wBACvBj8B,EAAAA,MAAMy7B,KAAU98B,EAAY88B,OAAiB,OAAjB,IAAariB,IAAI+sC,oBAAA,EAAApnD,EAAek9B,wBAAwBR,OAAQ,GAA/E,KAC1B,MAAM17B,EAAS7B,EAAMy2F,aAAazyF,IAAI5B,GAAW,aACjDN,EAAaiZ,MAAM0F,IAAM,QAAQhgB,EAAY29B,OAAS,UAAUv8B,QAAhE,IAECxB,EAAAA,IAAIyF,iBAAiB,SAAS,KACf1F,EAAAA,UAAUqlB,IAAI,OAAd,IAGd,QAAgBoB,SAASR,cAAc,QAC/B5kB,EAAAA,UAAUgkB,IAAI,uBAC5BhkB,EAAcqQ,YAAc7R,EAAOmI,KAEnC,MAAM5G,EAAiB,WAAMi1F,aAAazyF,IAAIR,GAAW,mBAAlC,IAAgD0X,IAEvE9a,EAAgBwkB,YAAYlkB,GAC5BA,EAASkkB,YAAYnjB,GACjBD,IACeA,EAAAA,aAAa,cAAe,QAC3Cd,EAASkkB,YAAYpjB,IAGnB,QAAeqlB,SAASR,cAAc,OAC/BvkB,EAAAA,UAAU2jB,IAAI,sBACpBxlB,EAAAA,QAAQkH,SAASnG,IACd,QAAmB6lB,SAASR,cAAc,UAC/B5lB,EAAAA,aAAa,OAAQ,UACrBA,EAAAA,QAAQwD,GAAQjD,EAAOiD,GACxCxD,EAAiBqR,YAAc9Q,EAAOoH,KACrB3H,EAAAA,UAAUglB,IAAI,2BAC/B3jB,EAAa8iB,YAAYnkB,EAJR,IAORqB,EAAAA,iBAAiB,aAAcd,IACxC,MAAQiO,OAAAA,GAAWjO,EACnB,GAAIP,aAAkBgxI,mBAAqBhxI,EAAO4vF,QAAQpsF,GAAO,CAC7D,MAAMpC,EAAS5B,EAAOgxI,SAASxwI,EAAO4vF,QAAQpsF,GAAO5D,IAC9CQ,EAAKO,GAAWS,EAEnBf,EAAIkD,IAAImB,IAAauU,KAAK7Y,EAAKO,GAInBhB,EAAAA,UAAUqlB,IAAI,OAClC,KAGJrlB,EAAgBwkB,YAAY9iB,GAE5B,MAAQ20F,aAAAA,GAAiBz2F,EACzB,SAAa6kF,SAAQ,KACjB,MAAM7jF,EAAchB,EAAM8vF,UAAS,EAAG1L,IAAAA,MAC5B,QAAU,CAACvjF,EAAcO,EAAU,IAAMF,EAAa8C,IAAIZ,GAAY,CAACvC,EAAOO,IAC7E;;;;;kBAKDF,EAAa8C,IAAIpB,GAAa;kBAC9B1B,EAAa8C,IAAIpB,GAAa;;;;;;;;;;6BAUnBf,EAAQ,UAAW;;;;;kCAKdA,EAAQ,YAAa;;;;;;;;;;;;;;;;;kCAiBrBA,EAAQ;sBACpBX,EAAa8C,IAAIpB,QAAa;sBAC9B1B,EAAa8C,IAAIwI,QAAa;iDACHtL,EAAa8C,IAAI5B,GAAW;kDAC3BlB,EAAa8C,IAAI5B,GAAW;;;;;;;;;;;;;;6BAcjDP,EAAQ,UAAW;;;sCAGVA,EAAQ,YAAa;iCAC1BA,EAAQ;;;;;;;;;;;;;;;aA5DtB,IA6EPb,GACgBZ,EAAAA,UAAUqlB,IAAIzkB,EAD9B,IAKDZ,CArFP,ErNhFG,MAAM4jF,GAGT7jF,YACIF,EACQa,EACAT,EACRD,EACAM,GAHQ,aACA,WAIH,YAAST,EACT2B,KAAKH,GACFA,EAAGG,KAAKJ,IAAD,IACAA,EACHkjF,EAAG,KAAKgtD,QAAQlwI,EAAGd,SAG1BkB,KAAI,CAACH,EAAID,KACF,OAAMvB,EAAemG,OAAS,EACvB,SAEX,MAAMtE,EAA+B,CACjCiI,KAAM,UACN6O,MAAOnX,EAAGG,KAAKV,GAAMA,EAAEwjF,KAE3B,MAAO,IAAIjjF,EAAI,IAAKK,EAAe4iF,EAAG,KAAKgtD,QAAQ5vI,EAAepB,IAAlE,IAEHqmF,OACA,YAAO5/E,SAAS1F,GAAMrB,EAAKwkB,YAAYnjB,EAAEijF,IAClD,CAEOjgF,OAAOxE,GACL,YAAOkH,SAASrG,IACb,GAAgB,WAAhB,EAAOiJ,KAiBP,OAhBIjJ,EAAO4U,SACQ5U,EAAO4U,OAAOzV,GAElBa,EAAAA,EAAE6nC,UAAUljB,IAAI,UAEhB3kB,EAAAA,EAAE6nC,UAAUliC,OAAO,gBAG9B3F,EAAO+wC,WACU/wC,EAAO+wC,SAAS5xC,GAEtBa,EAAAA,EAAEylB,aAAa,WAAY,QAE3BzlB,EAAAA,EAAEqrC,gBAAgB,cAMjC,GAAgB,WAAhB,EAAOpiC,MACHjJ,EAAO+wC,SAAU,CACX,QAAW/wC,EAAO+wC,SAAS5xC,GAC3BG,EAASU,EAAO4jF,EAAE/+C,SAAS,GAC7BvlC,IACIC,GACOS,EAAAA,EAAE6nC,UAAUljB,IAAI,YAChBrlB,EAAAA,aAAa,WAAY,UAEzBU,EAAAA,EAAE6nC,UAAUliC,OAAO,YAC1BrG,EAAO+rC,gBAAgB,aAGnC,CAGgB,YAAhBrrC,EAAOiJ,OACUjJ,EAAO8X,MAAMwvE,OACzBhoF,GAAMA,EAAEwgB,aAAa,aAAexgB,EAAEuoC,UAAU/kB,SAAS,cAGnD9iB,EAAAA,EAAE6nC,UAAUljB,IAAI,YAEhB3kB,EAAAA,EAAE6nC,UAAUliC,OAAO,YAP9B,GAWZ,CAEQirI,QAAQzxI,EAAmDa,GACzD,MAAE6wI,MAAAA,EAAO1mD,IAAAA,GAAQ,KAEvB,OAAQhrF,EAAK8J,MAAA,IACJ,SACM,UAAO1J,EAAOJ,EAAMG,GAAG,IAE7B,SACD,OAAOwoF,GAAOvoF,EAAOJ,EAAMG,EAAKU,GAAI,IAEnC,kBAED,OAAOqpF,GAAQ9pF,GAG3B,EsN9FJ,MAAMmmF,GAAqB,EAAGorD,KAAAA,EAAMC,YAAAA,EAAaC,YAAAA,EAAaC,WAAAA,MAC1D1xI,EAAWukB,YAAY9jB,GACvBb,EAAYwG,SACZzG,EAAKyG,QAFL,EAKE+8E,GAA+B,EAAGouD,KAAAA,EAAMC,YAAAA,EAAaC,YAAAA,MAC3C7xI,EAAAA,aAAaD,EAAMc,EAAnB,EAGVqD,GAAWnE,IACb,IAAKA,EAAM,OAAO6mB,SAASiY,KAEvB,GAAgB,iBAAT9+B,EAAmB,CACpB,QAAK6mB,SAAS/D,cAAc9iB,GAC9B,UAEG6mB,SAASiY,IACpB,CAEO,UAGEypD,GAAc,CAACvoF,EAAUC,KAClC,IAAIa,EAAsC,KAC3BA,EAAAA,SAASulB,cAAc,OACzBvlB,EAAAA,UAAU2kB,IAAI,yBAErB,QAAOzlB,EAAIgE,IAAIxB,IAEfpC,EAAYH,EAAKib,IACjBxa,EAAayD,GAAQ9D,GACrBoB,EAAcrB,EAAU6nD,cAE9B,IAAKxmD,EACD,MAAMa,IAGC,OAAA5B,EAAAgK,aAAa5J,EAAcW,GACtCX,EAAa8jB,YAAYnjB,GAClBX,CAFI,EAKFgjF,GAAU,CACnB9jF,EACAC,EACAa,EACAT,EACAD,EAAwBojF,MAExB,IAAKnjF,EACD,MAAM6jF,IAGJ,QAAOr9D,SAASR,cAAc,OAC/B3lB,EAAAA,UAAU+kB,IAAI,iBAEnB,MAAMhkB,EAAYxB,EAAKib,KACfu7E,aAAAA,GAAiBz2F,EAEzBwB,EAAaqjF,SAAQ,KACX,QAAqB7kF,EAAM8vF,UAAS,IAC/BtuF,EAAawC,IAAI0gF,GAAgB,CAAC,QAEzCjkF,GACUgB,EAAAA,UAAUgkB,IAAIhlB,GAE5B,MAAMoB,EAAY7B,EAAM8vF,UAAS,EAAG1L,IAAAA,MAChC,MAAMhjF,EAASI,EAAawC,IAAIpB,QAAa,GACvCF,EAAYlB,EAAawC,IAAI0gF,GAAgB,CAAC,IAAK,SAoBlD,OAnBO7jF,CAAAA;+BACKW,EAAawC,IAAIs/E,GAAW;;;;;;kBAMzCliF;kBACAsB;;8BAEYlB,EAAawC,IAAIZ,GAAY,CAAC;;;;;;;;aASzC,IAEPvB,GACUA,EAAAA,MAAM,KAAKsF,SAAStG,GAAMH,EAAKioC,UAAUljB,IAAI5kB,IADvD,IAKF,QAAOC,EAAIkD,IAAIxB,IAEftB,EAAaiD,GAAQrC,GACrB8F,EAAcnG,EAAUwmD,cAE9B,IAAKrgD,EACD,MAAMtF,IAGC,UACPsvI,KAAAA,EACAC,YAAAA,EACAG,UAAAA,EACAD,WAAAA,EACAD,YAAAA,IAcG,CAACpxI,EAXW,KACP8lF,GAAAA,CACJorD,KAAAA,EACAC,YAAAA,EACAG,UAAAA,EACAD,WAAAA,EACAD,YAAAA,IAEGlqI,GAhBA,ElX9GFg8E,GAAU,IAAIL,GAAU,iBAUxBU,GAAakE,IAA8B,CAACnoF,EAAOC,KAC5D,MAAMa,EAAab,MAAAA,OAAAA,EAAAA,EAASgyI,WAE5B,IAAI5xI,EAAkC,KAClCD,EAA8B,KAC9BM,EAAqC,KACrCe,EAA0B,KAExB,QAAkB,CAACK,EAAUZ,KAC/B,MAAM0G,EAAiB3H,MAAAA,GAAAA,EAAS83B,OACA,mBAAnB93B,EAAQ83B,OACX93B,EAAQ83B,OAAOj2B,GACf7B,EAAQ83B,OACZosD,GAEF,GAACjjF,EAAWivC,SAShB,IALKzvC,IACaA,EAAAA,GAAYoB,EAAKZ,GAC3BY,EAAAA,IAAIwB,GAAY5C,KAGnBN,EAAM,CACD,MAACY,EAAOP,GAAeqjF,GAAQ9jF,EAAOkB,EAAYY,EAAKpB,EAAaI,GACnEV,EAAAA,EACPC,EAAa,KACT,MAAMwB,EAAcpB,IACNC,EAAAA,KACPN,EAAAA,KACGqB,EAAAA,KACGpB,EAAAA,KACTyB,EAAAA,IAAIwB,GAAYzB,EAJN,CAMtB,CAEKJ,IACDA,EAAU,IAAIuiF,GAAQp8E,EAAQ5H,EAAO8B,EAAK1B,EAAMc,GAAU,GAI3D,OACH0rD,SAAU,IAAM,CAACvoD,GAAUmB,IAAc,IAAM8hF,MAC/C4P,aAAc,CAACp1F,EAAGZ,IAwBP,CAvBQ,IAAIwC,GAAO,CACtByC,IAAKy9E,GACLrlD,KAAOv9B,IACHQ,EAAgBN,EAAKF,GACjBA,EAAWmvC,WACX1uC,MAAAA,GAAAA,EAASgD,OAAOzD,IAEb,CACHyD,OAAShE,IACLe,EAAgBN,EAAKF,GACrBA,EAAemvC,SACX1uC,MAAAA,GAAAA,EAASgD,OAAOhE,GAEHJ,MAAAA,GAAAA,GAJjB,EAOJimC,QAAS,KACQjmC,MAAAA,GAAAA,GAAAA,OApB9B,IA+BEklF,GAAOriF,GAAAA,OAAgB,CAAC+gF,OAvDrC,SAASiuD,GAAU9V,GACjB,MAAqB,iBAAPA,GAAyB,MAANA,GAA8B,IAAhBA,EAAGzoH,QAGpD,UAASw+H,GACPhlD,EACAilD,GAEA,QAAIA,GAA2C,WAAbjlD,IAId,YAAbA,GAAuC,SAAbA,CA0BnC,UAASklD,GAAajW,EAAagW,GACjC,GAAIhW,EAAGz+F,aAAey+F,EAAGkW,cAAgBlW,EAAG3+F,YAAc2+F,EAAGmW,YAAa,CACxE,IAAMx3H,EAAQ20B,iBAAiB0sF,EAAI,MACnC,OACE+V,GAAYp3H,EAAMy3H,UAAWJ,IAC7BD,GAAYp3H,EAAM03H,UAAWL,IAhBnC,SAAyBhW,GACvB,IAAMsW,EAbR,SAAyBtW,GACvB,IAAKA,EAAG/5G,gBAAkB+5G,EAAG/5G,cAAc6c,YACzC,YAGF,IACE,OAAOk9F,EAAG/5G,cAAc6c,YAAYyzG,YAEpC,CADA,MAAO3yI,GACP,YAKY4yI,CAbhB,CAagCxW,GAC9B,QAAKsW,IAKHA,EAAM/0G,aAAey+F,EAAGkW,cAAgBI,EAAMj1G,YAAc2+F,EAAGmW,YAU7DM,CAjBN,CAiBsBzW,EAIpB,SAWF,UAAS0W,GACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAqBA,OACGF,EAAmBL,GAClBM,EAAiBL,GAClBI,EAAmBL,GAAsBM,EAAiBL,EAAAA,EA6C1DI,GAAoBL,GAAsBO,GAAeL,GACzDI,GAAkBL,GAAoBM,GAAeL,EAE/CG,EAAmBL,EAAqBG,EA4C9CG,EAAiBL,GAAoBM,EAAcL,GACnDG,EAAmBL,GAAsBO,EAAcL,EAEjDI,EAAiBL,EAAmBG,EAAAA,CAAAA,CAAAA,SAAAA,GAM/BlkI,EAAiBuK,GAE/B,IAAM+5H,EAAsBzsH,OAK1B0sH,EAKEh6H,EALFg6H,WACAlwH,EAIE9J,EAJF8J,MACApN,EAGEsD,EAHFtD,OACAu9H,EAEEj6H,EAFFi6H,SACArB,EACE54H,EADF44H,2BAKIsB,EACgB,mBAAbD,EAA0BA,EAAW,SAAC5pI,GAAAA,OAAcA,IAAS4pI,CAAAA,EAEtE,IAAKvB,GAAUjjI,GACb,UAAUgnE,UAAU,kBAStB,IALA,IAAM09D,EAAmB9sH,SAAS8sH,kBAAoB9sH,SAASyU,gBAGzDs4G,EAAoB,GACtBxhD,EAAyBnjF,EACtBijI,GAAU9/C,IAAWshD,EAActhD,IAAS,CAKjD,IAHAA,EAASA,EAAOnqC,iBAGD0rF,EAAkB,CAC/BC,EAAOjtI,KAAKyrF,GACZ,KAKU,OAAVA,GACAA,IAAWvrE,SAASiY,MACpBuzG,GAAajgD,KACZigD,GAAaxrH,SAASyU,kBAMX,MAAV82D,GAAkBigD,GAAajgD,EAAQggD,IACzCwB,EAAOjtI,KAAKyrF,EA8ChB,KArCA,IAAMyhD,EAAgBN,EAAmBO,eACrCP,EAAmBO,eAAe71G,MAClCsqG,WACEwL,EAAiBR,EAAmBO,eACtCP,EAAmBO,eAAe11G,OAClCyB,YAGEm0G,EAAYltH,OAAOmtH,SAAWC,YAC9BC,EAAYrtH,OAAOstH,SAAWC,YAAAA,EAShCplI,EAAO8uB,wBANDu2G,EAAAA,EAARl2G,OACOm2G,EAAAA,EAAPt2G,MACKu2G,EAAAA,EAAL/zH,IACOg0H,EAAAA,EAAPj3G,MACQk3G,EAAAA,EAARh3G,OACMi3G,EAAAA,EAANp3G,KAIEq3G,EACQ,UAAVtxH,GAA+B,YAAVA,EACjBkxH,EACU,QAAVlxH,EACAoxH,EACAF,EAAYF,EAAe,EAC7BO,EACS,WAAX3+H,EACIy+H,EAAaJ,EAAc,EAChB,QAAXr+H,EACAu+H,EACAE,EAGAG,EAAqC,GAElCnqI,EAAQ,EAAGA,EAAQipI,EAAOxtI,OAAQuE,IAAS,CAClD,IAAM+nI,EAAQkB,EAAOjpI,GAAAA,EAWjB+nI,EAAM30G,wBANRK,EAAAA,EAAAA,OACAH,EAAAA,EAAAA,MACAxd,EAAAA,EAAAA,IACA+c,EAAAA,EAAAA,MACAE,EAAAA,EAAAA,OACAH,EAAAA,EAAAA,KAKF,GACiB,cAAfi2G,GACAgB,GAAa,GACbG,GAAc,GACdD,GAAgBX,GAChBU,GAAeZ,GACfW,GAAa/zH,GACbi0H,GAAgBh3G,GAChBi3G,GAAcp3G,GACdk3G,GAAej3G,EAGf,OAAOs3G,EAGT,IAAMC,EAAarlG,iBAAiBgjG,GAC9BsC,EAAatuE,SAASquE,EAAWE,gBAA2B,IAC5DC,EAAYxuE,SAASquE,EAAWI,eAA0B,IAC1DC,EAAc1uE,SAASquE,EAAWM,iBAA4B,IAC9DC,EAAe5uE,SAASquE,EAAWQ,kBAA6B,IAElEC,EAAsB,EACtBC,EAAuB,EAIrBC,EACJ,gBAAiBhD,EACZA,EAAsBx0G,YACtBw0G,EAAsBj1G,YACvBu3G,EACAI,EACA,EACAO,EACJ,iBAAkBjD,EACbA,EAAsBr0G,aACtBq0G,EAAsB/0G,aACvBu3G,EACAI,EACA,EAEN,GAAI3B,IAAqBjB,EAIrB8C,EADY,UAAVlyH,EACYsxH,EACK,QAAVtxH,EACKsxH,EAAcb,EACT,YAAVzwH,EACKwvH,GACZqB,EACAA,EAAYJ,EACZA,EACAmB,EACAI,EACAnB,EAAYS,EACZT,EAAYS,EAAcN,EAC1BA,GAIYM,EAAcb,EAAiB,EAI7C0B,EADa,UAAXv/H,EACa2+H,EACK,WAAX3+H,EACM2+H,EAAehB,EAAgB,EAC1B,QAAX39H,EACM2+H,EAAehB,EAGff,GACbkB,EACAA,EAAYH,EACZA,EACAmB,EACAI,EACApB,EAAYa,EACZb,EAAYa,EAAeN,EAC3BA,GAMJiB,EAAc1sI,KAAKS,IAAI,EAAGisI,EAAcrB,GACxCsB,EAAe3sI,KAAKS,IAAI,EAAGksI,EAAezB,OACrC,CAIHwB,EADY,UAAVlyH,EACYsxH,EAAcn0H,EAAMy0H,EACf,QAAV5xH,EACKsxH,EAAcl3G,EAAS43G,EAAeK,EACjC,YAAVryH,EACKwvH,GACZryH,EACAid,EACAU,EACA82G,EACAI,EAAeK,EACff,EACAA,EAAcN,EACdA,GAIYM,GAAen0H,EAAM2d,EAAS,GAAKu3G,EAAkB,EAInEF,EADa,UAAXv/H,EACa2+H,EAAet3G,EAAOy3G,EACjB,WAAX9+H,EACM2+H,GAAgBt3G,EAAOU,EAAQ,GAAKy3G,EAAiB,EAChD,QAAXx/H,EACM2+H,EAAer3G,EAAQ43G,EAAcM,EAGrC5C,GACbv1G,EACAC,EACAS,EACA+2G,EACAI,EAAcM,EACdb,EACAA,EAAeN,EACfA,GAvCC,IA2CGl1G,EAA0BqzG,EAA1BrzG,WAAYE,EAAcmzG,EAAdnzG,UAkBpBq1G,GAAer1G,GAhBfi2G,EAAc1sI,KAAKS,IACjB,EACAT,KAAKC,IACHw2B,EAAYi2G,EACZ9C,EAAMJ,aAAel0G,EAASu3G,KAalCd,GAAgBx1G,GAVhBo2G,EAAe3sI,KAAKS,IAClB,EACAT,KAAKC,IACHs2B,EAAao2G,EACb/C,EAAMH,YAAct0G,EAAQy3G,IASlCZ,CAAAA,EAAanuI,KAAK,CAAEy1H,GAAIsW,EAAOjyH,IAAK+0H,EAAaj4G,KAAMk4G,GAGzD,QAAOX,CAAAA,CmXlfT,SAASc,GAAgBp8H,GACvB,OAAOA,IAAY7H,OAAO6H,IAA4C,IAAhC7H,OAAOmoB,KAAKtgB,GAASpT,MAC5D,CAED,SAASyvI,GAAgBC,EAASC,QACf,IAAbA,IACFA,EAAW,QAGb,IAAIC,EAAmB,mBAAoBnvH,SAASiY,KAAK/jB,MACzD+6H,EAAQ3uI,SAAQ,SAAU8uI,GACxB,IAAI7Z,EAAK6Z,EAAK7Z,GACV37G,EAAMw1H,EAAKx1H,IACX8c,EAAO04G,EAAK14G,KAEZ6+F,EAAG70E,QAAUyuF,EACf5Z,EAAG70E,OAAO,CACR9mC,IAAKA,EACL8c,KAAMA,EACNw4G,SAAUA,KAGZ3Z,EAAG78F,UAAY9e,EACf27G,EAAG/8F,WAAa9B,EAEnB,GACF,CAED,SAAS24G,GAAW18H,GAClB,OAAgB,IAAZA,EACK,CACL8J,MAAO,MACPpN,OAAQ,WAIR0/H,GAAgBp8H,GACXA,EAGF,CACL8J,MAAO,QACPpN,OAAQ,UAEX,CAED,SAASuhB,GAAexoB,EAAQuK,GAC9B,IAAI28H,EAAmBlnI,EAAOmnI,aAAennI,EAAOoT,cAAciZ,gBAAgB1X,SAAS3U,GAE3F,GAAI2mI,GAAgBp8H,IAAwC,oBAArBA,EAAQu8H,SAC7C,OAAOv8H,EAAQu8H,SAASI,EAAmBE,GAAQpnI,EAAQuK,GAAW,IAGxE,GAAK28H,EAAL,CAIA,IAAIG,EAAiBJ,GAAW18H,GAChC,OAAOq8H,GAAgBQ,GAAQpnI,EAAQqnI,GAAiBA,EAAeP,SAHtE,CAIF,CAED,IC9DIQ,GD8DJ,MC5DI//G,GAAM,WAKR,OAJK+/G,KACHA,GAAc,gBAAiBzvH,OAASi3F,YAAYvnF,IAAInc,KAAK0jG,aAAexnF,KAAKC,KAG5E+/G,IACR,EAED,SAASnqH,GAAKjR,GACZ,IAAImb,EAAOE,KACPggH,EAAU1tI,KAAKC,KAAKutB,EAAOnb,EAAQs7H,WAAat7H,EAAQu7H,SAAU,GAClEr3I,EAAQ8b,EAAQw7H,KAAKH,GACrBI,EAAWz7H,EAAQikB,QAAUjkB,EAAQ/X,EAAI+X,EAAQikB,QAAU//B,EAC3Dw3I,EAAW17H,EAAQmkB,QAAUnkB,EAAQvY,EAAIuY,EAAQmkB,QAAUjgC,EAC/D8b,EAAQ27H,OAAOF,EAAUC,GAErBD,IAAaz7H,EAAQ/X,GAAKyzI,IAAa17H,EAAQvY,EACjDk3F,uBAAsB,WACpB,OAAO1tE,GAAKjR,EACb,IAEDA,EAAQ47H,IAEX,CAED,SAASC,GAAa5a,EAAIh5H,EAAGR,EAAG8zI,EAAUC,EAAMI,GAW9C,IAAIE,EACA73G,EACAE,EACAw3G,OAba,IAAbJ,IACFA,EAAW,UAGA,IAATC,IACFA,EAAO,SAAc12I,GACnB,OAAO,IAAMA,EAAIA,EAAIA,EAAIA,EAAIA,CAC9B,GAOHg3I,EAAa7a,EACbh9F,EAASg9F,EAAG/8F,WACZC,EAAS88F,EAAG78F,UAEZu3G,EAAS,SAAgB1zI,EAAGR,GAC1Bw5H,EAAG/8F,WAAav2B,KAAKy9D,KAAKnjE,GAC1Bg5H,EAAG78F,UAAYz2B,KAAKy9D,KAAK3jE,EAC1B,EAEDwpB,GAAK,CACH6qH,WAAYA,EACZH,OAAQA,EACRL,UAAWjgH,KACX4I,OAAQA,EACRE,OAAQA,EACRl8B,EAAGA,EACHR,EAAGA,EACH8zI,SAAUA,EACVC,KAAMA,EACNI,GAAIA,GAEP,CAED,IAAIG,GAAqB,SAA4B19H,GACnD,OAAOA,IAAYA,EAAQu8H,UAAiC,WAArBv8H,EAAQu8H,QAChD,EAED,SAASxuF,GAAOt4C,EAAQuK,GACtB,IAAI29H,EAAY39H,GAAW,CAAC,EAE5B,OAAI09H,GAAmBC,GACd1/G,GAAexoB,EAAQ,CAC5BqU,MAAO6zH,EAAU7zH,MACjBpN,OAAQihI,EAAUjhI,OAClBs9H,WAAY2D,EAAU3D,WACtBC,SAAU0D,EAAU1D,SACpBsC,SAAU,SAAkBD,GAC1B,OAAO7wI,QAAQC,IAAI4wI,EAAQv0I,QAAO,SAAUotE,EAASsnE,GACnD,IAAI7Z,EAAK6Z,EAAK7Z,GACV7+F,EAAO04G,EAAK14G,KACZ9c,EAAMw1H,EAAKx1H,IACX22H,EAAYhb,EAAG/8F,WACfg4G,EAAWjb,EAAG78F,UAElB,OAAI63G,IAAc75G,GAAQ85G,IAAa52H,EAC9BkuD,EAGF,GAAG7nE,OAAO6nE,EAAS,CAAC,IAAI1pE,SAAQ,SAAUuM,GAC/C,OAAOwlI,GAAa5a,EAAI7+F,EAAM9c,EAAK02H,EAAUT,SAAUS,EAAUR,MAAM,WACrE,OAAOnlI,EAAQ,CACb4qH,GAAIA,EACJ7+F,KAAM,CAAC65G,EAAW75G,GAClB9c,IAAK,CAAC42H,EAAU52H,IAEnB,GACF,KACF,GAAE,IACJ,IAIExb,QAAQuM,QAAQimB,GAAexoB,EAAQuK,GAC/C,CAED,IAAI89H,GAAuB/vF,GAC3B,MzKhGA,MAAMiiC,GAAY,CAACxpF,GAA8BokF,IAAAA,MACvC,QAAU,CAACtjF,EAAcT,EAAU,IAAML,EAAagE,IAAIpB,GAAY,CAAC9B,EAAOT,IAC7E;;;;;;;;;;2BAUgBL,EAAagE,IAAIg7E,GAAW;;;;;;;yBAO9B5+E,EAAQ,UAAW;;;;;;;;;8BASdA,EAAQ,YAAa;;;6BAGtBA,EAAQ;;;;KA7B1B,EAoCEqmF,GAAc,CAACzmF,EAA4BC,KAC9C,QAAU,CAACa,EAAcT,EAAU,IAAML,EAAagE,IAAIpB,GAAY,CAAC9B,EAAOT,IAEpF,OAAOJ,EAAQmkF,GAAAA;;;;yBAIMpkF,EAAagE,IAAI0gF,GAAW;;sBAE/BtkF,EAAQ;;UAEpBJ,EAAagE,IAAIwB,QAAa;UAC9BxF,EAAagE,IAAId,QAAa;UAC9BlD,EAAagE,IAAItB,QAAgB;;;;;;UAMjC8mF,GAAUxpF,EAAcC;KAhB9B,E0K5CSikF,GAAiB,CAAClkF,EAAmBC,KACxC,QAAM4mB,SAASR,cAAc,OAC/B,SAAAE,aAAa,OAAQ,WACrBnmB,EAAAA,aAAa,WAAY,MACvBJ,EAAAA,aAAa6kF,SAAQ,KACjB,QAAQ7kF,EAAM8vF,UAAUzvF,GAAYomF,GAAYzmF,EAAMy2F,aAAcp2F,KAEtES,GACIV,EAAAA,UAAUqlB,IAAI3kB,EADlB,IAKJV,EAAAA,UAAUqlB,IAAIzlB,EAAMw2F,aAAa,CAAC,EAAGv2F,GAAY,QAE9CG,CAZH,EAkBKS,GAAqB,CAC9Bb,EACAC,EACAG,EACAU,K,MAEM,QAAgB,0BAASy2I,eAAT,EAA0B,OAE1C72I,EAAMmmB,SAASR,cAAc,OAC/B3lB,EAAAA,aAAa,OAAQ,UACrBA,EAAAA,UAAU+kB,IAAI,uBAElB,MAAMjkB,EAAWxB,EAAagE,IAAIR,GAAWpD,GAE7C,IAAKoB,EACD,MAAM+D,EAAYnF,GAGhB,QAAWymB,SAASR,cAAc,QACxC,SAASvU,YAAc7R,EACvBwB,EAAS+sC,UAAYnuC,EAEjBK,EAAAA,YAAYc,EAAS0Z,KACzBxa,EAAIkkB,YAAYnjB,GAETf,CANP,EAoBEikF,GAAmB,CAAC3kF,EAAOC,KAC7B,MAAQu1B,UAAAA,GAAcx1B,GACdgO,MAAAA,GAAU5N,EACZC,EAAKL,EAAM+rB,GAAGuF,YAAYxwB,EAAMwI,QAASxI,EAAM+G,KACrD,kBAAWxH,IACJ,CADP,EAISyC,GACR9C,GACD,CAACC,EAAOG,EAAUU,KACVA,IACQ6jF,GAAAA,EAAOvkF,GACDJ,MAEX,GC1DFmF,GAAiB,CAACnF,EAAUC,EAAQ,OAC7C,MAAQ2L,MAAAA,GAAU5L,EAAIgE,IAAIhB,IACpBlC,EAA0E,CAC5E,CACImD,GAAI,KACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,gBAAiB,MACnE+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,kBAAmB,GAC5D89H,QAAS,CAAC,KAAM,iBAChBtgI,SAAU,WAEd,CACIjT,GAAI,KACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,iBAAkB,MACpE+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,kBAAmB,GAC5D89H,QAAS,CAAC,KAAM,kBAChBtgI,SAAU,WAEd,CACIjT,GAAI,KACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,gBAAiB,MACnE+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,kBAAmB,GAC5D89H,QAAS,CAAC,KAAM,iBAChBtgI,SAAU,WAEd,CACIjT,GAAI,aACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,cAAe,cACjE+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,oBACzC89H,QAAS,CAAC,cAAe,MACzBtgI,SAAU,eAEd,CACIjT,GAAI,cACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,eAAgB,eAClE+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,qBACzC89H,QAAS,CAAC,eAAgB,MAC1BtgI,SAAU,gBAEd,CACIjT,GAAI,WACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,YAAa,YAC/D+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,oBACzC89H,QAAS,CAAC,YAAa,QACvBtgI,SAAU,kBAEd,CACIjT,GAAI,QACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,QAAS,SAC3D+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,eACzC89H,QAAS,CAAC,SACVtgI,SAAU,SAEd,CACIjT,GAAI,aACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,QAAS,SAC3D+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,oBACzC89H,QAAS,CAAC,QAAS,cACnBtgI,SAAU,cAEd,CACIjT,GAAI,QACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,QAAS,SAC3D+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,eACzC89H,QAAS,CAAC,SACVtgI,SAAU,SAEd,CACIjT,GAAI,OACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,aAAc,QAChE+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,qBACzC89H,QAAS,CAAC,QACVtgI,SAAU,SAEd,CACIjT,GAAI,UACJiX,IAAKra,GAAmBb,EAAIgE,IAAInC,IAAkB,cAAe,WACjE+tF,QAAS,IAAM5vF,EAAIgE,IAAIhD,IAAa0Y,KAAK,YACzC89H,QAAS,CAAC,UAAW,MACrBtgI,SAAU,OAIZ7W,EAAYJ,EAAMyG,MAAM,GAAGm7H,oBAE1B,SACFt0F,QAAQ7sC,KAAaN,EAAMM,EAAOwW,WAAaxW,EAAO82I,QAAQv8H,MAAMzZ,GAAYA,EAAQiyD,SAASpzD,OACjGuB,KAAI,EAAG41I,QAAAA,EAAStgI,SAAAA,KAAazV,KAAaA,GAFxC,EAKE6C,GAAyBtE,GAC3B,EAAGiG,QAAAA,EAASwxI,WAAAA,KACVr3I,EAEAH,EAIDA,EAAQyuG,WAAW,KACA,MAAZzuG,EACD,CACI0wF,YAAa,oBACbmlD,QAAS3wI,GAAenF,IAE5B,CACI81I,QAAS3wI,GAAenF,EAAKC,IAIpC,KAdI,CAAE0wF,YAAa,uCAHF,KC1G1BjtF,GAAmB,CAAC1D,GAA8BokF,IAAAA,MAC9C,QAAU,CAAC/jF,EAAcK,EAAU,IAAMV,EAAagE,IAAIpB,GAAY,CAACvC,EAAOK,IAC9EI,EAAad,EAAagE,IAAIg7E,GAAW,cAExC;;;;;2BAKgBl+E;;qBAENV,EAAQ,UAAW;;;;;;KAP7B,EAgBLqgF,GAAmB,CAACzgF,GAAmBokF,IAAAA,KAAmBnkF,CAAAA;;;;EAMnDkoF,GAAc,CAACnoF,EAAgBC,KAAjB,CAEnBopD,cAAe,CAACjpD,EAAeU,MACvB,EAAO42I,aAGL,aAAiBC,iBAIlB,CAAC,UAAW,YAAa,SAASlkF,SAAS3yD,EAAMqF,MAM1D04C,YAAcz+C,IACJ,QAAYoC,IAAe,EAAGuH,KAAAA,KAAyB,cAAdjI,EAAKvB,MAAlCiC,CAAwDpC,EAAMo1B,WAC1En1B,EAAeD,EAAMg4B,QAAQr0B,MAC9BjC,GAAgD,qBAAzCA,EAAiCqE,MAEvCzF,EAA6BL,MAAAA,OAAAA,EAAAA,EAAcw5B,SAASz5B,GAOtD,GANe,MAAfM,GAAuBA,EAAYqD,KAAK3D,EAAMo1B,UAAUnuB,KAAMjH,EAAMo1B,UAAUtsB,IAAI9C,OAAS,IAM1FtF,GACDA,EAAU+I,KAAK/B,WAAa,GAC5B1H,EAAMo1B,UAAUxnB,MAAMO,eAAiBzN,EAAU+I,KAAKiI,YAAY1L,QACjEtF,EAAU+I,KAAKQ,YAAsD,SAAxCvJ,EAAU+I,KAAKQ,WAAWN,KAAKxJ,KAE7D,SAAOs9C,QACA,KAGX,MAAQ8yC,YAAAA,EAAamlD,QAAAA,GAAY91I,EAAOyE,OAAO,CAC3Csb,WAAY3f,EAAMo1B,UAAUxnB,MAAMnE,KAAKzJ,EAAMo1B,UAAUxnB,MAAME,MAAQ,GACrEupI,WAA4C,IAAhCr3I,EAAMo1B,UAAUxnB,MAAME,MAClCjI,QAASnF,EAAU+I,KAAKiI,YACxB+F,MAAAA,IAGJ,IAAKrW,EACM,YAGL,QAAmB,CAACM,EAAcR,KACpC,MAAMF,EAAMN,EAAU+G,IACf,OAAA82C,GAAA,OAAqBv+C,EAAM8P,IAAK,CACnCqzE,GAAW15E,KAAKzI,EAAKA,EAAMN,EAAU+I,KAAKvB,SAAU,CAChDykC,MAAOzrC,EAAUisC,QAAQjqC,GAAMA,IAAGvB,KAAK,KACvC,YAAaD,KAHd,EAQLM,EAAanC,EAAM6vF,UAAUhuF,GAAY4B,GAAiBzD,EAAMw2F,aAAc30F,KAC9EZ,EAAajB,EAAM6vF,UAAUhuF,GAAY2+E,GAAiBxgF,EAAMw2F,aAAc30F,KAEpF,OAAIL,EAAQ2E,OACD3F,EAAiBe,EAAa,CAACY,EAAYlB,EAAY,aAAc,aAGzET,EAAiBe,EAAa,CAACY,EAAY,cAJlD,IClFCohF,GAAmBxjF,IAAD,CAC3BiE,GAAIjE,EAAOiE,GACXygF,EAAG1kF,EAAOkb,IACV00E,QAAS9sF,GAAqB9C,EAAO4vF,WCVnCzF,GAAkB,MAEhBwG,YAAa,KACbmlD,QAAS,KAMJ3xD,GAAgBnkF,IACzB,MAAMC,EAAYkqF,KAEX,OACHnmF,IAAK,IAAM/D,EACX49C,MAAO,KACH59C,EAAU0wF,YAAc,KACxB1wF,EAAU61I,QAAU,EADpB,EAGJrxI,OAASrE,I,QACC,QAASJ,EAAQI,GACb,SAAAuwF,YAAc,0BAAQA,aAAR,EAAuB,KAC/C1wF,EAAU61I,SAAmB,0BAAAA,SAAA,EAAW,IAAIl0I,IAAI4hF,IACzCvjF,CAFG,EAIdy3I,QAAS,IAAmC,IAA7Bz3I,EAAU61I,QAAQ1vI,OAZ9B,ECXEmkF,GAAiB,CAACvqF,EAAgBC,EAA8BG,KACnE,MAAE01I,QAAAA,GAAY91I,EAAOgE,MAEvB,IAAClD,EAAQsF,OACO,SAAAuiC,UAAUljB,IAAI,SACvB,EAQX,IALgBxlB,EAAAA,WAAWkH,SAASzG,IAC1BA,EAAAA,oBAAoB,aAAcN,EAAUw3I,YAC5Cl3I,EAAAA,oBAAoB,aAAcN,EAAUy3I,WAD5C,IAIH53I,EAAgBoK,YACnBpK,EAAgBoK,WAAW5D,SAGvB3F,EAAAA,SAAQ,EAAG4jF,EAAAA,MACbhkF,EAAAA,UAAU+F,OAAO,UACjB/F,EAAAA,iBAAiB,aAAcN,EAAUw3I,YACzCl3I,EAAAA,iBAAiB,aAAcN,EAAUy3I,YAC3C53I,EAAgB2kB,YAAYlkB,EAH1B,IAMUT,EAAAA,UAAUwG,OAAO,QAEjC,MAAMpG,EAASS,EAAQ,GACvB,OAAIT,IACOA,EAAAA,EAAEsoC,UAAUljB,IAAI,UACvBq0E,uBAAsB,KAClBx3F,GAAejC,EAAOqkF,EAAG,CACrB8uD,WAAY,YACZlwH,MAAO,UACPpN,OAAQ,WAHZ,MAQD,CAXP,EC9BS0yE,GAAqB,KAC9B,IAAI5oF,GAAY,EAET,OACH83I,OAAQ,IAAM93I,EACd4tC,KAAM,KACU5tC,GAAAA,CAAAA,EAEhB+3I,OAAQ,KACQ/3I,GAAAA,CAAAA,EANb,EAYEgkF,GAAmBhkF,GAA+B,KAC3DA,EAAa+3I,QAAb,EAGSvxD,GAAmB,CAACxmF,EAAgBC,IAAgCG,IAC7E,GAAIH,EAAa63I,SAAU,OACrB,MAAEhC,QAAAA,GAAY91I,EAAOgE,MACrB3D,EAASS,EAAQoK,WAAWzJ,GAAMA,EAAEijF,EAAE/7C,UAAU/kB,SAAS,YACzDljB,EAAUI,EAAQT,GACpBK,GAAWL,GAAU,GACbK,EAAAA,EAAEioC,UAAUliC,OAAO,UAE/B,MAAQwI,OAAAA,GAAW7O,EACKoB,aAAAA,aACjBA,EAAAA,UAAUikB,IAAI,SADG,EAIf8iE,GAAmB,IAAOvoF,IACnC,MAAQiP,OAAAA,GAAWjP,EACKC,aAAAA,aACjBA,EAAAA,UAAUwG,OAAO,SADA,EAIfq9E,GACT,CAAC9jF,EAAgBC,EAAkBG,IAClCU,IACG,MAAQmO,OAAAA,GAAWnO,EAEnB,KADwBT,aAAAA,eACnBJ,EAAM,OAEX,MAAMS,EAAO,KACTI,EAAEsvF,kBACFtvF,EAAEi5C,gBADF,GAII+7F,QAAAA,GAAY91I,EAAOgE,MAErBvC,EAAKkQ,OAAO7N,OAAOtC,GAASuC,MAAK,EAAG2gF,EAAAA,KAAQjkF,EAAEmjB,SAASvjB,KAC7D,IAAKoB,EAAI,CACL,GAAIzB,EAAO03I,UAAW,OAMtB,OAJA13I,EAAO69C,QACSz9C,EAAAA,UAAUqlB,IAAI,aACzB/kB,GAGT,CAEKA,IACLe,EAAGmuF,QAAQ3vF,EAAK4X,MAAO5X,EAAKmyC,SAAUnyC,EADjC,EAIA8jF,GACT,CAAC/jF,EAAgBC,EAAkBG,EAA8BU,IAAgCT,IAC7F,KAAmBA,aAAAA,eAAgB,OAC9BS,EAAag3I,UAAUh3I,EAAa8sC,OAEzC,MAAQznC,IAAAA,GAAQ9F,EAEZ,GADAL,EAAO03I,YACN,CAAC,YAAa,UAAW,QAAS,UAAUjkF,SAAS/yD,GAAM,OAE1D,MAAEo1I,QAAAA,GAAY91I,EAAOgE,MAEvB,MAASxC,EAAQ0J,WAAU,EAAGw5E,EAAAA,KAAQxjF,EAAEynC,UAAU/kB,SAAS,YAC3DniB,EAAS,IAAYA,EAAAA,GAEnB,QAAcP,IAChB,MAAMY,EAAUN,EAAQC,GAClBH,EAAQE,EAAQN,IACjBY,IAAYR,IACTQ,EAAAA,EAAE6mC,UAAUliC,OAAO,UACrBnF,EAAAA,EAAEqnC,UAAUljB,IAAI,UACtBnjB,GAAehB,EAAMojF,EAAG,CACpB8uD,WAAY,YACZlwH,MAAO,UACPpN,OAAQ,YANR,EAUR,GAAY,cAARxV,EAAqB,CACrB,MAAMQ,EAAOO,IAAWD,EAAQ4E,OAAS,EAAI,EAAI3E,EAAS,EAG1D,YADAhB,EAAWS,EAEf,CAEA,GAAY,YAARR,EAAmB,CACnB,MAAMQ,EAAkB,IAAXO,EAAeD,EAAQ4E,OAAS,EAAI3E,EAAS,EAG1D,YADAhB,EAAWS,EAEf,CAEA,GAAY,WAARR,EAAkB,CAClB,GAAIV,EAAO03I,UAAW,OAItB,OAFA13I,EAAO69C,aACSz9C,EAAAA,UAAUqlB,IAAI,OAElC,CAEA,MAAMrjB,EAAUZ,EAAQC,IACnBW,IACLA,EAAQwtF,QAAQ3vF,EAAK4X,MAAO5X,EAAKmyC,SAAUnyC,GACnCmC,EAAAA,EAAEumC,UAAUliC,OAAO,UAFvB,EC1GCm9E,GAAsB,CAAC5jF,EAAkBC,KAClDoE,GAAsBrE,EAAMC,GAAiB,CAACG,EAAUU,EAAQT,KAC5D,MAAMK,EAAUT,EAAgBgoD,cAChC,IAAKvnD,EACD,MAAM4mF,IAGN,MAAOlnF,EAASm9B,KAAOl9B,EAAOk9B,KAC9B97B,EAAMrB,EAASs9B,OAASr9B,EAAOogB,IAAM,GAAK/f,EAAQ6+B,UAMtD,GAJI/9B,EAAO,IACAA,EAAAA,GAGPnB,EAAO+9B,OAAS/9B,EAAOogB,IAAMrgB,EAASs9B,OAAS58B,EAAOs9B,OAAQ,CACxD,QAAYh+B,EAASqgB,IAAMpgB,EAAOogB,IAAM3f,EAAOs9B,OAAS,GAAK19B,EAAQ6+B,UACvE9+B,EAAY,IACNgB,EAAAA,EAEd,CACO,OAACA,EAAKD,EAAN,GAnBX,EAyBSyjB,GAAa,CACtBjlB,EACAC,EACAG,EACAU,EACAT,KAEM,QAAUJ,EAAKib,IAAI6E,WACzB,IAAKrf,EAAS,MAAO,CAAC,EAEhB,QAAkBwjF,GAAe9jF,EAAOU,GACxCW,EAAemnF,KACrBloF,EAAQkkB,YAAYpjB,GAEd,QAAawiF,GAAgBviF,GAC7BW,EAAa0hF,GAAY9jF,EAAQC,EAAMuB,GACvCN,EAAW6iF,GAAc/jF,EAAQC,EAAMuB,EAAiBC,GACxDK,EAAc0kF,GAAiBxmF,EAAQyB,GACvCH,EAAcinF,KAEZ,SAAAziF,iBAAiB,YAAarF,GAC9BC,EAAAA,iBAAiB,YAAa0B,GAC9B1B,EAAAA,iBAAiB,UAAWQ,GAE7B,CACHuD,OAASrD,KACQmpF,GAAevqF,EAAQwB,EAAiB,CACjDo2I,WAAY91I,EACZ+1I,WAAYv2I,KAKhBjB,EAAae,EAAMI,EAFf,EAKR8kC,QAAS,KACG5lC,EAAAA,oBAAoB,YAAaD,GACjCC,EAAAA,oBAAoB,YAAa0B,GACjC1B,EAAAA,oBAAoB,UAAWQ,GACvCM,EAAgBiF,QAHR,EAjBR,ECvDCw9E,GAAM,iBAENiB,GAAoB,CAC7BllF,EACAC,EACAG,EACAU,KAEM,MAAAT,EAAS8jF,GAAalkF,GAE5B,OAAO,IAAImD,GAAO,CACd+C,IAAK,IAAIqG,GAAUy3E,IACnBtqD,MAAOwuD,GAAY9nF,EAAQL,GAC3Bu+B,KAAO79B,GAASukB,GAAW5kB,EAAQK,EAAMV,EAAOI,EAAWU,IAH/D,E7XDSy5B,GAAc3yB,IAA8B,CAAC5H,EAAOC,K,QACvD,QAAc,0BAAS83B,QAAT,EAAmBzzB,GACjCxD,EAAe,0BAASk3I,cAAT,EAAyBp0D,GAEvC,OACHsT,aAAc,CAAC11F,EAAGC,KACR,QAASrB,EAAYqB,GAI3B,MAAO,CAFQyjF,GAAkBllF,EAAOS,EAAQ,iBAAkBK,GAElE,EAND,IAWE6kF,GAAQxhF,GAAAA,OAAgB,CAACo2B,O8XvBzB,GAAU,CAACv6B,EAA0BC,KAC9C,IAAKA,EACM,SAEL,MAAEoH,KAAAA,EAAM6B,GAAAA,GAAOlJ,EAAYw1B,UAE1B,OAAAx1B,EAAYkQ,IAAIsC,aAAapS,EAAMA,IAASC,EAAKA,EAAK,EAAIA,EAAIJ,EAA9D,EAGEsF,GAAmBvF,IAC5B,MAAQw1B,UAAAA,GAAcx1B,EACtB,OAAIC,aAAqB4B,MACR7B,EAAYkQ,IAAIzG,YAAYxJ,EAAUoH,KAAMpH,EAAUiJ,GADvE,EAUSo6E,GAAiBtjF,GAC1BwtC,QAAQizC,IAAgBxgF,KAAWA,EAAK8J,KAAK9H,KAAKzB,MAA1CigF,CAAgDzgF,EAAYw1B,YAE3DxyB,GAAsB,CAAChD,EAA0BC,KACzDsF,GAAgBvF,IAAgBsjF,GAActjF,IAAgBoB,GAAQpB,EAAaC,GNL3Ee,GAAmB,CAAChB,EAAYC,EAAiBG,EAAiBC,KAA/C,CAC5BgyF,KAAAA,EACA4lD,QAAAA,EACAC,SAAU,IAAOp3I,GAAqBkC,GAAoBlC,EAAK+W,MAAOxX,GACtE83I,SAAU,IAAOr3I,GAAqBM,GAAQN,EAAK+W,MAAOzX,GAC1Dg4I,YAAa,IAAOt3I,KAAuBV,KAAUU,EAAK+W,MAAMrM,OAAOkB,MAAMtM,EAAKG,QAGzEgjF,GAAkBvjF,IAC3B,MAAMC,EAAQD,EAAIgE,IAAIpB,IAAW8J,MAC1B,OACH1L,GAAiB,OAAQ,aAAcf,EAAMypE,QAC7C1oE,GAAiB,SAAU,eAAgBf,EAAMixI,IACjDlwI,GAAiB,gBAAiB,sBAAuBf,EAAMkxI,gBAC/DnwI,GAAiB,OAAQ,mBAAoBf,EAAMo4I,aACnDr3I,GAAiB,OAAQ,aAAcf,EAAM0nE,MAL1C,EAgBE2f,GAAY,CAACtnF,EAAUC,EAAmCsjF,MACnE,MAAMnjF,EAAW,EAAGiyF,KAAAA,EAAM4lD,QAAAA,EAASC,SAAAA,EAAUC,SAAAA,EAAUC,YAAAA,M,MAAqC,OACxF1zD,EAAmB,mBAATrkF,EAAsBA,EAAKL,GAAQ,WAAIgE,IAAI4D,IAAiB5D,IAAImB,GAAW9E,SAAxC,IAA+C6a,IAC5F00E,QAA4B,iBAAZ9uF,EAAuB,IAAMd,EAAIgE,IAAIg7E,IAAatlE,KAAK5Y,GAAWA,EAAQd,GAC1FuzD,QAAS9yD,EAAST,GAClB0V,OAAQjU,EAASzB,GACjBs4I,OAAQx2I,EAAY9B,GALoE,EAO5F,OAAOC,EAAMD,GAAK4B,IAAIxB,EAAtB,EO3DSopF,GAAgB,CAACxpF,EAAsBC,EAAkBG,KAC1DJ,EAAAA,UAAUyG,OAAO,QACzBjB,GAAsBvF,EAAMD,GAAS,CAACK,EAAOS,EAAKL,EAAQgB,KACtD,MAAMK,EAAU9B,EAAQioD,cACxB,IAAKnmD,EACD,MAAMU,IAEJ,QAAiB1B,EAAIy8B,KAAOl9B,EAAMk9B,KACxC,IAAI/7B,EAAOnB,EAAMk9B,KAAO97B,EAAO87B,MAAQ,EAAOU,MAAQv9B,GAAkB,EACpEQ,EAAMb,EAAMogB,IAAMhf,EAAOgf,IAAMhgB,EAAO29B,OAAS,GAAKt8B,EAAQy9B,UAEhE,OAAI/9B,EAAO,IAAUA,EAAAA,IAEjBnB,EAAMogB,IAAMhf,EAAOgf,IAAMhgB,EAAO29B,QAAWh+B,GAAYqB,EAAOi8B,OAASr9B,EAAMq9B,OAASj9B,EAAO29B,UAC7Fl9B,EAAMb,EAAMq9B,OAASj8B,EAAOgf,IAAM,GAAK3e,EAAQy9B,WAE5C,CAACr+B,EAAKM,EALb,GAVI,ECHCc,GAAc,CAACtC,GAA8BokF,IAAAA,MAChD,QAAU,CAACtjF,EAAcL,EAAU,IAAMT,EAAagE,IAAIZ,GAAY,CAACtC,EAAOL,IAC9EJ,EAAYL,EAAagE,IAAI5B,GAAW,aACvC;;;;;yBAKcpC,EAAagE,IAAI5B,GAAW;;;UAG3CpC,EAAagE,IAAIK,QAAa;UAC9BrE,EAAagE,IAAIG,QAAa;;;sBAGlB/D,EAAQ;;;;qBAITA,EAAQ,QAAS;;;;;;;oCAOFA,EAAQ,YAAa;;;yBAGhCA,EAAQ;;;;;;qCAMIC;yBACZA;;8BAEKD,EAAQ;;;;;;;KAnC3B,ECME8C,GAAgB,CAAClD,EAAuBC,EAAmBG,KAC9D,QAAMymB,SAASR,cAAc,OAC7B,OAAApmB,EAAAw2F,aAAa5R,SAAQ,KACjB,QAAQ5kF,EAAM6vF,UAAUrvF,GAAY6B,GAAYrC,EAAMw2F,aAAch2F,MAAa,GACnFK,GACIT,EAAAA,UAAUolB,IAAI3kB,EADlB,IAKRT,EAAIsoC,UAAUljB,IAAIxlB,EAAMu2F,aAAa,CAAC,EAAGp2F,IAElC,CACH8a,IAAK7a,EACL3B,OAASoC,I,MACLd,EACKutC,QAAQ9rC,GAASA,EAAK62I,OAAOx3I,IAAyB,MAAVW,EAAKijF,IACjDv9E,SAAQ,EAAGu9E,EAAAA,KAAQrkF,EAAIukB,YAAYnjB,KAE7B,WAAAyZ,IAAI6E,aAAJ,EAAgB6E,YAAYvkB,EAJvC,EAZF,ECTGskF,GAAW,CAAC3kF,EAAuBC,IACrC0R,OAAO7N,OAAO9D,GAChButC,QAAQntC,GAASA,EAAKk4I,OAAOr4I,IAAmB,MAAVG,EAAKskF,IAC3C0D,OAAM,EAAG1D,EAAAA,KAAQtkF,EAAEuoC,UAAU/kB,SAAS,UCFlCpX,GAAe,CAACxM,EAAqBC,KAC9CD,EACKutC,QAAQntC,GAASA,EAAKk4I,OAAOr4I,IAAmB,MAAVG,EAAKskF,IAC3Cv9E,SAAS/G,I,OACU,WAAKmzD,cAAL,WAAetzD,IAEtBG,EAAAA,EAAEuoC,UAAUljB,IAAI,SAIpBrlB,EAAAA,EAAEuoC,UAAUliC,OAAO,QAETrG,EAAKsV,OAAOzV,GAElBG,EAAAA,EAAEuoC,UAAUljB,IAAI,UAGpBrlB,EAAAA,EAAEuoC,UAAUliC,OAAO,UAAnB,IAGNk+E,GAAS3kF,EAASC,ICjBhBqB,GAAsB,CAC/BtB,EACAC,EACAG,EACAC,KAEA,MAAQ6a,IAAKpa,EAAWpC,OAAAA,GAAWwE,GAAclD,EAASC,EAAOI,GAE3DoB,EAAWf,IACb,MAAMc,EAASxB,EAAQ+D,MAAK,EAAG2gF,EAAAA,KAAQhkF,EAAEuO,kBAAkBspI,SAAWr3I,EAAE0iB,SAASljB,EAAEuO,WAC9EzN,IAELd,EAAE0vF,kBACF1vF,EAAEq5C,iBACFv4C,EAAOouF,UAJH,EAOF9tF,EAAO,KACChB,EAAAA,UAAU2kB,IAAI,OAAd,EAGJ,SAAA3f,iBAAiB,YAAarE,GAEjC,CACH6kC,QAAS,KACKxlC,EAAAA,oBAAoB,YAAaW,GAC3CX,EAAU2F,QADA,EAGdyrF,KAAAA,EACAztF,OAAS/D,IACY8L,GAAaxM,EAASU,GAE9BoB,IAGK0nF,GAAAA,EAAW9oF,EAAYN,EAAvB,EAElB1B,OAAAA,EAhBM,ECtBD4F,GAAe,CAACtE,EAAuBC,EAAmBG,EAAiBC,KACpF,IAAIS,EAAgBQ,GAAoBtB,EAAWC,EAAOG,EAAQC,GAC9DI,GAAa,EAEjB,MAAMgB,EAAO,KACTX,EAAcoxF,MAAd,EAGEpwF,EAAS,CAACpB,EAAkBc,KAC9B,MAAQqW,MAAAA,GAAUnX,EAEbA,EAAKyvC,WAAY1vC,GAKG,iBAAWyP,IAAIpF,GAAG5J,EAAMgP,OAAQ1O,EAAUg0B,UAAU1qB,GAAG5J,EAAMs0B,YAGtF10B,EAAc2D,OAAO/D,GAPZe,GAIgB,EAMtB,OACH+2I,SAAW93I,IACPI,EAAgBQ,GAAoBtB,EAAWC,EAAOG,EAAQC,GAC9DS,EAAcpC,OAAOgC,GACrBoB,EAAOpB,EAFP,EAIJ+D,OAAAA,EACA6hC,QAAS,KACLxlC,EAAcwlC,SAAd,EAEJ5nC,OAASgC,IACLI,EAAcpC,OAAOgC,GACrBoB,EAAOpB,EADP,EAGJ+3I,QAAU/3I,IACOD,EAAAA,CAAAA,EAfd,ErYvBEiD,GAAM,IAAI7C,GAAU,oBAGpBiC,GAAgB6J,IAA+B,CAAC3M,EAAOC,KAAR,CAEpDgE,GAAI,UACJizF,aAAc,CAAC92F,EAAGC,K,MACR,QAAUiE,GAAagjF,GAAUjnF,EAAKJ,MAAAA,OAAAA,EAAAA,EAASmuD,OAAQpuD,EAAO,0BAAS09B,SAAT,EAA0B,WAwB9F,MAAO,CAvBQ,IAAIl6B,GAAO,CACtB2C,IAAAA,GACAwzB,MAAO,CACH++G,YAAc52I,IACVhB,EAAQ23I,SAAQ,GAChB33I,EAAQ2D,OAAO3C,IACR,GAEXilD,gBAAiB,CACbzM,UAAW,KACPx5C,EAAQ23I,SAAQ,IACT,KAInBl6G,KAAOz8B,IACHhB,EAAQ03I,SAAS12I,GACV,CACH2C,OAAQ3D,EAAQ2D,OAChB6hC,QAASxlC,EAAQwlC,YAI7B,MAKC49C,GAAUQ,GAAAA,OAAgB,CAAC5hF,OsYnClCjB,GAAcnB,IAChB,IAAKA,EAAgB,SACjB,GAAAgB,MAAMC,QAAQjB,GACd,QAAIA,EAAQ0F,OAAS,IACdvE,GAAWnB,EAAQ,IAG9B,MAAMT,EAAQS,EAAQuF,QACtB,OAAIhG,EACO4B,GAAW5B,GAGK,SAApBS,EAAQqJ,IAJf,EAOS5F,GAAM,IAAIoB,GAAU,sBAEpBzC,GAAkB29E,IAAa,KAAM,CAE1CyW,aAAc,CAACx2F,EAAGT,KACR,QAASA,EAAI+D,IAAIsjF,IAGnB,SAAA7iF,OAAOjB,IAAuBxD,I,MAAU,UACrCA,EACHmwC,SAAU,WAAKA,UAAL,EAAwB,OAFM,IAiFrC,CA5EQ,IAAI3tC,GAAO,CACtB2D,IAAAA,GACAwzB,MAAO,CACHq3E,YAAa,CAAChxG,EAAMI,EAAOY,K,QACjB,QAASf,EAAI+D,IAAId,IACjB5B,EAAarB,EAAI+D,IAAIK,IACrBuD,EAAW,cAAK+xB,OAAMwW,eAAX,WAAsBnwC,EAAK6X,QACpC4kC,cAAAA,GAAkBr8C,EAMtB,IALCwH,IAAa9F,GAKd9B,EADqB6X,MAAM2d,UAAUxnB,MAAMnE,OAC/BE,KAAK9H,KAAKzB,KACf,SAGP,MAAOsB,EAAc+6C,QAAQ,cAG3B,QAAa/6C,EAAc+6C,QAAQ,sBACzC,GAAIz7C,EAAY,CACN,QAAOT,KAAKuZ,MAAM9Y,GAClBK,EAAWX,MAAAA,OAAAA,EAAAA,EAAM63I,KACvB,GAAIt4I,GAAQoB,EAAU,CACZ,MAAEsqB,GAAAA,GAAO/rB,EAAK6X,MACdjV,EAAQ2gF,GAAkB,QAAS1iF,GAEzC,SAAGq2B,qBAAqBt0B,EAAM+J,OAAO,CAAE8jF,SAAAA,KAClCh7D,aACGtwB,GAAc2vB,KAAKr0B,EAAGyP,IAAIsB,QAAQ1I,KAAKS,IAAI,EAAG9I,EAAG+0B,UAAUnuB,KAAO,MAErEgwB,WAAWh3B,EAAK0N,QAAQ,SAAU,OAEvC/N,EAAKoyC,SAAS3xC,IACP,CACX,CACJ,CAEM,QAAOqB,EAAc+6C,QAAQ,aACnC,GAAoB,IAAhB37C,EAAKkF,QAAgC,IAAhB/F,EAAK+F,OACnB,SAEX,GAAIlF,EAAKkF,OAAS,GAAqB,IAAhB/F,EAAK+F,OAAc,CAChC,QAAMygB,SAASR,cAAc,YACnCvlB,EAAIs1C,UAAYl1C,EAChB,MAAMO,EAAOiC,GAAAA,WAAqB7C,GAAQqZ,MAAMpZ,EAAImF,SACpDnF,EAAI2F,SACJpG,EAAOiB,EAAWG,EACtB,CAEM,QAAQD,EAAOnB,GACjB,SAAC+B,GAA0B,iBAAVA,KAErBpC,EAAKoyC,SACDpyC,EAAK6X,MAAMkU,GAAGkL,iBACV,IAAIzxB,GAAMpD,EAAM6D,QAASjF,EAAcgM,UAAWhM,EAAciM,YAIjE,EARH,EAUR2rI,wBAA0B54I,IAChB,QAAaC,EAAI+D,IAAIK,IAE3B,GADexC,GAAW7B,EAAMiG,QAAQjE,UAEpC,OAAQhC,EAAMiG,QAA4BwD,YAAY,EAAGzJ,EAAMiG,QAAQqB,KAAM,QAEjF,MAAM9F,EAAMX,EAAOyZ,YAAYjF,mBAAc,EAAWrV,EAAMiG,SAC9D,OAAKzE,EACSpB,EAAWoB,GADR,EAAjB,KA1ER,MtYzBH2mF,GAAYrlF,KuYOzB,SAAS+1I,GAAWr/H,EAAU,CAAC,GAC3B,OAAO,IAAIkgB,GAAO,CACd6E,KAAKu6G,GAAc,OAAO,IAAIC,GAAeD,EAAYt/H,EAAW,GAE3E,CACD,MAAMu/H,GACF54I,YAAY24I,EAAYt/H,GACpB5a,KAAKk6I,WAAaA,EAClBl6I,KAAKo6I,UAAY,KACjBp6I,KAAKyjC,QAAU,KACfzjC,KAAK8mI,SAAW,EAChB9mI,KAAKq/B,MAAQzkB,EAAQykB,OAAS,EAC9Br/B,KAAKkzE,MAAQt4D,EAAQs4D,OAAS,QAC9BlzE,KAAKmuC,MAAQvzB,EAAQuzB,MACrBnuC,KAAK03C,SAAW,CAAC,WAAY,UAAW,OAAQ,aAAa10C,KAAIrB,IAC7D,IAAIo3C,EAAW33C,IAAQpB,KAAK2B,GAAMP,EAAX,EAEvB,OADA84I,EAAW59H,IAAIpV,iBAAiBvF,EAAMo3C,GAC/B,CAAEp3C,OAAMo3C,UAAf,GAEP,CACDrR,UACI1nC,KAAK03C,SAASnvC,SAAQ,EAAG5G,OAAMo3C,aAAc/4C,KAAKk6I,WAAW59H,IAAIvV,oBAAoBpF,EAAMo3C,IAC9F,CACDlzC,OAAOq0I,EAAY/wF,GACO,MAAlBnpD,KAAKo6I,WAAqBjxF,EAAU73C,KAAO4oI,EAAWjhI,MAAM3H,MACxDtR,KAAKo6I,UAAYF,EAAWjhI,MAAM3H,IAAIjK,QAAQqB,KAC9C1I,KAAKq6I,UAAU,MAEfr6I,KAAKs6I,gBAEhB,CACDD,UAAUpxI,GACFA,GAAOjJ,KAAKo6I,YAEhBp6I,KAAKo6I,UAAYnxI,EACN,MAAPA,GACAjJ,KAAKyjC,QAAQtiB,WAAWyrB,YAAY5sC,KAAKyjC,SACzCzjC,KAAKyjC,QAAU,MAGfzjC,KAAKs6I,gBAEZ,CACDA,gBACI,IAA8Dp7G,EAA1D5P,EAAOtvB,KAAKk6I,WAAWjhI,MAAM3H,IAAIsB,QAAQ5S,KAAKo6I,WAClD,IAAK9qH,EAAK9kB,OAAO4H,cAAe,CAC5B,IAAIZ,EAAS8d,EAAKze,WAAYY,EAAQ6d,EAAK1e,UAC3C,GAAIY,GAAUC,EAAO,CACjB,IAAI8oI,EAAWv6I,KAAKk6I,WAAWjyG,QAAQjoC,KAAKo6I,WAAa5oI,EAASA,EAAO9H,SAAW,IAC/Ey1B,wBACDtd,EAAMrQ,EAAS+oI,EAASz7G,OAASy7G,EAAS14H,IAC1CrQ,GAAUC,IACVoQ,GAAOA,EAAM7hB,KAAKk6I,WAAWjyG,QAAQjoC,KAAKo6I,WAAWj7G,wBAAwBtd,KAAO,GACxFqd,EAAO,CAAEP,KAAM47G,EAAS57G,KAAMC,MAAO27G,EAAS37G,MAAO/c,IAAKA,EAAM7hB,KAAKq/B,MAAQ,EAAGP,OAAQjd,EAAM7hB,KAAKq/B,MAAQ,EAC9G,CACJ,CACD,IAAKH,EAAM,CACP,IAAIgD,EAASliC,KAAKk6I,WAAW31G,YAAYvkC,KAAKo6I,WAC9Cl7G,EAAO,CAAEP,KAAMuD,EAAOvD,KAAO3+B,KAAKq/B,MAAQ,EAAGT,MAAOsD,EAAOvD,KAAO3+B,KAAKq/B,MAAQ,EAAGxd,IAAKqgB,EAAOrgB,IAAKid,OAAQoD,EAAOpD,OACrH,CACD,IAOI07G,EAAYC,EAPZjwI,EAASxK,KAAKk6I,WAAW59H,IAAIo+H,aAQjC,GAPK16I,KAAKyjC,UACNzjC,KAAKyjC,QAAUj5B,EAAOwb,YAAYiC,SAASR,cAAc,QACrDznB,KAAKmuC,QACLnuC,KAAKyjC,QAAQmM,UAAY5vC,KAAKmuC,OAClCnuC,KAAKyjC,QAAQtnB,MAAM4yB,QAAU,4EAA8E/uC,KAAKkzE,QAG/G1oE,GAAUA,GAAUyd,SAASiY,MAA6C,UAArC4Q,iBAAiBtmC,GAAQ+9D,SAC/DiyE,GAAclF,YACdmF,GAAahF,gBAEZ,CACD,IAAIv2G,EAAO10B,EAAO20B,wBAClBq7G,EAAat7G,EAAKP,KAAOn0B,EAAOi2B,WAChCg6G,EAAYv7G,EAAKrd,IAAMrX,EAAOm2B,SACjC,CACD3gC,KAAKyjC,QAAQtnB,MAAMwiB,KAAQO,EAAKP,KAAO67G,EAAc,KACrDx6I,KAAKyjC,QAAQtnB,MAAM0F,IAAOqd,EAAKrd,IAAM44H,EAAa,KAClDz6I,KAAKyjC,QAAQtnB,MAAMkjB,MAASH,EAAKN,MAAQM,EAAKP,KAAQ,KACtD3+B,KAAKyjC,QAAQtnB,MAAMqjB,OAAUN,EAAKJ,OAASI,EAAKrd,IAAO,IAC1D,CACD84H,gBAAgB7T,GACZxtF,aAAat5C,KAAK8mI,SAClB9mI,KAAK8mI,QAAU7/H,YAAW,IAAMjH,KAAKq6I,UAAU,OAAOvT,EACzD,CACDroF,SAASlgB,GACL,IAAKv+B,KAAKk6I,WAAW3oG,SACjB,OACJ,IAAItoC,EAAMjJ,KAAKk6I,WAAWr2G,YAAY,CAAElF,KAAMJ,EAAMob,QAAS93B,IAAK0c,EAAMqb,UACpE3uC,EAAOhC,GAAOA,EAAI2lB,QAAU,GAAK5uB,KAAKk6I,WAAWjhI,MAAM3H,IAAIkC,OAAOvK,EAAI2lB,QACtEgsH,EAAoB3vI,GAAQA,EAAKE,KAAK9H,KAAKu3I,kBAC3C3nG,EAAuC,mBAArB2nG,EAAkCA,EAAkB56I,KAAKk6I,WAAYjxI,EAAKs1B,GAASq8G,EACzG,GAAI3xI,IAAQgqC,EAAU,CAClB,IAAI5iC,EAASpH,EAAIA,IACjB,GAAIjJ,KAAKk6I,WAAW37F,UAAYv+C,KAAKk6I,WAAW37F,SAASz2C,QACrDuI,EAAS6f,GAAUlwB,KAAKk6I,WAAWjhI,MAAM3H,IAAKjB,EAAQrQ,KAAKk6I,WAAW37F,SAASz2C,OACjE,MAAVuI,GACA,OAAOrQ,KAAKq6I,UAAU,MAE9Br6I,KAAKq6I,UAAUhqI,GACfrQ,KAAK26I,gBAAgB,IACxB,CACJ,CACDn8F,UACIx+C,KAAK26I,gBAAgB,GACxB,CACDh8F,OACI3+C,KAAK26I,gBAAgB,GACxB,CACDE,UAAUt8G,GACFA,EAAMluB,QAAUrQ,KAAKk6I,WAAW59H,KAAQtc,KAAKk6I,WAAW59H,IAAI0I,SAASuZ,EAAMygB,gBAC3Eh/C,KAAKq6I,UAAU,KACtB,ECrHL,MAAMS,WAAkBnmH,GAIpBpzB,YAAY+tB,GACR5tB,MAAM4tB,EAAMA,EACf,CACDtsB,IAAIsO,EAAKuZ,GACL,IAAIyE,EAAOhe,EAAIsB,QAAQiY,EAAQ7nB,IAAIhD,KAAK2f,OACxC,OAAOm7H,GAAUn7F,MAAMrwB,GAAQ,IAAIwrH,GAAUxrH,GAAQqF,GAAUuB,KAAK5G,EACvE,CACDjoB,UAAY,OAAO8G,GAAAA,KAAc,CACjCjC,GAAGb,GACC,OAAOA,aAAiByvI,IAAazvI,EAAMsU,MAAQ3f,KAAK2f,IAC3D,CACDvc,SACI,MAAO,CAAE+H,KAAM,YAAalC,IAAKjJ,KAAK2f,KACzC,CAIc,gBAACrO,EAAKzD,GACjB,GAAuB,iBAAZA,EAAK5E,IACZ,MAAM,IAAIkD,WAAW,wCACzB,OAAO,IAAI2uI,GAAUxpI,EAAIsB,QAAQ/E,EAAK5E,KACzC,CAID0sB,cAAgB,OAAO,IAAIolH,GAAY/6I,KAAK+0B,OAAU,CAI1C,aAACzF,GACT,IAAI9kB,EAAS8kB,EAAK9kB,OAClB,GAAIA,EAAOqJ,cAAgBmnI,GAAa1rH,KAAU2rH,GAAY3rH,GAC1D,OAAO,EACX,IAAI66D,EAAW3/E,EAAOW,KAAK9H,KAAK63I,eAChC,GAAgB,MAAZ/wD,EACA,OAAOA,EACX,IAAI1kE,EAAQjb,EAAOyJ,eAAeqb,EAAKvjB,SAASgK,YAChD,OAAO0P,GAASA,EAAM5R,WACzB,CAIuB,yBAACyb,EAAM6F,EAAKgmH,GAAW,GAC3C9kI,EAAQ,OAAS,CACb,IAAK8kI,GAAYL,GAAUn7F,MAAMrwB,GAC7B,OAAOA,EACX,IAAIrmB,EAAMqmB,EAAKrmB,IAAK+I,EAAO,KAE3B,IAAK,IAAI1P,EAAIgtB,EAAKhgB,OAAQhN,IAAK,CAC3B,IAAIkI,EAAS8kB,EAAKrkB,KAAK3I,GACvB,GAAI6yB,EAAM,EAAI7F,EAAK/d,WAAWjP,GAAKkI,EAAOtB,WAAaomB,EAAKvjB,MAAMzJ,GAAK,EAAG,CACtE0P,EAAOxH,EAAOpB,MAAM+rB,EAAM,EAAI7F,EAAK/d,WAAWjP,GAAKgtB,EAAKvjB,MAAMzJ,GAAK,GACnE,KACH,CACI,GAAS,GAALA,EACL,OAAO,KAEX2G,GAAOksB,EACP,IAAIimH,EAAO9rH,EAAKhe,IAAIsB,QAAQ3J,GAC5B,GAAI6xI,GAAUn7F,MAAMy7F,GAChB,OAAOA,CACd,CAED,OAAS,CACL,IAAIxsH,EAASuG,EAAM,EAAInjB,EAAKvG,WAAauG,EAAKzG,UAC9C,IAAKqjB,EAAQ,CACT,GAAI5c,EAAK8B,SAAW9B,EAAKzI,SAAW+sB,GAAAA,aAA2BtkB,GAAO,CAClEsd,EAAOA,EAAKhe,IAAIsB,QAAQ3J,EAAM+I,EAAKtI,SAAWyrB,GAC9CgmH,GAAW,EACX,SAAS9kI,CACZ,CACD,KACH,CACDrE,EAAO4c,EACP3lB,GAAOksB,EACP,IAAIimH,EAAO9rH,EAAKhe,IAAIsB,QAAQ3J,GAC5B,GAAI6xI,GAAUn7F,MAAMy7F,GAChB,OAAOA,CACd,CACD,OAAO,IACV,CACJ,EAELN,GAAUxzI,UAAUuuB,SAAU,EAC9BilH,GAAUvlH,SAAWulH,GAAUO,kBAC/B1mH,GAAUhJ,OAAO,YAAamvH,IAC9B,MAAMC,GACFx5I,YAAY0H,GACRjJ,KAAKiJ,IAAMA,CACd,CACDjG,IAAI6nB,GACA,OAAO,IAAIkwH,GAAYlwH,EAAQ7nB,IAAIhD,KAAKiJ,KAC3C,CACD2J,QAAQtB,GACJ,IAAIge,EAAOhe,EAAIsB,QAAQ5S,KAAKiJ,KAC5B,OAAO6xI,GAAUn7F,MAAMrwB,GAAQ,IAAIwrH,GAAUxrH,GAAQqF,GAAUuB,KAAK5G,EACvE,EAEL,SAAS0rH,GAAa1rH,GAClB,IAAK,IAAIhtB,EAAIgtB,EAAKhgB,MAAOhN,GAAK,EAAGA,IAAK,CAClC,IAAIyJ,EAAQujB,EAAKvjB,MAAMzJ,GAAIkI,EAAS8kB,EAAKrkB,KAAK3I,GAE9C,GAAa,GAATyJ,EAMJ,IAAK,IAAIyF,EAAShH,EAAOpB,MAAM2C,EAAQ,IAAKyF,EAASA,EAAOjG,UAAW,CACnE,GAA0B,GAArBiG,EAAOtI,aAAoBsI,EAAOY,eAAkBZ,EAAOsC,QAAUtC,EAAOrG,KAAK9H,KAAKwL,UACvF,OAAO,EACX,GAAI2C,EAAOY,cACP,OAAO,CACd,MAVG,GAAI5H,EAAOW,KAAK9H,KAAKwL,UACjB,OAAO,CAUlB,CAED,OAAO,CACV,CACD,SAASosI,GAAY3rH,GACjB,IAAK,IAAIhtB,EAAIgtB,EAAKhgB,MAAOhN,GAAK,EAAGA,IAAK,CAClC,IAAIyJ,EAAQujB,EAAK/d,WAAWjP,GAAIkI,EAAS8kB,EAAKrkB,KAAK3I,GACnD,GAAIyJ,GAASvB,EAAOtB,WAKpB,IAAK,IAAIuI,EAAQjH,EAAOpB,MAAM2C,IAAS0F,EAAQA,EAAMhG,WAAY,CAC7D,GAAyB,GAApBgG,EAAMvI,aAAoBuI,EAAMW,eAAkBX,EAAMqC,QAAUrC,EAAMtG,KAAK9H,KAAKwL,UACnF,OAAO,EACX,GAAI4C,EAAMW,cACN,OAAO,CACd,MATG,GAAI5H,EAAOW,KAAK9H,KAAKwL,UACjB,OAAO,CASlB,CACD,OAAO,CACV,CAWD,SAASysI,KACL,OAAO,IAAIxgH,GAAO,CACdC,MAAO,CACHklB,YAAas7F,GACbppC,uBAAuBqpC,EAAO5mH,EAASC,GACnC,OAAOD,EAAQ3rB,KAAO4rB,EAAM5rB,KAAO6xI,GAAUn7F,MAAM9qB,GAAS,IAAIimH,GAAUjmH,GAAS,IACtF,EACDilH,eACArvF,iBACAtC,gBAAiB,CAAEjJ,YAAaA,MAG3C,CACD,MAAMuL,GAAgBuE,GAAe,CACjC,UAAaysF,GAAM,SAAU,GAC7B,WAAcA,GAAM,QAAS,GAC7B,QAAWA,GAAM,QAAS,GAC1B,UAAaA,GAAM,OAAQ,KAE/B,SAASA,GAAMC,EAAMvmH,GACjB,MAAMwmH,EAAiB,QAARD,EAAkBvmH,EAAM,EAAI,OAAS,KAASA,EAAM,EAAI,QAAU,OACjF,OAAO,SAAUlc,EAAOu6B,EAAU7T,GAC9B,IAAIjJ,EAAMzd,EAAM2d,UACZrmB,EAAS4kB,EAAM,EAAIuB,EAAIrnB,IAAMqnB,EAAItnB,MAAO+rI,EAAWzkH,EAAI7qB,MAC3D,GAAI6qB,aAAerB,GAAe,CAC9B,IAAKsK,EAAK8G,eAAek1G,IAA2B,GAAhBprI,EAAOjB,MACvC,OAAO,EACX6rI,GAAW,EACX5qI,EAAS0I,EAAM3H,IAAIsB,QAAQuiB,EAAM,EAAI5kB,EAAOkB,QAAUlB,EAAOiB,SAChE,CACD,IAAIoqI,EAASd,GAAUO,kBAAkB9qI,EAAQ4kB,EAAKgmH,GACtD,QAAKS,IAEDpoG,GACAA,EAASv6B,EAAMkU,GAAG0J,aAAa,IAAIikH,GAAUc,MAC1C,EACV,CACJ,CACD,SAAS9B,GAAYn6G,EAAM12B,EAAKs1B,GAC5B,IAAKoB,IAASA,EAAK4R,SACf,OAAO,EACX,IAAIjiB,EAAOqQ,EAAK1mB,MAAM3H,IAAIsB,QAAQ3J,GAClC,IAAK6xI,GAAUn7F,MAAMrwB,GACjB,OAAO,EACX,IAAIusH,EAAWl8G,EAAKkE,YAAY,CAAElF,KAAMJ,EAAMob,QAAS93B,IAAK0c,EAAMqb,UAClE,QAAIiiG,GAAYA,EAASjtH,QAAU,GAAK0H,GAAAA,aAA2BqJ,EAAK1mB,MAAM3H,IAAIkC,OAAOqoI,EAASjtH,YAElG+Q,EAAK6T,SAAS7T,EAAK1mB,MAAMkU,GAAG0J,aAAa,IAAIikH,GAAUxrH,MAChD,EACV,CAKD,SAAS4vB,GAAYvf,EAAMpB,GACvB,GAAuB,yBAAnBA,EAAM4gB,aAA0Cxf,EAAK1mB,MAAM2d,qBAAqBkkH,IAChF,OAAO,EACX,IAAI,MAAE1rI,GAAUuwB,EAAK1mB,MAAM2d,UACvB3nB,EAASG,EAAM5E,OAAOyJ,eAAe7E,EAAMrD,SAAS4K,aAAagpB,EAAK1mB,MAAMrM,OAAOI,MAAMxD,MAC7F,IAAKyF,EACD,OAAO,EACX,IAAI6G,EAAO1L,EAAAA,MACX,IAAK,IAAIvH,EAAIoM,EAAOzH,OAAS,EAAG3E,GAAK,EAAGA,IACpCiT,EAAO1L,EAAAA,KAAc6E,EAAOpM,GAAG4T,cAAc,KAAMX,IACvD,IAAIqX,EAAKwS,EAAK1mB,MAAMkU,GAAGhe,QAAQC,EAAMnG,IAAKmG,EAAMnG,IAAK,IAAIkF,GAAM2H,EAAM,EAAG,IAGxE,OAFAqX,EAAG0J,aAAaxB,GAAca,KAAK/I,EAAG7b,IAAIsB,QAAQxD,EAAMnG,IAAM,KAC9D02B,EAAK6T,SAASrmB,IACP,CACV,CACD,SAASouH,GAActiI,GACnB,KAAMA,EAAM2d,qBAAqBkkH,IAC7B,OAAO,KACX,IAAI7vI,EAAOgd,SAASR,cAAc,OAElC,OADAxc,EAAK2kC,UAAY,wBACVmQ,GAAchyC,OAAOkL,EAAM3H,IAAK,CAACouC,GAAWxY,OAAOjuB,EAAM2d,UAAUjX,KAAM1U,EAAM,CAAE1D,IAAK,eAChG,CxYnOM,MAAM3D,GAASoF,IAAa,EAAGkoF,SAAAA,EAAU2G,aAAAA,MAC5C/1F,EAAamkF,SAAQ,KACRrjF,GAAAA,EAAG6iF,aAAAA,MACIhkF,CAAAA;;;;;;;;;;;;;;;kCAgBUK,EAAasD,IAAIlC,GAAW;0BACpCpB,EAAasD,IAAInD,GAAY,CAAC;;;;;;;;;;;;;aAjBhC,GADP,IAmCN,CACHq2F,aAAc,CAAC72F,EAAGJ,K,QACR,QAAeA,EAAI+D,IAAIvD,IACvBL,EAAYJ,EAAagE,IAAIlC,GAAW,aACxCD,EAAY7B,EAAagE,IAAInD,GAAY,CAAC,cAE1CG,EAAQgW,OAAO,mCAAWlE,MAAM,aAAjB,IAA0B,IAA1B,EAAgC,GAE9C,OAACxR,KAAaJ,GAAW,CAAE4wE,MAAOjwE,EAAWo8B,MAAAA,IAA7C,KA7CGr2B,GyY0BhB8yI,GAAW,IAAI92I,IAErB,MAAM+2I,GAIJx6I,YAAab,GACXV,KAAKU,KAAOA,EAIZV,KAAKg8I,UAAY,KACjBpkC,IAAiBx2G,GAAKA,EAAEmG,MAAQ7G,GAA2B,OAAnBV,KAAKg8I,WAAsBh8I,KAAKg8I,UAAU,CAAEp+F,KAAM4hB,GAAkBp+D,EAAEq1G,UAAY,OAC3H,CAKDwlC,YAAanmC,GACX8B,GAAAA,QAA2B53G,KAAKU,KAAM8+D,GAAgBA,GAAuCs2C,IAC9F,EAIH,MAAMomC,GAAiC,qBAArBC,iBAAmCJ,GAAuBI,iBAMtEC,GAAa17I,GACjBsC,GAAmB84I,GAAUp7I,GAAM,KACjC,MAAM2yH,EAAO,IAAIrtC,IACXq2D,EAAK,IAAIH,GAAGx7I,GAKlB,OADA27I,EAAGL,UAAY56I,GAAKiyH,EAAK9qH,SAAQwH,GAAOA,EAAI3O,EAAEw8C,KAAM,sBAC7C,CACLy+F,KAAIhpB,OADN,IAYSipB,GAAY,CAAC57I,EAAM8C,IAAM44I,GAAW17I,GAAM2yH,KAAKxsG,IAAIrjB,GASnD+4I,GAAc,CAAC77I,EAAM8C,IAAM44I,GAAW17I,GAAM2yH,KAAKv/F,OAAOtwB,GAUxDg5I,GAAU,CAAC97I,EAAMk9C,EAAM1M,EAAS,QAC3C,MAAMhuC,EAAIk5I,GAAW17I,GACrBwC,EAAEm5I,GAAGJ,YAAYr+F,GACjB16C,EAAEmwH,KAAK9qH,SAAQwH,GAAOA,EAAI6tC,EAAM1M,IAAhC,ECnEWurG,GAAsB,EACtBC,GAAsB,EACtBC,GAAmB,EAQnBC,GAAiB,CAACtiC,EAAShpG,KACtCk2D,GAAsB8yC,EAASmiC,IAC/B,MAAMptB,EAAKjqC,GAAoB9zE,GAC/Bk2D,GAA4B8yC,EAAS+U,EAArC,EAQWwtB,GAAiB,CAACviC,EAAShpG,EAAKwrI,KAC3Ct1E,GAAsB8yC,EAASoiC,IAC/Bl1E,GAA4B8yC,EAASl1B,GAAsB9zE,EAAKwrI,GAAhE,EAUWC,GAAgB,CAACz/B,EAAShD,EAAShpG,IAC9CurI,GAAeviC,EAAShpG,EAAKozG,GAA2BpH,IAS7C0/B,GAAgB,CAAC1/B,EAAShsG,EAAKq8G,KAC1C,IACEvoC,GAAc9zE,EAAKozG,GAA2BpH,GAAUqQ,EAIzD,CAHC,MAAO92C,GAEP7gD,QAAQ6gD,MAAM,2CAA4CA,EAC3D,GAOUomE,GAAc,CAAC3iC,EAASz0G,KACnC2hE,GAAsB8yC,EAASqiC,IAC/Bn1E,GAA4B8yC,EAASz0G,EAArC,EAUWq3I,GAAaF,GAQbG,GAAkB,CAAC7/B,EAAShD,EAAShpG,EAAKq8G,KACrD,MAAMyvB,EAAc14B,GAAqBpH,GACzC,OAAQ8/B,GACN,KAAKX,GACHM,GAAcz/B,EAAShD,EAAShpG,GAChC,MACF,KAAKorI,GACHM,GAAc1/B,EAAShsG,EAAKq8G,GAC5B,MACF,KAAKgvB,GACHO,GAAW5/B,EAAShsG,EAAKq8G,GACzB,MACF,QACE,MAAM,IAAIrsH,MAAM,wBAEpB,OAAO87I,CAAP,EC3HWC,GAA0B,EAuB1BC,GAAkB,CAAChgC,EAASt5G,EAAGu5I,KAC1C,OAAQ74B,GAAqBpH,IAC3B,KAAK+/B,GAAyBE,EAAwBv5I,EAAG0gH,GAAuBpH,IADlF,ECMWkgC,GAAoBtmC,GAC/Bt3F,GAAWs3F,GAAQ,CAAC7lG,EAAK9J,IAAS,GAAEsuG,mBAAmBtuG,MAAQsuG,mBAAmBxkG,OAAQlO,KAAK,KClBpFs6I,GAAc,EACdC,GAAwB,EACxBC,GAAmB,EACnBC,GAAc,EAMrBC,GAAkB,GAExBA,GAAgBJ,IAAe,CAC7BnjC,EACAgD,EACAwgC,EACAC,EACAC,KAEAx2E,GAAsB8yC,EAASmjC,IAC/B,MAAMQ,EAAkBC,GACtB5gC,EACAhD,EACAwjC,EAASxsI,IACTwsI,GAGAC,GAAcE,IAAoBC,KACjCJ,EAASK,SAEVL,EAASK,QAAS,EACnB,EAGHN,GAAgBH,IAAyB,CACvCpjC,EACA8jC,EACAN,EACAO,EACAL,KAEAx2E,GAAsB8yC,EAASqjC,IAC/Bn2E,GACE8yC,EACAgkC,GACER,EAAS/N,UACTjtI,MAAM2F,KAAKq1I,EAAS/N,UAAUD,YAAY50G,SAJ9C,EASF2iH,GAAgBF,IAAoB,CAClCY,EACAjhC,EACAwgC,EACAO,EACAL,KAEAM,GACER,EAAS/N,UACTrrB,GAA2BpH,GAC3BwgC,EAHF,EAOFD,GAAgBD,IAAe,CAC7BW,EACAjhC,EACAwgC,EACAO,EACAL,KAEAQ,GACElhC,EACAwgC,EAASxsI,KACT,CAACmtI,EAAO7mE,IAAW2lE,GAAwBO,EAAUlmE,IAHvD,EAQF,MAAM8mE,GAA0B,IAM1BnB,GAA0B,CAACO,EAAUlmE,IACzC5hD,QAAQg7G,KAAM,+BAA8B8M,EAASpvE,SAASkJ,KAQ1D+mE,GAAc,CAACb,EAAUhoC,EAAKioC,KAClC,MAAMzgC,EAAUoH,GAAuB5O,GACjCwE,EAAU9yC,KACV41E,EAAc14B,GAAqBpH,GACnCshC,EAAiBd,EAASD,gBAAgBT,GAMhD,OALwBwB,EACtBA,EAAetkC,EAASgD,EAASwgC,EAAUC,EAAYX,GAEvDpnH,QAAQ6gD,MAAM,6BAETyjC,CAAP,EAMIukC,GAAWf,IACf,GAAIA,EAASgB,eAAiC,OAAhBhB,EAASiB,GAAa,CAClD,MAAMC,EAAY,IAAIlB,EAASmB,IAAInB,EAASpvE,KAC5CswE,EAAUE,WAAa,cACvBpB,EAASiB,GAAKC,EACdlB,EAASqB,cAAe,EACxBrB,EAASsB,aAAc,EACvBtB,EAASK,QAAS,EAElBa,EAAUhD,UAAaz9G,IACrBu/G,EAASuB,sBAAwB3nH,KACjC,MAAM4iF,EAAUqkC,GAAYb,EAAU,IAAIjnD,WAAWt4D,EAAMqf,OAAO,GAC9D4pB,GAAgB8yC,GAAW,GAC7B0kC,EAAUM,KAAK93E,GAAsB8yC,GACtC,EAEH0kC,EAAU7sD,QAAW5zD,IACnBu/G,EAAS3oC,KAAK,mBAAoB,CAAC52E,EAAOu/G,GAA1C,EAEFkB,EAAUO,QAAWhhH,IACnBu/G,EAAS3oC,KAAK,mBAAoB,CAAC52E,EAAOu/G,IAC1CA,EAASiB,GAAK,KACdjB,EAASqB,cAAe,EACpBrB,EAASsB,aACXtB,EAASsB,aAAc,EACvBtB,EAASK,QAAS,EAElBG,GACER,EAAS/N,UACTjtI,MAAM2F,KAAKq1I,EAAS/N,UAAUD,YAAY50G,QAAQyT,QAAQ20E,GACxDA,IAAWw6B,EAASxsI,IAAIw0G,WAE1Bg4B,GAEFA,EAAS3oC,KAAK,SAAU,CAAC,CACvBl0G,OAAQ,mBAGV68I,EAAS0B,2BAIXv4I,WACE43I,GACA7kC,GACmD,IAAjDA,GAAS,EAAG8jC,EAAS0B,0BACrB1B,EAAS2B,gBAEX3B,EANF,EASFkB,EAAUU,OAAS,KACjB5B,EAASuB,sBAAwB3nH,KACjComH,EAASqB,cAAe,EACxBrB,EAASsB,aAAc,EACvBtB,EAAS0B,yBAA2B,EACpC1B,EAAS3oC,KAAK,SAAU,CAAC,CACvBl0G,OAAQ,eAGV,MAAMq5G,EAAU9yC,KAKhB,GAJAA,GAAsB8yC,EAASmjC,IAC/BS,GAA4B5jC,EAASwjC,EAASxsI,KAC9C0tI,EAAUM,KAAK93E,GAAsB8yC,IAEM,OAAvCwjC,EAAS/N,UAAUR,gBAA0B,CAC/C,MAAMoQ,EAAwBn4E,KAC9BA,GAAsBm4E,EAAuBhC,IAC7Cn2E,GACEm4E,EACArB,GAAwCR,EAAS/N,UAAW,CAC1D+N,EAASxsI,IAAIw0G,YAGjBk5B,EAAUM,KAAK93E,GAAsBm4E,GACtC,GAGH7B,EAAS3oC,KAAK,SAAU,CAAC,CACvBl0G,OAAQ,eAEX,GAOG2+I,GAAmB,CAAC9B,EAAUhoC,KAC9BgoC,EAASsB,aACetB,EAASiB,GAAIO,KAAKxpC,GAE1CgoC,EAAS+B,aACXxD,GAAWyB,EAASgC,UAAWhqC,EAAKgoC,EACrC,EAgBI,MAAMiC,WAA0BlrC,GAcrCtzG,YAAay+I,EAAWC,EAAU3uI,GAAK,QACrClR,GAAU,EAD2B,UAErC2vI,EAAY,IAAIuO,GAA4BhtI,GAFP,OAGrC4lG,EAAS,CAAC,EAH2B,kBAIrCgpC,EAAoBC,UAJiB,eAKrCC,GAAiB,EALoB,eAMrCX,EAAiB,KANoB,UAOrCY,GAAY,GACV,CAAC,GACH3+I,QAEA,MAA2C,MAApCs+I,EAAUA,EAAUx4I,OAAS,GAClCw4I,EAAYA,EAAUl4I,MAAM,EAAGk4I,EAAUx4I,OAAS,GAEpD,MAAM84I,EAAgB5xE,GAAsBwoC,GAC5Cl3G,KAAKy/I,eAAiBA,EACtBz/I,KAAK8/I,UAAYE,EAAY,IAAMC,EACnCjgJ,KAAK0uE,IAAMsxE,EAAY,IAAMC,GACD,IAAzBK,EAAc94I,OAAe,GAAK,IAAM84I,GAC3CtgJ,KAAKigJ,SAAWA,EAChBjgJ,KAAKsR,IAAMA,EACXtR,KAAKi/I,IAAMiB,EACXlgJ,KAAK+vI,UAAYA,EACjB/vI,KAAKo/I,aAAc,EACnBp/I,KAAKm/I,cAAe,EACpBn/I,KAAK6/I,aAAc,EACnB7/I,KAAKqgJ,UAAYA,EACjBrgJ,KAAKw/I,yBAA2B,EAChCx/I,KAAK69I,gBAAkBA,GAAgB/1I,QAIvC9H,KAAKugJ,SAAU,EAIfvgJ,KAAK++I,GAAK,KACV/+I,KAAKq/I,sBAAwB,EAK7Br/I,KAAK8+I,cAAgB1+I,EAKrBJ,KAAKwgJ,gBAAkB,EACnBJ,EAAiB,IACnBpgJ,KAAKwgJ,gBAAsClR,aAAY,KACrD,GAAItvI,KAAK++I,IAAM/+I,KAAK++I,GAAG0B,aAAeN,UAAUO,KAAM,CAEpD,MAAMpmC,EAAU9yC,KAChBA,GAAsB8yC,EAASmjC,IAC/BS,GAA4B5jC,EAAShpG,GACrCtR,KAAK++I,GAAGO,KAAK93E,GAAsB8yC,GACpC,IACA8lC,IAOLpgJ,KAAK2gJ,cAAgB,CAAC/iG,EAAM1M,KAC1B,GAAIA,IAAWlxC,KAAM,CACnB,MAAMs6G,EAAUqkC,GAAY3+I,KAAM,IAAI62F,WAAWj5C,IAAO,GACpD4pB,GAAgB8yC,GAAW,GAC7B+hC,GAAWr8I,KAAK8/I,UAAWt4E,GAAsB8yC,GAAUt6G,KAE9D,GAOHA,KAAK4gJ,eAAiB,CAAC/6I,EAAQqrC,KAC7B,GAAIA,IAAWlxC,KAAM,CACnB,MAAMs6G,EAAU9yC,KAChBA,GAAsB8yC,EAASmjC,IAC/BS,GAAyB5jC,EAASz0G,GAClC+5I,GAAiB5/I,KAAMwnE,GAAsB8yC,GAC9C,GAEHt6G,KAAKsR,IAAInR,GAAG,SAAUH,KAAK4gJ,gBAK3B5gJ,KAAK6gJ,wBAA0B,EAAGtzH,QAAOf,UAASc,WAAWwzH,KAC3D,MAAMC,EAAiBxzH,EAAMrlB,OAAOskB,GAAStkB,OAAOolB,GAC9CgtF,EAAU9yC,KAChBA,GAAsB8yC,EAASqjC,IAC/Bn2E,GACE8yC,EACAgkC,GAAwCvO,EAAWgR,IAErDnB,GAAiB5/I,KAAMwnE,GAAsB8yC,GAA7C,EAEFt6G,KAAKghJ,eAAiB,KACpB1C,GACEt+I,KAAK+vI,UACL,CAACz+H,EAAIw0G,UACL,gBAHF,EAMoB,qBAAX59F,OACTA,OAAOhhB,iBAAiB,SAAUlH,KAAKghJ,gBACX,qBAAZ7lE,SAChBA,QAAQh7E,GAAG,OAAQH,KAAKghJ,gBAE1BjR,EAAU5vI,GAAG,SAAUH,KAAK6gJ,yBAC5B7gJ,KAAKqvI,eAAqCC,aAAY,KAElDtvI,KAAKo/I,aACLV,GACEhnH,KAAqB13B,KAAKq/I,uBAIFr/I,KAAK++I,GAAItvI,OACpC,GACAivI,GAA0B,IACzBt+I,GACFJ,KAAKI,SAER,CAKG+9I,aACF,OAAOn+I,KAAKugJ,OACb,CAEGpC,WAAQllI,GACNjZ,KAAKugJ,UAAYtnI,IACnBjZ,KAAKugJ,QAAUtnI,EACfjZ,KAAKm1G,KAAK,SAAU,CAACl8F,IACrBjZ,KAAKm1G,KAAK,OAAQ,CAACl8F,IAEtB,CAEDyuB,UAC+B,IAAzB1nC,KAAKwgJ,iBACPzZ,cAAc/mI,KAAKwgJ,iBAErBzZ,cAAc/mI,KAAKqvI,gBACnBrvI,KAAKM,aACiB,qBAAX4nB,OACTA,OAAOnhB,oBAAoB,SAAU/G,KAAKghJ,gBACd,qBAAZ7lE,SAChBA,QAAQ99C,IAAI,OAAQr9B,KAAKghJ,gBAE3BhhJ,KAAK+vI,UAAU1yG,IAAI,SAAUr9B,KAAK6gJ,yBAClC7gJ,KAAKsR,IAAI+rB,IAAI,SAAUr9B,KAAK4gJ,gBAC5Bl/I,MAAMgmC,SACP,CAEDu5G,YACE,GAAIjhJ,KAAKqgJ,UACP,OAEGrgJ,KAAK6/I,cACRxD,GAAar8I,KAAK8/I,UAAW9/I,KAAK2gJ,eAClC3gJ,KAAK6/I,aAAc,GAIrB,MAAMqB,EAAc15E,KACpBA,GAAsB05E,EAAazD,IACnCS,GAA4BgD,EAAalhJ,KAAKsR,KAC9C+qI,GAAWr8I,KAAK8/I,UAAWt4E,GAAsB05E,GAAclhJ,MAE/D,MAAMmhJ,EAAe35E,KACrBA,GAAsB25E,EAAc1D,IACpCS,GAA4BiD,EAAcnhJ,KAAKsR,KAC/C+qI,GAAWr8I,KAAK8/I,UAAWt4E,GAAsB25E,GAAenhJ,MAEhE,MAAMohJ,EAAwB55E,KAC9BA,GAAsB45E,EAAuB1D,IAC7CrB,GACEr8I,KAAK8/I,UACLt4E,GAAsB45E,GACtBphJ,MAGF,MAAM2/I,EAAwBn4E,KAC9BA,GAAsBm4E,EAAuBhC,IAC7Cn2E,GACEm4E,EACArB,GAAwCt+I,KAAK+vI,UAAW,CACtD/vI,KAAKsR,IAAIw0G,YAGbu2B,GACEr8I,KAAK8/I,UACLt4E,GAAsBm4E,GACtB3/I,KAEH,CAEDqhJ,eAEE,MAAM/mC,EAAU9yC,KAChBA,GAAsB8yC,EAASqjC,IAC/Bn2E,GACE8yC,EACAgkC,GAAwCt+I,KAAK+vI,UAAW,CACtD/vI,KAAKsR,IAAIw0G,UACR,IAAI9gH,MAET46I,GAAiB5/I,KAAMwnE,GAAsB8yC,IACzCt6G,KAAK6/I,cACPxD,GAAer8I,KAAK8/I,UAAW9/I,KAAK2gJ,eACpC3gJ,KAAK6/I,aAAc,EAEtB,CAEDv/I,aACEN,KAAK8+I,eAAgB,EACrB9+I,KAAKqhJ,eACW,OAAZrhJ,KAAK++I,IACP/+I,KAAK++I,GAAGtvI,OAEX,CAEDrP,UACEJ,KAAK8+I,eAAgB,EAChB9+I,KAAKo/I,aAA2B,OAAZp/I,KAAK++I,KAC5BF,GAAQ7+I,MACRA,KAAKihJ,YAER,ECpdI,MAAMK,GAAOC,GAAWh7B,IAAe,CAAC3zG,EAASwpE,KAGtDmlE,EAAQpvD,QAAU5zD,GAAS69C,EAAO,IAAI96E,MAAMi9B,EAAMluB,OAAOwmE,QAGzD0qE,EAAQC,UAAY,IAAMj1C,SAASk1C,SAEnCF,EAAQG,UAAYnjH,GAAS3rB,EAAQ2rB,EAAMluB,OAAOxH,OAAlD,IASW84I,GAAS,CAAChgJ,EAAMigJ,IAAWr7B,IAAe,CAAC3zG,EAASwpE,KAC/D,MAAMmlE,EAAUM,UAAU/gJ,KAAKa,GAI/B4/I,EAAQO,gBAAkBvjH,GAASqjH,EAAOrjH,EAAMluB,OAAOxH,QAKvD04I,EAAQpvD,QAAU5zD,GAAS69C,EAAOvF,GAAat4C,EAAMluB,OAAOwmE,QAE5D0qE,EAAQC,UAAY,IAAMj1C,SAASk1C,SAInCF,EAAQG,UAAYnjH,IAIlB,MAAMwjH,EAAKxjH,EAAMluB,OAAOxH,OAExBk5I,EAAGC,gBAAkB,KAAQD,EAAGtyI,OAAH,EAEG,qBAArBvI,kBACTA,iBAAiB,UAAU,IAAM66I,EAAGtyI,UAEtCmD,EAAQmvI,EAAR,CAXF,IAmBWE,GAAWtgJ,GAAQ2/I,GAAKO,UAAUK,eAAevgJ,IAOjDwgJ,GAAe,CAACJ,EAAInoD,IAAgBA,EAAYrxF,SAAQjG,GAEnEy/I,EAAGK,kBAAkBj2H,MAAM41H,EAAIz/I,KASpBmkH,GAAW,CAACs7B,EAAIM,EAAQC,EAAS,eAC5C,MAAM5/B,EAAcq/B,EAAGr/B,YAAY2/B,EAAQC,GAC3C,OAAOD,EAAOr/I,KAAI0D,GAAS67I,GAAS7/B,EAAah8G,IAAjD,EASW0rB,GAAQ,CAAC1rB,EAAOunB,IAC3BqzH,GAAK56I,EAAM0rB,MAAMnE,IAQN7oB,GAAM,CAACsB,EAAOa,IACzB+5I,GAAK56I,EAAMtB,IAAImC,IAOJ0iB,GAAM,CAACvjB,EAAOa,IACzB+5I,GAAK56I,EAAMotB,OAAOvsB,IAQPi7I,GAAM,CAAC97I,EAAOisD,EAAMprD,IAC/B+5I,GAAK56I,EAAM87I,IAAI7vF,EAAMprD,IAkBVk7I,GAAa,CAAC/7I,EAAOisD,IAChC2uF,GAAK56I,EAAMmgB,IAAI8rC,IAQJ+vF,GAAS,CAACh8I,EAAOunB,IAC5BqzH,GAAK56I,EAAMg8I,OAAOz0H,IAiBP00H,GAAa,CAACj8I,EAAOs7H,EAAO4gB,KAIvC,IAAIp3I,EAAQ,KACZ,OAAOq3I,GAAYn8I,EAAOs7H,GAAOz6H,IAC/BiE,EAAQjE,GACD,IACNq7I,GAAWlrE,MAAK,IAAMlsE,GAHzB,EAWWs3I,GAAa,CAACp8I,EAAOunB,EAAQ,OAAS00H,GAAWj8I,EAAOunB,EAAO,QAgCtE80H,GAAmB,CAACxB,EAAS/9I,IAAM+iH,IAAe,CAAC3zG,EAASwpE,KAEhEmlE,EAAQpvD,QAAU/V,EAIlBmlE,EAAQG,UAAYnjH,IAClB,MAAMi1D,EAASj1D,EAAMluB,OAAOxH,OAC5B,GAAe,OAAX2qF,IAAiC,IAAdhwF,EAAEgwF,GACvB,OAAO5gF,IAET4gF,EAAOwvD,UAAP,CALF,IA6BWH,GAAc,CAACn8I,EAAOu8I,EAAUz/I,EAAGo/I,EAAY,SAC1DG,GAAiBr8I,EAAMw8I,cAAcD,EAAUL,IAAYpvD,GAAUhwF,EAAEgwF,EAAOjsF,OASnEg7I,GAAW,CAAClhJ,EAAGqF,IAAUrF,EAAE8hJ,YAAYz8I,GAgBvC08I,GAA8B,CAACC,EAAOC,IAAcC,YAAYC,WAAWH,EAAOC,GAOlFG,GAA8B,CAACC,EAAOC,IAAcJ,YAAYK,WAAWF,EAAOC,GC1RzFE,GAAkB,SAClBC,GAAmB,UAEZC,GAAsB,IAKtBC,GAAeC,IAC1B,MAAOC,GAAgBC,GAAyCF,EAAelC,GAAK,CAAC+B,KACrF,OAAOK,GAAWD,EAAcC,GAAgCF,EAAeG,QAAQ,IAAQ1sE,MAAKk3C,GAClGxpC,GAAW6+D,EAAe3yI,KAAK,KAC7Bs9G,EAAQrmH,SAAQ8I,GAAO+zE,GAAc6+D,EAAe3yI,IAAKD,IAAzD,GACC4yI,GAAgB,KAElBvsE,MAAK,IAAMysE,GAAeD,GAAcxsE,MAAK2sE,IAAaJ,EAAeG,OAASC,EAAU,CAAlC,MAC1D3sE,MAAK,IAAMysE,GAAUD,GAAcxsE,MAAK4sE,IAASL,EAAeM,QAAUD,CAAzB,MACjD5sE,MAAK,IAAMwsE,GAPd,EAcWM,GAAa,CAACP,EAAgBQ,GAAa,IACtDT,GAAaC,GACVvsE,MAAKwsE,KACAO,GAAcR,EAAeM,SAAWR,KAC1CI,GAAeD,EAAc9+D,GAAsB6+D,EAAe3yI,MAC/DomE,MAAK,IAAMysE,GAAQD,EAAcC,GAAgCF,EAAeG,QAAQ,MACxF1sE,MAAK,IAAMysE,GAAUD,GAAcxsE,MAAK4sE,IAASL,EAAeM,QAAUD,CAAzB,KACrD,IAWA,MAAMI,WAA6B7vC,GAKxCtzG,YAAaI,EAAM2P,GACjB5P,QACA1B,KAAKsR,IAAMA,EACXtR,KAAK2B,KAAOA,EACZ3B,KAAK2kJ,KAAOC,KACZ5kJ,KAAKokJ,OAAS,EACdpkJ,KAAKukJ,QAAU,EACfvkJ,KAAK6kJ,YAAa,EAIlB7kJ,KAAK+hJ,GAAK,KACV/hJ,KAAKm+I,QAAS,EACdn+I,KAAK8kJ,IAAMX,GAAWxiJ,GAAMogJ,GAC1BoC,GAAiBpC,EAAI,CACnB,CAAC,UAAW,CAAEgD,eAAe,IAC7B,CAAC,cAML/kJ,KAAKglJ,WAAahlJ,KAAK8kJ,IAAIptE,MAAKqqE,IAC9B/hJ,KAAK+hJ,GAAKA,EACV,MAAMkD,EAAY7/D,GAAsB9zE,GACxC,OAAO0yI,GAAahkJ,MAAM03E,MAAKwsE,GAAgBC,GAAeD,EAAce,KAAYvtE,MAAK,KACvF13E,KAAK6kJ,aACT7kJ,KAAKm1G,KAAK,SAAU,CAACn1G,OACrBA,KAAKm+I,QAAS,GAFcn+I,OAD9B,IAUFA,KAAKklJ,cAAgB,IAIrBllJ,KAAKmlJ,gBAAkB,KAKvBnlJ,KAAKolJ,aAAe,CAACv/I,EAAQqrC,KAC3B,GAAIlxC,KAAK+hJ,IAAM7wG,IAAWlxC,KAAM,CAC9B,MAAOkkJ,GAAgBC,GAAyCnkJ,KAAK+hJ,GAAK,CAAC+B,KAC3EK,GAAeD,EAAcr+I,KACvB7F,KAAKukJ,SAAWR,KAES,OAAzB/jJ,KAAKmlJ,iBACP7rG,aAAat5C,KAAKmlJ,iBAEpBnlJ,KAAKmlJ,gBAAkBl+I,YAAW,KAChCu9I,GAAWxkJ,MAAM,GACjBA,KAAKmlJ,gBAAkB,IAAvB,GACCnlJ,KAAKklJ,eAEX,GAEH5zI,EAAInR,GAAG,SAAUH,KAAKolJ,cACtBplJ,KAAK0nC,QAAU1nC,KAAK0nC,QAAQjsB,KAAKzb,MACjCsR,EAAInR,GAAG,UAAWH,KAAK0nC,QACxB,CAEDA,UAOE,OANI1nC,KAAKmlJ,iBACP7rG,aAAat5C,KAAKmlJ,iBAEpBnlJ,KAAKsR,IAAI+rB,IAAI,SAAUr9B,KAAKolJ,cAC5BplJ,KAAKsR,IAAI+rB,IAAI,UAAWr9B,KAAK0nC,SAC7B1nC,KAAK6kJ,YAAa,EACX7kJ,KAAK8kJ,IAAIptE,MAAKqqE,IACnBA,EAAGtyI,OAAH,GAEH,CAODquC,YACE,OAAO99C,KAAK0nC,UAAUgwC,MAAK,KACzBysE,GAAankJ,KAAK2B,KAAlB,GAEH,CAMDyD,IAAKmC,GACH,OAAOvH,KAAK8kJ,IAAIptE,MAAKqqE,IACnB,MAAOx3G,GAAU45G,GAAapC,EAAI,CAAC8B,IAAkB,YACrD,OAAOM,GAAQ55G,EAAQhjC,EAAvB,GAEH,CAOD3B,IAAK2B,EAAK9G,GACR,OAAOT,KAAK8kJ,IAAIptE,MAAKqqE,IACnB,MAAOx3G,GAAU45G,GAAapC,EAAI,CAAC8B,KACnC,OAAOM,GAAQ55G,EAAQ9pC,EAAO8G,EAA9B,GAEH,CAMD0iB,IAAK1iB,GACH,OAAOvH,KAAK8kJ,IAAIptE,MAAKqqE,IACnB,MAAOx3G,GAAU45G,GAAapC,EAAI,CAAC8B,KACnC,OAAOM,GAAQ55G,EAAQhjC,EAAvB,GAEH,ECtKH,IAAI89I,IAAc,EAClB,MAAMC,GAAY,mEAQZ1qI,GAAU,CACd,CAAEs4D,MAAO,UAAWvxE,KAAM,mBAC1B,CAAEuxE,MAAO,UAAWvxE,KAAM,mBAC1B,CAAEuxE,MAAO,UAAWvxE,KAAM,mBAC1B,CAAEuxE,MAAO,UAAWvxE,KAAM,oBAEtB4jJ,GAASr7I,KAAK05B,MAAsB,EAAhB15B,KAAKusF,UAI/B,MAAM+uD,GAEJjkJ,YAAYkkJ,GACVzlJ,KAAKylJ,cAAgBA,EACrBzlJ,KAAKU,KAAO,WACZV,KAAKsR,IAAM,KACXtR,KAAK0lJ,WAAa,KAClB1lJ,KAAK2lJ,kBAAoB,KAGzB3lJ,KAAKiB,OAAS,IAIf,CAEDm8C,MAAMwoG,EAAWN,IAEftlJ,KAAKsR,KAAMtR,KAAKsR,IAAIo2B,UACpB1nC,KAAK0lJ,YAAa1lJ,KAAK0lJ,WAAWh+G,UAKlC1nC,KAAKsR,IAAM,IAAIi0G,GAgBfvlH,KAAK2lJ,kBAAoB,IAAIjB,GAAqB1kJ,KAAKU,KAAMV,KAAKsR,KAgBlEtR,KAAK0lJ,WAAa,IAAI3F,GAEpB,mCAGA//I,KAAKU,KAAMV,KAAKsR,IAAK,CAAElR,QAASilJ,KAGhCrlJ,KAAK0lJ,WAAW3V,UAAUF,mBAAmB,OAAQj1H,GAAQ2qI,KAC7DvlJ,KAAK0lJ,WAAWvlJ,GAAG,UAAW0lJ,IACxBA,EAAQ5kJ,SACVjB,KAAKiB,OAAS4kJ,EAAQ5kJ,OACvB,IAGHjB,KAAKylJ,cAAc7T,QAAQ5xI,KAAKsR,KAAKygI,aAAa/xI,KAAK0lJ,WAAW3V,WAElE/vI,KAAK2lJ,kBAAkB5wC,KAAK,UAAU3uG,UACpC4vB,QAAQmhE,IAAI,mBAAoBgnD,EAAQyH,EAAxC,IAIF5lJ,KAAK0lJ,WAAW3wC,KAAK,UAAU3uG,UACzB0/I,IACF9vH,QAAQmhE,IAAI,YAAa2uD,EAASF,GAElC5lJ,KAAKylJ,cAAcrlJ,UACpB,GAIJ,CAEDA,UACEJ,KAAK2lJ,kBAAkBvlJ,UAEvBJ,KAAK0lJ,WAAWtlJ,UAChBJ,KAAKylJ,cAAcrlJ,SACpB,CAEDE,aAGEN,KAAKylJ,cAAcnlJ,aACnBN,KAAK0lJ,WAAWplJ,YACjB,CAED0xI,cAAc4T,GACZ5lJ,KAAKylJ,cACJnlJ,aACA0xI,cAAc4T,GAAU,KAAM,IAC9BxlJ,SACF,CAYD2lJ,SAASC,GACPhmJ,KAAKU,KAAOslJ,EACZhwH,QAAQmhE,IAAIn3F,KAAKU,MAMjB,MAAMklJ,EAAW,KAAK5lJ,KAAKU,KAAO,iBAClCV,KAAKM,aACLN,KAAKo9C,MAAMwoG,EACZ,EC9HL,QACAjkJ,KAAAA,aACAo5B,MAAAA,CACAkrH,IAAAA,QAEAroG,OACA,OACApkC,QAAAA,2DACA9Y,KAAAA,KACAM,cAAAA,KAEA,EACA,gBACA,WACA,wBACAm4B,QAAAkzD,IACAA,EAAAA,IAAAA,GAAAA,KAAAA,MAAAA,QACAA,EAAAA,IAAAA,GAAAA,KAAAA,QAAAA,IAEAtmF,IAAAmgJ,IAEAngJ,IAAAitI,IACAjtI,IAAAogJ,IACApgJ,IAAAqgJ,IACArgJ,IAAAytF,IACAztF,IAAAsgJ,IACAtgJ,IAAAo/F,IACAp/F,IAAAugJ,IACAv4I,SAGAilF,EAAAA,QAAAA,IACA,kBACAuzD,EAAAA,cAAAA,IAAAA,GAAAA,GACAA,EAAAA,cAAAA,OAAAA,GAGA,EACAC,QAAAA,CACApmJ,UACA,4BACA,EACAE,aACA,+BACA,EACAsyI,SACA,+BACA,EACA9xI,OACA,2BACA,oBACA,sCAGA,ICpF0P,M,WCQtP2lJ,IAAY,QACd,GACA3mJ,EACAqB,GACA,EACA,KACA,KACA,MAIF,GAAeslJ,GAAiB,O,uBCnBhC,IAAIC,EAAgB,EAAQ,MAExBC,EAAatvE,UAEjBuvE,EAAOC,QAAU,SAAUh+D,EAAIi+D,GAC7B,GAAIJ,EAAcI,EAAWj+D,GAAK,OAAOA,EACzC,MAAM89D,EAAW,uBACnB,C,mBCNAC,EAAOC,QAAgC,oBAAfzqC,aAAiD,oBAAZR,Q,mCCA7D,IAmCImrC,EAAMC,EAAaF,EAnCnBG,EAAsB,EAAQ,MAC9BC,EAAc,EAAQ,MACtBrhD,EAAS,EAAQ,MACjBshD,EAAa,EAAQ,KACrBhc,EAAW,EAAQ,KACnBic,EAAS,EAAQ,MACjBC,EAAU,EAAQ,KAClBC,EAAc,EAAQ,MACtBC,EAA8B,EAAQ,MACtCC,EAAgB,EAAQ,MACxB9zE,EAAiB,UACjBgzE,EAAgB,EAAQ,MACxBp9F,EAAiB,EAAQ,MACzBm+F,EAAiB,EAAQ,MACzBC,EAAkB,EAAQ,MAC1BC,EAAM,EAAQ,MACdC,EAAsB,EAAQ,MAE9BC,EAAuBD,EAAoBE,QAC3CC,EAAmBH,EAAoBxiJ,IACvC4iJ,EAAYniD,EAAOmiD,UACnBC,EAAqBD,GAAaA,EAAU1gJ,UAC5C4gJ,EAAoBriD,EAAOqiD,kBAC3BC,EAA6BD,GAAqBA,EAAkB5gJ,UACpE8gJ,EAAaJ,GAAa1+F,EAAe0+F,GACzCK,EAAsBJ,GAAsB3+F,EAAe2+F,GAC3DK,EAAkBv1I,OAAOzL,UACzB+vE,EAAYwuB,EAAOxuB,UAEnBkxE,EAAgBb,EAAgB,eAChCc,EAAkBb,EAAI,mBACtBc,EAA0B,wBAE1BC,EAA4BzB,KAAyBQ,GAA4C,UAA1BJ,EAAQxhD,EAAO8iD,OACtFC,GAA2B,EAG3BC,EAA6B,CAC/Bb,UAAW,EACXnxD,WAAY,EACZqxD,kBAAmB,EACnBY,WAAY,EACZC,YAAa,EACbC,WAAY,EACZxpC,YAAa,EACbypC,aAAc,EACdC,aAAc,GAGZC,EAA8B,CAChCC,cAAe,EACfC,eAAgB,GAGdC,EAAS,SAAgBzgE,GAC3B,IAAKsiD,EAAStiD,GAAK,OAAO,EAC1B,IAAI0gE,EAAQlC,EAAQx+D,GACpB,MAAiB,aAAV0gE,GACFnC,EAAOyB,EAA4BU,IACnCnC,EAAO+B,EAA6BI,EAC3C,EAEIC,EAA2B,SAAU3gE,GACvC,IAAI4gE,EAAQngG,EAAeu/B,GAC3B,GAAKsiD,EAASse,GAAd,CACA,IAAIxwI,EAAQ8uI,EAAiB0B,GAC7B,OAAQxwI,GAASmuI,EAAOnuI,EAAOwvI,GAA4BxvI,EAAMwvI,GAA2Be,EAAyBC,EAFzF,CAG9B,EAEIC,EAAe,SAAU7gE,GAC3B,IAAKsiD,EAAStiD,GAAK,OAAO,EAC1B,IAAI0gE,EAAQlC,EAAQx+D,GACpB,OAAOu+D,EAAOyB,EAA4BU,IACrCnC,EAAO+B,EAA6BI,EAC3C,EAEII,EAAc,SAAU9gE,GAC1B,GAAI6gE,EAAa7gE,GAAK,OAAOA,EAC7B,MAAMxR,EAAU,8BAClB,EAEIuyE,EAAyB,SAAUhjJ,GACrC,GAAIugJ,EAAWvgJ,MAAQ6gJ,GAAkBf,EAAc0B,EAAYxhJ,IAAK,OAAOA,EAC/E,MAAMywE,EAAUiwE,EAAY1gJ,GAAK,oCACnC,EAEIijJ,EAAyB,SAAUC,EAAKhqE,EAAUiqE,EAAQnvI,GAC5D,GAAKssI,EAAL,CACA,GAAI6C,EAAQ,IAAK,IAAIC,KAASnB,EAA4B,CACxD,IAAIoB,EAAwBpkD,EAAOmkD,GACnC,GAAIC,GAAyB7C,EAAO6C,EAAsB3iJ,UAAWwiJ,GAAM,WAClEG,EAAsB3iJ,UAAUwiJ,EAMzC,CALE,MAAOjzE,GAEP,IACEozE,EAAsB3iJ,UAAUwiJ,GAAOhqE,CACV,CAA7B,MAAOoqE,GAAsB,CACjC,CACF,CACK7B,EAAoByB,KAAQC,GAC/BvC,EAAca,EAAqByB,EAAKC,EAASjqE,EAC7C4oE,GAA6BT,EAAmB6B,IAAQhqE,EAAUllE,EAdhD,CAgB1B,EAEIuvI,EAA+B,SAAUL,EAAKhqE,EAAUiqE,GAC1D,IAAIC,EAAOC,EACX,GAAK/C,EAAL,CACA,GAAIO,EAAgB,CAClB,GAAIsC,EAAQ,IAAKC,KAASnB,EAExB,GADAoB,EAAwBpkD,EAAOmkD,GAC3BC,GAAyB7C,EAAO6C,EAAuBH,GAAM,WACxDG,EAAsBH,EACD,CAA5B,MAAOjzE,GAAqB,CAEhC,GAAKuxE,EAAW0B,KAAQC,EAKjB,OAHL,IACE,OAAOvC,EAAcY,EAAY0B,EAAKC,EAASjqE,EAAW4oE,GAA6BN,EAAW0B,IAAQhqE,EAC9E,CAA5B,MAAOjJ,GAAqB,CAElC,CACA,IAAKmzE,KAASnB,EACZoB,EAAwBpkD,EAAOmkD,IAC3BC,GAA2BA,EAAsBH,KAAQC,GAC3DvC,EAAcyC,EAAuBH,EAAKhqE,EAlBtB,CAqB1B,EAEA,IAAKinE,KAAQ8B,EACX7B,EAAcnhD,EAAOkhD,GACrBD,EAAYE,GAAeA,EAAY1/I,UACnCw/I,EAAWe,EAAqBf,GAAW2B,GAA2BzB,EACrE0B,GAA4B,EAGnC,IAAK3B,KAAQoC,EACXnC,EAAcnhD,EAAOkhD,GACrBD,EAAYE,GAAeA,EAAY1/I,UACnCw/I,IAAWe,EAAqBf,GAAW2B,GAA2BzB,GAI5E,KAAK0B,IAA8BvB,EAAWiB,IAAeA,IAAevtH,SAASvzB,aAEnF8gJ,EAAa,WACX,MAAM/wE,EAAU,uBAClB,EACIqxE,GAA2B,IAAK3B,KAAQ8B,EACtChjD,EAAOkhD,IAAOU,EAAe5hD,EAAOkhD,GAAOqB,GAInD,KAAKM,IAA8BL,GAAuBA,IAAwBC,KAChFD,EAAsBD,EAAW9gJ,UAC7BohJ,GAA2B,IAAK3B,KAAQ8B,EACtChjD,EAAOkhD,IAAOU,EAAe5hD,EAAOkhD,GAAMz/I,UAAW+gJ,GAS7D,GAJIK,GAA6Bp/F,EAAe6+F,KAAgCE,GAC9EZ,EAAeU,EAA4BE,GAGzCnB,IAAgBE,EAAOiB,EAAqBE,GAK9C,IAAKxB,KAJL6B,GAA2B,EAC3Bl1E,EAAe20E,EAAqBE,EAAe,CAAEnjJ,IAAK,WACxD,OAAO+lI,EAASnrI,MAAQA,KAAKwoJ,QAAmB9gJ,CAClD,IACamhJ,EAAgChjD,EAAOkhD,IAClDQ,EAA4B1hD,EAAOkhD,GAAOyB,EAAiBzB,GAI/DH,EAAOC,QAAU,CACf6B,0BAA2BA,EAC3BF,gBAAiBI,GAA4BJ,EAC7CmB,YAAaA,EACbC,uBAAwBA,EACxBC,uBAAwBA,EACxBM,6BAA8BA,EAC9BX,yBAA0BA,EAC1BF,OAAQA,EACRI,aAAcA,EACdtB,WAAYA,EACZC,oBAAqBA,E,uBC5LvB,IAAI5sI,EAAO,EAAQ,MACf2uI,EAAgB,EAAQ,MACxBC,EAAW,EAAQ,MACnBC,EAAoB,EAAQ,MAG5BC,EAAe,SAAUC,GAC3B,IAAIC,EAA6B,GAARD,EACzB,OAAO,SAAUE,EAAOC,EAAYC,GAClC,IAIInqJ,EAAOoI,EAJP87E,EAAI0lE,EAASK,GACb9iJ,EAAOwiJ,EAAczlE,GACrBkmE,EAAgBpvI,EAAKkvI,EAAYC,GACjC7+I,EAAQu+I,EAAkB1iJ,GAE9B,MAAOmE,KAAU,EAGf,GAFAtL,EAAQmH,EAAKmE,GACblD,EAASgiJ,EAAcpqJ,EAAOsL,EAAO44E,GACjC97E,EAAQ,OAAQ2hJ,GAClB,KAAK,EAAG,OAAO/pJ,EACf,KAAK,EAAG,OAAOsL,EAGnB,OAAO0+I,GAAsB,OAAI/iJ,CACnC,CACF,EAEAk/I,EAAOC,QAAU,CAGfiE,SAAUP,EAAa,GAGvBQ,cAAeR,EAAa,G,uBChC9B,IAAIS,EAAQ,EAAQ,MAEpBpE,EAAOC,SAAWmE,GAAM,WACtB,SAAS9mJ,IAAkB,CAG3B,OAFAA,EAAEoD,UAAU/F,YAAc,KAEnBwR,OAAOu2C,eAAe,IAAIplD,KAASA,EAAEoD,SAC9C,G,mBCPAs/I,EAAOC,QAAU,CACfoE,eAAgB,CAAExpJ,EAAG,iBAAkByB,EAAG,EAAGD,EAAG,GAChDioJ,mBAAoB,CAAEzpJ,EAAG,qBAAsByB,EAAG,EAAGD,EAAG,GACxDkoJ,sBAAuB,CAAE1pJ,EAAG,wBAAyByB,EAAG,EAAGD,EAAG,GAC9DmoJ,mBAAoB,CAAE3pJ,EAAG,qBAAsByB,EAAG,EAAGD,EAAG,GACxDooJ,sBAAuB,CAAE5pJ,EAAG,wBAAyByB,EAAG,EAAGD,EAAG,GAC9DqoJ,mBAAoB,CAAE7pJ,EAAG,sBAAuByB,EAAG,EAAGD,EAAG,GACzDsoJ,2BAA4B,CAAE9pJ,EAAG,8BAA+ByB,EAAG,EAAGD,EAAG,GACzEuoJ,cAAe,CAAE/pJ,EAAG,gBAAiByB,EAAG,EAAGD,EAAG,GAC9CwoJ,kBAAmB,CAAEhqJ,EAAG,oBAAqByB,EAAG,EAAGD,EAAG,GACtDyoJ,oBAAqB,CAAEjqJ,EAAG,sBAAuByB,EAAG,GAAID,EAAG,GAC3D0oJ,kBAAmB,CAAElqJ,EAAG,oBAAqByB,EAAG,GAAID,EAAG,GACvD2U,YAAa,CAAEnW,EAAG,aAAcyB,EAAG,GAAID,EAAG,GAC1C2oJ,yBAA0B,CAAEnqJ,EAAG,2BAA4ByB,EAAG,GAAID,EAAG,GACrE4oJ,eAAgB,CAAEpqJ,EAAG,gBAAiByB,EAAG,GAAID,EAAG,GAChD6oJ,mBAAoB,CAAErqJ,EAAG,qBAAsByB,EAAG,GAAID,EAAG,GACzD8oJ,gBAAiB,CAAEtqJ,EAAG,iBAAkByB,EAAG,GAAID,EAAG,GAClD+oJ,kBAAmB,CAAEvqJ,EAAG,oBAAqByB,EAAG,GAAID,EAAG,GACvDgpJ,cAAe,CAAExqJ,EAAG,eAAgByB,EAAG,GAAID,EAAG,GAC9CipJ,aAAc,CAAEzqJ,EAAG,cAAeyB,EAAG,GAAID,EAAG,GAC5CkpJ,WAAY,CAAE1qJ,EAAG,YAAayB,EAAG,GAAID,EAAG,GACxCmpJ,iBAAkB,CAAE3qJ,EAAG,mBAAoByB,EAAG,GAAID,EAAG,GACrDopJ,mBAAoB,CAAE5qJ,EAAG,qBAAsByB,EAAG,GAAID,EAAG,GACzDqpJ,aAAc,CAAE7qJ,EAAG,cAAeyB,EAAG,GAAID,EAAG,GAC5CspJ,qBAAsB,CAAE9qJ,EAAG,wBAAyByB,EAAG,GAAID,EAAG,GAC9DupJ,eAAgB,CAAE/qJ,EAAG,iBAAkByB,EAAG,GAAID,EAAG,G,uBCzBnD,IAAImkJ,EAAS,EAAQ,MACjBD,EAAa,EAAQ,KACrBkD,EAAW,EAAQ,MACnBoC,EAAY,EAAQ,MACpBC,EAA2B,EAAQ,MAEnCC,EAAWF,EAAU,YACrBG,EAAU75I,OACVu1I,EAAkBsE,EAAQtlJ,UAK9Bs/I,EAAOC,QAAU6F,EAA2BE,EAAQtjG,eAAiB,SAAUq7B,GAC7E,IAAI/kE,EAASyqI,EAAS1lE,GACtB,GAAIyiE,EAAOxnI,EAAQ+sI,GAAW,OAAO/sI,EAAO+sI,GAC5C,IAAIprJ,EAAcqe,EAAOre,YACzB,OAAI4lJ,EAAW5lJ,IAAgBqe,aAAkBre,EACxCA,EAAY+F,UACZsY,aAAkBgtI,EAAUtE,EAAkB,IACzD,C,oCCnBA,IAAIuE,EAAsB,EAAQ,KAC9BvC,EAAoB,EAAQ,MAC5BwC,EAAsB,EAAQ,MAE9BnD,EAAckD,EAAoBlD,YAClCE,EAAyBgD,EAAoBhD,uBAIjDA,EAAuB,MAAM,SAAY99I,GACvC,IAAI44E,EAAIglE,EAAY3pJ,MAChB6iC,EAAMynH,EAAkB3lE,GACxBooE,EAAgBD,EAAoB/gJ,GACpCq0E,EAAI2sE,GAAiB,EAAIA,EAAgBlqH,EAAMkqH,EACnD,OAAQ3sE,EAAI,GAAKA,GAAKv9C,OAAOn7B,EAAYi9E,EAAEvE,EAC7C,G,oCCfA,IAAIysE,EAAsB,EAAQ,KAC9BG,EAAiB,sBAEjBrD,EAAckD,EAAoBlD,YAClCE,EAAyBgD,EAAoBhD,uBAIjDA,EAAuB,iBAAiB,SAAuB1pG,GAC7D,OAAO6sG,EAAerD,EAAY3pJ,MAAOmgD,EAAWovB,UAAU/nE,OAAS,EAAI+nE,UAAU,QAAK7nE,EAC5F,G,oCCVA,IAAImlJ,EAAsB,EAAQ,KAC9BI,EAAY,iBAEZtD,EAAckD,EAAoBlD,YAClCE,EAAyBgD,EAAoBhD,uBAIjDA,EAAuB,YAAY,SAAkB1pG,GACnD,OAAO8sG,EAAUtD,EAAY3pJ,MAAOmgD,EAAWovB,UAAU/nE,OAAS,EAAI+nE,UAAU,QAAK7nE,EACvF,G,oCCVA,IAAIo+E,EAAI,EAAQ,MACZ+f,EAAS,EAAQ,MACjBqnD,EAAa,EAAQ,MACrBC,EAA2B,EAAQ,MACnCz5E,EAAiB,UACjB0zE,EAAS,EAAQ,MACjBgG,EAAa,EAAQ,MACrBC,EAAoB,EAAQ,MAC5BC,EAA0B,EAAQ,MAClCC,EAAwB,EAAQ,MAChCC,EAAkB,EAAQ,MAC1BtG,EAAc,EAAQ,MACtBuG,EAAU,EAAQ,MAElBC,EAAgB,eAChBpsJ,EAAQ4rJ,EAAW,SACnBS,EAAqBT,EAAWQ,GAEhCE,EAAgB,WAClBR,EAAWptJ,KAAM6tJ,GACjB,IAAIC,EAAkBv+E,UAAU/nE,OAC5BskB,EAAUwhI,EAAwBQ,EAAkB,OAAIpmJ,EAAY6nE,UAAU,IAC9E5tE,EAAO2rJ,EAAwBQ,EAAkB,OAAIpmJ,EAAY6nE,UAAU,GAAI,SAC/Eq7E,EAAO,IAAI+C,EAAmB7hI,EAASnqB,GACvCk1E,EAAQv1E,EAAMwqB,GAIlB,OAHA+qD,EAAMl1E,KAAO+rJ,EACbh6E,EAAek3E,EAAM,QAASuC,EAAyB,EAAGK,EAAgB32E,EAAMx1C,MAAO,KACvFgsH,EAAkBzC,EAAM5qJ,KAAM4tJ,GACvBhD,CACT,EAEIiD,EAAwBD,EAActmJ,UAAYqmJ,EAAmBrmJ,UAErEymJ,EAAkB,UAAWzsJ,EAAMosJ,GACnCM,EAA0B,UAAW,IAAIL,EAAmB,EAAG,GAG/DM,EAAaN,GAAsBzG,GAAen0I,OAAOm7I,yBAAyBroD,EAAQ6nD,GAI1FS,IAAqBF,KAAgBA,EAAWG,UAAYH,EAAW/gE,cAEvEmhE,EAAqBN,IAAoBI,IAAqBH,EAIlEloE,EAAE,CAAE+f,QAAQ,EAAMtkG,aAAa,EAAMwoJ,OAAQ0D,GAAWY,GAAsB,CAC5E/kH,aAAc+kH,EAAqBT,EAAgBD,IAGrD,IAAIW,EAAyBpB,EAAWQ,GACpCa,EAAkCD,EAAuBhnJ,UAE7D,GAAIinJ,EAAgChtJ,cAAgB+sJ,EAKlD,IAAK,IAAI/mJ,KAJJkmJ,GACH/5E,EAAe66E,EAAiC,cAAepB,EAAyB,EAAGmB,IAG7Ef,EAAuB,GAAInG,EAAOmG,EAAuBhmJ,GAAM,CAC7E,IAAIinJ,EAAWjB,EAAsBhmJ,GACjCknJ,EAAeD,EAAS/sJ,EACvB2lJ,EAAOkH,EAAwBG,IAClC/6E,EAAe46E,EAAwBG,EAActB,EAAyB,EAAGqB,EAAStrJ,GAE9F,C,gCChEF,IAAIkkJ,EAASr0I,OAAOzL,UAAUuT,eAC1B6zI,EAAQ37I,OAAOzL,UAAUhE,SACzBowE,EAAiB3gE,OAAO2gE,eACxBi7E,EAAO57I,OAAOm7I,yBAEdnrJ,EAAU,SAAiB2xG,GAC9B,MAA6B,oBAAlB5xG,MAAMC,QACTD,MAAMC,QAAQ2xG,GAGK,mBAApBg6C,EAAM5zI,KAAK45F,EAClB,EAEG59B,EAAgB,SAAuBnpE,GAC1C,IAAKA,GAA2B,oBAApB+gJ,EAAM5zI,KAAKnN,GACtB,OAAO,EAGR,IASIpG,EATAqnJ,EAAoBxH,EAAOtsI,KAAKnN,EAAK,eACrCkhJ,EAAmBlhJ,EAAIpM,aAAeoM,EAAIpM,YAAY+F,WAAa8/I,EAAOtsI,KAAKnN,EAAIpM,YAAY+F,UAAW,iBAE9G,GAAIqG,EAAIpM,cAAgBqtJ,IAAsBC,EAC7C,OAAO,EAMR,IAAKtnJ,KAAOoG,GAEZ,MAAsB,qBAARpG,GAAuB6/I,EAAOtsI,KAAKnN,EAAKpG,EACtD,EAGGunJ,EAAc,SAAqBz+I,EAAQuK,GAC1C84D,GAAmC,cAAjB94D,EAAQjZ,KAC7B+xE,EAAerjE,EAAQuK,EAAQjZ,KAAM,CACpCotJ,YAAY,EACZ7hE,cAAc,EACdzsF,MAAOma,EAAQ67F,SACf23C,UAAU,IAGX/9I,EAAOuK,EAAQjZ,MAAQiZ,EAAQ67F,QAEhC,EAGGu4C,EAAc,SAAqBrhJ,EAAKhM,GAC3C,GAAa,cAATA,EAAsB,CACzB,IAAKylJ,EAAOtsI,KAAKnN,EAAKhM,GACrB,OACM,GAAIgtJ,EAGV,OAAOA,EAAKhhJ,EAAKhM,GAAMlB,KAExB,CAED,OAAOkN,EAAIhM,EACX,EAEDilJ,EAAOC,QAAU,SAASz9G,IACzB,IAAIxuB,EAASjZ,EAAMuwF,EAAKjmF,EAAMgjJ,EAAal0B,EACvC1qH,EAASk/D,UAAU,GACnB1sE,EAAI,EACJ2E,EAAS+nE,UAAU/nE,OACnB0nJ,GAAO,EAaX,IAVsB,mBAAX7+I,IACV6+I,EAAO7+I,EACPA,EAASk/D,UAAU,IAAM,CAAC,EAE1B1sE,EAAI,IAES,MAAVwN,GAAqC,kBAAXA,GAAyC,oBAAXA,KAC3DA,EAAS,CAAC,GAGJxN,EAAI2E,IAAU3E,EAGpB,GAFA+X,EAAU20D,UAAU1sE,GAEL,MAAX+X,EAEH,IAAKjZ,KAAQiZ,EACZs3E,EAAM88D,EAAY3+I,EAAQ1O,GAC1BsK,EAAO+iJ,EAAYp0I,EAASjZ,GAGxB0O,IAAWpE,IAEVijJ,GAAQjjJ,IAAS6qE,EAAc7qE,KAAUgjJ,EAAclsJ,EAAQkJ,MAC9DgjJ,GACHA,GAAc,EACdl0B,EAAQ7oC,GAAOnvF,EAAQmvF,GAAOA,EAAM,IAEpC6oC,EAAQ7oC,GAAOpb,EAAcob,GAAOA,EAAM,CAAC,EAI5C48D,EAAYz+I,EAAQ,CAAE1O,KAAMA,EAAM80G,SAAUrtE,EAAO8lH,EAAMn0B,EAAO9uH,MAGtC,qBAATA,GACjB6iJ,EAAYz+I,EAAQ,CAAE1O,KAAMA,EAAM80G,SAAUxqG,KAQjD,OAAOoE,CACP,C;;;;;;;AC7GDu2I,EAAOC,QAAU,SAAmBl5I,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAIpM,aACY,oBAA7BoM,EAAIpM,YAAYm7E,UAA2B/uE,EAAIpM,YAAYm7E,SAAS/uE,EAC9E,C","sources":["webpack://noosphere/./src/views/EditorView.vue","webpack://noosphere/../src/code.ts","webpack://noosphere/../src/error.ts","webpack://noosphere/../src/index.ts","webpack://noosphere/../src/context/container.ts","webpack://noosphere/../src/context/shallow-clone.ts","webpack://noosphere/../src/context/slice.ts","webpack://noosphere/../src/plugin/ctx.ts","webpack://noosphere/../src/plugin/env.ts","webpack://noosphere/../src/plugin/pre.ts","webpack://noosphere/../src/timing/clock.ts","webpack://noosphere/../src/timing/timing.ts","webpack://noosphere/./node_modules/orderedmap/dist/index.js","webpack://noosphere/./node_modules/prosemirror-model/dist/index.js","webpack://noosphere/./node_modules/prosemirror-transform/dist/index.js","webpack://noosphere/./node_modules/prosemirror-state/dist/index.js","webpack://noosphere/./node_modules/prosemirror-view/dist/index.js","webpack://noosphere/../src/toolkit/browser.ts","webpack://noosphere/../src/toolkit/input-rules/custom-input-rules.ts","webpack://noosphere/../src/toolkit/position/index.ts","webpack://noosphere/../src/toolkit/prose/helper.ts","webpack://noosphere/../src/toolkit/prose/schema.ts","webpack://noosphere/../src/toolkit/prose/selection.ts","webpack://noosphere/./node_modules/prosemirror-commands/dist/index.js","webpack://noosphere/./node_modules/w3c-keyname/index.es.js","webpack://noosphere/./node_modules/prosemirror-keymap/dist/index.js","webpack://noosphere/./node_modules/mdast-util-to-string/index.js","webpack://noosphere/./node_modules/micromark-util-chunked/index.js","webpack://noosphere/./node_modules/micromark-util-combine-extensions/index.js","webpack://noosphere/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://noosphere/./node_modules/micromark-util-character/index.js","webpack://noosphere/./node_modules/micromark-factory-space/index.js","webpack://noosphere/./node_modules/micromark/lib/initialize/content.js","webpack://noosphere/./node_modules/micromark/lib/initialize/document.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://noosphere/./node_modules/micromark-util-subtokenize/index.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/content.js","webpack://noosphere/./node_modules/micromark/lib/initialize/flow.js","webpack://noosphere/./node_modules/micromark/lib/initialize/text.js","webpack://noosphere/./node_modules/micromark-util-resolve-all/index.js","webpack://noosphere/./node_modules/micromark/lib/create-tokenizer.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/list.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://noosphere/./node_modules/micromark-factory-destination/index.js","webpack://noosphere/./node_modules/micromark-factory-label/index.js","webpack://noosphere/./node_modules/micromark-factory-title/index.js","webpack://noosphere/./node_modules/micromark-factory-whitespace/index.js","webpack://noosphere/./node_modules/micromark-util-normalize-identifier/index.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://noosphere/./node_modules/micromark-util-html-tag-name/index.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://noosphere/./node_modules/decode-named-character-reference/index.dom.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://noosphere/./node_modules/micromark-util-classify-character/index.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://noosphere/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://noosphere/./node_modules/micromark/lib/constructs.js","webpack://noosphere/./node_modules/micromark/lib/parse.js","webpack://noosphere/./node_modules/micromark/lib/preprocess.js","webpack://noosphere/./node_modules/micromark/lib/postprocess.js","webpack://noosphere/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://noosphere/./node_modules/micromark-util-decode-string/index.js","webpack://noosphere/./node_modules/unist-util-stringify-position/index.js","webpack://noosphere/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://noosphere/./node_modules/remark-parse/lib/index.js","webpack://noosphere/./node_modules/remark-parse/index.js","webpack://noosphere/./node_modules/zwitch/index.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/configure.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://noosphere/./node_modules/longest-streak/index.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://noosphere/./node_modules/unist-util-is/index.js","webpack://noosphere/./node_modules/unist-util-visit-parents/color.browser.js","webpack://noosphere/./node_modules/unist-util-visit-parents/index.js","webpack://noosphere/./node_modules/unist-util-visit/index.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered-other.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/join.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/unsafe.js","webpack://noosphere/./node_modules/mdast-util-to-markdown/lib/index.js","webpack://noosphere/./node_modules/remark-stringify/lib/index.js","webpack://noosphere/./node_modules/remark-stringify/index.js","webpack://noosphere/./node_modules/bail/index.js","webpack://noosphere/./node_modules/is-plain-obj/index.js","webpack://noosphere/./node_modules/trough/index.js","webpack://noosphere/./node_modules/vfile-message/index.js","webpack://noosphere/./node_modules/vfile/lib/minpath.browser.js","webpack://noosphere/./node_modules/vfile/lib/minproc.browser.js","webpack://noosphere/./node_modules/vfile/lib/minurl.shared.js","webpack://noosphere/./node_modules/vfile/lib/minurl.browser.js","webpack://noosphere/./node_modules/vfile/lib/index.js","webpack://noosphere/./node_modules/unified/lib/index.js","webpack://noosphere/./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js","webpack://noosphere/./node_modules/stylis/src/Utility.js","webpack://noosphere/./node_modules/stylis/src/Tokenizer.js","webpack://noosphere/./node_modules/stylis/src/Enum.js","webpack://noosphere/./node_modules/stylis/src/Serializer.js","webpack://noosphere/./node_modules/stylis/src/Prefixer.js","webpack://noosphere/./node_modules/stylis/src/Middleware.js","webpack://noosphere/./node_modules/stylis/src/Parser.js","webpack://noosphere/./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","webpack://noosphere/../../../node_modules/.pnpm/@emotion+hash@0.8.0/node_modules/@emotion/hash/dist/hash.browser.esm.js","webpack://noosphere/../../../node_modules/.pnpm/@emotion+unitless@0.7.5/node_modules/@emotion/unitless/dist/unitless.browser.esm.js","webpack://noosphere/../../../node_modules/.pnpm/@emotion+memoize@0.7.5/node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","webpack://noosphere/../../../node_modules/.pnpm/@emotion+serialize@1.0.4/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","webpack://noosphere/../../../node_modules/.pnpm/@emotion+utils@1.1.0/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://noosphere/../../../node_modules/.pnpm/@emotion+css@11.9.0/node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","webpack://noosphere/../src/emotion.ts","webpack://noosphere/../src/manager.ts","webpack://noosphere/../src/keys/border.ts","webpack://noosphere/../src/keys/color.ts","webpack://noosphere/../src/keys/font.ts","webpack://noosphere/../src/keys/global.ts","webpack://noosphere/../src/keys/icon.ts","webpack://noosphere/../src/keys/renderer/code-fence.ts","webpack://noosphere/../src/keys/renderer/image.ts","webpack://noosphere/../src/keys/renderer/inner-editor.ts","webpack://noosphere/../src/keys/renderer/input-chip.ts","webpack://noosphere/../src/keys/renderer/task-list-item.ts","webpack://noosphere/../src/keys/scrollbar.ts","webpack://noosphere/../src/keys/shadow.ts","webpack://noosphere/../src/keys/size.ts","webpack://noosphere/../src/keys/index.ts","webpack://noosphere/../src/utils.ts","webpack://noosphere/../src/utility/stack.ts","webpack://noosphere/../src/parser/stack-element.ts","webpack://noosphere/../src/parser/stack.ts","webpack://noosphere/../src/parser/state.ts","webpack://noosphere/../src/parser/index.ts","webpack://noosphere/../src/serializer/stack-element.ts","webpack://noosphere/../src/serializer/stack.ts","webpack://noosphere/../src/serializer/state.ts","webpack://noosphere/../src/serializer/index.ts","webpack://noosphere/../src/internal-plugin/config.ts","webpack://noosphere/../src/internal-plugin/theme.ts","webpack://noosphere/../src/internal-plugin/init.ts","webpack://noosphere/../src/internal-plugin/schema.ts","webpack://noosphere/../src/internal-plugin/parser.ts","webpack://noosphere/../src/internal-plugin/serializer.ts","webpack://noosphere/../src/internal-plugin/editor-state.ts","webpack://noosphere/../src/internal-plugin/editor-view.ts","webpack://noosphere/../src/internal-plugin/commands.ts","webpack://noosphere/../src/editor/editor.ts","webpack://noosphere/./node_modules/rope-sequence/dist/index.es.js","webpack://noosphere/./node_modules/prosemirror-history/dist/index.js","webpack://noosphere/../src/prosemirror-view.ts","webpack://noosphere/../src/renderer-preset/code-fence.ts","webpack://noosphere/../src/renderer-preset/image.ts","webpack://noosphere/../src/renderer-preset/inner-editor.ts","webpack://noosphere/../src/renderer-preset/input-chip.ts","webpack://noosphere/../src/renderer-preset/task-list-item.ts","webpack://noosphere/../src/renderer-preset/index.ts","webpack://noosphere/../src/font.ts","webpack://noosphere/../src/icon.ts","webpack://noosphere/../src/nord.ts","webpack://noosphere/../src/style.ts","webpack://noosphere/./node_modules/nanoid/index.browser.js","webpack://noosphere/../src/atom/atom-list.ts","webpack://noosphere/../src/composable/utils.ts","webpack://noosphere/../src/composable/$remark.ts","webpack://noosphere/../src/factory/common.ts","webpack://noosphere/../src/pipe.ts","webpack://noosphere/../src/factory/pieces.ts","webpack://noosphere/../src/factory/pipeline.ts","webpack://noosphere/../src/factory/create-mark.ts","webpack://noosphere/../src/factory/create-node.ts","webpack://noosphere/../src/factory/create-plugin.ts","webpack://noosphere/./node_modules/prosemirror-inputrules/dist/index.js","webpack://noosphere/./node_modules/prosemirror-schema-list/dist/index.js","webpack://noosphere/./node_modules/mdast-util-definitions/index.js","webpack://noosphere/./node_modules/remark-inline-links/index.js","webpack://noosphere/../src/supported-keys.ts","webpack://noosphere/../src/mark/code-inline.ts","webpack://noosphere/../src/mark/em.ts","webpack://noosphere/../src/mark/link.ts","webpack://noosphere/../src/mark/strong.ts","webpack://noosphere/../src/mark/index.ts","webpack://noosphere/../src/node/blockquote.ts","webpack://noosphere/../src/node/bullet-list.ts","webpack://noosphere/../src/node/code-fence.ts","webpack://noosphere/../src/node/doc.ts","webpack://noosphere/../src/node/hardbreak.ts","webpack://noosphere/../src/node/heading.ts","webpack://noosphere/../src/node/hr.ts","webpack://noosphere/../src/node/image.ts","webpack://noosphere/../src/node/list-item.ts","webpack://noosphere/../src/node/ordered-list.ts","webpack://noosphere/../src/node/paragraph.ts","webpack://noosphere/../src/node/text.ts","webpack://noosphere/../src/node/index.ts","webpack://noosphere/../src/plugin/add-order-in-list.ts","webpack://noosphere/../src/plugin/filter-html.ts","webpack://noosphere/../src/plugin/inline-nodes-cursor.ts","webpack://noosphere/../src/plugin/inline-sync/regexp.ts","webpack://noosphere/../src/plugin/inline-sync/utils.ts","webpack://noosphere/../src/plugin/inline-sync/config.ts","webpack://noosphere/../src/plugin/inline-sync/context.ts","webpack://noosphere/../src/plugin/inline-sync/replacer.ts","webpack://noosphere/../src/plugin/inline-sync/index.ts","webpack://noosphere/../src/plugin/index.ts","webpack://noosphere/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://noosphere/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://noosphere/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://noosphere/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://noosphere/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://noosphere/./node_modules/micromark-extension-gfm/index.js","webpack://noosphere/./node_modules/ccount/index.js","webpack://noosphere/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://noosphere/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://noosphere/./node_modules/mdast-util-gfm-autolink-literal/index.js","webpack://noosphere/./node_modules/mdast-util-gfm-footnote/index.js","webpack://noosphere/./node_modules/mdast-util-gfm-strikethrough/index.js","webpack://noosphere/./node_modules/markdown-table/index.js","webpack://noosphere/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://noosphere/./node_modules/mdast-util-gfm-task-list-item/index.js","webpack://noosphere/./node_modules/mdast-util-gfm/lib/index.js","webpack://noosphere/./node_modules/remark-gfm/index.js","webpack://noosphere/../src/footnote/utils.ts","webpack://noosphere/../src/footnote/definition.ts","webpack://noosphere/../src/footnote/reference.ts","webpack://noosphere/../src/table/plugin/table-map.ts","webpack://noosphere/../src/table/plugin/cell-selection.ts","webpack://noosphere/../src/table/plugin/schema.ts","webpack://noosphere/../src/table/plugin/util.ts","webpack://noosphere/../src/table/command.ts","webpack://noosphere/../src/table/plugin/commands.ts","webpack://noosphere/../src/table/utils.ts","webpack://noosphere/../src/table/operator-plugin/helper.ts","webpack://noosphere/../src/table/operator-plugin/actions.ts","webpack://noosphere/../src/table/operator-plugin/calc-pos.ts","webpack://noosphere/../src/table/operator-plugin/constant.ts","webpack://noosphere/../src/table/operator-plugin/style.ts","webpack://noosphere/../src/table/operator-plugin/widget.ts","webpack://noosphere/../src/table/operator-plugin/index.ts","webpack://noosphere/../src/table/plugin/auto-insert-zero-space.ts","webpack://noosphere/../src/table/plugin/table-view.ts","webpack://noosphere/../src/table/plugin/column-resizing.ts","webpack://noosphere/../src/table/plugin/copy-paste.ts","webpack://noosphere/../src/table/plugin/fix-tables.ts","webpack://noosphere/../src/table/plugin/table-editing.ts","webpack://noosphere/../src/table/nodes/index.ts","webpack://noosphere/../src/strike-through.ts","webpack://noosphere/../src/task-list-item.ts","webpack://noosphere/./node_modules/y-prosemirror/src/plugins/keys.js","webpack://noosphere/./node_modules/lib0/mutex.js","webpack://noosphere/./node_modules/lib0/math.js","webpack://noosphere/./node_modules/lib0/object.js","webpack://noosphere/./node_modules/lib0/set.js","webpack://noosphere/./node_modules/lib0/diff.js","webpack://noosphere/./node_modules/lib0/error.js","webpack://noosphere/./node_modules/lib0/map.js","webpack://noosphere/./node_modules/lib0/array.js","webpack://noosphere/./node_modules/lib0/observable.js","webpack://noosphere/./node_modules/lib0/string.js","webpack://noosphere/./node_modules/lib0/conditions.js","webpack://noosphere/./node_modules/lib0/storage.js","webpack://noosphere/./node_modules/lib0/environment.js","webpack://noosphere/./node_modules/lib0/buffer.js","webpack://noosphere/./node_modules/lib0/binary.js","webpack://noosphere/./node_modules/lib0/number.js","webpack://noosphere/./node_modules/lib0/encoding.js","webpack://noosphere/./node_modules/lib0/decoding.js","webpack://noosphere/./node_modules/isomorphic.js/browser.mjs","webpack://noosphere/./node_modules/lib0/random.js","webpack://noosphere/./node_modules/lib0/promise.js","webpack://noosphere/./node_modules/lib0/function.js","webpack://noosphere/./node_modules/lib0/symbol.js","webpack://noosphere/./node_modules/lib0/pair.js","webpack://noosphere/./node_modules/lib0/dom.js","webpack://noosphere/./node_modules/lib0/time.js","webpack://noosphere/./node_modules/lib0/logging.js","webpack://noosphere/./node_modules/lib0/iterator.js","webpack://noosphere/../src/utils/DeleteSet.js","webpack://noosphere/../src/utils/Doc.js","webpack://noosphere/../src/utils/UpdateDecoder.js","webpack://noosphere/../src/utils/UpdateEncoder.js","webpack://noosphere/../src/utils/encoding.js","webpack://noosphere/../src/utils/EventHandler.js","webpack://noosphere/../src/utils/ID.js","webpack://noosphere/../src/utils/isParentOf.js","webpack://noosphere/../src/utils/RelativePosition.js","webpack://noosphere/../src/utils/Snapshot.js","webpack://noosphere/../src/utils/StructStore.js","webpack://noosphere/../src/utils/Transaction.js","webpack://noosphere/../src/utils/UndoManager.js","webpack://noosphere/../src/utils/updates.js","webpack://noosphere/../src/utils/YEvent.js","webpack://noosphere/../src/types/AbstractType.js","webpack://noosphere/../src/types/YArray.js","webpack://noosphere/../src/types/YMap.js","webpack://noosphere/../src/types/YText.js","webpack://noosphere/../src/types/YXmlFragment.js","webpack://noosphere/../src/types/YXmlElement.js","webpack://noosphere/../src/types/YXmlEvent.js","webpack://noosphere/../src/types/YXmlHook.js","webpack://noosphere/../src/types/YXmlText.js","webpack://noosphere/../src/structs/AbstractStruct.js","webpack://noosphere/../src/structs/GC.js","webpack://noosphere/../src/structs/ContentBinary.js","webpack://noosphere/../src/structs/ContentDeleted.js","webpack://noosphere/../src/structs/ContentDoc.js","webpack://noosphere/../src/structs/ContentEmbed.js","webpack://noosphere/../src/structs/ContentFormat.js","webpack://noosphere/../src/structs/ContentJSON.js","webpack://noosphere/../src/structs/ContentAny.js","webpack://noosphere/../src/structs/ContentString.js","webpack://noosphere/../src/structs/ContentType.js","webpack://noosphere/../src/structs/Item.js","webpack://noosphere/../src/structs/Skip.js","webpack://noosphere/../src/index.js","webpack://noosphere/./node_modules/lib0/eventloop.js","webpack://noosphere/./node_modules/y-prosemirror/src/plugins/sync-plugin.js","webpack://noosphere/./node_modules/y-prosemirror/src/lib.js","webpack://noosphere/./node_modules/y-prosemirror/src/plugins/undo-plugin.js","webpack://noosphere/./node_modules/y-protocols/awareness.js","webpack://noosphere/./node_modules/y-prosemirror/src/plugins/cursor-plugin.js","webpack://noosphere/../src/collab-service.ts","webpack://noosphere/../src/injectStyle.ts","webpack://noosphere/../src/default-config.ts","webpack://noosphere/../src/button.ts","webpack://noosphere/../src/divider.ts","webpack://noosphere/../src/select.ts","webpack://noosphere/../src/menubar.ts","webpack://noosphere/./node_modules/scroll-into-view-if-needed/es/index.js","webpack://noosphere/./node_modules/smooth-scroll-into-view-if-needed/es/index.js","webpack://noosphere/../src/utility.ts","webpack://noosphere/../src/config.ts","webpack://noosphere/../src/prose-plugin/props.ts","webpack://noosphere/../src/item.ts","webpack://noosphere/../src/prose-plugin/status.ts","webpack://noosphere/../src/prose-plugin/dropdown.ts","webpack://noosphere/../src/prose-plugin/input.ts","webpack://noosphere/../src/prose-plugin/view.ts","webpack://noosphere/../src/prose-plugin/index.ts","webpack://noosphere/../src/utility/prosemirror.ts","webpack://noosphere/../src/button-manager/calc-button-pos.ts","webpack://noosphere/../src/button-manager/style.ts","webpack://noosphere/../src/button-manager/create-tooltip.ts","webpack://noosphere/../src/button-manager/no-active.ts","webpack://noosphere/../src/button-manager/filter-button.ts","webpack://noosphere/../src/button-manager/index.ts","webpack://noosphere/../src/selection-marks-tooltip.ts","webpack://noosphere/../src/clipboard.ts","webpack://noosphere/./node_modules/prosemirror-dropcursor/dist/index.js","webpack://noosphere/./node_modules/prosemirror-gapcursor/dist/index.js","webpack://noosphere/./node_modules/lib0/broadcastchannel.js","webpack://noosphere/./node_modules/y-protocols/sync.js","webpack://noosphere/./node_modules/y-protocols/auth.js","webpack://noosphere/./node_modules/lib0/url.js","webpack://noosphere/./node_modules/y-websocket/src/y-websocket.js","webpack://noosphere/./node_modules/lib0/indexeddb.js","webpack://noosphere/./node_modules/y-indexeddb/src/y-indexeddb.js","webpack://noosphere/./src/services/collabManager.js","webpack://noosphere/src/views/EditorView.vue","webpack://noosphere/./src/views/EditorView.vue?2c53","webpack://noosphere/./src/views/EditorView.vue?1c1b","webpack://noosphere/./node_modules/core-js/internals/an-instance.js","webpack://noosphere/./node_modules/core-js/internals/array-buffer-basic-detection.js","webpack://noosphere/./node_modules/core-js/internals/array-buffer-view-core.js","webpack://noosphere/./node_modules/core-js/internals/array-iteration-from-last.js","webpack://noosphere/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://noosphere/./node_modules/core-js/internals/dom-exception-constants.js","webpack://noosphere/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://noosphere/./node_modules/core-js/modules/es.typed-array.at.js","webpack://noosphere/./node_modules/core-js/modules/es.typed-array.find-last-index.js","webpack://noosphere/./node_modules/core-js/modules/es.typed-array.find-last.js","webpack://noosphere/./node_modules/core-js/modules/web.dom-exception.stack.js","webpack://noosphere/./node_modules/extend/index.js","webpack://noosphere/./node_modules/is-buffer/index.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('b-button',{on:{\"click\":_vm.connect}},[_vm._v(\"Connect\")]),_c('b-button',{on:{\"click\":_vm.disconnect}},[_vm._v(\"Disonnect\")]),_c('b-input',{attrs:{\"placeholder\":\"room\"},model:{value:(_vm.room),callback:function ($$v) {_vm.room=$$v},expression:\"room\"}}),_c('b-button',{on:{\"click\":_vm.open}},[_vm._v(\"Open\")]),_vm._v(\" status: \"+_vm._s(_vm.collabManager != null && _vm.collabManager.status)+\" \"),_c('div',{ref:\"editor\"})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* Copyright 2021, Milkdown by Mirone. */\nexport const enum ErrorCode {\n    docTypeError = 'docTypeError',\n    contextNotFound = 'contextNotFound',\n    timerNotFound = 'timerNotFound',\n    ctxCallOutOfScope = 'ctxCallOutOfScope',\n    createNodeInParserFail = 'createNodeInParserFail',\n    stackOverFlow = 'stackOverFlow',\n    parserMatchError = 'parserMatchError',\n    serializerMatchError = 'serializerMatchError',\n    getAtomFromSchemaFail = 'getAtomFromSchemaFail',\n    expectDomTypeError = 'expectDomTypeError',\n    callCommandBeforeEditorView = 'callCommandBeforeEditorView',\n    themeMustInstalled = 'themeMustInstalled',\n    missingRootElement = 'missingRootElement',\n    missingNodeInSchema = 'missingNodeInSchema',\n    missingMarkInSchema = 'missingMarkInSchema',\n\n    // theme\n    missingIcon = 'missingIcon',\n\n    // vue\n    vueRendererCallOutOfScope = 'vueRendererCallOutOfScope',\n\n    // collab plugin\n    ctxNotBind = 'ctxNotBind',\n    missingYjsDoc = 'missingYjsDoc',\n\n    // menu plugin\n    repeatCallsToMenuWrapperInit = 'repeatCallsToMenuWrapperInit',\n    missingMenuWrapper = 'missingMenuWrapper',\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { ErrorCode } from './code';\n\nexport class MilkdownError extends Error {\n    public code: string;\n    constructor(code: ErrorCode, message: string) {\n        super(message);\n        this.name = 'MilkdownError';\n        this.code = code;\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ErrorCode } from './code';\nimport { MilkdownError } from './error';\n\nconst functionReplacer = (_: string, value: unknown) => (typeof value === 'function' ? '[Function]' : value);\n\nconst stringify = (x: unknown): string => JSON.stringify(x, functionReplacer);\n\nexport const docTypeError = (type: unknown) =>\n    new MilkdownError(ErrorCode.docTypeError, `Doc type error, unsupported type: ${stringify(type)}`);\n\nexport const contextNotFound = (name: string) =>\n    new MilkdownError(ErrorCode.contextNotFound, `Context \"${name}\" not found, do you forget to inject it?`);\n\nexport const timerNotFound = (name: string) =>\n    new MilkdownError(ErrorCode.timerNotFound, `Timer \"${name}\" not found, do you forget to record it?`);\n\nexport const ctxCallOutOfScope = () =>\n    new MilkdownError(ErrorCode.ctxCallOutOfScope, 'Should not call a context out of the plugin.');\n\nexport const createNodeInParserFail = (...args: unknown[]) => {\n    const message = args.reduce((msg, arg) => {\n        if (!arg) {\n            return msg;\n        }\n        const serialize = (x: unknown): string => {\n            if (Array.isArray(x)) {\n                return (x as unknown[]).map((y) => serialize(y)).join(', ');\n            }\n            if ((x as { toJSON(): Record<string, unknown> }).toJSON) {\n                return stringify((x as { toJSON(): Record<string, unknown> }).toJSON());\n            }\n\n            if ((x as { spec: string }).spec) {\n                return stringify((x as { spec: string }).spec);\n            }\n\n            return (x as { toString(): string }).toString();\n        };\n        return `${msg}, ${serialize(arg)}`;\n    }, 'Create prosemirror node from remark failed in parser') as string;\n\n    return new MilkdownError(ErrorCode.createNodeInParserFail, message);\n};\n\nexport const stackOverFlow = () =>\n    new MilkdownError(ErrorCode.stackOverFlow, 'Stack over flow, cannot pop on an empty stack.');\n\nexport const parserMatchError = (node: unknown) =>\n    new MilkdownError(ErrorCode.parserMatchError, `Cannot match target parser for node: ${stringify(node)}.`);\n\nexport const serializerMatchError = (node: unknown) =>\n    new MilkdownError(ErrorCode.serializerMatchError, `Cannot match target serializer for node: ${stringify(node)}.`);\n\nexport const getAtomFromSchemaFail = (type: 'mark' | 'node', name: string) =>\n    new MilkdownError(ErrorCode.getAtomFromSchemaFail, `Cannot get ${type}: ${name} from schema.`);\n\nexport const expectDomTypeError = (node: unknown) =>\n    new MilkdownError(ErrorCode.expectDomTypeError, `Expect to be a dom, but get: ${stringify(node)}.`);\n\nexport const callCommandBeforeEditorView = () =>\n    new MilkdownError(\n        ErrorCode.callCommandBeforeEditorView,\n        `You're trying to call a command before editor view initialized, make sure to get commandManager from ctx after editor view has been initialized`,\n    );\n\nexport const themeMustInstalled = () =>\n    new MilkdownError(\n        ErrorCode.themeMustInstalled,\n        `It seems that no theme found in editor, please make sure you have use theme in front of all plugins.\nIf you prefer to use an empty theme, you can use \\`themeFactory({})\\`.`,\n    );\n\nexport const missingRootElement = () =>\n    new MilkdownError(\n        ErrorCode.missingRootElement,\n        'Missing root element, milkdown cannot find root element of the editor.',\n    );\n\nexport const missingNodeInSchema = (name: string) =>\n    new MilkdownError(\n        ErrorCode.missingNodeInSchema,\n        `Missing node in schema, milkdown cannot find \"${name}\" in schema.`,\n    );\n\nexport const missingMarkInSchema = (name: string) =>\n    new MilkdownError(\n        ErrorCode.missingMarkInSchema,\n        `Missing mark in schema, milkdown cannot find \"${name}\" in schema.`,\n    );\n\nexport const missingIcon = (name: string) =>\n    new MilkdownError(ErrorCode.missingIcon, `Missing icon in theme, milkdown cannot find icon \"${name}\" in theme.`);\n\nexport const ctxNotBind = () =>\n    new MilkdownError(ErrorCode.ctxNotBind, 'Context not bind, please make sure the plugin has been initialized.');\n\nexport const missingYjsDoc = () =>\n    new MilkdownError(ErrorCode.missingYjsDoc, 'Missing yjs doc, please make sure you have bind one.');\n\nexport const vueRendererCallOutOfScope = () =>\n    new MilkdownError(ErrorCode.vueRendererCallOutOfScope, 'Should not call vue renderer before it has been created.');\n\nexport const missingMenuWrapper = () =>\n    new MilkdownError(ErrorCode.missingMenuWrapper, 'Missing menu wrapper, should init menu wrapper first.');\n\nexport const repeatCallsToMenuWrapperInit = () =>\n    new MilkdownError(ErrorCode.repeatCallsToMenuWrapperInit, 'Repeated calls to menu wrapper initialization');\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { contextNotFound } from '@milkdown/exception';\n\nimport { $Slice, Slice } from './slice';\n\nexport type Container = {\n    readonly getSlice: <T, N extends string = string>(slice: Slice<T, N> | N) => $Slice<T, N>;\n    readonly sliceMap: Map<symbol, $Slice>;\n};\n\nexport const createContainer = (): Container => {\n    const sliceMap: Map<symbol, $Slice> = new Map();\n\n    const getSlice = <T, N extends string = string>(slice: Slice<T, N> | N): $Slice<T, N> => {\n        const context =\n            typeof slice === 'string' ? [...sliceMap.values()].find((x) => x.name === slice) : sliceMap.get(slice.id);\n\n        if (!context) {\n            const name = typeof slice === 'string' ? slice : slice.sliceName;\n            throw contextNotFound(name);\n        }\n        return context as $Slice<T, N>;\n    };\n\n    return { getSlice, sliceMap };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nexport const shallowClone = <T>(x: T): T => {\n    if (Array.isArray(x)) {\n        return [...(x as unknown[])] as unknown as T;\n    }\n    if (typeof x === 'object') {\n        return { ...x };\n    }\n    return x;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ctxCallOutOfScope } from '@milkdown/exception';\n\nimport { shallowClone } from './shallow-clone';\n\nexport type $Slice<T = unknown, N extends string = string> = {\n    readonly id: symbol;\n    readonly name: N;\n    readonly set: (value: T) => void;\n    readonly get: () => T;\n    readonly update: (updater: (prev: T) => T) => void;\n};\n\nexport type SliceMap = Map<symbol, $Slice>;\n\nexport type Slice<T, N extends string = string> = {\n    readonly id: symbol;\n    readonly sliceName: N;\n    readonly _typeInfo: () => T;\n    (container: SliceMap, resetValue?: T): $Slice<T>;\n};\n\nexport const createSlice = <T, N extends string = string>(value: T, name: N): Slice<T, N> => {\n    const id = Symbol('Context');\n\n    const factory = (container: SliceMap, resetValue = shallowClone(value)) => {\n        let inner = resetValue;\n\n        const context: $Slice<T> = {\n            name,\n            id,\n            set: (next) => {\n                inner = next;\n            },\n            get: () => inner,\n            update: (updater) => {\n                inner = updater(inner);\n            },\n        };\n        container.set(id, context as $Slice);\n        return context;\n    };\n    factory.sliceName = name;\n    factory.id = id;\n    factory._typeInfo = (): T => {\n        throw ctxCallOutOfScope();\n    };\n\n    return factory;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { $Slice, Container, Slice } from '../context';\nimport type { Clock, Timer } from '../timing';\n\n/**\n * The ctx object that can be accessed in plugin and action.\n */\nexport class Ctx {\n    #container: Container;\n    #clock: Clock;\n\n    constructor(container: Container, clock: Clock) {\n        this.#container = container;\n        this.#clock = clock;\n    }\n\n    /**\n     * Get the slice instance.\n     *\n     * @param slice - The slice or slice name that needs to be used.\n     * @returns The slice instance.\n     */\n    readonly use = <T, N extends string = string>(slice: Slice<T, N> | N): $Slice<T, N> =>\n        this.#container.getSlice(slice);\n\n    /**\n     * Get the slice value.\n     *\n     * @param slice - The slice needs to be used.\n     * @returns The slice value.\n     */\n    readonly get = <T, N extends string>(slice: Slice<T, N>) => this.use(slice).get();\n\n    /**\n     * Set the slice value.\n     *\n     * @param slice - The slice needs to be used.\n     * @param value - The default value.\n     * @returns\n     */\n    readonly set = <T, N extends string>(slice: Slice<T, N>, value: T) => this.use(slice).set(value);\n\n    /**\n     * Update the slice by its current value.\n     *\n     * @example\n     * ```\n     * update(NumberSlice, x => x + 1);\n     * ```\n     *\n     * @param slice - The slice needs to be used.\n     * @param updater - The update function, gets current value as parameter and returns new value.\n     * @returns\n     */\n    readonly update = <T, N extends string>(slice: Slice<T, N>, updater: (prev: T) => T) =>\n        this.use(slice).update(updater);\n\n    /**\n     * Get the timer instance.\n     *\n     * @param timer - The timer needs to be used.\n     * @returns The timer instance.\n     */\n    readonly timing = (timer: Timer) => this.#clock.get(timer);\n\n    /**\n     * Wait for a timer to finish.\n     *\n     * @param timer - The timer needs to be used.\n     * @returns A promise that will be resolved when timer finish.\n     */\n    readonly wait = (timer: Timer) => this.timing(timer)();\n\n    /**\n     * Finish a timer\n     *\n     * @param timer - The timer needs to be finished.\n     * @returns\n     */\n    readonly done = (timer: Timer) => this.timing(timer).done();\n\n    /**\n     * Wait for a list of timers in target slice to be all finished.\n     *\n     * @param slice - The slice that holds a list of timer.\n     * @returns A promise that will be resolved when all timers finish.\n     */\n    readonly waitTimers = async (slice: Slice<Timer[]>) => {\n        await Promise.all(this.get(slice).map((x) => this.wait(x)));\n        return;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { $Slice, Container, Slice } from '../context';\nimport { Clock, Timer } from '../timing';\n\nexport class Env {\n    #container: Container;\n    #clock: Clock;\n\n    constructor(container: Container, clock: Clock) {\n        this.#container = container;\n        this.#clock = clock;\n    }\n\n    /**\n     * Inject a context into current editor.\n     *\n     * @param ctx - The context needs to be injected.\n     * @param defaultValue - The default value of this context.\n     * @returns Pre.\n     */\n    readonly inject = <T>(ctx: Slice<T>, defaultValue?: T) => {\n        ctx(this.#container.sliceMap, defaultValue);\n        return this;\n    };\n\n    /**\n     * Start to record for a timer.\n     *\n     * @param timer - The timer needs to be recorded.\n     * @returns Pre.\n     */\n    readonly record = (timer: Timer) => {\n        timer(this.#clock.store);\n        return this;\n    };\n\n    /**\n     * Get the slice instance.\n     *\n     * @param slice - The slice or slice name that needs to be used.\n     * @returns The slice instance.\n     */\n    readonly use = <T, N extends string = string>(slice: Slice<T, N> | N): $Slice<T, N> =>\n        this.#container.getSlice(slice);\n\n    /**\n     * Get the slice value.\n     *\n     * @param slice - The slice needs to be used.\n     * @returns The slice value.\n     */\n    readonly get = <T, N extends string>(slice: Slice<T, N>) => this.use(slice).get();\n\n    /**\n     * Set the slice value.\n     *\n     * @param slice - The slice needs to be used.\n     * @param value - The default value.\n     * @returns\n     */\n    readonly set = <T, N extends string>(slice: Slice<T, N>, value: T) => this.use(slice).set(value);\n\n    /**\n     * Update the slice by its current value.\n     *\n     * @example\n     * ```\n     * update(NumberSlice, x => x + 1);\n     * ```\n     *\n     * @param slice - The slice needs to be used.\n     * @param updater - The update function, gets current value as parameter and returns new value.\n     * @returns\n     */\n    readonly update = <T, N extends string>(slice: Slice<T, N>, updater: (prev: T) => T) =>\n        this.use(slice).update(updater);\n\n    /**\n     * Get the timer instance.\n     *\n     * @param timer - The timer needs to be used.\n     * @returns The timer instance.\n     */\n    readonly timing = (timer: Timer) => this.#clock.get(timer);\n\n    /**\n     * Wait for a timer to finish.\n     *\n     * @param timer - The timer needs to be used.\n     * @returns A promise that will be resolved when timer finish.\n     */\n    readonly wait = (timer: Timer) => this.timing(timer)();\n\n    /**\n     * Finish a timer\n     *\n     * @param timer - The timer needs to be finished.\n     * @returns\n     */\n    readonly done = (timer: Timer) => this.timing(timer).done();\n\n    /**\n     * Wait for a list of timers in target slice to be all finished.\n     *\n     * @param slice - The slice that holds a list of timer.\n     * @returns A promise that will be resolved when all timers finish.\n     */\n    readonly waitTimers = async (slice: Slice<Timer[]>) => {\n        await Promise.all(this.get(slice).map((x) => this.wait(x)));\n        return;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Container, Slice } from '../context';\nimport type { Clock, Timer } from '../timing';\n\nexport class Pre {\n    #container: Container;\n    #clock: Clock;\n\n    constructor(container: Container, clock: Clock) {\n        this.#container = container;\n        this.#clock = clock;\n    }\n\n    /**\n     * Inject a context into current editor.\n     *\n     * @param ctx - The context needs to be injected.\n     * @param defaultValue - The default value of this context.\n     * @returns Pre.\n     */\n    readonly inject = <T>(ctx: Slice<T>, defaultValue?: T) => {\n        ctx(this.#container.sliceMap, defaultValue);\n        return this;\n    };\n\n    /**\n     * Start to record for a timer.\n     *\n     * @param timer - The timer needs to be recorded.\n     * @returns Pre.\n     */\n    readonly record = (timer: Timer) => {\n        timer(this.#clock.store);\n        return this;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { timerNotFound } from '@milkdown/exception';\n\nimport { Timing } from './timing';\n\nexport type ClockMap = Map<symbol, Timing>;\n\nexport type Timer = {\n    (store: ClockMap): Timing;\n    id: symbol;\n};\n\nexport type Clock = {\n    store: ClockMap;\n    get: (timer: Timer) => Timing;\n};\n\nexport const createClock = (): Clock => {\n    const store: ClockMap = new Map();\n    const get = (timer: Timer) => {\n        const meta = store.get(timer.id);\n        if (!meta) throw timerNotFound(timer.name);\n        return meta;\n    };\n\n    return {\n        store,\n        get,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ClockMap, Timer } from './clock';\n\nexport type Timing = {\n    (): Promise<void>;\n    done: () => void;\n};\n\nexport const createTimer = (name: string, timeout = 3000): Timer => {\n    const id = Symbol('Timer');\n\n    const timer = (store: ClockMap) => {\n        let promise: Promise<void> | null = null;\n        let listener: EventListener;\n\n        const data = Symbol(name);\n\n        const timing: Timing = () =>\n            (promise ??= new Promise((resolve, reject) => {\n                listener = (e: Event) => {\n                    if (!(e instanceof CustomEvent)) {\n                        return;\n                    }\n                    if (e.detail.id === data) {\n                        removeEventListener(name, listener);\n                        e.stopImmediatePropagation();\n                        resolve();\n                    }\n                };\n                setTimeout(() => {\n                    reject(`Timing ${name} timeout.`);\n                    removeEventListener(name, listener);\n                }, timeout);\n                addEventListener(name, listener);\n            }));\n        timing.done = () => {\n            const event = new CustomEvent(name, { detail: { id: data } });\n            dispatchEvent(event);\n        };\n\n        store.set(id, timing);\n\n        return timing;\n    };\n    timer.id = id;\n\n    return timer;\n};\n","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", separated = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            if (node.isText) {\n                text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n                separated = !blockSeparator;\n            }\n            else if (node.isLeaf) {\n                if (leafText) {\n                    text += typeof leafText === \"function\" ? leafText(node) : leafText;\n                }\n                else if (node.type.spec.leafText) {\n                    text += node.type.spec.leafText(node);\n                }\n                separated = !blockSeparator;\n            }\n            else if (!separated && node.isBlock) {\n                text += blockSeparator;\n                separated = true;\n            }\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. (Not public.)\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        return type.create(json.attrs);\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    if (!node.type.validContent(content))\n        throw new ReplaceError(\"Invalid content for node \" + node.type.name);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        for (let i = 0; i < resolveCache.length; i++) {\n            let cached = resolveCache[i];\n            if (cached.pos == pos && cached.doc == doc)\n                return cached;\n        }\n        let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n        resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n        return result;\n    }\n}\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    parent-relative position, its parent node, and its child index.\n    When the callback returns false for a given node, that node's\n    children will not be recursed over. The last parameter can be\n    used to specify a starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise error when they do not.\n    */\n    check() {\n        if (!this.type.validContent(this.content))\n            throw new RangeError(`Invalid content for node ${this.type.name}: ${this.content.toString().slice(0, 50)}`);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++)\n            copy = this.marks[i].addToSet(copy);\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = null;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        return schema.nodeType(json.type).create(json.attrs, content, marks);\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.groups.indexOf(name) > -1)\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n/**\nConstruct an NFA from an expression as returned by the parser. The\nNFA is represented as an array of states, which are themselves\narrays of edges, which are `{term, to}` objects. The first state is\nthe entry state and the last node is the success state.\n\nNote that unlike typical NFAs, the edge ordering in this one is\nsignificant, in that it is used to contruct filler content when\nnecessary.\n*/\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction initAttrs(attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        if (!this.validContent(content))\n            throw new RangeError(\"Invalid content for node \" + this.name);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type with the given attributes.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        this.spec = {\n            nodes: OrderedMap.from(spec.nodes),\n            marks: OrderedMap.from(spec.marks || {}),\n            topNode: spec.topNode\n        };\n        this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        rules.forEach(rule => {\n            if (rule.tag)\n                this.tags.push(rule);\n            else if (rule.style)\n                this.styles.push(rule);\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, \n    // Marks applied to this node itself\n    marks, \n    // Marks that can't apply here, but will be used in children if possible\n    pendingMarks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.pendingMarks = pendingMarks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        // Nested Marks with same type\n        this.stashMarks = [];\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    popFromStashMark(mark) {\n        for (let i = this.stashMarks.length - 1; i >= 0; i--)\n            if (mark.eq(this.stashMarks[i]))\n                return this.stashMarks.splice(i, 1)[0];\n    }\n    applyPending(nextType) {\n        for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n            let mark = pending[i];\n            if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n                !mark.isInSet(this.activeMarks)) {\n                this.activeMarks = mark.addToSet(this.activeMarks);\n                this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n            }\n        }\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom) {\n        if (dom.nodeType == 3) {\n            this.addTextNode(dom);\n        }\n        else if (dom.nodeType == 1) {\n            let style = dom.getAttribute(\"style\");\n            let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top;\n            if (marks != null)\n                for (let i = 0; i < marks.length; i++)\n                    this.addPendingMark(marks[i]);\n            this.addElement(dom);\n            if (marks != null)\n                for (let i = 0; i < marks.length; i++)\n                    this.removePendingMark(marks[i], top);\n        }\n    }\n    addTextNode(dom) {\n        let value = dom.nodeValue;\n        let top = this.top;\n        if (top.options & OPT_PRESERVE_WS_FULL ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!(top.options & OPT_PRESERVE_WS)) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value));\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, matchAfter) {\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, top = this.top, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom);\n                return;\n            }\n            this.addAll(dom);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : undefined);\n        }\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"));\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"));\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an array of marks, or null to indicate some of the styles\n    // had a rule with `ignore` set.\n    readStyles(styles) {\n        let marks = Mark.none;\n        style: for (let i = 0; i < styles.length; i += 2) {\n            for (let after = undefined;;) {\n                let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n                if (!rule)\n                    continue style;\n                if (rule.ignore)\n                    return null;\n                marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks);\n                if (rule.consuming === false)\n                    after = rule;\n                else\n                    break;\n            }\n        }\n        return marks;\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, continueAfter) {\n        let sync, nodeType, mark;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                sync = this.enter(nodeType, rule.attrs || null, rule.preserveWhitespace);\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs))) {\n                this.leafFallback(dom);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            mark = markType.create(rule.attrs);\n            this.addPendingMark(mark);\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n        if (mark)\n            this.removePendingMark(mark, startIn);\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return false;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            this.enterInner(route[i], null, false);\n        return true;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                this.enterInner(block);\n        }\n        if (this.findPlace(node)) {\n            this.closeExtra();\n            let top = this.top;\n            top.applyPending(node.type);\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let marks = top.activeMarks;\n            for (let i = 0; i < node.marks.length; i++)\n                if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n                    marks = node.marks[i].addToSet(marks);\n            top.content.push(node.mark(marks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, preserveWS) {\n        let ok = this.findPlace(type.create(attrs));\n        if (ok)\n            this.enterInner(type, attrs, true, preserveWS);\n        return ok;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs = null, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.applyPending(type);\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n        this.open++;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(this.isOpen || this.options.topOpen);\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--)\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n    addPendingMark(mark) {\n        let found = findSameMarkInSet(mark, this.top.pendingMarks);\n        if (found)\n            this.top.stashMarks.push(found);\n        this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n    }\n    removePendingMark(mark, upto) {\n        for (let depth = this.open; depth >= 0; depth--) {\n            let level = this.nodes[depth];\n            let found = level.pendingMarks.lastIndexOf(mark);\n            if (found > -1) {\n                level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n            }\n            else {\n                level.activeMarks = mark.removeFromSet(level.activeMarks);\n                let stashMark = level.popFromStashMark(mark);\n                if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n                    level.activeMarks = stashMark.addToSet(level.activeMarks);\n            }\n            if (level == upto)\n                break;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n    let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n    while (m = re.exec(style))\n        result.push(m[1], m[2].trim());\n    return result;\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\nfunction findSameMarkInSet(mark, set) {\n    for (let i = 0; i < set.length; i++) {\n        if (mark.eq(set[i]))\n            return set[i];\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline));\n    }\n    /**\n    Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If\n    the spec has a hole (zero) in it, `contentDOM` will point at the\n    node with the hole.\n    */\n    static renderSpec(doc, structure, xmlNS = null) {\n        if (typeof structure == \"string\")\n            return { dom: doc.createTextNode(structure) };\n        if (structure.nodeType != null)\n            return { dom: structure };\n        if (structure.dom && structure.dom.nodeType != null)\n            return structure;\n        let tagName = structure[0], space = tagName.indexOf(\" \");\n        if (space > 0) {\n            xmlNS = tagName.slice(0, space);\n            tagName = tagName.slice(space + 1);\n        }\n        let contentDOM;\n        let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n        let attrs = structure[1], start = 1;\n        if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n            start = 2;\n            for (let name in attrs)\n                if (attrs[name] != null) {\n                    let space = name.indexOf(\" \");\n                    if (space > 0)\n                        dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                    else\n                        dom.setAttribute(name, attrs[name]);\n                }\n        }\n        for (let i = start; i < structure.length; i++) {\n            let child = structure[i];\n            if (child === 0) {\n                if (i < structure.length - 1 || i > start)\n                    throw new RangeError(\"Content hole must be the only child of its parent node\");\n                return { dom, contentDOM: dom };\n            }\n            else {\n                let { dom: inner, contentDOM: innerContent } = DOMSerializer.renderSpec(doc, child, xmlNS);\n                dom.appendChild(inner);\n                if (innerContent) {\n                    if (contentDOM)\n                        throw new RangeError(\"Multiple content holes\");\n                    contentDOM = innerContent;\n                }\n            }\n        }\n        return { dom, contentDOM };\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n","import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch) {\n    let node = tr.doc.nodeAt(pos);\n    let delSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            delSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = delSteps.length - 1; i >= 0; i--)\n        tr.step(delSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            tr.clearIncompatible(tr.mapping.slice(mapFrom).map(pos, 1), type);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n            return false;\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (after != node)\n            rest = rest.replaceChild(0, after.type.create(after.attrs));\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && a.canAppend(b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n    tr.step(step);\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let type = leftNodes[d].type, def = definesContent(type);\n        if (def && $from.node(preferredTargetIndex).type != type)\n            preferredDepth = d;\n        else if (def || !type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks = []) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata properties:\nit will attach a property `\"pointer\"` with the value `true` to\nselection transactions directly caused by mouse or touch input, and\na `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @ignore\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n","import { TextSelection, NodeSelection, Selection, AllSelection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    let collapsed = domSel.isCollapsed;\n    if (collapsed && chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n        collapsed = false;\n    return collapsed;\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\n\nfunction windowRect(doc) {\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop)\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outside = -1;\n    for (let cur = node;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.node.isBlock && desc.parent) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (rect.left > coords.left || rect.top > coords.top)\n                outside = desc.posBefore;\n            else if (rect.right < coords.left || rect.bottom < coords.top)\n                outside = desc.posAfter;\n            else\n                break;\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outside > -1 ? outside : view.docView.posFromDOM(node, offset, 1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(coords.left, coords.top);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        catch (_) { }\n    }\n    if (!node && doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(coords.left, coords.top);\n        if (range)\n            ({ startContainer: node, startOffset: offset } = range);\n    }\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    return !rects.length ? target.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1];\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), 1), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset;\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n            (oldNode == sel.focusNode && oldOff == sel.focusOffset);\n        // Restore the previous selection\n        sel.removeAllRanges();\n        sel.addRange(oldRange);\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    // Scan up the dom finding the first desc that is a descendant of\n    // this one.\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head) {\n                    // This can crash on Safari if the editor is hidden, and\n                    // there was no selection. (#1308)\n                    try {\n                        domSel.extend(headDOM.node, headDOM.offset);\n                    }\n                    catch (_) { }\n                }\n                domSelExtended = true;\n            }\n            catch (err) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                if (!(err instanceof DOMException))\n                    throw err;\n                // declare global: DOMException\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline));\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM || undefined };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n        if (contentDOM)\n            this.updateChildren(view, pos);\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            ({ dom, contentDOM } = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)));\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let sel = view.domSelection();\n        let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.removeAttribute(\"draggable\");\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    return new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                if (this.top.children[i].matchesMark(marks[depth])) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos));\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let widget = locals[decoIndex++], widgets;\n            while (decoIndex < locals.length && locals[decoIndex].to == offset)\n                (widgets || (widgets = [widget])).push(locals[decoIndex++]);\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\nfunction nearbyTextNode(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n                return node.childNodes[offset];\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelection(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), $anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        $anchor = $head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        if (anchor < 0)\n            return null;\n        $anchor = doc.resolve(anchor);\n    }\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelection(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelection();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setEnd(node.parentNode, domIndex(node) + 1);\n    else\n        range.setEnd(node, 0);\n    range.collapse(false);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelection();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelection();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (!sel.empty || mods.indexOf(\"s\") > -1) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\");\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n    let sel = view.domSelection();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset]))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, sel, node, offset);\n    else if (moveNode)\n        setSelFocus(view, sel, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n    let sel = view.domSelection();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, sel, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction setSelFocus(view, sel, node, offset) {\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelection();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 46 || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0 && dom.firstChild; i--)\n            dom = dom.firstChild;\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = html;\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$from;\n        if (state.selection.empty &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelection();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        sel.collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, forceUpdate = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (forceUpdate || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, event) {\n    let slice = parseFromClipboard(view, text, html, view.input.shiftKey, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, view.input.shiftKey)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move) {\n        this.slice = slice;\n        this.move = move;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)));\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)));\n    }\n    let slice = view.state.selection.content(), { dom, text } = serializeForClipboard(view, slice);\n    event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier]);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice); });\n    }\n    else {\n        slice = parseFromClipboard(view, event.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move)\n        tr.deleteSelection();\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelection()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Needs access to the current document to\n    create the appropriate tree structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    /**\n    @internal\n    */\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members);\n        }\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (newStart >= offset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelection();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelection());\n    }\n    ignoreSelectionChange(sel) {\n        if (sel.rangeCount == 0)\n            return true;\n        let container = sel.getRangeAt(0).commonAncestorContainer;\n        let desc = this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.observer ? this.observer.takeRecords() : [];\n        if (this.queue.length) {\n            mutations = this.queue.concat(mutations);\n            this.queue.length = 0;\n        }\n        let sel = view.domSelection();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length > 1) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let a = brs[0], b = brs[1];\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            view.input.lastTouch < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++)\n                added.push(mut.addedNodes[i]);\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelection();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\") &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection))\n                    view.dispatch(view.state.tr.setSelection(sel));\n            }\n            return;\n        }\n    }\n    // Chrome sometimes leaves the cursor before the inserted text when\n    // composing after a cursor wrapper. This moves it forward.\n    if (chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from &&\n        parse.sel.head == parse.sel.anchor) {\n        let size = change.endB - change.start;\n        parse.sel = { anchor: parse.sel.anchor + size, head: parse.sel.anchor + size };\n    }\n    view.input.domChangeCount++;\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n    if (!$newStart.parent.isTextblock ||\n        // The content must have shrunk\n        end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelection().focusNode) : null;\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco([]);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelection()) && anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelection().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    attrs.translate = \"no\";\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                if (attr == \"style\") {\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                }\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.head, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n","/* Copyright 2021, Milkdown by Mirone. */\n\n/**\n * Copy paste from:\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/browser.ts\n */\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nconst nav = typeof navigator != 'undefined' ? navigator : null;\nconst doc = typeof document != 'undefined' ? document : null;\nconst agent = (nav && nav.userAgent) || '';\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\n\nexport const ie = !!(ie_upto10 || ie_11up || ie_edge);\nexport const ie_version = ie_upto10\n    ? (document as typeof document & { documentMode: unknown }).documentMode\n    : ie_11up\n    ? +ie_11up![1]!\n    : ie_edge\n    ? +ie_edge![1]!\n    : 0;\nexport const gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\nexport const gecko_version = gecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])![1]!;\n\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nexport const chrome = !!_chrome;\nexport const chrome_version = _chrome ? +_chrome[1]! : 0;\nexport const safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nexport const ios = safari && (/Mobile\\/\\w+/.test(agent) || (!!nav && nav.maxTouchPoints > 2));\nexport const mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nexport const android = /Android \\d/.test(agent);\nexport const webkit = !!doc && 'webkitFontSmoothing' in doc.documentElement.style;\nexport const webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])![1]! : 0;\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { InputRule } from '../../inputrules';\nimport { EditorState, Plugin, PluginKey, TextSelection, Transaction } from '../../state';\nimport type { EditorView } from '../../view';\n\nfunction run(view: EditorView, from: number, to: number, text: string, rules: InputRule[], plugin: Plugin) {\n    if (view.composing) return false;\n    const state = view.state,\n        $from = state.doc.resolve(from);\n    if ($from.parent.type.spec.code) return false;\n    const textBefore =\n        $from.parent.textBetween(Math.max(0, $from.parentOffset - 500), $from.parentOffset, undefined, '\\ufffc') + text;\n    for (let i = 0; i < rules.length; i++) {\n        const match = (rules[i] as { match: RegExp }).match.exec(textBefore);\n        const tr =\n            match &&\n            match[0] &&\n            (\n                rules[i] as { handler: (state: EditorState, match: string[], from: number, to: number) => Transaction }\n            ).handler(state, match, from - (match[0].length - text.length), to);\n        if (!tr) continue;\n        view.dispatch(tr.setMeta(plugin, { transform: tr, from, to, text }));\n        return true;\n    }\n    return false;\n}\n\nexport const customInputRulesKey = new PluginKey('MILKDOWN_CUSTOM_INPUTRULES');\nexport const customInputRules = ({ rules }: { rules: InputRule[] }): Plugin => {\n    const plugin: Plugin = new Plugin({\n        key: customInputRulesKey,\n        isInputRules: true,\n\n        state: {\n            init() {\n                return null;\n            },\n            apply(this: typeof plugin, tr, prev) {\n                const stored = tr.getMeta(this);\n                if (stored) return stored;\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            },\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run(view, from, to, text, rules, plugin);\n            },\n            handleDOMEvents: {\n                compositionend: (view) => {\n                    setTimeout(() => {\n                        const { $cursor } = view.state.selection as TextSelection;\n                        if ($cursor) run(view, $cursor.pos, $cursor.pos, '', rules, plugin);\n                    });\n                    return false;\n                },\n            },\n            handleKeyDown(view, event) {\n                if (event.key !== 'Enter') return false;\n                const { $cursor } = view.state.selection as TextSelection;\n                if ($cursor) return run(view, $cursor.pos, $cursor.pos, '\\n', rules, plugin);\n                return false;\n            },\n        },\n    });\n    return plugin;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { expectDomTypeError, missingRootElement } from '@milkdown/exception';\n\nimport type { EditorView } from '../../view';\n\ntype Point = [top: number, left: number];\n\nexport const calculateNodePosition = (\n    view: EditorView,\n    target: HTMLElement,\n    handler: (selectedRect: DOMRect, targetRect: DOMRect, parentRect: DOMRect) => Point,\n) => {\n    const state = view.state;\n    const { from } = state.selection;\n\n    const { node } = view.domAtPos(from);\n    const element = node instanceof Text ? node.parentElement : node;\n    if (!(element instanceof HTMLElement)) {\n        throw expectDomTypeError(element);\n    }\n\n    const selectedNodeRect = element.getBoundingClientRect();\n    const targetNodeRect = target.getBoundingClientRect();\n    const parent = target.parentElement;\n    if (!parent) {\n        throw expectDomTypeError(parent);\n    }\n    const parentNodeRect = parent.getBoundingClientRect();\n\n    const [top, left] = handler(selectedNodeRect, targetNodeRect, parentNodeRect);\n\n    target.style.top = top + 'px';\n    target.style.left = left + 'px';\n};\n\ntype Rect = {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n};\n\nexport const calculateTextPosition = (\n    view: EditorView,\n    target: HTMLElement,\n    handler: (start: Rect, end: Rect, targetRect: DOMRect, parentRect: DOMRect) => Point,\n) => {\n    const state = view.state;\n    const { from, to } = state.selection;\n    const start = view.coordsAtPos(from);\n    const end = view.coordsAtPos(to);\n\n    const targetNodeRect = target.getBoundingClientRect();\n    const parent = target.parentElement;\n    if (!parent) {\n        throw missingRootElement();\n    }\n    const parentNodeRect = parent.getBoundingClientRect();\n\n    const [top, left] = handler(start, end, targetNodeRect, parentNodeRect);\n\n    target.style.top = top + 'px';\n    target.style.left = left + 'px';\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node as ProseNode, NodeType } from '../../model';\nimport type { Transaction } from '../../state';\n\nexport const cloneTr = (tr: Transaction): Transaction => {\n    return Object.assign(Object.create(tr), tr).setTime(Date.now());\n};\n\nexport const equalNodeType = (nodeType: NodeType | NodeType[], node: ProseNode) => {\n    return (Array.isArray(nodeType) && nodeType.indexOf(node.type) > -1) || node.type === nodeType;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { getAtomFromSchemaFail } from '@milkdown/exception';\n\nimport type { MarkType, NodeType, Schema } from '../../model';\n\nexport const getNodeFromSchema = (type: string, schema: Schema): NodeType => {\n    const target = schema.nodes[type];\n\n    if (!target) {\n        throw getAtomFromSchemaFail('node', type);\n    }\n\n    return target;\n};\n\nexport const getMarkFromSchema = (type: string, schema: Schema): MarkType => {\n    const target = schema.marks[type];\n\n    if (!target) {\n        throw getAtomFromSchemaFail('mark', type);\n    }\n\n    return target;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node as ProseNode, NodeType, ResolvedPos } from '../../model';\nimport { NodeSelection, Selection } from '../../state';\nimport { equalNodeType } from './helper';\nimport type { Predicate } from './types';\n\nexport type ContentNodeWithPos = { pos: number; start: number; depth: number; node: ProseNode };\n\nexport const findParentNodeClosestToPos =\n    (predicate: Predicate) =>\n    ($pos: ResolvedPos): ContentNodeWithPos | undefined => {\n        for (let i = $pos.depth; i > 0; i--) {\n            const node = $pos.node(i);\n            if (predicate(node)) {\n                return {\n                    pos: i > 0 ? $pos.before(i) : 0,\n                    start: $pos.start(i),\n                    depth: i,\n                    node,\n                };\n            }\n        }\n        return;\n    };\n\nexport const findParentNode =\n    (predicate: Predicate) =>\n    (selection: Selection): ContentNodeWithPos | undefined => {\n        return findParentNodeClosestToPos(predicate)(selection.$from);\n    };\n\nexport const findSelectedNodeOfType = (selection: Selection, nodeType: NodeType): ContentNodeWithPos | undefined => {\n    if (!(selection instanceof NodeSelection)) {\n        return;\n    }\n    const { node, $from } = selection;\n    if (equalNodeType(nodeType, node)) {\n        return { node, pos: $from.pos, start: $from.start($from.depth), depth: $from.depth };\n    }\n    return undefined;\n};\n","import { liftTarget, replaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, AllSelection, TextSelection } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                    : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n        if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n            return false;\n        if (dispatch)\n            dispatch(state.tr.split($from.pos).scrollIntoView());\n        return true;\n    }\n    if (!$from.parent.isBlock)\n        return false;\n    if (dispatch) {\n        let atEnd = $to.parentOffset == $to.parent.content.size;\n        let tr = state.tr;\n        if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n            tr.deleteSelection();\n        let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n        let types = atEnd && deflt ? [{ type: deflt }] : undefined;\n        let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n        if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n            if (deflt)\n                types = [{ type: deflt }];\n            can = true;\n        }\n        if (can) {\n            tr.split(tr.mapping.map($from.pos), 1, types);\n            if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n                let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n                if (deflt && $from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                    tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n            }\n        }\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr\n            .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n            .join($pos.pos)\n            .scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    if (before.type.spec.isolating || after.type.spec.isolating)\n        return false;\n    if (joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let joinAt = end + 2 * conn.length;\n            if (canJoin(tr.doc, joinAt))\n                tr.join(joinAt);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { from, to } = state.selection;\n        let applicable = false;\n        state.doc.nodesBetween(from, to, (node, pos) => {\n            if (applicable)\n                return false;\n            if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                return;\n            if (node.type == nodeType) {\n                applicable = true;\n            }\n            else {\n                let $pos = state.doc.resolve(pos), index = $pos.index();\n                applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n            }\n        });\n        if (!applicable)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setBlockType(from, to, nodeType, attrs).scrollIntoView());\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, node => {\n            if (can)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null) {\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let has = false, tr = state.tr;\n                for (let i = 0; !has && i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (has) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockKeepMarks, toggleMark, wrapIn };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = mac || chrome && +chrome[1] < 57\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    ie && event.shiftKey && event.key && event.key.length == 1 ||\n    event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), isChar = name.length == 1 && name != \" \", baseName;\n        let direct = map[modifiers(name, event, !isChar)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            // Try falling back to the keyCode when there's a modifier\n            // active or the character produced isn't ASCII, and our table\n            // produces a different name from the the keyCode. See #668,\n            // #1060\n            let fromCode = map[modifiers(baseName, event, true)];\n            if (fromCode && fromCode(view.state, view.dispatch, view))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            // Otherwise, if shift is active, also try the binding with the\n            // Shift- prefix enabled. See #997\n            let withShift = map[modifiers(name, event, true)];\n            if (withShift && withShift(view.state, view.dispatch, view))\n                return true;\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n */\n\n/**\n * @param {Context} base\n * @param {Options} extension\n * @returns {Context}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {string} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Blockquote} node\n */\nexport function blockquote(node, _, context, safeOptions) {\n  const exit = context.enter('blockquote')\n  const tracker = track(safeOptions)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').Break} Break\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @type {Handle}\n * @param {Break} _\n */\nexport function hardBreak(_, _1, context, safe) {\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `character` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} character\n *   Single character to look for.\n * @returns {number}\n *   Count of most frequent adjacent `character`s in `value`.\n */\nexport function longestStreak(value, character) {\n  const source = String(value)\n  let index = source.indexOf(character)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = source.indexOf(character, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Code} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, context) {\n  return Boolean(\n    !context.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['fence'], undefined>}\n */\nexport function checkFence(context) {\n  const marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Code} node\n */\nexport function code(node, _, context, safeOptions) {\n  const marker = checkFence(context)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, context)) {\n    const exit = context.enter('codeIndented')\n    const value = indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = track(safeOptions)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = context.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = context.enter('codeFencedLang' + suffix)\n    value += tracker.move(\n      safe(context, node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = context.enter('codeFencedMeta' + suffix)\n    value += tracker.move(' ')\n    value += tracker.move(\n      safe(context, node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['quote'], undefined>}\n */\nexport function checkQuote(context) {\n  const marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Definition} node\n */\nexport function definition(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('definition')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  value += tracker.move(\n    safe(context, association(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['emphasis'], undefined>}\n */\nexport function checkEmphasis(context) {\n  const marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Emphasis} node\n */\nexport function emphasis(node, _, context, safeOptions) {\n  const marker = checkEmphasis(context)\n  const exit = context.enter('emphasis')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Emphasis} _\n */\nfunction emphasisPeek(_, _1, context) {\n  return context.options.emphasis || '*'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {visit, EXIT} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, context) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, (node) => {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (context.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Heading} node\n */\nexport function heading(node, _, context, safeOptions) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = track(safeOptions)\n\n  if (formatHeadingAsSetext(node, context)) {\n    const exit = context.enter('headingSetext')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = context.enter('headingAtx')\n  const subexit = context.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = containerPhrasing(node, context, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../types.js').Handle} Handle\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @type {Handle}\n * @param {HTML} node\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @type {Handle}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimage.peek = imagePeek\n\n/**\n * @type {Handle}\n * @param {Image} node\n */\nexport function image(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('image')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  value += tracker.move(\n    safe(context, node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @type {Handle}\n * @param {ImageReference} node\n */\nexport function imageReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('imageReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  const alt = safe(context, node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, context) {\n  const raw = toString(node)\n\n  return Boolean(\n    !context.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlink.peek = linkPeek\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nexport function link(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = track(safeOptions)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      containerPhrasing(node, context, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @type {Handle}\n * @param {LinkReference} node\n */\nexport function linkReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('linkReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  const text = containerPhrasing(node, context, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBulletOther(context) {\n  const bullet = checkBullet(context)\n  const bulletOther = context.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrdered(context) {\n  const marker = context.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBulletOrdered} from './check-bullet-ordered.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrderedOther(context) {\n  const bulletOrdered = checkBulletOrdered(context)\n  const bulletOrderedOther = context.options.bulletOrderedOther\n\n  if (!bulletOrderedOther) {\n    return bulletOrdered === '.' ? ')' : '.'\n  }\n\n  if (bulletOrderedOther !== '.' && bulletOrderedOther !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOrderedOther +\n        '` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOrderedOther === bulletOrdered) {\n    throw new Error(\n      'Expected `bulletOrdered` (`' +\n        bulletOrdered +\n        '`) and `bulletOrderedOther` (`' +\n        bulletOrderedOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOrderedOther\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['rule'], undefined>}\n */\nexport function checkRule(context) {\n  const marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkBulletOrderedOther} from '../util/check-bullet-ordered-other.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {List} node\n */\nexport function list(node, parent, context, safeOptions) {\n  const exit = context.enter('list')\n  const bulletCurrent = context.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(context) : checkBullet(context)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? checkBulletOrderedOther(context)\n    : checkBulletOther(context)\n  const bulletLastUsed = context.bulletLastUsed\n  let useDifferentMarker = false\n\n  if (\n    parent &&\n    // Explicit `other` set.\n    (node.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther) &&\n    bulletLastUsed &&\n    bullet === bulletLastUsed\n  ) {\n    useDifferentMarker = true\n  }\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      context.stack[context.stack.length - 1] === 'list' &&\n      context.stack[context.stack.length - 2] === 'listItem' &&\n      context.stack[context.stack.length - 3] === 'list' &&\n      context.stack[context.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      context.indexStack[context.indexStack.length - 1] === 0 &&\n      context.indexStack[context.indexStack.length - 2] === 0 &&\n      context.indexStack[context.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(context) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  context.bulletCurrent = bullet\n  const value = containerFlow(node, context, safeOptions)\n  context.bulletLastUsed = bullet\n  context.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\n/**\n * @type {Handle}\n * @param {Paragraph} node\n */\nexport function paragraph(node, _, context, safeOptions) {\n  const exit = context.enter('paragraph')\n  const subexit = context.enter('phrasing')\n  const value = containerPhrasing(node, context, safeOptions)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(node, _, context, safeOptions) {\n  return containerFlow(node, context, safeOptions)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['strong'], undefined>}\n */\nexport function checkStrong(context) {\n  const marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Strong} node\n */\nexport function strong(node, _, context, safeOptions) {\n  const marker = checkStrong(context)\n  const exit = context.enter('strong')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Strong} _\n */\nfunction strongPeek(_, _1, context) {\n  return context.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {safe} from '../util/safe.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(node, _, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['ruleRepetition'], undefined>}\n */\nexport function checkRuleRepetition(context) {\n  const repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {ThematicBreak} _\n */\nexport function thematicBreak(_, _1, context) {\n  const value = (\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(context))\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, context) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, context) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, context)))\n  ) {\n    return false\n  }\n\n  // Two lists with the same marker.\n  if (\n    left.type === 'list' &&\n    left.type === right.type &&\n    Boolean(left.ordered) === Boolean(right.ordered) &&\n    !(left.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther)\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\n\n/**\n * @param {Node} tree\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {Context} */\n  // @ts-expect-error: we’ll add `handle` later.\n  const context = {\n    enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {},\n    indexStack: []\n  }\n\n  configure(context, {unsafe, join, handlers: handle})\n  configure(context, options)\n\n  if (context.options.tightDefinitions) {\n    configure(context, {join: [joinDefinition]})\n  }\n\n  /** @type {Handle} */\n  context.handle = zwitch('type', {\n    invalid,\n    // @ts-expect-error: hush.\n    unknown,\n    // @ts-expect-error: hush.\n    handlers: context.handlers\n  })\n\n  let result = context.handle(tree, null, context, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Context['enter']} */\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\n/**\n * @type {Handle}\n * @param {unknown} value\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/** @type {import('unified').Plugin<[Options]|void[], Node, string>} */\nexport default function remarkStringify(options) {\n  /** @type {import('unified').CompilerFunction<Node, string>} */\n  const compiler = (tree) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return toMarkdown(\n      tree,\n      Object.assign({}, settings, options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions:\n          /** @type {ToMarkdownOptions['extensions']} */ (\n            this.data('toMarkdownExtensions')\n          ) || []\n      })\n    )\n  }\n\n  Object.assign(this, {Compiler: compiler})\n}\n","import remarkStringify from './lib/index.js'\n\nexport default remarkStringify\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3)\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n","import {IMPORT, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {MS, MOZ, WEBKIT} from './Enum.js'\nimport {hash, charat, strlen, indexof, replace} from './Utility.js'\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {string}\n */\nexport function prefix (value, length) {\n\tswitch (hash(value, length)) {\n\t\t// color-adjust\n\t\tcase 5103:\n\t\t\treturn WEBKIT + 'print-' + value + value\n\t\t// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\t\tcase 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:\n\t\t// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\t\tcase 5572: case 6356: case 5844: case 3191: case 6645: case 3005:\n\t\t// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\t\tcase 6391: case 5879: case 5623: case 6135: case 4599: case 4855:\n\t\t// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\t\tcase 4215: case 6389: case 5109: case 5365: case 5621: case 3829:\n\t\t\treturn WEBKIT + value + value\n\t\t// appearance, user-select, transform, hyphens, text-size-adjust\n\t\tcase 5349: case 4246: case 4810: case 6968: case 2756:\n\t\t\treturn WEBKIT + value + MOZ + value + MS + value + value\n\t\t// flex, flex-direction\n\t\tcase 6828: case 4268:\n\t\t\treturn WEBKIT + value + MS + value + value\n\t\t// order\n\t\tcase 6165:\n\t\t\treturn WEBKIT + value + MS + 'flex-' + value + value\n\t\t// align-items\n\t\tcase 5187:\n\t\t\treturn WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value\n\t\t// align-self\n\t\tcase 5443:\n\t\t\treturn WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value\n\t\t// align-content\n\t\tcase 4675:\n\t\t\treturn WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value\n\t\t// flex-shrink\n\t\tcase 5548:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value\n\t\t// flex-basis\n\t\tcase 5292:\n\t\t\treturn WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value\n\t\t// flex-grow\n\t\tcase 6060:\n\t\t\treturn WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value\n\t\t// transition\n\t\tcase 4554:\n\t\t\treturn WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value\n\t\t// cursor\n\t\tcase 6187:\n\t\t\treturn replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value\n\t\t// background, background-image\n\t\tcase 5495: case 3959:\n\t\t\treturn replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1')\n\t\t// justify-content\n\t\tcase 4968:\n\t\t\treturn replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value\n\t\t// (margin|padding)-inline-(start|end)\n\t\tcase 4095: case 3583: case 4068: case 2532:\n\t\t\treturn replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value\n\t\t// (min|max)?(width|height|inline-size|block-size)\n\t\tcase 8116: case 7059: case 5753: case 5535:\n\t\tcase 5445: case 5701: case 4933: case 4677:\n\t\tcase 5533: case 5789: case 5021: case 4765:\n\t\t\t// stretch, max-content, min-content, fill-available\n\t\t\tif (strlen(value) - 1 - length > 6)\n\t\t\t\tswitch (charat(value, length + 1)) {\n\t\t\t\t\t// (m)ax-content, (m)in-content\n\t\t\t\t\tcase 109:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (charat(value, length + 4) !== 45)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t// (f)ill-available, (f)it-content\n\t\t\t\t\tcase 102:\n\t\t\t\t\t\treturn replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value\n\t\t\t\t\t// (s)tretch\n\t\t\t\t\tcase 115:\n\t\t\t\t\t\treturn ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value\n\t\t\t\t}\n\t\t\tbreak\n\t\t// position: sticky\n\t\tcase 4949:\n\t\t\t// (s)ticky?\n\t\t\tif (charat(value, length + 1) !== 115)\n\t\t\t\tbreak\n\t\t// display: (flex|inline-flex)\n\t\tcase 6444:\n\t\t\tswitch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n\t\t\t\t// stic(k)y\n\t\t\t\tcase 107:\n\t\t\t\t\treturn replace(value, ':', ':' + WEBKIT) + value\n\t\t\t\t// (inline-)?fl(e)x\n\t\t\t\tcase 101:\n\t\t\t\t\treturn replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value\n\t\t\t}\n\t\t\tbreak\n\t\t// writing-mode\n\t\tcase 5936:\n\t\t\tswitch (charat(value, length + 11)) {\n\t\t\t\t// vertical-l(r)\n\t\t\t\tcase 114:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value\n\t\t\t\t// vertical-r(l)\n\t\t\t\tcase 108:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value\n\t\t\t\t// horizontal(-)tb\n\t\t\t\tcase 45:\n\t\t\t\t\treturn WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value\n\t\t\t}\n\n\t\t\treturn WEBKIT + value + MS + value + value\n\t}\n\n\treturn value\n}\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length)\n\t\t\t\t\tbreak\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && characters.charCodeAt(length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, stringify, COMMENT, rulesheet, middleware, prefixer, serialize, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = element.parent === children[0]; // in nested rules comments become children of the \"auto-inserted\" rule\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? children[0].children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if ( key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport default createCache;\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport createEmotion, { Emotion, Options } from '@emotion/css/create-instance';\nimport { createSlice } from '@milkdown/ctx';\n\nexport type { Emotion, Options } from '@emotion/css/create-instance';\n\nexport const initEmotion = (options?: Options): Emotion => createEmotion(options);\n\nexport const emotionConfigCtx = createSlice<Options, 'EmotionConfig'>({ key: 'milkdown' }, 'EmotionConfig');\nexport const emotionCtx = createSlice<Emotion, 'Emotion'>({} as Emotion, 'Emotion');\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createContainer, createSlice, Ctx, MilkdownPlugin, Pre, Slice } from '@milkdown/ctx';\n\nimport { emotionCtx } from './emotion';\n\nexport type ThemeSlice<Ret = unknown, T = undefined> = (payload: T) => Ret | undefined;\nexport type ThemeSliceKey<Ret = unknown, T = undefined, K extends string = string> = Slice<ThemeSlice<Ret, T>, K>;\n\nexport const createThemeSliceKey = <Ret, T = undefined, K extends string = string>(key: K): ThemeSliceKey<Ret, T, K> =>\n    createSlice((() => null as unknown as Ret) as ThemeSlice<Ret, T>, key);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetRet<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<infer Ret, any, any> ? Ret : unknown;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetPayload<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, infer T, any> ? T : undefined;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetKey<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, any, infer T> ? T : undefined;\n\nexport class ThemeManager {\n    #container = createContainer();\n    #cache: Map<string, ThemeSlice> = new Map();\n    #flushListener: Set<() => void> = new Set();\n    #executor: () => void = () => {\n        /* noop */\n    };\n\n    inject<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T>): void {\n        key(this.#container.sliceMap);\n    }\n\n    has(key: ThemeSliceKey | string): boolean {\n        const name = typeof key === 'string' ? key : key.sliceName;\n        if (this.#cache.has(name)) {\n            return true;\n        }\n\n        const meta = this.#container.getSlice(key);\n\n        return meta.get()(null as never) != null;\n    }\n\n    set<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), themeSlice: ThemeSlice<Ret, Payload>): void;\n    set<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T> | string, themeSlice: ThemeSlice<Ret, T>): void;\n    set(key: ThemeSliceKey | string, themeSlice: ThemeSlice): void {\n        const name = typeof key === 'string' ? key : key.sliceName;\n        this.#cache.set(name, themeSlice as ThemeSlice);\n    }\n\n    get<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), payload: Payload): Ret {\n        const name = typeof key === 'string' ? key : (key as Key).sliceName;\n        const lazyGet = this.#cache.get(name);\n        if (lazyGet) {\n            const meta = this.#container.getSlice(key);\n            meta.set(lazyGet);\n            this.#cache.delete(key as string);\n        }\n        const meta = this.#container.getSlice(key);\n\n        return meta.get()(payload) as Ret;\n    }\n\n    onFlush(fn: () => void, callWhenRegister = true): void {\n        if (!this.#flushListener.has(fn)) {\n            this.#flushListener.add(fn);\n        }\n        if (callWhenRegister) {\n            fn();\n        }\n    }\n\n    async switch(ctx: Ctx, theme: MilkdownPlugin) {\n        const emotion = ctx.get(emotionCtx);\n        emotion.flush();\n        await theme(ctx as unknown as Pre)(ctx);\n        this.runExecutor();\n        this.#flushListener.forEach((f) => f());\n    }\n\n    flush(ctx: Ctx) {\n        const emotion = ctx.get(emotionCtx);\n        emotion.flush();\n        this.runExecutor();\n        this.#flushListener.forEach((f) => f());\n    }\n\n    setExecutor(executor: () => void): void {\n        executor();\n        this.#executor = executor;\n    }\n\n    runExecutor(): void {\n        this.#executor();\n    }\n}\n\nexport const themeManagerCtx = createSlice(new ThemeManager(), 'themeManager');\n\nexport const createThemeManager = () => new ThemeManager();\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeBorder = createThemeSliceKey<string, 'left' | 'right' | 'top' | 'bottom' | undefined, 'border'>(\n    'border',\n);\nexport type ThemeBorderType = typeof ThemeBorder;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Color } from '../types';\n\nexport const ThemeColor = createThemeSliceKey<string, [key: Color, opacity?: number]>('color');\nexport type ThemeColorType = typeof ThemeColor;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Font } from '../types';\n\nexport const ThemeFont = createThemeSliceKey<string, Font, 'font'>('font');\nexport type ThemeFontType = typeof ThemeFont;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeGlobal = createThemeSliceKey<void, undefined, 'global'>('global');\nexport type ThemeGlobalType = typeof ThemeGlobal;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Icon, IconValue } from '../types';\n\nexport const ThemeIcon = createThemeSliceKey<IconValue, Icon, 'icon'>('icon');\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype ThemeOptions = {\n    onSelectLanguage: (language: string) => void;\n    editable: () => boolean;\n    onFocus: () => void;\n    onBlur: () => void;\n    languageList: string[];\n};\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    contentDOM: HTMLElement;\n    onUpdate: (node: Node) => void;\n    onDestroy: () => void;\n};\nexport const ThemeCodeFence = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'code-fence'>('code-fence');\nexport type ThemeCodeFenceType = typeof ThemeCodeFence;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype ThemeOptions = {\n    isBlock: boolean;\n    placeholder: string;\n    onError?: (img: HTMLImageElement) => void;\n    onLoad?: (img: HTMLImageElement) => void;\n};\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    onUpdate: (node: Node) => void;\n};\n\nexport const ThemeImage = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'image'>('image');\nexport type ThemeImageType = typeof ThemeImage;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\nimport type { EditorView } from '@milkdown/prose/view';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype InnerEditorRenderer = {\n    dom: HTMLElement;\n    preview: HTMLElement;\n    editor: HTMLElement;\n    onUpdate: (node: Node, isInit: boolean) => void;\n    onFocus: (node: Node) => void;\n    onBlur: (node: Node) => void;\n    onDestroy: () => void;\n    stopEvent: (event: Event) => boolean;\n};\ntype InnerEditorOptions = {\n    view: EditorView;\n    getPos: () => number;\n    render: (content: string) => void;\n};\nexport const ThemeInnerEditor = createThemeSliceKey<InnerEditorRenderer, InnerEditorOptions, 'inner-editor'>(\n    'inner-editor',\n);\nexport type ThemeInnerEditorType = typeof ThemeInnerEditor;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose/view';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype InputChipRenderer = {\n    dom: HTMLElement;\n    update: (value: string) => void;\n    init: (editorView: EditorView) => void;\n    show: (editorView: EditorView) => void;\n    hide: () => void;\n    destroy: () => void;\n};\n\ntype InputChipOptions = {\n    width?: string;\n    isBindMode?: boolean;\n    buttonText?: string;\n    placeholder?: string;\n    calculatePosition?: (editorView: EditorView, dom: HTMLElement) => void;\n    onUpdate: (value: string) => void;\n};\n\nexport const ThemeInputChip = createThemeSliceKey<InputChipRenderer, InputChipOptions, 'input-chip'>('input-chip');\nexport type ThemeInputChipType = typeof ThemeInputChip;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    contentDOM: HTMLElement;\n    onUpdate: (node: Node) => void;\n};\ntype ThemeOptions = {\n    editable: () => boolean;\n    onChange: (selected: boolean) => void;\n};\nexport const ThemeTaskListItem = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'task-list-item'>('task-list-item');\nexport type ThemeTaskListItemType = typeof ThemeTaskListItem;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeScrollbar = createThemeSliceKey<\n    string,\n    [direction?: 'x' | 'y', type?: 'normal' | 'thin'] | undefined,\n    'scrollbar'\n>('scrollbar');\nexport type ThemeScrollbarType = typeof ThemeScrollbar;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeShadow = createThemeSliceKey<string, undefined, 'shadow'>('shadow');\nexport type ThemeShadowType = typeof ThemeShadow;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Size } from '../types';\n\nexport const ThemeSize = createThemeSliceKey<string, Size, 'size'>('size');\nexport type ThemeSizeType = typeof ThemeSize;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeSliceKey } from '../manager';\nimport { ThemeBorder } from './border';\nimport { ThemeColor } from './color';\nimport { ThemeFont } from './font';\nimport { ThemeGlobal } from './global';\nimport { ThemeIcon } from './icon';\nimport { ThemeCodeFence, ThemeImage, ThemeInnerEditor, ThemeInputChip, ThemeTaskListItem } from './renderer';\nimport { ThemeScrollbar } from './scrollbar';\nimport { ThemeShadow } from './shadow';\nimport { ThemeSize } from './size';\n\nexport const internalThemeKeys = [\n    /** Props */\n    ThemeColor,\n    ThemeSize,\n    ThemeFont,\n    ThemeScrollbar,\n    ThemeShadow,\n    ThemeBorder,\n    ThemeIcon,\n    ThemeGlobal,\n\n    /** Renderer */\n    ThemeCodeFence,\n    ThemeImage,\n    ThemeInnerEditor,\n    ThemeTaskListItem,\n    ThemeInputChip,\n] as readonly ThemeSliceKey[];\n\nexport * from './border';\nexport * from './color';\nexport * from './font';\nexport * from './global';\nexport * from './icon';\nexport * from './renderer';\nexport * from './scrollbar';\nexport * from './shadow';\nexport * from './size';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeColor } from './keys';\nimport type { ThemeManager } from './manager';\nimport type { Color } from './types';\n\ntype RGB = [number, number, number];\nexport const hex2rgb = (hex: string): RGB | null => {\n    const rgbShorthandRegex = /^([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const rgbRegex = /^([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    const parse16 = (x: string) => parseInt(x, 16);\n\n    const fullHex = hex.slice(1).replace(rgbShorthandRegex, (_, r, g, b) => {\n        return r + r + g + g + b + b;\n    });\n\n    const [ok, r = '0', g = '0', b = '0'] = fullHex.match(rgbRegex) || [];\n\n    return ok ? ([r, g, b].map(parse16) as RGB) : null;\n};\n\nexport const getPalette =\n    (manager: ThemeManager) =>\n    (color: Color, opacity = 1) =>\n        manager.get(ThemeColor, [color, opacity]);\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { stackOverFlow } from '@milkdown/exception';\n\ntype ElInstance<U> = {\n    push: (node: U, ...rest: U[]) => void;\n};\n\ntype StackCtx<T extends ElInstance<U>, U> = {\n    readonly elements: T[];\n};\n\nexport const getStackUtil = <Node, El extends ElInstance<Node>, Ctx extends StackCtx<El, Node>>() => {\n    const size = (ctx: Ctx): number => ctx.elements.length;\n\n    const top = (ctx: Ctx): El | undefined => ctx.elements[size(ctx) - 1];\n\n    const push =\n        (ctx: Ctx) =>\n        (node: Node): void => {\n            top(ctx)?.push(node);\n        };\n\n    const open =\n        (ctx: Ctx) =>\n        (node: El): void => {\n            ctx.elements.push(node);\n        };\n\n    const close = (ctx: Ctx): El => {\n        const el = ctx.elements.pop();\n        if (!el) throw stackOverFlow();\n\n        return el;\n    };\n\n    return {\n        size,\n        top,\n        push,\n        open,\n        close,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Node, NodeType } from '@milkdown/prose/model';\n\nimport type { Attrs } from './types';\n\nexport type StackElement = {\n    type: NodeType;\n    content: Node[];\n    attrs?: Attrs;\n    push: (node: Node, ...rest: Node[]) => void;\n    pop: () => Node | undefined;\n};\n\nconst pushElement = (element: StackElement, node: Node, ...rest: Node[]) => {\n    element.content.push(node, ...rest);\n};\n\nconst popElement = (element: StackElement): Node | undefined => element.content.pop();\n\nexport const createElement = (type: NodeType, content: Node[], attrs?: Attrs): StackElement => {\n    const element: StackElement = {\n        type,\n        content,\n        attrs,\n        push: (...args) => pushElement(element, ...args),\n        pop: () => popElement(element),\n    };\n    return element;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createNodeInParserFail, stackOverFlow } from '@milkdown/exception';\nimport { Mark, MarkType, Node, NodeType, Schema } from '@milkdown/prose/model';\n\nimport { getStackUtil } from '../utility';\nimport { createElement, StackElement } from './stack-element';\nimport type { Attrs } from './types';\n\ntype Ctx = {\n    marks: readonly Mark[];\n    readonly schema: Schema;\n    readonly elements: StackElement[];\n};\n\nconst { size, push, top, open, close } = getStackUtil<Node, StackElement, Ctx>();\n\nconst hasText = (node: Node): node is Node & { text: string } => node.isText;\n\nconst maybeMerge = (schema: Schema, a: Node, b: Node): Node | undefined => {\n    if (hasText(a) && hasText(b) && Mark.sameSet(a.marks, b.marks)) {\n        return schema.text(a.text + b.text, a.marks);\n    }\n    return;\n};\n\nconst openNode = (ctx: Ctx) => (nodeType: NodeType, attrs?: Attrs) => open(ctx)(createElement(nodeType, [], attrs));\n\nconst addNode =\n    (ctx: Ctx) =>\n    (nodeType: NodeType, attrs?: Attrs, content?: Node[]): Node => {\n        const node = nodeType.createAndFill(attrs, content, ctx.marks);\n\n        if (!node) throw createNodeInParserFail(nodeType, attrs, content);\n\n        push(ctx)(node);\n\n        return node;\n    };\n\nconst closeNode = (ctx: Ctx) => (): Node => {\n    ctx.marks = Mark.none;\n    const element = close(ctx);\n\n    return addNode(ctx)(element.type, element.attrs, element.content);\n};\n\nconst openMark =\n    (ctx: Ctx) =>\n    (markType: MarkType, attrs?: Attrs): void => {\n        const mark = markType.create(attrs);\n\n        ctx.marks = mark.addToSet(ctx.marks);\n    };\n\nconst closeMark =\n    (ctx: Ctx) =>\n    (markType: MarkType): void => {\n        ctx.marks = markType.removeFromSet(ctx.marks);\n    };\n\nconst addText =\n    (ctx: Ctx) =>\n    (text: string): void => {\n        const topElement = top(ctx);\n        if (!topElement) throw stackOverFlow();\n\n        const prevNode = topElement.pop();\n        const currNode = ctx.schema.text(text, ctx.marks);\n\n        if (!prevNode) {\n            topElement.push(currNode);\n            return;\n        }\n\n        const merged = maybeMerge(ctx.schema, prevNode, currNode);\n        if (merged) {\n            topElement.push(merged);\n            return;\n        }\n        topElement.push(prevNode, currNode);\n    };\n\nconst build = (ctx: Ctx) => () => {\n    let doc: Node | undefined = undefined;\n    do {\n        doc = closeNode(ctx)();\n    } while (size(ctx));\n\n    return doc;\n};\n\nexport const createStack = (schema: Schema) => {\n    const ctx: Ctx = {\n        marks: [],\n        elements: [],\n        schema,\n    };\n\n    return {\n        build: build(ctx),\n        openMark: openMark(ctx),\n        closeMark: closeMark(ctx),\n        addText: addText(ctx),\n        openNode: openNode(ctx),\n        addNode: addNode(ctx),\n        closeNode: closeNode(ctx),\n    };\n};\n\nexport type Stack = ReturnType<typeof createStack>;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { parserMatchError } from '@milkdown/exception';\nimport type { MarkType, Node, NodeType, Schema } from '@milkdown/prose/model';\n\nimport { RemarkParser } from '../utility';\nimport type { Stack } from './stack';\nimport type { Attrs, InnerParserSpecMap, MarkdownNode, ParserSpecWithType } from './types';\n\ntype PS<T extends keyof Stack> = Parameters<Stack[T]>;\n\n/**\n * State for parser.\n * Transform remark AST into prosemirror state.\n */\nexport class State {\n    constructor(\n        private readonly stack: Stack,\n        public readonly schema: Schema,\n        private readonly specMap: InnerParserSpecMap,\n    ) {}\n\n    #matchTarget(node: MarkdownNode): ParserSpecWithType {\n        const result = Object.values(this.specMap).find((x) => x.match(node));\n\n        if (!result) throw parserMatchError(node);\n\n        return result;\n    }\n\n    #runNode(node: MarkdownNode) {\n        const { key, runner, is } = this.#matchTarget(node);\n\n        const proseType: NodeType | MarkType = this.schema[is === 'node' ? 'nodes' : 'marks'][key] as\n            | NodeType\n            | MarkType;\n\n        runner(this, node, proseType as NodeType & MarkType);\n    }\n\n    /**\n     * Transform a markdown string into prosemirror state.\n     *\n     * @param remark - The remark parser used.\n     * @param markdown - The markdown string needs to be parsed.\n     * @returns The state instance.\n     */\n    run = (remark: RemarkParser, markdown: string) => {\n        const tree = remark.runSync(remark.parse(markdown), markdown) as MarkdownNode;\n        this.next(tree);\n\n        return this;\n    };\n\n    /**\n     * Give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n     *\n     * @param nodes - The node or node list needs to be handled.\n     *\n     * @returns The state instance.\n     */\n    next = (nodes: MarkdownNode | MarkdownNode[] = []) => {\n        [nodes].flat().forEach((node) => this.#runNode(node));\n        return this;\n    };\n\n    /**\n     * Parse current remark AST into prosemirror state.\n     *\n     * @returns Result prosemirror doc.\n     */\n    toDoc = (): Node => this.stack.build();\n\n    /**\n     * Inject root node for prosemirror state.\n     *\n     * @param node - The target markdown node.\n     * @param nodeType - The root prosemirror nodeType .\n     * @param attrs - The attribute of root type.\n     * @returns The state instance.\n     */\n    injectRoot = (node: MarkdownNode, nodeType: NodeType, attrs?: Attrs) => {\n        this.stack.openNode(nodeType, attrs);\n        this.next(node.children);\n\n        return this;\n    };\n\n    /**\n     * Add a text type prosemirror node.\n     *\n     * @param text - Text string.\n     * @returns The state instance.\n     */\n    addText = (text = '') => {\n        this.stack.addText(text);\n        return this;\n    };\n\n    /**\n     * Add a node without open or close it.\n     *\n     * @remarks\n     * It's useful for nodes which don't have content.\n     *\n     * @param nodeType - Node type of this node.\n     * @param attrs - Attributes of this node.\n     * @param content - Content of this node.\n     *\n     * @returns The added node.\n     */\n    addNode = (...args: PS<'addNode'>) => {\n        this.stack.addNode(...args);\n        return this;\n    };\n\n    /**\n     * Open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n     *\n     * @remarks\n     * You can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n     *\n     * @param nodeType - Node type of this node.\n     * @param attrs - Attributes of this node.\n     *\n     * @returns\n     */\n    openNode = (...args: PS<'openNode'>) => {\n        this.stack.openNode(...args);\n        return this;\n    };\n\n    /**\n     * Close current node.\n     *\n     * @returns The node closed.\n     */\n    closeNode = (...args: PS<'closeNode'>) => {\n        this.stack.closeNode(...args);\n        return this;\n    };\n\n    /**\n     * Open a mark, and all marks created after this method will be set as the children of the mark until a `closeMark` been called.\n     *\n     * @remarks\n     * You can imagine `openMark` as the left half of parenthesis and `closeMark` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n     *\n     * @param markType - Mark type of this mark.\n     * @param attrs - Attributes of this mark.\n     *\n     * @returns\n     */\n    openMark = (...args: PS<'openMark'>) => {\n        this.stack.openMark(...args);\n        return this;\n    };\n\n    /**\n     * Close target mark.\n     *\n     * @param markType - Mark type of this mark.\n     *\n     * @returns The mark closed.\n     */\n    closeMark = (...args: PS<'closeMark'>) => {\n        this.stack.closeMark(...args);\n        return this;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node, Schema } from '@milkdown/prose/model';\n\nimport type { RemarkParser } from '../utility';\nimport { createStack } from './stack';\nimport { State } from './state';\nimport type { InnerParserSpecMap } from './types';\n\nexport const createParser = (schema: Schema, specMap: InnerParserSpecMap, remark: RemarkParser) => {\n    const state = new State(createStack(schema), schema, specMap);\n    return (text: string): Node => {\n        state.run(remark, text);\n        return state.toDoc();\n    };\n};\n\nexport * from './types';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { MarkdownNode } from '..';\nimport type { JSONRecord } from '../utility';\n\nexport type StackElement = {\n    type: string;\n    value?: string;\n    props: JSONRecord;\n    children?: MarkdownNode[];\n    push: (node: MarkdownNode, ...rest: MarkdownNode[]) => void;\n    pop: () => MarkdownNode | undefined;\n};\n\nconst pushElement = (element: StackElement, node: MarkdownNode, ...rest: MarkdownNode[]) => {\n    if (!element.children) {\n        element.children = [];\n    }\n    element.children.push(node, ...rest);\n};\n\nconst popElement = (element: StackElement): MarkdownNode | undefined => element.children?.pop();\n\nexport const createElement = (\n    type: string,\n    children?: MarkdownNode[],\n    value?: string,\n    props: JSONRecord = {},\n): StackElement => {\n    const element: StackElement = {\n        type,\n        children,\n        props,\n        value,\n        push: (...args) => pushElement(element, ...args),\n        pop: () => popElement(element),\n    };\n    return element;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Mark } from '@milkdown/prose/model';\nimport { Root } from 'mdast';\n\nimport type { MarkdownNode } from '..';\nimport { getStackUtil, JSONRecord } from '../utility';\nimport { createElement, StackElement } from './stack-element';\n\ntype Ctx = {\n    marks: readonly Mark[];\n    readonly elements: StackElement[];\n};\n\nconst { size, push, open, close } = getStackUtil<MarkdownNode, StackElement, Ctx>();\n\nconst searchType = (child: MarkdownNode, type: string): MarkdownNode => {\n    if (child.type === type) {\n        return child;\n    }\n\n    if (child.children?.length !== 1) {\n        return child;\n    }\n\n    const searchNode = (node: MarkdownNode): MarkdownNode | null => {\n        if (node.type === type) {\n            return node;\n        }\n\n        if (node.children?.length !== 1) {\n            return null;\n        }\n\n        const [firstChild] = node.children;\n        if (!firstChild) return null;\n\n        return searchNode(firstChild);\n    };\n\n    const target = searchNode(child);\n\n    if (!target) return child;\n\n    const tmp = target.children ? [...target.children] : undefined;\n    const node = { ...child, children: tmp };\n    node.children = tmp;\n    target.children = [node];\n\n    return target;\n};\n\nconst maybeMergeChildren = (element: MarkdownNode) => {\n    const { children } = element;\n    if (!children) return element;\n\n    element.children = children.reduce((nextChildren, child, index) => {\n        if (index === 0) {\n            return [child];\n        }\n        const last = nextChildren[nextChildren.length - 1];\n        if (last && last['isMark'] && child['isMark']) {\n            child = searchType(child, last.type);\n            const { children: currChildren, ...currRest } = child;\n            const { children: prevChildren, ...prevRest } = last;\n            if (\n                child.type === last.type &&\n                currChildren &&\n                prevChildren &&\n                JSON.stringify(currRest) === JSON.stringify(prevRest)\n            ) {\n                const next = {\n                    ...prevRest,\n                    children: [...prevChildren, ...currChildren],\n                };\n                return nextChildren.slice(0, -1).concat(maybeMergeChildren(next));\n            }\n        }\n        return nextChildren.concat(child);\n    }, [] as MarkdownNode[]);\n\n    return element;\n};\n\nconst createMarkdownNode = (element: StackElement) => {\n    const node: MarkdownNode = {\n        ...element.props,\n        type: element.type,\n    };\n\n    if (element.children) {\n        node.children = element.children;\n    }\n\n    if (element.value) {\n        node['value'] = element.value;\n    }\n\n    return node;\n};\n\nconst openNode =\n    (ctx: Ctx) =>\n    (type: string, value?: string, props?: JSONRecord): void =>\n        open(ctx)(createElement(type, [], value, props));\n\nconst addNode =\n    (ctx: Ctx) =>\n    (type: string, children?: MarkdownNode[], value?: string, props?: JSONRecord): MarkdownNode => {\n        const element = createElement(type, children, value, props);\n        const node: MarkdownNode = maybeMergeChildren(createMarkdownNode(element));\n\n        push(ctx)(node);\n\n        return node;\n    };\n\nconst closeNode = (ctx: Ctx) => (): MarkdownNode => {\n    const element = close(ctx);\n\n    return addNode(ctx)(element.type, element.children, element.value, element.props);\n};\n\nconst openMark =\n    (ctx: Ctx) =>\n    (mark: Mark, type: string, value?: string, props?: JSONRecord): void => {\n        const isIn = mark.isInSet(ctx.marks);\n\n        if (isIn) {\n            return;\n        }\n        ctx.marks = mark.addToSet(ctx.marks);\n        openNode(ctx)(type, value, { ...props, isMark: true });\n    };\n\nconst closeMark =\n    (ctx: Ctx) =>\n    (mark: Mark): MarkdownNode | null => {\n        if (!mark.isInSet(ctx.marks)) return null;\n        ctx.marks = mark.type.removeFromSet(ctx.marks);\n        return closeNode(ctx)();\n    };\n\nconst build = (ctx: Ctx) => () => {\n    let doc: Root | null = null;\n    do {\n        doc = closeNode(ctx)() as Root;\n    } while (size(ctx));\n\n    return doc;\n};\n\nexport type Stack = {\n    /**\n     * Build the remark AST tree with current stack.\n     *\n     * @returns A remark AST tree.\n     */\n    build: () => Root;\n\n    /**\n     * Open a mark.\n     *\n     * @param mark - The mark need to be opened.\n     * @param type - Type of this mark.\n     * @param value - Value of this mark.\n     * @param props - Additional props of this mark.\n     *\n     * @returns\n     */\n    openMark: (mark: Mark, type: string, value?: string, props?: JSONRecord) => void;\n\n    /**\n     * Close current mark.\n     * @param mark - The prosemirror mark of target mark to be closed.\n     *\n     * @returns The mark closed, will be null if not exists.\n     */\n    closeMark: (mark: Mark) => MarkdownNode | null;\n\n    /**\n     * Open a node.\n     *\n     * @param type - Type of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns\n     */\n    openNode: (type: string, value?: string, props?: JSONRecord) => void;\n\n    /**\n     * Add a node in current position.\n     *\n     * @param type - Type of this node.\n     * @param children - Children of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns The added node.\n     */\n    addNode: (type: string, children?: MarkdownNode[], value?: string, props?: JSONRecord) => MarkdownNode;\n\n    /**\n     * Close current node.\n     *\n     * @returns The node closed.\n     */\n    closeNode: () => MarkdownNode;\n};\n\nexport const createStack = (): Stack => {\n    const ctx: Ctx = {\n        marks: [],\n        elements: [],\n    };\n\n    return {\n        build: build(ctx),\n        openMark: openMark(ctx),\n        closeMark: closeMark(ctx),\n        openNode: openNode(ctx),\n        addNode: addNode(ctx),\n        closeNode: closeNode(ctx),\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { serializerMatchError } from '@milkdown/exception';\nimport type { Fragment, Mark as ProseMark, Node as ProseNode, Schema } from '@milkdown/prose/model';\n\nimport { RemarkParser } from '../utility';\nimport type { Stack } from './stack';\nimport type { InnerSerializerSpecMap, MarkSerializerSpec, NodeSerializerSpec } from './types';\n\nconst isFragment = (x: ProseNode | Fragment): x is Fragment => Object.prototype.hasOwnProperty.call(x, 'size');\n\ntype StateMethod<T extends keyof Stack> = (...args: Parameters<Stack[T]>) => State;\n\n/**\n * State for serializer.\n * Transform prosemirror state into remark AST.\n */\nexport class State {\n    constructor(\n        private readonly stack: Stack,\n        public readonly schema: Schema,\n        private readonly specMap: InnerSerializerSpecMap,\n    ) {}\n\n    #matchTarget<T extends ProseMark | ProseNode>(\n        node: T,\n    ): (T extends ProseNode ? NodeSerializerSpec : MarkSerializerSpec) & { key: string } {\n        const result = Object.entries(this.specMap)\n            .map(([key, spec]) => ({\n                key,\n                ...spec,\n            }))\n            .find((x) => x.match(node as ProseMark & ProseNode));\n\n        if (!result) throw serializerMatchError(node.type);\n\n        return result as never;\n    }\n\n    #runProseNode(node: ProseNode) {\n        const { runner } = this.#matchTarget(node);\n        runner(this, node);\n    }\n\n    #runProseMark(mark: ProseMark, node: ProseNode) {\n        const { runner } = this.#matchTarget(mark);\n        return runner(this, mark, node);\n    }\n\n    #runNode(node: ProseNode) {\n        const { marks } = node;\n        const getPriority = (x: ProseMark) => x.type.spec['priority'] ?? 50;\n        const tmp = [...marks].sort((a, b) => getPriority(a) - getPriority(b));\n        const unPreventNext = tmp.every((mark) => !this.#runProseMark(mark, node));\n        if (unPreventNext) {\n            this.#runProseNode(node);\n        }\n        marks.forEach((mark) => this.stack.closeMark(mark));\n    }\n\n    /**\n     * Transform a prosemirror node tree into remark AST.\n     *\n     * @param tree - The prosemirror node tree needs to be transformed.\n     *\n     * @returns The state instance.\n     */\n    run(tree: ProseNode) {\n        this.next(tree);\n\n        return this;\n    }\n\n    /**\n     * Use a remark parser to serialize current AST stored.\n     *\n     * @param remark - The remark parser needs to used.\n     * @returns Result markdown string.\n     */\n    toString = (remark: RemarkParser): string => remark.stringify(this.stack.build()) as string;\n\n    /**\n     * Give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n     *\n     * @param nodes - The node or node list needs to be handled.\n     *\n     * @returns The state instance.\n     */\n    next = (nodes: ProseNode | Fragment) => {\n        if (isFragment(nodes)) {\n            nodes.forEach((node) => {\n                this.#runNode(node);\n            });\n            return this;\n        }\n        this.#runNode(nodes);\n        return this;\n    };\n\n    /**\n     * Add a node without open or close it.\n     *\n     * @remarks\n     * It's useful for nodes which don't have content.\n     *\n     * @param type - Type of this node.\n     * @param children - Children of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns The added node.\n     */\n    addNode: StateMethod<'addNode'> = (...args) => {\n        this.stack.addNode(...args);\n        return this;\n    };\n\n    /**\n     * Open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n     *\n     * @remarks\n     * You can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n     *\n     * @param type - Type of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns The state instance.\n     */\n    openNode: StateMethod<'openNode'> = (...args) => {\n        this.stack.openNode(...args);\n        return this;\n    };\n\n    /**\n     * Close current node.\n     *\n     * @returns The node closed.\n     */\n    closeNode: StateMethod<'closeNode'> = (...args) => {\n        this.stack.closeNode(...args);\n        return this;\n    };\n\n    /**\n     * Used when current node has marks, the serializer will auto combine marks nearby.\n     *\n     * @param mark - The mark need to be opened.\n     * @param type - Type of this mark.\n     * @param value - Value of this mark.\n     * @param props - Additional props of this mark.\n     *\n     * @returns The state instance.\n     */\n    withMark: StateMethod<'openMark'> = (...args) => {\n        this.stack.openMark(...args);\n        return this;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node, Schema } from '@milkdown/prose/model';\n\nimport { RemarkParser } from '../utility';\nimport { createStack } from './stack';\nimport { State } from './state';\nimport type { InnerSerializerSpecMap } from './types';\n\nexport const createSerializer =\n    (schema: Schema, specMap: InnerSerializerSpecMap, remark: RemarkParser) => (content: Node) => {\n        const state = new State(createStack(), schema, specMap);\n        state.run(content);\n        return state.toString(remark);\n    };\n\nexport * from './types';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createTimer, CtxHandler, MilkdownPlugin } from '@milkdown/ctx';\n\nexport const ConfigReady = createTimer('ConfigReady');\n\nexport const config =\n    (configure: CtxHandler): MilkdownPlugin =>\n    (pre) => {\n        pre.record(ConfigReady);\n\n        return async (ctx) => {\n            await configure(ctx);\n            ctx.done(ConfigReady);\n        };\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport {\n    createThemeManager,\n    Emotion,\n    emotionConfigCtx,\n    emotionCtx,\n    initEmotion,\n    internalThemeKeys,\n    ThemeGlobal,\n    ThemeManager,\n    themeManagerCtx,\n    ThemeSliceKey,\n} from '@milkdown/design-system';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\n\nimport { ConfigReady } from './config';\nimport { InitReady, prosePluginsCtx } from './init';\n\nexport const themeTimerCtx = createSlice([] as Timer[], 'themeTimer');\nexport const ThemeEnvironmentReady = createTimer('ThemeEnvironmentReady');\nexport const ThemeReady = createTimer('ThemeReady');\n\nconst key = new PluginKey('MILKDOWN_THEME_RESET');\n\nexport const themeEnvironment: MilkdownPlugin = (pre) => {\n    const themeManager = createThemeManager();\n\n    pre.inject(emotionConfigCtx)\n        .inject(emotionCtx)\n        .inject(themeManagerCtx, themeManager)\n        .inject(themeTimerCtx, [ConfigReady])\n        .record(ThemeReady)\n        .record(ThemeEnvironmentReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(themeTimerCtx);\n        const emotion = initEmotion(ctx.get(emotionConfigCtx));\n\n        internalThemeKeys.forEach((key) => {\n            themeManager.inject(key as ThemeSliceKey);\n        });\n\n        ctx.set(emotionCtx, emotion);\n\n        ctx.done(ThemeEnvironmentReady);\n        ctx.done(ThemeReady);\n\n        await ctx.wait(InitReady);\n        ctx.update(prosePluginsCtx, (xs) =>\n            xs.concat(\n                new Plugin({\n                    key,\n                    view: () => {\n                        themeManager.runExecutor();\n                        return {\n                            destroy: () => {\n                                emotion.flush();\n                            },\n                        };\n                    },\n                }),\n            ),\n        );\n    };\n};\n\nexport type CreateThemePack = (emotion: Emotion, manager: ThemeManager) => void;\nexport type ThemePlugin = MilkdownPlugin & {\n    override: (overrideFn: CreateThemePack) => ThemePlugin;\n};\n\nexport const themeFactory = (createThemePack?: CreateThemePack): ThemePlugin => {\n    let overrideFn: CreateThemePack | null = null;\n    const theme: ThemePlugin = () => async (ctx) => {\n        await ctx.wait(ThemeEnvironmentReady);\n        const emotion = ctx.get(emotionCtx);\n        const themeManager = ctx.get(themeManagerCtx);\n\n        themeManager.setExecutor(() => {\n            createThemePack?.(emotion, themeManager);\n            overrideFn?.(emotion, themeManager);\n\n            internalThemeKeys.forEach((key) => {\n                if (!themeManager.has(key as ThemeSliceKey)) {\n                    console.warn('Theme key not found: ', key.sliceName);\n                }\n            });\n\n            themeManager.get(ThemeGlobal, undefined);\n        });\n    };\n    theme.override = (fn) => {\n        overrideFn = fn;\n        return theme;\n    };\n    return theme;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Slice, Timer } from '@milkdown/ctx';\nimport { InputRule } from '@milkdown/prose/inputrules';\nimport { Plugin } from '@milkdown/prose/state';\nimport { MarkViewConstructor, NodeViewConstructor } from '@milkdown/prose/view';\nimport { RemarkParser, RemarkPlugin } from '@milkdown/transformer';\nimport remarkParse from 'remark-parse';\nimport remarkStringify, { Options } from 'remark-stringify';\nimport { unified } from 'unified';\n\nimport type { Editor } from '../editor';\nimport { ThemeReady } from './theme';\n\nexport const InitReady = createTimer('InitReady');\n\nexport const initTimerCtx = createSlice([] as Timer[], 'initTimer');\nexport const editorCtx = createSlice({} as Editor, 'editor');\n\nexport const inputRulesCtx = createSlice([] as InputRule[], 'inputRules');\nexport const prosePluginsCtx = createSlice([] as Plugin[], 'prosePlugins');\nexport const remarkPluginsCtx = createSlice([] as RemarkPlugin[], 'remarkPlugins');\n\ntype NodeView = [nodeId: string, view: NodeViewConstructor];\nexport const nodeViewCtx = createSlice([] as NodeView[], 'nodeView');\ntype MarkView = [nodeId: string, view: MarkViewConstructor];\nexport const markViewCtx = createSlice([] as MarkView[], 'markView');\n\nexport const remarkCtx: Slice<RemarkParser> = createSlice(unified().use(remarkParse).use(remarkStringify), 'remark');\nexport const remarkStringifyDefaultOptions: Options = {};\nexport const remarkStringifyOptionsCtx = createSlice(remarkStringifyDefaultOptions, 'remarkStringifyOptions');\n\nexport const init =\n    (editor: Editor): MilkdownPlugin =>\n    (pre) => {\n        pre.inject(editorCtx, editor)\n            .inject(prosePluginsCtx)\n            .inject(remarkPluginsCtx)\n            .inject(inputRulesCtx)\n            .inject(nodeViewCtx)\n            .inject(markViewCtx)\n            .inject(remarkStringifyOptionsCtx)\n            .inject(remarkCtx, unified().use(remarkParse).use(remarkStringify))\n            .inject(initTimerCtx, [ThemeReady])\n            .record(InitReady);\n\n        return async (ctx) => {\n            await ctx.waitTimers(initTimerCtx);\n            const options = ctx.get(remarkStringifyOptionsCtx);\n            ctx.set(remarkCtx, unified().use(remarkParse).use(remarkStringify, options));\n\n            ctx.done(InitReady);\n        };\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport type { MarkSpec, NodeSpec } from '@milkdown/prose/model';\nimport { Schema } from '@milkdown/prose/model';\nimport type {\n    MarkParserSpec,\n    MarkSerializerSpec,\n    NodeParserSpec,\n    NodeSerializerSpec,\n    RemarkParser,\n} from '@milkdown/transformer';\n\nimport { InitReady, remarkCtx, remarkPluginsCtx } from '.';\n\nexport const SchemaReady = createTimer('schemaReady');\n\nexport const schemaCtx = createSlice({} as Schema, 'schema');\nexport const schemaTimerCtx = createSlice([] as Timer[], 'schemaTimer');\n\nexport type NodeSchema = {\n    readonly toMarkdown: NodeSerializerSpec;\n    readonly parseMarkdown: NodeParserSpec;\n    readonly priority?: number;\n} & Readonly<NodeSpec>;\n\nexport const nodesCtx = createSlice([] as Array<[string, NodeSchema]>, 'nodes');\n\nexport type MarkSchema = {\n    readonly toMarkdown: MarkSerializerSpec;\n    readonly parseMarkdown: MarkParserSpec;\n} & Readonly<MarkSpec>;\nexport const marksCtx = createSlice([] as Array<[string, MarkSchema]>, 'marks');\n\nconst extendPriority = <T extends NodeSchema | MarkSchema>(x: T): T => {\n    return {\n        ...x,\n        parseDOM: x.parseDOM?.map((rule) => ({ priority: x.priority, ...rule })),\n    };\n};\n\nexport const schema: MilkdownPlugin = (pre) => {\n    pre.inject(schemaCtx).inject(nodesCtx).inject(marksCtx).inject(schemaTimerCtx, [InitReady]).record(SchemaReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(schemaTimerCtx);\n\n        const remark = ctx.get(remarkCtx);\n        const remarkPlugins = ctx.get(remarkPluginsCtx);\n\n        const processor = remarkPlugins.reduce((acc: RemarkParser, plug) => acc.use(plug), remark);\n        ctx.set(remarkCtx, processor);\n\n        const nodes = Object.fromEntries(ctx.get(nodesCtx).map(([key, x]) => [key, extendPriority(x)]));\n        const marks = Object.fromEntries(ctx.get(marksCtx).map(([key, x]) => [key, extendPriority(x)]));\n\n        ctx.set(\n            schemaCtx,\n            new Schema({\n                nodes,\n                marks,\n            }),\n        );\n\n        ctx.done(SchemaReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport type { Node as ProsemirrorNode } from '@milkdown/prose/model';\nimport { createParser, InnerParserSpecMap, ParserSpecWithType } from '@milkdown/transformer';\n\nimport { marksCtx, nodesCtx } from '.';\nimport { remarkCtx } from './init';\nimport { schemaCtx, SchemaReady } from './schema';\n\nexport type Parser = (text: string) => ProsemirrorNode | undefined;\n\nexport const parserCtx = createSlice((() => undefined) as Parser, 'parser');\nexport const parserTimerCtx = createSlice([] as Timer[], 'parserTimer');\n\nexport const ParserReady = createTimer('ParserReady');\n\nexport const parser: MilkdownPlugin = (pre) => {\n    pre.inject(parserCtx).inject(parserTimerCtx, [SchemaReady]).record(ParserReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(parserTimerCtx);\n        const nodes = ctx.get(nodesCtx);\n        const marks = ctx.get(marksCtx);\n        const remark = ctx.get(remarkCtx);\n        const schema = ctx.get(schemaCtx);\n\n        const children = [\n            ...nodes.map(([id, v]) => ({ id, ...v })).map((node) => ({ ...node, is: 'node' as const })),\n            ...marks.map(([id, v]) => ({ id, ...v })).map((mark) => ({ ...mark, is: 'mark' as const })),\n        ];\n        const spec: InnerParserSpecMap = Object.fromEntries(\n            children.map(({ id, parseMarkdown, is }) => [id, { ...parseMarkdown, is, key: id } as ParserSpecWithType]),\n        );\n\n        ctx.set(parserCtx, createParser(schema, spec, remark));\n        ctx.done(ParserReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport type { Node as ProsemirrorNode } from '@milkdown/prose/model';\nimport { createSerializer } from '@milkdown/transformer';\n\nimport { remarkCtx } from './init';\nimport { marksCtx, nodesCtx, schemaCtx, SchemaReady } from './schema';\n\nexport const serializerCtx = createSlice<(node: ProsemirrorNode) => string, 'serializer'>(() => '', 'serializer');\nexport const serializerTimerCtx = createSlice([] as Timer[], 'serializerTimer');\n\nexport const SerializerReady = createTimer('SerializerReady');\n\nexport const serializer: MilkdownPlugin = (pre) => {\n    pre.inject(serializerCtx).inject(serializerTimerCtx, [SchemaReady]).record(SerializerReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(serializerTimerCtx);\n        const nodes = ctx.get(nodesCtx);\n        const marks = ctx.get(marksCtx);\n        const remark = ctx.get(remarkCtx);\n        const schema = ctx.get(schemaCtx);\n\n        const children = [...nodes, ...marks];\n        const spec = Object.fromEntries(children.map(([id, child]) => [id, child.toMarkdown]));\n\n        ctx.set(serializerCtx, createSerializer(schema, spec, remark));\n        ctx.done(SerializerReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport { docTypeError } from '@milkdown/exception';\nimport { customInputRules as createInputRules } from '@milkdown/prose';\nimport { baseKeymap } from '@milkdown/prose/commands';\nimport { keymap as createKeymap } from '@milkdown/prose/keymap';\nimport { DOMParser, Node, Schema } from '@milkdown/prose/model';\nimport { EditorState, Plugin, PluginKey } from '@milkdown/prose/state';\nimport { JSONRecord } from '@milkdown/transformer';\n\nimport { CommandsReady } from '.';\nimport { inputRulesCtx, prosePluginsCtx } from './init';\nimport { Parser, parserCtx, ParserReady } from './parser';\nimport { schemaCtx } from './schema';\nimport { SerializerReady } from './serializer';\n\nexport type DefaultValue = string | { type: 'html'; dom: HTMLElement } | { type: 'json'; value: JSONRecord };\ntype StateOptions = Parameters<typeof EditorState.create>[0];\ntype StateOptionsOverride = (prev: StateOptions) => StateOptions;\n\nexport const defaultValueCtx = createSlice('' as DefaultValue, 'defaultValue');\nexport const editorStateCtx = createSlice({} as EditorState, 'editorState');\nexport const editorStateOptionsCtx = createSlice<StateOptionsOverride>((x) => x, 'stateOptions');\nexport const editorStateTimerCtx = createSlice([] as Timer[], 'editorStateTimer');\n\nexport const EditorStateReady = createTimer('EditorStateReady');\n\nconst key = new PluginKey('MILKDOWN_STATE_TRACKER');\n\nexport const getDoc = (defaultValue: DefaultValue, parser: Parser, schema: Schema) => {\n    if (typeof defaultValue === 'string') {\n        return parser(defaultValue);\n    }\n\n    if (defaultValue.type === 'html') {\n        return DOMParser.fromSchema(schema).parse(defaultValue.dom);\n    }\n\n    if (defaultValue.type === 'json') {\n        return Node.fromJSON(schema, defaultValue.value);\n    }\n\n    throw docTypeError(defaultValue);\n};\n\nexport const editorState: MilkdownPlugin = (pre) => {\n    pre.inject(defaultValueCtx)\n        .inject(editorStateCtx)\n        .inject(editorStateOptionsCtx)\n        .inject(editorStateTimerCtx, [ParserReady, SerializerReady, CommandsReady])\n        .record(EditorStateReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(editorStateTimerCtx);\n\n        const schema = ctx.get(schemaCtx);\n        const parser = ctx.get(parserCtx);\n        const rules = ctx.get(inputRulesCtx);\n        const optionsOverride = ctx.get(editorStateOptionsCtx);\n        const prosePlugins = ctx.get(prosePluginsCtx);\n        const defaultValue = ctx.get(defaultValueCtx);\n        const doc = getDoc(defaultValue, parser, schema);\n\n        const plugins = [\n            ...prosePlugins,\n            new Plugin({\n                key,\n                state: {\n                    init: () => {\n                        // do nothing\n                    },\n                    apply: (_tr, _value, _oldState, newState) => {\n                        ctx.set(editorStateCtx, newState);\n                    },\n                },\n            }),\n            createInputRules({ rules }),\n            createKeymap(baseKeymap),\n        ];\n\n        ctx.set(prosePluginsCtx, plugins);\n\n        const options = optionsOverride({\n            schema,\n            doc,\n            plugins,\n        });\n\n        const state = EditorState.create(options);\n        ctx.set(editorStateCtx, state);\n        ctx.done(EditorStateReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, Ctx, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { DirectEditorProps, EditorView } from '@milkdown/prose/view';\n\nimport { editorStateCtx, EditorStateReady } from './editor-state';\nimport { InitReady, markViewCtx, nodeViewCtx, prosePluginsCtx } from './init';\n\ntype EditorOptions = Omit<DirectEditorProps, 'state'>;\n\ntype RootType = Node | undefined | null | string;\n\nexport const editorViewCtx = createSlice({} as EditorView, 'editorView');\nexport const editorViewOptionsCtx = createSlice({} as Partial<EditorOptions>, 'editorViewOptions');\nexport const rootCtx = createSlice(null as RootType, 'root');\nexport const editorViewTimerCtx = createSlice([] as Timer[], 'editorViewTimer');\nexport const rootDOMCtx = createSlice(null as unknown as HTMLElement, 'rootDOM');\n\nexport const EditorViewReady = createTimer('EditorViewReady');\n\nconst createViewContainer = (root: Node, ctx: Ctx) => {\n    const container = document.createElement('div');\n    container.className = 'milkdown';\n    root.appendChild(container);\n    ctx.set(rootDOMCtx, container);\n\n    return container;\n};\n\nconst prepareViewDom = (dom: Element) => {\n    dom.classList.add('editor');\n    dom.setAttribute('role', 'textbox');\n};\n\nconst key = new PluginKey('MILKDOWN_VIEW_CLEAR');\n\nexport const editorView: MilkdownPlugin = (pre) => {\n    pre.inject(rootCtx, document.body)\n        .inject(editorViewCtx)\n        .inject(editorViewOptionsCtx)\n        .inject(rootDOMCtx)\n        .inject(editorViewTimerCtx, [EditorStateReady])\n        .record(EditorViewReady);\n\n    return async (ctx) => {\n        await ctx.wait(InitReady);\n\n        const root = ctx.get(rootCtx) || document.body;\n        const el = typeof root === 'string' ? document.querySelector(root) : root;\n\n        ctx.update(prosePluginsCtx, (xs) => [\n            new Plugin({\n                key,\n                view: (editorView) => {\n                    const container = el ? createViewContainer(el, ctx) : undefined;\n\n                    const handleDOM = () => {\n                        if (container && el) {\n                            const editor = editorView.dom;\n                            el.replaceChild(container, editor);\n                            container.appendChild(editor);\n                        }\n                    };\n                    handleDOM();\n                    return {\n                        destroy: () => {\n                            if (container?.parentNode) {\n                                container?.parentNode.replaceChild(editorView.dom, container);\n                            }\n                            container?.remove();\n                        },\n                    };\n                },\n            }),\n            ...xs,\n        ]);\n\n        await ctx.waitTimers(editorViewTimerCtx);\n\n        const state = ctx.get(editorStateCtx);\n        const options = ctx.get(editorViewOptionsCtx);\n        const nodeViews = Object.fromEntries(ctx.get(nodeViewCtx));\n        const markViews = Object.fromEntries(ctx.get(markViewCtx));\n        const view = new EditorView(el as Node, {\n            state,\n            nodeViews,\n            markViews,\n            ...options,\n        });\n        prepareViewDom(view.dom);\n        ctx.set(editorViewCtx, view);\n        ctx.done(EditorViewReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createContainer, createSlice, createTimer, Ctx, MilkdownPlugin, Slice, Timer } from '@milkdown/ctx';\nimport { callCommandBeforeEditorView } from '@milkdown/exception';\nimport type { Command } from '@milkdown/prose/state';\n\nimport { editorViewCtx, EditorViewReady } from './editor-view';\nimport { SchemaReady } from './schema';\n\nexport type Cmd<T = undefined> = (payload?: T) => Command;\nexport type CmdKey<T = undefined> = Slice<Cmd<T>>;\n\ntype InferParams<T> = T extends CmdKey<infer U> ? U : never;\n\nexport class CommandManager {\n    #container = createContainer();\n    #ctx: Ctx | null = null;\n\n    setCtx = (ctx: Ctx) => {\n        this.#ctx = ctx;\n    };\n\n    /**\n     * Create a command with provided key and command function.\n     *\n     * @param meta - The key of the command that needs to be created.\n     * @param value - The implementation of the command function.\n     */\n    create<T>(meta: CmdKey<T>, value: Cmd<T>) {\n        return meta(this.#container.sliceMap, value);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get<T extends CmdKey<any>>(slice: string): Cmd<InferParams<T>>;\n    get<T>(slice: CmdKey<T>): Cmd<T>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(slice: string | CmdKey<any>): Cmd<any>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(slice: string | CmdKey<any>): Cmd<any> {\n        return this.#container.getSlice(slice).get();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call<T extends CmdKey<any>>(slice: string, payload?: InferParams<T>): boolean;\n    call<T>(slice: CmdKey<T>, payload?: T): boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(slice: string | CmdKey<any>, payload?: any): boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(slice: string | CmdKey<any>, payload?: any): boolean {\n        if (this.#ctx == null) {\n            throw callCommandBeforeEditorView();\n        }\n        const cmd = this.get(slice);\n        const command = cmd(payload);\n        const view = this.#ctx.get(editorViewCtx);\n        return command(view.state, view.dispatch, view);\n    }\n}\n\nexport type CmdTuple<T = unknown> = [key: CmdKey<T>, value: Cmd<T>];\n\nexport const createCmd = <T>(key: CmdKey<T>, value: Cmd<T>): CmdTuple => [key, value] as CmdTuple;\nexport const createCmdKey = <T = undefined>(key = 'cmdKey'): CmdKey<T> =>\n    createSlice((() => () => false) as Cmd<T>, key);\n\nexport const commandsCtx = createSlice({} as CommandManager, 'commands');\n\nexport const commandsTimerCtx = createSlice([] as Timer[], 'commandsTimer');\nexport const CommandsReady = createTimer('CommandsReady');\n\nexport const commands: MilkdownPlugin = (pre) => {\n    const commandManager = new CommandManager();\n    pre.inject(commandsCtx, commandManager).inject(commandsTimerCtx, [SchemaReady]).record(CommandsReady);\n    return async (ctx) => {\n        await ctx.waitTimers(commandsTimerCtx);\n\n        ctx.done(CommandsReady);\n        await ctx.wait(EditorViewReady);\n        commandManager.setCtx(ctx);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createClock, createContainer, Ctx, CtxHandler, MilkdownPlugin, Pre } from '@milkdown/ctx';\n\nimport {\n    commands,\n    config,\n    editorState,\n    editorView,\n    init,\n    parser,\n    schema,\n    serializer,\n    themeEnvironment,\n} from '../internal-plugin';\n\n/**\n * Get the milkdown editor constructor\n */\nexport class Editor {\n    /**\n     * Create a new editor instance.\n     *\n     * @returns The new editor instance been created.\n     */\n    static make() {\n        return new Editor();\n    }\n\n    readonly #container = createContainer();\n    readonly #clock = createClock();\n\n    readonly #plugins: Set<CtxHandler> = new Set();\n    readonly #configureList: CtxHandler[] = [];\n\n    readonly #ctx = new Ctx(this.#container, this.#clock);\n    readonly #pre = new Pre(this.#container, this.#clock);\n\n    readonly #loadInternal = () => {\n        const internalPlugins = [\n            themeEnvironment,\n            schema,\n            parser,\n            serializer,\n            commands,\n            editorState,\n            editorView,\n            init(this),\n        ];\n        const configPlugin = config(async (x) => {\n            await Promise.all(this.#configureList.map((fn) => fn(x)));\n        });\n        this.use(internalPlugins.concat(configPlugin));\n    };\n\n    /**\n     * Get the ctx of the editor.\n     *\n     * @returns The ctx of the editor.\n     */\n    get ctx() {\n        return this.#ctx;\n    }\n\n    /**\n     * Use one plugin or a list of plugins for current editor.\n     *\n     * @example\n     * ```\n     * Editor.make()\n     *   .use(plugin)\n     *   .use([pluginA, pluginB])\n     * ```\n     *\n     * @param plugins - A list of plugins, or one plugin.\n     * @returns Editor instance.\n     */\n    readonly use = (plugins: MilkdownPlugin | MilkdownPlugin[]) => {\n        [plugins].flat().forEach((plugin) => {\n            this.#plugins.add(plugin(this.#pre));\n        });\n        return this;\n    };\n\n    /**\n     * Config the context for current editor.\n     *\n     * @param configure - The function that configure current editor, can be async, with context as parameter.\n     * @returns Editor instance.\n     */\n    readonly config = (configure: CtxHandler) => {\n        this.#configureList.push(configure);\n        return this;\n    };\n\n    /**\n     * Create the editor UI.\n     *\n     * @example\n     * ```\n     * Editor.make().use(nord).use(commonmark).create()\n     * ```\n     *\n     * @returns A promise object, will be resolved as editor instance after create finish.\n     */\n    readonly create = async () => {\n        this.#loadInternal();\n        await Promise.all([...this.#plugins].map((loader) => loader(this.#ctx)));\n        return this;\n    };\n\n    /**\n     * Get the context value in a running editor on demand and return the action result.\n     *\n     * @example\n     * ```\n     * import { Editor, editorViewCtx, serializerCtx } from '@milkdown/core';\n     * async function playWithEditor() {\n     *     const editor = await Editor.make().use(commonmark).create();\n     *\n     *     const getMarkdown = () =>\n     *         editor.action((ctx) => {\n     *             const editorView = ctx.get(editorViewCtx);\n     *             const serializer = ctx.get(serializerCtx);\n     *             return serializer(editorView.state.doc);\n     *         });\n     *\n     *     // get markdown string:\n     *     getMarkdown();\n     * }\n     * ```\n     *\n     * @param action - The function that get editor context and return the action result.\n     * @returns The action result.\n     */\n    readonly action = <T>(action: (ctx: Ctx) => T) => action(this.#ctx);\n}\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n            !isAdjacentTo(tr, history.prevRanges));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(map) {\n    let result = [];\n    map.forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0);\n    dispatch(pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist }).scrollIntoView());\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.done.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, false);\n    return true;\n};\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = (state, dispatch) => {\n    let hist = historyKey.getState(state);\n    if (!hist || hist.undone.eventCount == 0)\n        return false;\n    if (dispatch)\n        histTransaction(hist, state, dispatch, true);\n    return true;\n};\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, undo, undoDepth };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion } from '@milkdown/core';\n\nexport const injectProsemirrorView = ({ injectGlobal }: Emotion) => injectGlobal`\n    /* copy from https://github.com/ProseMirror/@milkdown/prose/blob/master/style/prosemirror.css */\n    .ProseMirror {\n        position: relative;\n    }\n\n    .ProseMirror {\n        word-wrap: break-word;\n        white-space: pre-wrap;\n        white-space: break-spaces;\n        -webkit-font-variant-ligatures: none;\n        font-variant-ligatures: none;\n        font-feature-settings: 'liga' 0; /* the above doesn't seem to work in Edge */\n    }\n\n    .ProseMirror pre {\n        white-space: pre-wrap;\n    }\n\n    .ProseMirror li {\n        position: relative;\n    }\n\n    .ProseMirror-hideselection *::selection {\n        background: transparent;\n    }\n    .ProseMirror-hideselection *::-moz-selection {\n        background: transparent;\n    }\n    .ProseMirror-hideselection {\n        caret-color: transparent;\n    }\n\n    .ProseMirror-selectednode {\n        outline: 2px solid #8cf;\n    }\n\n    /* Make sure li selections wrap around markers */\n\n    li.ProseMirror-selectednode {\n        outline: none;\n    }\n\n    li.ProseMirror-selectednode:after {\n        content: '';\n        position: absolute;\n        left: -32px;\n        right: -2px;\n        top: -2px;\n        bottom: -2px;\n        border: 2px solid #8cf;\n        pointer-events: none;\n    }\n\n    /* Protect against generic img rules */\n\n    img.ProseMirror-separator {\n        display: inline !important;\n        border: none !important;\n        margin: 0 !important;\n    }\n`;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Emotion, ThemeCodeFenceType, ThemeManager } from '@milkdown/core';\nimport { getPalette, ThemeBorder, ThemeFont, ThemeIcon, ThemeScrollbar, ThemeShadow, ThemeSize } from '@milkdown/core';\nimport type { Node } from '@milkdown/prose/model';\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n    const radius = manager.get(ThemeSize, 'radius');\n    const lineWidth = manager.get(ThemeSize, 'lineWidth');\n\n    return css`\n        background-color: ${palette('background')};\n        color: ${palette('neutral')};\n        font-size: 14px;\n        padding: 18px 6px 22px;\n        border-radius: ${radius};\n        font-family: ${manager.get(ThemeFont, 'typography')};\n\n        .code-fence_selector-wrapper {\n            position: relative;\n        }\n\n        .code-fence_selector {\n            width: 180px;\n            box-sizing: border-box;\n            border-radius: ${radius};\n            margin: 0 18px 18px;\n            cursor: pointer;\n            background-color: ${palette('surface')};\n            position: relative;\n            display: flex;\n            color: ${palette('neutral', 0.87)};\n            letter-spacing: 0.5px;\n            height: 42px;\n            align-items: center;\n\n            ${manager.get(ThemeBorder, undefined)};\n            ${manager.get(ThemeShadow, undefined)};\n\n            & > .icon {\n                width: 42px;\n                height: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                color: ${palette('solid', 0.87)};\n                border-left: ${lineWidth} solid ${palette('line')};\n\n                text-align: center;\n                transition: all 0.2s ease-in-out;\n                &:hover {\n                    background: ${palette('background')};\n                    color: ${palette('primary')};\n                }\n            }\n\n            > span:first-child {\n                padding-left: 16px;\n                flex: 1;\n                font-weight: 500;\n            }\n        }\n\n        .code-fence_selector-list-item {\n            list-style: none;\n            line-height: 2;\n            padding-left: 16px;\n            cursor: pointer;\n            margin: 0 !important;\n            :hover {\n                background: ${palette('secondary', 0.12)};\n                color: ${palette('primary')};\n            }\n        }\n\n        .code-fence_selector-list {\n            &[data-fold='true'] {\n                display: none;\n            }\n\n            margin: 0 !important;\n            font-weight: 500;\n            position: absolute;\n            z-index: 1;\n            top: 42px;\n            box-sizing: border-box;\n            left: 18px;\n            padding: 8px 0;\n            max-height: 260px;\n            width: 180px;\n            background-color: ${palette('surface')};\n            border-top: none;\n            overflow-y: auto;\n            display: flex;\n            flex-direction: column;\n\n            ${manager.get(ThemeScrollbar, ['y'])}\n            ${manager.get(ThemeBorder, undefined)};\n            ${manager.get(ThemeShadow, undefined)};\n        }\n    `;\n};\n\nexport const codeFence = (manager: ThemeManager, emotion: Emotion) => {\n    manager.set<ThemeCodeFenceType>('code-fence', ({ editable, onSelectLanguage, onBlur, onFocus, languageList }) => {\n        const container = document.createElement('div');\n        const selectWrapper = document.createElement('div');\n        const select = document.createElement('ul');\n        const pre = document.createElement('pre');\n        const code = document.createElement('code');\n\n        const valueWrapper = document.createElement('div');\n        valueWrapper.className = 'code-fence_selector';\n\n        const value = document.createElement('span');\n        valueWrapper.appendChild(value);\n\n        const downIcon = manager.get(ThemeIcon, 'downArrow');\n        if (editable() && downIcon) {\n            valueWrapper.appendChild(downIcon.dom);\n        }\n        code.spellcheck = false;\n        selectWrapper.className = 'code-fence_selector-wrapper';\n        selectWrapper.contentEditable = 'false';\n        selectWrapper.append(valueWrapper);\n        selectWrapper.append(select);\n        pre.append(code);\n        const codeContent = document.createElement('div');\n        code.append(codeContent);\n        codeContent.style.whiteSpace = 'inherit';\n        container.append(selectWrapper, pre);\n\n        container.classList.add('code-fence');\n\n        manager.onFlush(() => {\n            const style = getStyle(manager, emotion);\n            if (style) {\n                container.classList.add(style);\n            }\n        });\n\n        select.className = 'code-fence_selector-list';\n        select.addEventListener('mousedown', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (!editable()) return;\n\n            const el = e.target;\n            if (!(el instanceof HTMLLIElement)) return;\n            const value = el.dataset['value'];\n            if (value != null) {\n                onSelectLanguage(value);\n            }\n        });\n        valueWrapper.addEventListener('mousedown', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (!editable()) return;\n            onFocus();\n        });\n\n        const onClickOutside = () => {\n            if (!editable() || select.dataset['fold'] === 'true') return;\n\n            onBlur();\n        };\n        document.addEventListener('mousedown', onClickOutside);\n\n        languageList.forEach((lang) => {\n            const option = document.createElement('li');\n            option.className = 'code-fence_selector-list-item';\n            option.innerText = lang || '--';\n            select.appendChild(option);\n            option.setAttribute('data-value', lang);\n        });\n\n        const onUpdate = (node: Node) => {\n            container.dataset['language'] = node.attrs['language'];\n            value.innerText = node.attrs['language'] || '--';\n            select.setAttribute('data-fold', node.attrs['fold'] ? 'true' : 'false');\n        };\n\n        const onDestroy = () => {\n            container.remove();\n            document.removeEventListener('mousedown', onClickOutside);\n        };\n\n        return {\n            dom: container,\n            contentDOM: codeContent,\n            onUpdate,\n            onDestroy,\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion, getPalette, Icon, ThemeIcon, ThemeImageType, ThemeManager, ThemeSize } from '@milkdown/core';\nimport type { Node } from '@milkdown/prose/model';\n\nexport const image = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n\n    manager.set<ThemeImageType>('image', ({ placeholder, isBlock, onError, onLoad }) => {\n        const createIcon = (icon: Icon) => manager.get(ThemeIcon, icon)?.dom as HTMLElement;\n        const container = document.createElement('span');\n        container.classList.add('image-container');\n\n        manager.onFlush(() => {\n            const style = css`\n                display: inline-block;\n                position: relative;\n                text-align: center;\n                font-size: 0;\n                vertical-align: text-bottom;\n                line-height: 1;\n\n                ${isBlock\n                    ? `\n                width: 100%;\n                margin: 0 auto;\n                `\n                    : ''}\n\n                &.ProseMirror-selectednode::after {\n                    content: '';\n                    background: ${palette('secondary', 0.38)};\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    bottom: 0;\n                }\n\n                img {\n                    max-width: 100%;\n                    height: auto;\n                    object-fit: contain;\n                    margin: 0 2px;\n                }\n                .icon,\n                .placeholder {\n                    display: none;\n                }\n\n                &.system {\n                    width: 100%;\n                    padding: 0 32px;\n                    font-size: inherit;\n\n                    img {\n                        width: 0;\n                        height: 0;\n                        display: none;\n                    }\n\n                    .icon,\n                    .placeholder {\n                        display: inline;\n                    }\n\n                    box-sizing: border-box;\n                    height: 48px;\n                    background-color: ${palette('background')};\n                    border-radius: ${manager.get(ThemeSize, 'radius')};\n                    display: inline-flex;\n                    gap: 32px;\n                    justify-content: flex-start;\n                    align-items: center;\n                    .placeholder {\n                        margin: 0;\n                        line-height: 1;\n                        &::before {\n                            content: '';\n                            font-size: 14px;\n                            color: ${palette('neutral', 0.6)};\n                        }\n                    }\n                }\n\n                &.empty {\n                    .placeholder {\n                        &::before {\n                            content: '${placeholder}';\n                        }\n                    }\n                }\n            `;\n\n            if (style) {\n                container.classList.add(style);\n            }\n        });\n\n        const content = document.createElement('img');\n\n        container.append(content);\n        let icon = createIcon('image');\n        const $placeholder = document.createElement('span');\n        $placeholder.classList.add('placeholder');\n        container.append(icon, $placeholder);\n\n        const setIcon = (name: Icon) => {\n            const nextIcon = createIcon(name);\n            container.replaceChild(nextIcon, icon);\n            icon = nextIcon;\n        };\n\n        const loadImage = (src: string) => {\n            container.classList.add('system', 'loading');\n            setIcon('loading');\n            const img = document.createElement('img');\n            img.src = src;\n\n            img.onerror = () => {\n                onError?.(img);\n            };\n\n            img.onload = () => {\n                onLoad?.(img);\n            };\n        };\n\n        const onUpdate = (node: Node) => {\n            const { src, alt, title, loading, failed } = node.attrs;\n            content.src = src;\n            content.title = title || alt;\n            content.alt = alt;\n\n            if (src.length === 0) {\n                container.classList.add('system', 'empty');\n                setIcon('image');\n                return;\n            }\n\n            if (loading) {\n                loadImage(src);\n                return;\n            }\n\n            if (failed) {\n                container.classList.remove('loading', 'empty');\n                container.classList.add('system', 'failed');\n                setIcon('brokenImage');\n                return;\n            }\n\n            if (src.length > 0) {\n                container.classList.remove('system', 'empty', 'loading');\n                return;\n            }\n\n            container.classList.add('system', 'empty');\n            setIcon('image');\n        };\n\n        return {\n            dom: container,\n            onUpdate,\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion, getPalette, ThemeFont, ThemeInnerEditorType, ThemeManager, ThemeSize } from '@milkdown/core';\nimport { baseKeymap, chainCommands, deleteSelection } from '@milkdown/prose/commands';\nimport { history, redo, undo } from '@milkdown/prose/history';\nimport { keymap } from '@milkdown/prose/keymap';\nimport { Node } from '@milkdown/prose/model';\nimport { EditorState, TextSelection } from '@milkdown/prose/state';\nimport { StepMap } from '@milkdown/prose/transform';\nimport { EditorView } from '@milkdown/prose/view';\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n    const radius = manager.get(ThemeSize, 'radius');\n    const code = manager.get(ThemeFont, 'code');\n\n    const codeStyle = css`\n        color: ${palette('neutral', 0.87)};\n        background-color: ${palette('background')};\n        border-radius: ${radius};\n        padding: 16px 32px;\n        font-size: 14px;\n        font-family: ${code};\n        overflow: hidden;\n        line-height: 1.5;\n        .ProseMirror {\n            outline: none;\n        }\n    `;\n\n    const hideCodeStyle = css`\n        display: none;\n    `;\n\n    const previewPanelStyle = css`\n        display: flex;\n        justify-content: center;\n        padding: 16px 0;\n    `;\n\n    return {\n        codeStyle,\n        hideCodeStyle,\n        previewPanelStyle,\n    };\n};\n\nconst createInnerEditor = (outerView: EditorView, getPos: () => number) => {\n    let isEditing = false;\n    let innerView: EditorView | undefined;\n\n    const openEditor = ($: HTMLElement, doc: Node) => {\n        innerView = new EditorView($, {\n            state: EditorState.create({\n                doc,\n                plugins: [\n                    history(),\n                    keymap({\n                        ...baseKeymap,\n                        Backspace: chainCommands(deleteSelection, (state) => {\n                            if (!state.selection.empty) {\n                                return false;\n                            }\n                            if (innerView && innerView.state.doc.textContent.length > 0) {\n                                return false;\n                            }\n                            const { dispatch, state: outerState } = outerView;\n                            const p = outerState.schema.nodes['paragraph']?.create();\n                            if (!p) return false;\n                            const tr = outerState.tr.replaceSelectionWith(p);\n                            let start = tr.selection.from - 2;\n                            if (start < 0) {\n                                start = 0;\n                            }\n                            dispatch(tr.setSelection(TextSelection.create(tr.doc, start)));\n                            outerView.focus();\n                            return true;\n                        }),\n                        'Mod-Enter': (_, dispatch) => {\n                            if (dispatch) {\n                                const { state } = outerView;\n                                const { to } = state.selection;\n                                const p = state.schema.nodes['paragraph']?.createAndFill();\n                                if (!p) return false;\n                                const tr = state.tr.replaceWith(to, to, p);\n                                outerView.dispatch(tr.setSelection(TextSelection.create(tr.doc, to)));\n                                outerView.focus();\n                            }\n\n                            return true;\n                        },\n                    }),\n                    keymap({\n                        'Mod-z': undo,\n                        'Mod-y': redo,\n                        'Shift-Mod-z': redo,\n                    }),\n                ],\n            }),\n            plugins: [],\n            dispatchTransaction: (tr) => {\n                if (!innerView) return;\n                const { state, transactions } = innerView.state.applyTransaction(tr);\n                innerView.updateState(state);\n\n                if (!tr.getMeta('fromOutside')) {\n                    const outerTr = outerView.state.tr;\n                    const offsetMap = StepMap.offset(getPos() + 1);\n\n                    transactions.forEach((transaction) => {\n                        const { steps } = transaction;\n                        steps.forEach((step) => {\n                            const mapped = step.map(offsetMap);\n\n                            if (!mapped) {\n                                throw Error('step discarded!');\n                            }\n                            outerTr.step(mapped);\n                        });\n                    });\n                    if (outerTr.docChanged) outerView.dispatch(outerTr);\n                }\n            },\n        });\n        innerView.focus();\n        const { state } = innerView;\n        innerView.dispatch(state.tr.setSelection(TextSelection.create(state.doc, 0)));\n        isEditing = true;\n    };\n\n    const closeEditor = () => {\n        if (innerView) {\n            innerView.destroy();\n        }\n        innerView = undefined;\n        isEditing = false;\n    };\n\n    return {\n        isEditing: () => isEditing,\n        innerView: () => innerView,\n        openEditor,\n        closeEditor,\n    };\n};\n\nexport const innerEditor = (manager: ThemeManager, emotion: Emotion) => {\n    manager.set<ThemeInnerEditorType>('inner-editor', ({ view, getPos, render }) => {\n        const inner$ = createInnerEditor(view, getPos);\n        const dom = document.createElement('div');\n        dom.classList.add('math-block');\n        const editor = document.createElement('div');\n        const preview = document.createElement('div');\n\n        let codeStyle = '';\n        let hideCodeStyle = '';\n        let previewPanelStyle = '';\n\n        manager.onFlush(() => {\n            ({ codeStyle, hideCodeStyle, previewPanelStyle } = getStyle(manager, emotion));\n            if (codeStyle && hideCodeStyle) {\n                editor.classList.add(codeStyle, hideCodeStyle);\n            }\n\n            if (previewPanelStyle) {\n                preview.classList.add(previewPanelStyle);\n            }\n        });\n\n        dom.append(editor);\n\n        return {\n            dom,\n            preview,\n            editor,\n            onUpdate: (node, isInit) => {\n                if (isInit) {\n                    const value = node.attrs['value'] || node.textContent || '';\n                    editor.dataset['value'] = value;\n                    render(value);\n                    return;\n                }\n\n                const innerView = inner$.innerView();\n                if (innerView) {\n                    const state = innerView.state;\n                    const start = node.content.findDiffStart(state.doc.content);\n                    if (start != null) {\n                        const diff = node.content.findDiffEnd(state.doc.content);\n                        if (diff) {\n                            let { a: endA, b: endB } = diff;\n                            const overlap = start - Math.min(endA, endB);\n                            if (overlap > 0) {\n                                endA += overlap;\n                                endB += overlap;\n                            }\n                            innerView.dispatch(\n                                state.tr.replace(start, endB, node.slice(start, endA)).setMeta('fromOutside', true),\n                            );\n                        }\n                    }\n                }\n\n                const newVal = node.content.firstChild?.text || '';\n                editor.dataset['value'] = newVal;\n\n                render(newVal);\n            },\n            onFocus: (node) => {\n                if (!view.editable) return;\n                if (hideCodeStyle) {\n                    editor.classList.remove(hideCodeStyle);\n                }\n                inner$.openEditor(editor, node);\n                dom.classList.add('ProseMirror-selectednode');\n            },\n            onBlur: () => {\n                if (hideCodeStyle) {\n                    editor.classList.add(hideCodeStyle);\n                }\n                inner$.closeEditor();\n                dom.classList.remove('ProseMirror-selectednode');\n            },\n            onDestroy: () => {\n                preview.remove();\n                editor.remove();\n                dom.remove();\n            },\n            stopEvent: (event) => {\n                const innerView = inner$.innerView();\n                const { target } = event;\n                const isChild = target && innerView?.dom.contains(target as Element);\n                return !!(innerView && isChild);\n            },\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Emotion,\n    getPalette,\n    ThemeBorder,\n    ThemeInputChipType,\n    ThemeManager,\n    ThemeShadow,\n    ThemeSize,\n} from '@milkdown/core';\nimport { missingRootElement } from '@milkdown/exception';\nimport { calculateTextPosition } from '@milkdown/prose';\nimport { EditorView } from '@milkdown/prose/view';\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion, options: { width: string }) => {\n    const palette = getPalette(manager);\n    return css`\n        ${manager.get(ThemeBorder, undefined)}\n        ${manager.get(ThemeShadow, undefined)}\n\n        display: inline-flex;\n        justify-content: space-between;\n        align-items: center;\n        position: absolute;\n        background: ${palette('surface')};\n        border-radius: ${manager.get(ThemeSize, 'radius')};\n        font-size: 16px;\n\n        height: 56px;\n        box-sizing: border-box;\n        width: ${options.width};\n        padding: 0 16px;\n        gap: 16px;\n        z-index: 2;\n\n        input,\n        button {\n            all: unset;\n        }\n\n        input {\n            flex-grow: 1;\n            caret-color: ${palette('primary')};\n            &::placeholder {\n                color: ${palette('neutral', 0.6)};\n            }\n        }\n\n        button {\n            cursor: pointer;\n            height: 36px;\n            color: ${palette('primary')};\n            font-size: 14px;\n            padding: 0 8px;\n            font-weight: 500;\n            letter-spacing: 1.25px;\n            &:hover {\n                background-color: ${palette('secondary', 0.12)};\n            }\n            &.disable {\n                color: ${palette('neutral', 0.38)};\n                cursor: not-allowed;\n                &:hover {\n                    background: transparent;\n                }\n            }\n            &.hide {\n                display: none;\n            }\n        }\n\n        &.hide {\n            display: none;\n        }\n    `;\n};\n\nconst calcInputPos = (view: EditorView, input: HTMLDivElement) => {\n    calculateTextPosition(view, input, (start, end, target, parent) => {\n        const $editor = view.dom.parentElement;\n        if (!$editor) {\n            throw missingRootElement();\n        }\n\n        const selectionWidth = end.left - start.left;\n        let left = start.left - parent.left - (target.width - selectionWidth) / 2;\n        const top = start.bottom - parent.top + 14 + $editor.scrollTop;\n\n        if (left < 0) left = 0;\n\n        return [top, left];\n    });\n};\n\nexport const inputChip = (manager: ThemeManager, emotion: Emotion) => {\n    manager.set<ThemeInputChipType>(\n        'input-chip',\n        ({ isBindMode, onUpdate, buttonText, placeholder, width = '400px', calculatePosition = calcInputPos }) => {\n            let button: HTMLButtonElement | null = null;\n            let disabled = false;\n            let value = '';\n            const wrapper = document.createElement('div');\n\n            manager.onFlush(() => {\n                const style = getStyle(manager, emotion, { width });\n\n                if (style) {\n                    wrapper.classList.add(style);\n                }\n            });\n\n            wrapper.classList.add('tooltip-input');\n\n            const input = document.createElement('input');\n            if (placeholder) {\n                input.placeholder = placeholder;\n            }\n            wrapper.appendChild(input);\n\n            if (!isBindMode) {\n                button = document.createElement('button');\n                button.innerText = buttonText || 'APPLY';\n                wrapper.appendChild(button);\n            }\n            const hide = () => {\n                wrapper.classList.add('hide');\n            };\n            const show = (editorView: EditorView) => {\n                wrapper.classList.remove('hide');\n                calculatePosition(editorView, wrapper);\n            };\n\n            const onInput = (e: Event) => {\n                const { target } = e;\n                if (!(target instanceof HTMLInputElement)) {\n                    return;\n                }\n\n                value = target.value;\n\n                if (!button) {\n                    onUpdate(value);\n                    return;\n                }\n\n                if (!value) {\n                    button.classList.add('disable');\n                    disabled = true;\n                    return;\n                }\n\n                button.classList.remove('disable');\n                disabled = false;\n            };\n\n            const onClick = (e: MouseEvent) => {\n                if (disabled) return;\n                e.stopPropagation();\n                onUpdate(value);\n                hide();\n            };\n\n            const onKeydown = (e: KeyboardEvent) => {\n                if ('key' in e && e.key === 'Enter') {\n                    onUpdate(value);\n                    hide();\n                }\n            };\n\n            const destroy = () => {\n                input.removeEventListener('input', onInput);\n                input.removeEventListener('keydown', onKeydown);\n                button?.removeEventListener('mousedown', onClick);\n                wrapper.remove();\n            };\n\n            const init = (editorView: EditorView) => {\n                const $editor = editorView.dom.parentElement;\n                if (!$editor) throw missingRootElement();\n\n                input.addEventListener('input', onInput);\n                input.addEventListener('keydown', onKeydown);\n                button?.addEventListener('mousedown', onClick);\n\n                $editor.appendChild(wrapper);\n                hide();\n            };\n\n            const update = (v: string) => {\n                value = v;\n                input.value = v;\n            };\n\n            return {\n                dom: wrapper,\n                init,\n                show,\n                hide,\n                destroy,\n                update,\n            };\n        },\n    );\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Emotion, getPalette, Icon, ThemeIcon, ThemeManager, ThemeTaskListItemType } from '@milkdown/core';\n\nexport const taskListItem = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n\n    manager.set<ThemeTaskListItemType>('task-list-item', ({ onChange, editable }) => {\n        const createIcon = (icon: Icon) => manager.get(ThemeIcon, icon)?.dom as HTMLElement;\n\n        const listItem = document.createElement('li');\n        const checkboxWrapper = document.createElement('label');\n        const checkboxStyler = document.createElement('span');\n        const checkbox = document.createElement('input');\n        const content = document.createElement('div');\n\n        let icon = createIcon('unchecked');\n        checkboxWrapper.appendChild(icon);\n        const setIcon = (name: Icon) => {\n            const nextIcon = createIcon(name);\n            checkboxWrapper.replaceChild(nextIcon, icon);\n            icon = nextIcon;\n        };\n\n        checkboxWrapper.append(checkbox, checkboxStyler);\n        listItem.append(checkboxWrapper, content);\n\n        checkboxWrapper.contentEditable = 'false';\n        checkbox.type = 'checkbox';\n        if (!editable()) {\n            checkbox.disabled = true;\n            checkboxWrapper.style.cursor = 'not-allowed';\n        }\n        checkbox.onchange = (event) => {\n            const target = event.target;\n            if (!(target instanceof HTMLInputElement)) return;\n\n            if (!editable()) {\n                checkbox.checked = !checkbox.checked;\n\n                return;\n            }\n\n            event.preventDefault();\n\n            onChange(checkbox.checked);\n        };\n        listItem.dataset['type'] = 'task-item';\n        listItem.classList.add('task-list-item');\n\n        manager.onFlush(() => {\n            const style = css`\n                list-style-type: none;\n                position: relative;\n\n                & > div {\n                    overflow: hidden;\n                    padding: 0 2px;\n                    width: 100%;\n                }\n\n                label {\n                    display: inline-block;\n                    width: 24px;\n                    height: 24px;\n                    cursor: pointer;\n                    input {\n                        visibility: hidden;\n                    }\n                }\n                &[data-checked='true'] {\n                    label {\n                        color: ${palette('primary')};\n                    }\n                }\n                &[data-checked='false'] {\n                    label {\n                        color: ${palette('solid', 0.87)};\n                    }\n                }\n                .paragraph {\n                    margin: 8px 0;\n                }\n            `;\n\n            if (style) {\n                listItem.classList.add(style);\n            }\n        });\n\n        return {\n            dom: listItem,\n            contentDOM: content,\n            onUpdate: (node) => {\n                listItem.dataset['checked'] = node.attrs['checked'];\n                if (node.attrs['checked']) {\n                    checkbox.setAttribute('checked', 'checked');\n                } else {\n                    checkbox.removeAttribute('checked');\n                }\n                setIcon(node.attrs['checked'] ? 'checked' : 'unchecked');\n            },\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nexport * from './code-fence';\nexport * from './image';\nexport * from './inner-editor';\nexport * from './input-chip';\nexport * from './task-list-item';\n\nimport type { Emotion, ThemeManager } from '@milkdown/core';\n\nimport { codeFence } from './code-fence';\nimport { image } from './image';\nimport { innerEditor } from './inner-editor';\nimport { inputChip } from './input-chip';\nimport { taskListItem } from './task-list-item';\n\nexport const useAllPresetRenderer = (manager: ThemeManager, emotion: Emotion) => {\n    [inputChip, image, codeFence, taskListItem, innerEditor].forEach((f) => {\n        f(manager, emotion);\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nexport const typography = [\n    'Roboto',\n    'HelveticaNeue-Light',\n    'Helvetica Neue Light',\n    'Helvetica Neue',\n    'Helvetica',\n    'Arial',\n    'Lucida Grande',\n    'sans-serif',\n];\n\nexport const code = ['Consolas', 'Monaco', 'Andale Mono', 'Ubuntu Mono', 'monospace'];\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Icon, IconValue } from '@milkdown/design-system';\n\ntype IconMeta = {\n    icon: string;\n    label: string;\n};\n\nconst iconMapping: Record<Icon, IconMeta> = {\n    h1: {\n        label: 'h1',\n        icon: 'looks_one',\n    },\n    h2: {\n        label: 'h2',\n        icon: 'looks_two',\n    },\n    h3: {\n        label: 'h3',\n        icon: 'looks_3',\n    },\n    loading: {\n        label: 'loading',\n        icon: 'hourglass_empty',\n    },\n    quote: {\n        label: 'quote',\n        icon: 'format_quote',\n    },\n    code: {\n        label: 'code',\n        icon: 'code',\n    },\n    table: {\n        label: 'table',\n        icon: 'table_chart',\n    },\n    divider: {\n        label: 'divider',\n        icon: 'horizontal_rule',\n    },\n    image: {\n        label: 'image',\n        icon: 'image',\n    },\n    brokenImage: {\n        label: 'broken image',\n        icon: 'broken_image',\n    },\n    bulletList: {\n        label: 'bullet list',\n        icon: 'format_list_bulleted',\n    },\n    orderedList: {\n        label: 'ordered list',\n        icon: 'format_list_numbered',\n    },\n    taskList: {\n        label: 'task list',\n        icon: 'checklist',\n    },\n    bold: {\n        label: 'bold',\n        icon: 'format_bold',\n    },\n    italic: {\n        label: 'italic',\n        icon: 'format_italic',\n    },\n    inlineCode: {\n        label: 'inline code',\n        icon: 'code',\n    },\n    strikeThrough: {\n        label: 'strike through',\n        icon: 'strikethrough_s',\n    },\n    link: {\n        label: 'link',\n        icon: 'link',\n    },\n    leftArrow: {\n        label: 'left arrow',\n        icon: 'chevron_left',\n    },\n    rightArrow: {\n        label: 'right arrow',\n        icon: 'chevron_right',\n    },\n    upArrow: {\n        label: 'up arrow',\n        icon: 'expand_less',\n    },\n    downArrow: {\n        label: 'down arrow',\n        icon: 'expand_more',\n    },\n    alignLeft: {\n        label: 'align left',\n        icon: 'format_align_left',\n    },\n    alignRight: {\n        label: 'align right',\n        icon: 'format_align_right',\n    },\n    alignCenter: {\n        label: 'align center',\n        icon: 'format_align_center',\n    },\n    delete: {\n        label: 'delete',\n        icon: 'delete',\n    },\n    select: {\n        label: 'select',\n        icon: 'select_all',\n    },\n    unchecked: {\n        label: 'unchecked',\n        icon: 'check_box_outline_blank',\n    },\n    checked: {\n        label: 'checked',\n        icon: 'check_box',\n    },\n    undo: {\n        label: 'undo',\n        icon: 'turn_left',\n    },\n    redo: {\n        label: 'redo',\n        icon: 'turn_right',\n    },\n    liftList: {\n        label: 'lift list',\n        icon: 'format_indent_decrease',\n    },\n    sinkList: {\n        label: 'sink list',\n        icon: 'format_indent_increase',\n    },\n    dragHandle: {\n        label: 'drag handle',\n        icon: 'drag_indicator',\n    },\n    text: {\n        label: 'text',\n        icon: 'title',\n    },\n};\n\nexport const getIcon = (id: Icon): IconValue | undefined => {\n    const target = iconMapping[id];\n    if (!target) {\n        return;\n    }\n    const span = document.createElement('span');\n    span.className = 'icon material-icons material-icons-outlined';\n    const icon = iconMapping[id];\n    if (icon) {\n        span.textContent = icon.icon;\n        span.dataset['label'] = icon.label;\n    } else {\n        console.warn(`Icon not found: \"${id}\", did you forget to add it to the icon mapping?`);\n    }\n\n    return {\n        dom: span,\n        label: target.label,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Color } from '@milkdown/design-system';\n\n/* Copyright 2021, Milkdown by Mirone. */\nexport const Nord = {\n    nord0: '#2e3440',\n    nord1: '#3b4252',\n    nord2: '#434c5e',\n    nord3: '#4c566a',\n    nord4: '#d8dee9',\n    nord5: '#e5e9f0',\n    nord6: '#eceff4',\n    nord7: '#8fbcbb',\n    nord8: '#88c0d0',\n    nord9: '#81a1c1',\n    nord10: '#5e81ac',\n    nord11: '#bf616a',\n    nord12: '#d08770',\n    nord13: '#ebcb8b',\n    nord14: '#a3be8c',\n    nord15: '#b48ead',\n};\n\nexport const lightColor: Record<Color, string> = {\n    shadow: Nord.nord1,\n    primary: Nord.nord10,\n    secondary: Nord.nord9,\n    neutral: Nord.nord0,\n    solid: Nord.nord3,\n    line: Nord.nord4,\n    background: Nord.nord6,\n    surface: '#fff',\n};\n\nexport const darkColor: Record<Color, string> = {\n    shadow: Nord.nord1,\n    primary: Nord.nord10,\n    secondary: Nord.nord9,\n    neutral: Nord.nord6,\n    solid: Nord.nord4,\n    line: Nord.nord2,\n    background: '#252932',\n    surface: Nord.nord0,\n};\n\nexport const color = {\n    lightColor,\n    darkColor,\n} as const;\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Emotion, ThemeBorder, ThemeFont, ThemeManager, ThemeScrollbar, ThemeShadow, ThemeSize } from '@milkdown/core';\nimport { getPalette } from '@milkdown/design-system';\nimport { injectProsemirrorView } from '@milkdown/theme-pack-helper';\n\nexport const getStyle = (manager: ThemeManager, emotion: Emotion) => {\n    const { injectGlobal, css } = emotion;\n    const palette = getPalette(manager);\n    const radius = manager.get(ThemeSize, 'radius');\n    const neutral = palette('neutral', 0.87);\n    const surface = palette('surface');\n    const line = palette('line');\n    const highlight = palette('secondary', 0.38);\n\n    const selection = css`\n        .ProseMirror-selectednode {\n            outline: ${manager.get(ThemeSize, 'lineWidth')} solid ${line};\n        }\n\n        li.ProseMirror-selectednode {\n            outline: none;\n        }\n\n        li.ProseMirror-selectednode::after {\n            ${manager.get(ThemeBorder, undefined)};\n        }\n\n        & ::selection {\n            background: ${highlight};\n        }\n    `;\n\n    const editorLayout = css`\n        padding: 50px 20px;\n        outline: none;\n        & > * {\n            margin: 30px 0;\n        }\n    `;\n\n    const paragraph = css`\n        p {\n            font-size: 16px;\n            line-height: 1.5;\n            letter-spacing: 0.5px;\n        }\n    `;\n\n    const blockquote = css`\n        blockquote {\n            padding-left: 30px;\n            line-height: 28px;\n            border-left: 4px solid ${palette('primary')};\n            margin-left: 0;\n            margin-right: 0;\n            * {\n                font-size: 16px;\n                line-height: 24px;\n            }\n        }\n    `;\n\n    const heading = css`\n        h1 {\n            font-size: 48px;\n            line-height: 1.167;\n        }\n        h2 {\n            font-size: 40px;\n            line-height: 1.2;\n        }\n        h3 {\n            font-size: 34px;\n            line-height: 1.05;\n        }\n        h4 {\n            font-size: 28px;\n            line-height: 1.14;\n        }\n        h5 {\n            font-size: 24px;\n            line-height: 1;\n        }\n        h6 {\n            font-size: 20px;\n            line-height: 1;\n        }\n        .heading {\n            margin: 40px 0;\n            font-weight: 400;\n        }\n    `;\n\n    const hr = css`\n        hr {\n            height: ${manager.get(ThemeSize, 'lineWidth')};\n            background-color: ${line};\n            border-width: 0;\n        }\n    `;\n\n    const list = css`\n        ul,\n        ol {\n            padding: 0;\n        }\n\n        .list-item,\n        .task-list-item {\n            margin-top: 8px;\n        }\n\n        .list-item_label,\n        .list-item .paragraph {\n            margin: 0;\n        }\n\n        .list-item {\n            display: flex;\n\n            &_body {\n                flex: 1;\n            }\n        }\n\n        .list-item_label {\n            display: flex;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            font-size: 16px;\n            line-height: 1.5;\n            color: ${palette('primary')};\n        }\n\n        .list-item[data-list-type='bullet'] {\n            & > .list-item_label {\n                font-size: 24px;\n                line-height: 1;\n            }\n        }\n\n        li {\n            &::marker {\n                display: none;\n            }\n        }\n\n        .task-list-item {\n            display: flex;\n            flex-direction: row;\n            align-items: flex-start;\n            &_checkbox {\n                margin: 8px 8px 8px 0;\n                height: 16px;\n            }\n            & .paragraph {\n                margin: 0;\n            }\n        }\n    `;\n\n    const code = css`\n        .code-fence {\n            pre {\n                font-family: ${manager.get(ThemeFont, 'code')};\n                margin: 0 18px;\n                ${manager.get(ThemeScrollbar, ['x'])}\n\n                background-color: ${palette('background')};\n                color: ${palette('neutral')};\n                font-size: 14px;\n                border-radius: ${radius};\n\n                code {\n                    line-height: 1.5;\n                    font-family: ${manager.get(ThemeFont, 'code')};\n                }\n            }\n        }\n    `;\n\n    const img = css`\n        .image {\n            display: inline-block;\n            margin: 0 auto;\n            object-fit: contain;\n            width: 100%;\n            position: relative;\n            height: auto;\n            text-align: center;\n        }\n    `;\n\n    const inline = css`\n        .code-inline {\n            background-color: ${palette('neutral')};\n            color: ${palette('background')};\n            border-radius: ${radius};\n            font-weight: 500;\n            font-family: ${manager.get(ThemeFont, 'code')};\n            padding: 0 3px;\n        }\n\n        .strong {\n            font-weight: 600;\n        }\n\n        .link,\n        a {\n            color: ${palette('secondary')};\n            cursor: pointer;\n            transition: all 0.4s ease-in-out;\n            font-weight: 500;\n            &:hover {\n                background-color: ${palette('line')};\n                box-shadow: 0 3px ${palette('line')}, 0 -3px ${palette('line')};\n            }\n        }\n\n        .strike-through {\n            text-decoration-color: ${palette('secondary')};\n        }\n    `;\n\n    const footnote = css`\n        .footnote-definition {\n            ${manager.get(ThemeBorder, undefined)};\n            border-radius: ${manager.get(ThemeSize, 'radius')};\n            background-color: ${palette('background')};\n            padding: 16px;\n            display: flex;\n            flex-direction: row;\n            & > .footnote-definition_content {\n                flex: 1;\n                width: calc(100% - 16px);\n                & > dd {\n                    margin-inline-start: 16px;\n                }\n                & > dt {\n                    color: ${palette('secondary')};\n                    font-weight: 500;\n                }\n            }\n            & > .footnote-definition_anchor {\n                width: 16px;\n            }\n        }\n    `;\n\n    const table = css`\n        /* copy from https://github.com/ProseMirror/prosemirror-tables/blob/master/style/tables.css */\n        .tableWrapper {\n            overflow-x: auto;\n            margin: 0;\n            ${manager.get(ThemeScrollbar, ['x'])}\n            width: 100%;\n            * {\n                margin: 0;\n                box-sizing: border-box;\n                font-size: 16px;\n            }\n        }\n        table {\n            border-collapse: collapse;\n            table-layout: fixed;\n            width: 100%;\n            overflow: auto;\n            border-radius: ${manager.get(ThemeSize, 'radius')};\n        }\n        tr {\n            ${manager.get(ThemeBorder, 'bottom')};\n        }\n        td,\n        th {\n            padding: 0 16px;\n            vertical-align: top;\n            box-sizing: border-box;\n            position: relative;\n\n            min-width: 100px;\n            ${manager.get(ThemeBorder, undefined)};\n            text-align: left;\n            line-height: 3;\n            height: 48px;\n            vertical-align: middle;\n        }\n        th {\n            background: ${palette('background', 0.5)};\n            font-weight: 400;\n        }\n        .column-resize-handle {\n            position: absolute;\n            right: -2px;\n            top: 0;\n            bottom: 0;\n            z-index: 20;\n            pointer-events: none;\n            background: ${palette('secondary')};\n            width: ${manager.get(ThemeSize, 'lineWidth')};\n        }\n\n        .selectedCell {\n            &::after {\n                z-index: 2;\n                position: absolute;\n                content: '';\n                left: 0;\n                right: 0;\n                top: 0;\n                bottom: 0;\n                background: ${palette('secondary', 0.38)};\n                pointer-events: none;\n            }\n\n            & ::selection {\n                background: transparent;\n            }\n        }\n    `;\n\n    injectProsemirrorView(emotion);\n\n    injectGlobal`\n        .milkdown {\n            .material-icons-outlined {\n                font-size: 24px;\n            }\n\n            position: relative;\n            margin-left: auto;\n            margin-right: auto;\n            box-sizing: border-box;\n\n\n            color: ${neutral};\n            background: ${surface};\n            font-family: ${manager.get(ThemeFont, 'typography')};\n\n            ${manager.get(ThemeShadow, undefined)}\n            ${manager.get(ThemeScrollbar, undefined)}\n            ${selection};\n\n            .resize-cursor {\n                cursor: ew-resize;\n                cursor: col-resize;\n            }\n\n            .editor {\n                ${editorLayout};\n\n                ${paragraph};\n                ${blockquote};\n                ${hr};\n                ${list};\n                ${code};\n                ${img};\n                ${heading};\n\n                ${table};\n                ${footnote};\n\n                ${inline};\n            }\n        }\n    `;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { MilkdownPlugin } from '@milkdown/core';\n\nimport { AddMetadata, Metadata } from '../types';\n\nexport type MilkdownPluginWithMetadata = MilkdownPlugin & Metadata;\nexport type AtomPlugin = MilkdownPlugin | MilkdownPluginWithMetadata;\n\nconst hasMetadata = (x: AtomPlugin): x is MilkdownPluginWithMetadata =>\n    Object.prototype.hasOwnProperty.call(x, 'origin');\n\nexport class AtomList<T extends AtomPlugin = AtomPlugin> extends Array<T> {\n    private findThenRun<U extends AddMetadata>(target: U, callback: (index: number) => void): this {\n        const index = this.findIndex((x) => hasMetadata(x) && x.origin === target);\n        if (index < 0) return this;\n\n        callback(index);\n\n        return this;\n    }\n\n    configure<U extends AddMetadata>(target: U, config: Parameters<U>[0]): this {\n        return this.findThenRun(target, (index) => {\n            this.splice(index, 1, target(config) as T);\n        });\n    }\n\n    replace<U extends AddMetadata, Next extends AtomPlugin>(target: U, next: Next): this {\n        return this.findThenRun(target, (index) => {\n            this.splice(index, 1, next as AtomPlugin as T);\n        });\n    }\n\n    remove<U extends AddMetadata>(target: U): this {\n        return this.findThenRun(target, (index) => {\n            this.splice(index, 1);\n        });\n    }\n\n    headless(): this {\n        this.filter(hasMetadata).forEach((x) => {\n            this.configure((x as MilkdownPluginWithMetadata).origin as AddMetadata, { headless: true });\n        });\n        return this;\n    }\n\n    static create<T extends AtomPlugin = AtomPlugin>(from: T[]): AtomList<T> {\n        return new AtomList(...from);\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createTimer, Ctx, MilkdownPlugin, Slice, Timer } from '@milkdown/core';\nimport { customAlphabet } from 'nanoid';\n\nexport const nanoid = customAlphabet('abcedfghicklmn', 10);\n\nexport const addTimer = <T extends MilkdownPlugin, PluginWithTimer extends T = T & { timer: Timer }>(\n    runner: (ctx: Ctx, plugin: PluginWithTimer, done: () => void) => Promise<void>,\n    injectTo: Slice<Timer[], string>,\n    timerName?: string,\n): PluginWithTimer => {\n    const timer = createTimer(timerName || nanoid());\n    let doneCalled = false;\n\n    const plugin: MilkdownPlugin = () => {\n        return async (ctx) => {\n            const done = () => {\n                ctx.done(timer);\n                doneCalled = true;\n            };\n            ctx.update(injectTo, (x) => x.concat(timer));\n\n            await runner(ctx, <PluginWithTimer>plugin, done);\n\n            if (!doneCalled) {\n                ctx.done(timer);\n            }\n        };\n    };\n    (<T & { timer: Timer }>plugin).timer = timer;\n\n    return <PluginWithTimer>plugin;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, InitReady, MilkdownPlugin, RemarkPlugin, remarkPluginsCtx, schemaTimerCtx } from '@milkdown/core';\n\nimport { addTimer } from './utils';\n\nexport type $Remark = MilkdownPlugin & {\n    plugin: RemarkPlugin;\n};\n\nexport const $remark = (remark: (ctx: Ctx) => RemarkPlugin): $Remark => {\n    const plugin: MilkdownPlugin = () => async (ctx) => {\n        await ctx.wait(InitReady);\n        const re = remark(ctx);\n        ctx.update(remarkPluginsCtx, (rp) => [...rp, re]);\n        (<$Remark>plugin).plugin = re;\n    };\n\n    return <$Remark>plugin;\n};\n\nexport const $remarkAsync = (remark: (ctx: Ctx) => Promise<RemarkPlugin>, timerName?: string) =>\n    addTimer<$Remark>(\n        async (ctx, plugin) => {\n            await ctx.wait(InitReady);\n            const re = await remark(ctx);\n            ctx.update(remarkPluginsCtx, (rp) => [...rp, re]);\n            plugin.plugin = re;\n        },\n        schemaTimerCtx,\n        timerName,\n    );\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Attrs, CmdKey, Ctx, emotionCtx, Slice, themeManagerCtx } from '@milkdown/core';\nimport { themeMustInstalled } from '@milkdown/exception';\n\nimport {\n    AddMetadata,\n    CommandConfig,\n    CommonOptions,\n    Factory,\n    GetPlugin,\n    ThemeUtils,\n    UnknownRecord,\n    WithExtend,\n} from '../types';\n\nexport const getClassName =\n    (className: CommonOptions['className']) =>\n    (attrs: Attrs, ...defaultValue: (string | null | undefined)[]): string => {\n        const classList = className?.(attrs, ...defaultValue) ?? defaultValue;\n        return Array.isArray(classList) ? classList.filter((x) => x).join(' ') : classList;\n    };\n\nexport const createShortcut = <T>(commandKey: CmdKey<T>, defaultKey: string | string[], args?: T) =>\n    [commandKey, defaultKey, args] as CommandConfig<unknown>;\n\nexport const getThemeUtils = <Options extends UnknownRecord>(ctx: Ctx, options?: Options): ThemeUtils => {\n    try {\n        const themeManager = ctx.get(themeManagerCtx);\n        const emotion = ctx.get(emotionCtx);\n        if (!emotion.css) {\n            throw themeMustInstalled();\n        }\n\n        return {\n            getClassName: getClassName(options?.['className'] as undefined),\n            getStyle: (style) => (options?.['headless'] ? '' : (style(emotion) as string | undefined)),\n            themeManager,\n        };\n    } catch {\n        throw themeMustInstalled();\n    }\n};\n\n/**\n * @deprecated Use `getThemeUtils` instead.\n */\nexport const getUtils = getThemeUtils;\n\nexport const addMetadata = <SupportedKeys extends string = string, Options extends UnknownRecord = UnknownRecord>(\n    x: GetPlugin<SupportedKeys, Options>,\n): AddMetadata<SupportedKeys, Options> => {\n    const fn: AddMetadata<SupportedKeys, Options> = (options) => {\n        const result = x(options) as ReturnType<AddMetadata<SupportedKeys, Options>>;\n        result.origin = fn;\n        return result;\n    };\n    return fn;\n};\n\nexport const withExtend =\n    <SupportedKeys extends string, Options extends UnknownRecord, Type, Rest>(\n        factory: Factory<SupportedKeys, Options, Type, Rest>,\n        creator: (\n            factory: Factory<SupportedKeys, Options, Type, Rest>,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            inject?: Slice<any>[],\n        ) => WithExtend<SupportedKeys, Options, Type, Rest>,\n    ) =>\n    (origin: AddMetadata<SupportedKeys, Options>): WithExtend<SupportedKeys, Options, Type, Rest> => {\n        type Ext = WithExtend<SupportedKeys, Options, Type, Rest>;\n        const next = origin as Ext;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const extend = (extendFactory: Parameters<Ext['extend']>[0], inject?: Slice<any>[]) =>\n            creator((...args) => extendFactory(factory(...args), ...args), inject);\n\n        next.extend = extend as Ext['extend'];\n\n        return next;\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type Many<T> = T | ReadonlyArray<T>;\n\ninterface Pipe {\n    pipe<A extends any[], R1, R2, R3, R4, R5, R6, R7>(\n        f1: (...args: A) => R1,\n        f2: (a: R1) => R2,\n        f3: (a: R2) => R3,\n        f4: (a: R3) => R4,\n        f5: (a: R4) => R5,\n        f6: (a: R5) => R6,\n        f7: (a: R6) => R7,\n    ): (...args: A) => R7;\n    pipe<A extends any[], R1, R2, R3, R4, R5, R6, R7>(\n        f1: (...args: A) => R1,\n        f2: (a: R1) => R2,\n        f3: (a: R2) => R3,\n        f4: (a: R3) => R4,\n        f5: (a: R4) => R5,\n        f6: (a: R5) => R6,\n        f7: (a: R6) => R7,\n        ...func: Array<Many<(a: any) => any>>\n    ): (...args: A) => any;\n    pipe<A extends any[], R1, R2, R3, R4, R5, R6>(\n        f1: (...args: A) => R1,\n        f2: (a: R1) => R2,\n        f3: (a: R2) => R3,\n        f4: (a: R3) => R4,\n        f5: (a: R4) => R5,\n        f6: (a: R5) => R6,\n    ): (...args: A) => R6;\n    pipe<A extends any[], R1, R2, R3, R4, R5>(\n        f1: (...args: A) => R1,\n        f2: (a: R1) => R2,\n        f3: (a: R2) => R3,\n        f4: (a: R3) => R4,\n        f5: (a: R4) => R5,\n    ): (...args: A) => R5;\n    pipe<A extends any[], R1, R2, R3, R4>(\n        f1: (...args: A) => R1,\n        f2: (a: R1) => R2,\n        f3: (a: R2) => R3,\n        f4: (a: R3) => R4,\n    ): (...args: A) => R4;\n    pipe<A extends any[], R1, R2, R3>(f1: (...args: A) => R1, f2: (a: R1) => R2, f3: (a: R2) => R3): (...args: A) => R3;\n    pipe<A extends any[], R1, R2>(f1: (...args: A) => R1, f2: (a: R1) => R2): (...args: A) => R2;\n    pipe(...func: Array<Many<(...args: any[]) => any>>): (...args: any[]) => any;\n}\n\nexport const pipe: Pipe['pipe'] = (...funcs: any[]) => {\n    const length = funcs.length;\n    let index = length;\n    while (index--) {\n        if (typeof funcs[index] !== 'function') {\n            throw new TypeError('Expected a function');\n        }\n    }\n    return (...args: any[]) => {\n        let index = 0;\n        let result = length ? funcs[index](...args) : args[0];\n        while (++index < length) {\n            result = funcs[index](result);\n        }\n        return result;\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    CmdTuple,\n    commandsCtx,\n    createSlice,\n    Ctx,\n    InitReady,\n    inputRulesCtx,\n    MarkSchema,\n    marksCtx,\n    markViewCtx,\n    NodeSchema,\n    nodesCtx,\n    nodeViewCtx,\n    prosePluginsCtx,\n    RemarkPlugin,\n    remarkPluginsCtx,\n    schemaCtx,\n    SchemaReady,\n    ThemeReady,\n} from '@milkdown/core';\nimport { InputRule } from '@milkdown/prose/inputrules';\nimport { keymap } from '@milkdown/prose/keymap';\nimport { MarkType, NodeType } from '@milkdown/prose/model';\nimport { Plugin } from '@milkdown/prose/state';\nimport { MarkViewConstructor, NodeViewConstructor } from '@milkdown/prose/view';\n\nimport { AnySlice, CommandConfig, CommonOptions } from '../types';\nimport { Pipeline } from './pipeline';\n\nexport type UserSchema = (ctx: Ctx) => {\n    node?: Record<string, NodeSchema>;\n    mark?: Record<string, MarkSchema>;\n};\n\nexport type PluginType = Record<string, NodeType | MarkType>;\n\nexport type PluginView = Record<string, NodeViewConstructor | MarkViewConstructor>;\n\ntype Maybe<T> = T | undefined;\n\nexport const injectSlices =\n    (inject?: AnySlice[]): Pipeline =>\n    async (env, next) => {\n        inject?.forEach((slice) => env.pre.inject(slice));\n        await next();\n    };\n\nexport const waitThemeReady: Pipeline = async (env, next) => {\n    const { ctx } = env;\n    await ctx.wait(ThemeReady);\n\n    await next();\n};\n\nexport const getRemarkPluginsPipeCtx = createSlice<Maybe<(ctx: Ctx) => RemarkPlugin[]>>(\n    undefined,\n    'getRemarkPluginsPipeCtx',\n);\nexport const applyRemarkPlugins: Pipeline = async (env, next) => {\n    const { ctx, pipelineCtx } = env;\n\n    await ctx.wait(InitReady);\n\n    const remarkPlugins = pipelineCtx.get(getRemarkPluginsPipeCtx);\n\n    if (remarkPlugins) {\n        const plugins = remarkPlugins(ctx);\n\n        ctx.update(remarkPluginsCtx, (ps) => ps.concat(plugins));\n    }\n\n    await next();\n};\n\nexport const getSchemaPipeCtx = createSlice<Maybe<UserSchema>>(undefined, 'getSchemaPipeCtx');\nexport const typePipeCtx = createSlice<PluginType, 'Type'>({} as PluginType, 'Type');\nexport const applySchema: Pipeline = async (env, next) => {\n    const { ctx, pipelineCtx } = env;\n\n    const getSchema = pipelineCtx.get(getSchemaPipeCtx);\n\n    const userSchema = getSchema?.(env.ctx) ?? {};\n\n    let node: Record<string, NodeSchema> = {};\n    let mark: Record<string, MarkSchema> = {};\n\n    if (userSchema.node) {\n        node = userSchema.node;\n        const nodes = Object.entries<NodeSchema>(userSchema.node);\n        ctx.update(nodesCtx, (ns) => [...ns, ...nodes]);\n    }\n\n    if (userSchema.mark) {\n        mark = userSchema.mark;\n        const marks = Object.entries<MarkSchema>(userSchema.mark);\n        ctx.update(marksCtx, (ms) => [...ms, ...marks]);\n    }\n\n    await ctx.wait(SchemaReady);\n\n    const schema = ctx.get(schemaCtx);\n    const nodeTypes = Object.keys(node).map((id) => [id, schema.nodes[id]] as const);\n    const markTypes = Object.keys(mark).map((id) => [id, schema.marks[id]] as const);\n\n    const type = Object.fromEntries([...nodeTypes, ...markTypes]);\n    pipelineCtx.set(typePipeCtx, type);\n\n    await next();\n};\n\nexport const getCommandsPipeCtx = createSlice<Maybe<(types: PluginType, ctx: Ctx) => CmdTuple[]>>(\n    undefined,\n    'getCommandsPipeCtx',\n);\nexport const createCommands: Pipeline = async (env, next) => {\n    const { ctx, pipelineCtx } = env;\n    const commands = pipelineCtx.get(getCommandsPipeCtx);\n    if (commands) {\n        const type = pipelineCtx.get(typePipeCtx);\n        commands(type, ctx).forEach(([key, command]) => {\n            ctx.get(commandsCtx).create(key, command);\n        });\n    }\n    await next();\n};\n\nexport const getInputRulesPipeCtx = createSlice<Maybe<(types: PluginType, ctx: Ctx) => InputRule[]>>(\n    undefined,\n    'getInputRulesPipeCtx',\n);\nexport const createInputRules: Pipeline = async (env, next) => {\n    const { ctx, pipelineCtx } = env;\n    const inputRules = pipelineCtx.get(getInputRulesPipeCtx);\n    if (inputRules) {\n        const type = pipelineCtx.get(typePipeCtx);\n        ctx.update(inputRulesCtx, (ir) => [...ir, ...inputRules(type, ctx)]);\n    }\n\n    await next();\n};\n\nexport const shortcutsPipeCtx = createSlice<Record<string, CommandConfig>>({}, 'shortcutsPipeCtx');\nexport const createShortcuts: Pipeline = async (env, next) => {\n    const { pipelineCtx, ctx } = env;\n\n    const shortcuts = pipelineCtx.get(shortcutsPipeCtx);\n\n    const options = pipelineCtx.get(optionsPipeCtx);\n    const getKey = (key: string, defaultValue: string | string[]): string | string[] => {\n        return options?.keymap?.[key] ?? defaultValue;\n    };\n\n    const tuples = Object.entries<CommandConfig>(shortcuts)\n        .flatMap(([id, [commandKey, defaultKey, args]]) => {\n            const runner = () => ctx.get(commandsCtx).call(commandKey, args);\n            const key = getKey(id, defaultKey);\n            if (Array.isArray(key)) {\n                return key.map((k) => ({ key: k, runner }));\n            }\n            return { key, runner };\n        })\n        .map((x) => [x.key, x.runner] as [string, () => boolean]);\n    ctx.update(prosePluginsCtx, (ps) => ps.concat(keymap(Object.fromEntries(tuples))));\n\n    await next();\n};\n\nexport const getProsePluginsPipeCtx = createSlice<Maybe<(types: PluginType, ctx: Ctx) => Plugin[]>>(\n    undefined,\n    'getProsePluginsPipeCtx',\n);\nexport const applyProsePlugins: Pipeline = async (env, next) => {\n    const { pipelineCtx, ctx } = env;\n\n    const prosePlugins = pipelineCtx.get(getProsePluginsPipeCtx);\n    if (prosePlugins) {\n        const type = pipelineCtx.get(typePipeCtx);\n        ctx.update(prosePluginsCtx, (ps) => [...ps, ...prosePlugins(type, ctx)]);\n    }\n\n    await next();\n};\n\nexport const getViewPipeCtx = createSlice<Maybe<(ctx: Ctx) => PluginView>>(undefined, 'getViewPipeCtx');\nexport const applyView: Pipeline = async (env, next) => {\n    const { pipelineCtx, ctx } = env;\n\n    const getView = pipelineCtx.get(getViewPipeCtx);\n\n    const options = pipelineCtx.get(optionsPipeCtx);\n\n    const view = options.view ? options.view(ctx) : getView?.(ctx);\n\n    if (view) {\n        const nodeViews = Object.entries(view).filter(\n            ([id]) => ctx.get(nodesCtx).findIndex((ns) => ns[0] === id) !== -1,\n        );\n        const markViews = Object.entries(view).filter(\n            ([id]) => ctx.get(marksCtx).findIndex((ns) => ns[0] === id) !== -1,\n        );\n        ctx.update(nodeViewCtx, (v) => [...v, ...(nodeViews as [string, NodeViewConstructor][])]);\n        ctx.update(markViewCtx, (v) => [...v, ...(markViews as [string, MarkViewConstructor][])]);\n    }\n\n    await next();\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type PluginOptions = Omit<CommonOptions<string, {}>, 'view'> & { view?: (ctx: Ctx) => PluginView };\nexport const optionsPipeCtx = createSlice<PluginOptions>({}, 'optionsPipeCtx');\n\nexport const idPipeCtx = createSlice('', 'idPipeCtx');\n\nexport const injectPipeEnv: Pipeline = async (env, next) => {\n    const { pipelineCtx } = env;\n    pipelineCtx\n        .inject(idPipeCtx)\n        .inject(optionsPipeCtx)\n        .inject(getRemarkPluginsPipeCtx)\n        .inject(getSchemaPipeCtx)\n        .inject(typePipeCtx)\n        .inject(getCommandsPipeCtx)\n        .inject(getInputRulesPipeCtx)\n        .inject(shortcutsPipeCtx)\n        .inject(getProsePluginsPipeCtx)\n        .inject(getViewPipeCtx);\n\n    await next();\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createClock, createContainer, Ctx, Env, Pre } from '@milkdown/core';\n\nexport type PipelineEnv = {\n    readonly pre: Pre;\n    readonly ctx: Ctx;\n    readonly pipelineCtx: Env;\n};\n\nexport type Pipeline = (env: PipelineEnv, next: () => Promise<void>) => Promise<void>;\n\nconst runPipeline = (pipelines: Pipeline[]) => {\n    return (env: PipelineEnv, next?: Pipeline): Promise<void> => {\n        let index = -1;\n        const dispatch = (i: number): Promise<void> => {\n            if (i <= index) return Promise.reject(new Error('next() called multiple times'));\n            index = i;\n            let fn = pipelines[i];\n            if (i === pipelines.length) fn = next;\n            if (!fn) return Promise.resolve();\n            try {\n                return Promise.resolve(fn(env, () => dispatch(i + 1)));\n            } catch (err) {\n                return Promise.reject(err);\n            }\n        };\n        return dispatch(0);\n    };\n};\n\nexport const run = (pipelines: Pipeline[]) => {\n    const runner = runPipeline(pipelines);\n    const container = createContainer();\n    const clock = createClock();\n    const pipelineCtx = new Env(container, clock);\n\n    return (pre: Pre, ctx: Ctx) =>\n        runner({\n            pre,\n            ctx,\n            pipelineCtx,\n        });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, MarkSchema, MilkdownPlugin } from '@milkdown/core';\nimport { MarkType } from '@milkdown/prose/model';\nimport { MarkViewConstructor } from '@milkdown/prose/view';\n\nimport { pipe } from '../pipe';\nimport { AnySlice, CommonOptions, Factory, UnknownRecord, WithExtend } from '../types';\nimport { addMetadata, getThemeUtils, withExtend } from './common';\nimport {\n    applyProsePlugins,\n    applyRemarkPlugins,\n    applySchema,\n    applyView,\n    createCommands,\n    createInputRules,\n    createShortcuts,\n    getCommandsPipeCtx,\n    getInputRulesPipeCtx,\n    getProsePluginsPipeCtx,\n    getRemarkPluginsPipeCtx,\n    getSchemaPipeCtx,\n    getViewPipeCtx,\n    idPipeCtx,\n    injectPipeEnv,\n    injectSlices,\n    optionsPipeCtx,\n    shortcutsPipeCtx,\n    waitThemeReady,\n} from './pieces';\nimport { Pipeline, run } from './pipeline';\n\nexport type MarkRest = {\n    id: string;\n    schema: (ctx: Ctx) => MarkSchema;\n    view?: (ctx: Ctx) => MarkViewConstructor;\n};\n\nexport type MarkFactory<SupportedKeys extends string, Options extends UnknownRecord> = Factory<\n    SupportedKeys,\n    Options,\n    MarkType,\n    MarkRest\n>;\n\nexport type MarkCreator<SupportedKeys extends string, Options extends UnknownRecord> = WithExtend<\n    SupportedKeys,\n    Options,\n    MarkType,\n    MarkRest\n>;\n\nexport const createMark = <SupportedKeys extends string = string, Options extends UnknownRecord = UnknownRecord>(\n    factory: MarkFactory<SupportedKeys, Options>,\n    inject?: AnySlice[],\n): MarkCreator<string, Options> =>\n    pipe(\n        addMetadata,\n        withExtend(factory, createMark),\n    )(\n        (options?: Partial<CommonOptions<SupportedKeys, Options>>): MilkdownPlugin =>\n            (pre) =>\n            async (ctx) => {\n                const setPipelineEnv: Pipeline = async ({ pipelineCtx }, next) => {\n                    const utils = getThemeUtils(ctx, options);\n                    const plugin = factory(utils, options);\n\n                    const { id, commands, remarkPlugins, schema, inputRules, shortcuts, prosePlugins, view } = plugin;\n\n                    const viewOption = options?.view;\n\n                    const pluginOptions = {\n                        ...(options || {}),\n                        view: viewOption ? (ctx: Ctx) => ({ [id]: viewOption(ctx) }) : undefined,\n                    };\n\n                    pipelineCtx.set(idPipeCtx, id);\n                    pipelineCtx.set(optionsPipeCtx, pluginOptions);\n                    pipelineCtx.set(getRemarkPluginsPipeCtx, remarkPlugins);\n                    pipelineCtx.set(getSchemaPipeCtx, (ctx) => ({ mark: { [id]: schema(ctx) } }));\n                    if (commands) {\n                        pipelineCtx.set(getCommandsPipeCtx, (type, ctx) => commands(type[id] as MarkType, ctx));\n                    }\n                    if (inputRules) {\n                        pipelineCtx.set(getInputRulesPipeCtx, (type, ctx) => inputRules(type[id] as MarkType, ctx));\n                    }\n                    if (shortcuts) {\n                        pipelineCtx.set(shortcutsPipeCtx, shortcuts);\n                    }\n                    if (prosePlugins) {\n                        pipelineCtx.set(getProsePluginsPipeCtx, (type, ctx) => prosePlugins(type[id] as MarkType, ctx));\n                    }\n                    if (view) {\n                        pipelineCtx.set(getViewPipeCtx, (ctx) => ({ [id]: view(ctx) }));\n                    }\n                    await next();\n                };\n\n                const runner = run([\n                    injectPipeEnv,\n                    injectSlices(inject),\n                    waitThemeReady,\n                    setPipelineEnv,\n                    applyRemarkPlugins,\n                    applySchema,\n                    createCommands,\n                    createInputRules,\n                    createShortcuts,\n                    applyProsePlugins,\n                    applyView,\n                ]);\n\n                await runner(pre, ctx);\n            },\n    );\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, MilkdownPlugin, NodeSchema } from '@milkdown/core';\nimport { NodeType } from '@milkdown/prose/model';\nimport { NodeViewConstructor } from '@milkdown/prose/view';\n\nimport { pipe } from '../pipe';\nimport { AnySlice, CommonOptions, Factory, UnknownRecord, WithExtend } from '../types';\nimport { addMetadata, getThemeUtils, withExtend } from './common';\nimport {\n    applyProsePlugins,\n    applyRemarkPlugins,\n    applySchema,\n    applyView,\n    createCommands,\n    createInputRules,\n    createShortcuts,\n    getCommandsPipeCtx,\n    getInputRulesPipeCtx,\n    getProsePluginsPipeCtx,\n    getRemarkPluginsPipeCtx,\n    getSchemaPipeCtx,\n    getViewPipeCtx,\n    idPipeCtx,\n    injectPipeEnv,\n    injectSlices,\n    optionsPipeCtx,\n    shortcutsPipeCtx,\n    waitThemeReady,\n} from './pieces';\nimport { Pipeline, run } from './pipeline';\n\nexport type NodeRest = {\n    id: string;\n    schema: (ctx: Ctx) => NodeSchema;\n    view?: (ctx: Ctx) => NodeViewConstructor;\n};\n\nexport type NodeFactory<SupportedKeys extends string, Options extends UnknownRecord> = Factory<\n    SupportedKeys,\n    Options,\n    NodeType,\n    NodeRest\n>;\n\nexport type NodeCreator<\n    SupportedKeys extends string = string,\n    Options extends UnknownRecord = UnknownRecord,\n> = WithExtend<SupportedKeys, Options, NodeType, NodeRest>;\n\nexport const createNode = <SupportedKeys extends string = string, Options extends UnknownRecord = UnknownRecord>(\n    factory: NodeFactory<SupportedKeys, Options>,\n    inject?: AnySlice[],\n): NodeCreator<SupportedKeys, Options> =>\n    pipe(\n        addMetadata,\n        withExtend(factory, createNode),\n    )(\n        (options?: Partial<CommonOptions<SupportedKeys, Options>>): MilkdownPlugin =>\n            (pre) =>\n            async (ctx) => {\n                const setPipelineEnv: Pipeline = async ({ pipelineCtx }, next) => {\n                    const utils = getThemeUtils(ctx, options);\n                    const plugin = factory(utils, options);\n\n                    const { id, commands, remarkPlugins, schema, inputRules, shortcuts, prosePlugins, view } = plugin;\n\n                    const viewOption = options?.view;\n\n                    const pluginOptions = {\n                        ...(options || {}),\n                        view: viewOption ? (ctx: Ctx) => ({ [id]: viewOption(ctx) }) : undefined,\n                    };\n\n                    pipelineCtx.set(idPipeCtx, id);\n                    pipelineCtx.set(optionsPipeCtx, pluginOptions);\n                    pipelineCtx.set(getRemarkPluginsPipeCtx, remarkPlugins);\n                    pipelineCtx.set(getSchemaPipeCtx, (ctx) => ({ node: { [id]: schema(ctx) } }));\n                    if (commands) {\n                        pipelineCtx.set(getCommandsPipeCtx, (type, ctx) => commands(type[id] as NodeType, ctx));\n                    }\n                    if (inputRules) {\n                        pipelineCtx.set(getInputRulesPipeCtx, (type, ctx) => inputRules(type[id] as NodeType, ctx));\n                    }\n                    if (shortcuts) {\n                        pipelineCtx.set(shortcutsPipeCtx, shortcuts);\n                    }\n                    if (prosePlugins) {\n                        pipelineCtx.set(getProsePluginsPipeCtx, (type, ctx) => prosePlugins(type[id] as NodeType, ctx));\n                    }\n                    if (view) {\n                        pipelineCtx.set(getViewPipeCtx, (ctx) => ({ [id]: view(ctx) }));\n                    }\n                    await next();\n                };\n\n                const runner = run([\n                    injectPipeEnv,\n                    injectSlices(inject),\n                    waitThemeReady,\n                    setPipelineEnv,\n                    applyRemarkPlugins,\n                    applySchema,\n                    createCommands,\n                    createInputRules,\n                    createShortcuts,\n                    applyProsePlugins,\n                    applyView,\n                ]);\n\n                await runner(pre, ctx);\n            },\n    );\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, MarkSchema, MilkdownPlugin, NodeSchema } from '@milkdown/core';\nimport { MarkType, NodeType } from '@milkdown/prose/model';\nimport { MarkViewConstructor, NodeViewConstructor } from '@milkdown/prose/view';\n\nimport { pipe } from '../pipe';\nimport { AnySlice, CommonOptions, Factory, UnknownRecord, WithExtend } from '../types';\nimport { addMetadata, getThemeUtils, withExtend } from './common';\nimport {\n    applyProsePlugins,\n    applyRemarkPlugins,\n    applySchema,\n    applyView,\n    createCommands,\n    createInputRules,\n    createShortcuts,\n    getCommandsPipeCtx,\n    getInputRulesPipeCtx,\n    getProsePluginsPipeCtx,\n    getRemarkPluginsPipeCtx,\n    getSchemaPipeCtx,\n    getViewPipeCtx,\n    injectPipeEnv,\n    injectSlices,\n    optionsPipeCtx,\n    shortcutsPipeCtx,\n    waitThemeReady,\n} from './pieces';\nimport { Pipeline, run } from './pipeline';\n\nexport type TypeMapping<NodeKeys extends string, MarkKeys extends string> = {\n    [K in NodeKeys]: NodeType;\n} & {\n    [K in MarkKeys]: MarkType;\n};\n\nexport type ViewMapping<NodeKeys extends string, MarkKeys extends string> = {\n    [K in NodeKeys]: NodeViewConstructor;\n} & {\n    [K in MarkKeys]: MarkViewConstructor;\n};\n\nexport type PluginRest<NodeKeys extends string, MarkKeys extends string> = {\n    schema?: (ctx: Ctx) => {\n        node?: Record<NodeKeys, NodeSchema>;\n        mark?: Record<MarkKeys, MarkSchema>;\n    };\n    view?: (ctx: Ctx) => Partial<ViewMapping<NodeKeys, MarkKeys>>;\n};\nexport type PluginFactory<\n    SupportedKeys extends string = string,\n    Options extends UnknownRecord = UnknownRecord,\n    NodeKeys extends string = string,\n    MarkKeys extends string = string,\n> = Factory<SupportedKeys, Options, TypeMapping<NodeKeys, MarkKeys>, PluginRest<NodeKeys, MarkKeys>>;\n\nexport const createPlugin = <\n    SupportedKeys extends string = string,\n    Options extends UnknownRecord = UnknownRecord,\n    NodeKeys extends string = string,\n    MarkKeys extends string = string,\n>(\n    factory: PluginFactory<SupportedKeys, Options, NodeKeys, MarkKeys>,\n    inject?: AnySlice[],\n): WithExtend<SupportedKeys, Options, TypeMapping<NodeKeys, MarkKeys>, PluginRest<NodeKeys, MarkKeys>> =>\n    pipe(\n        addMetadata,\n        withExtend(factory, createPlugin),\n    )(\n        (options?: Partial<CommonOptions<SupportedKeys, Options>>): MilkdownPlugin =>\n            (pre) =>\n            async (ctx) => {\n                const setPipelineEnv: Pipeline = async ({ pipelineCtx }, next) => {\n                    const utils = getThemeUtils(ctx, options);\n                    const plugin = factory(utils, options);\n\n                    const { commands, remarkPlugins, schema, inputRules, shortcuts, prosePlugins, view } = plugin;\n\n                    pipelineCtx.set(optionsPipeCtx, (options || {}) as Options);\n                    pipelineCtx.set(getRemarkPluginsPipeCtx, remarkPlugins);\n                    if (schema) {\n                        pipelineCtx.set(getSchemaPipeCtx, schema);\n                    }\n                    if (commands) {\n                        pipelineCtx.set(getCommandsPipeCtx, commands as never);\n                    }\n                    if (inputRules) {\n                        pipelineCtx.set(getInputRulesPipeCtx, inputRules as never);\n                    }\n                    if (shortcuts) {\n                        pipelineCtx.set(shortcutsPipeCtx, shortcuts);\n                    }\n                    if (prosePlugins) {\n                        pipelineCtx.set(getProsePluginsPipeCtx, prosePlugins as never);\n                    }\n                    if (view) {\n                        pipelineCtx.set(getViewPipeCtx, view as never);\n                    }\n                    await next();\n                };\n\n                const runner = run([\n                    injectPipeEnv,\n                    injectSlices(inject),\n                    waitThemeReady,\n                    setPipelineEnv,\n                    applyRemarkPlugins,\n                    applySchema,\n                    createCommands,\n                    createInputRules,\n                    createShortcuts,\n                    applyProsePlugins,\n                    applyView,\n                ]);\n\n                await runner(pre, ctx);\n            },\n    );\n","import { Plugin } from 'prosemirror-state';\nimport { findWrapping, canJoin } from 'prosemirror-transform';\n\n/**\nInput rules are regular expressions describing a piece of text\nthat, when typed, causes something to happen. This might be\nchanging two dashes into an emdash, wrapping a paragraph starting\nwith `\"> \"` into a blockquote, or something entirely different.\n*/\nclass InputRule {\n    // :: (RegExp, union<string, (state: EditorState, match: [string], start: number, end: number) → ?Transaction>)\n    /**\n    Create an input rule. The rule applies when the user typed\n    something and the text directly in front of the cursor matches\n    `match`, which should end with `$`.\n    \n    The `handler` can be a string, in which case the matched text, or\n    the first matched group in the regexp, is replaced by that\n    string.\n    \n    Or a it can be a function, which will be called with the match\n    array produced by\n    [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n    as well as the start and end of the matched range, and which can\n    return a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) that describes the\n    rule's effect, or null to indicate the input was not handled.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    match, handler) {\n        this.match = match;\n        this.match = match;\n        this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler;\n    }\n}\nfunction stringHandler(string) {\n    return function (state, match, start, end) {\n        let insert = string;\n        if (match[1]) {\n            let offset = match[0].lastIndexOf(match[1]);\n            insert += match[0].slice(offset + match[1].length);\n            start += offset;\n            let cutOff = start - end;\n            if (cutOff > 0) {\n                insert = match[0].slice(offset - cutOff, offset) + insert;\n                start = end;\n            }\n        }\n        return state.tr.insertText(insert, start, end);\n    };\n}\nconst MAX_MATCH = 500;\n/**\nCreate an input rules plugin. When enabled, it will cause text\ninput that matches any of the given rules to trigger the rule's\naction.\n*/\nfunction inputRules({ rules }) {\n    let plugin = new Plugin({\n        state: {\n            init() { return null; },\n            apply(tr, prev) {\n                let stored = tr.getMeta(this);\n                if (stored)\n                    return stored;\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            }\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run(view, from, to, text, rules, plugin);\n            },\n            handleDOMEvents: {\n                compositionend: (view) => {\n                    setTimeout(() => {\n                        let { $cursor } = view.state.selection;\n                        if ($cursor)\n                            run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin);\n                    });\n                }\n            }\n        },\n        isInputRules: true\n    });\n    return plugin;\n}\nfunction run(view, from, to, text, rules, plugin) {\n    if (view.composing)\n        return false;\n    let state = view.state, $from = state.doc.resolve(from);\n    if ($from.parent.type.spec.code)\n        return false;\n    let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset, null, \"\\ufffc\") + text;\n    for (let i = 0; i < rules.length; i++) {\n        let match = rules[i].match.exec(textBefore);\n        let tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to);\n        if (!tr)\n            continue;\n        view.dispatch(tr.setMeta(plugin, { transform: tr, from, to, text }));\n        return true;\n    }\n    return false;\n}\n/**\nThis is a command that will undo an input rule, if applying such a\nrule was the last thing that the user did.\n*/\nconst undoInputRule = (state, dispatch) => {\n    let plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i++) {\n        let plugin = plugins[i], undoable;\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                let tr = state.tr, toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j--)\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                if (undoable.text) {\n                    let marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n                dispatch(tr);\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\nConverts double dashes to an emdash.\n*/\nconst emDash = new InputRule(/--$/, \"—\");\n/**\nConverts three dots to an ellipsis character.\n*/\nconst ellipsis = new InputRule(/\\.\\.\\.$/, \"…\");\n/**\n“Smart” opening double quotes.\n*/\nconst openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\");\n/**\n“Smart” closing double quotes.\n*/\nconst closeDoubleQuote = new InputRule(/\"$/, \"”\");\n/**\n“Smart” opening single quotes.\n*/\nconst openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\");\n/**\n“Smart” closing single quotes.\n*/\nconst closeSingleQuote = new InputRule(/'$/, \"’\");\n/**\nSmart-quote related input rules.\n*/\nconst smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote];\n\n/**\nBuild an input rule for automatically wrapping a textblock when a\ngiven string is typed. The `regexp` argument is\ndirectly passed through to the `InputRule` constructor. You'll\nprobably want the regexp to start with `^`, so that the pattern can\nonly occur at the start of a textblock.\n\n`nodeType` is the type of node to wrap in. If it needs attributes,\nyou can either pass them directly, or pass a function that will\ncompute them from the regular expression match.\n\nBy default, if there's a node with the same type above the newly\nwrapped node, the rule will try to [join](https://prosemirror.net/docs/ref/#transform.Transform.join) those\ntwo nodes. You can pass a join predicate, which takes a regular\nexpression match and the node before the wrapped node, and can\nreturn a boolean to indicate whether a join should happen.\n*/\nfunction wrappingInputRule(regexp, nodeType, getAttrs = null, joinPredicate) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        let tr = state.tr.delete(start, end);\n        let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return null;\n        tr.wrap(range, wrapping);\n        let before = tr.doc.resolve(start - 1).nodeBefore;\n        if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n            (!joinPredicate || joinPredicate(match, before)))\n            tr.join(start - 1);\n        return tr;\n    });\n}\n/**\nBuild an input rule that changes the type of a textblock when the\nmatched text is typed into it. You'll usually want to start your\nregexp with `^` to that it is only matched at the start of a\ntextblock. The optional `getAttrs` parameter can be used to compute\nthe new node's attributes, and works the same as in the\n`wrappingInputRule` function.\n*/\nfunction textblockTypeInputRule(regexp, nodeType, getAttrs = null) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let $start = state.doc.resolve(start);\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType))\n            return null;\n        return state.tr\n            .delete(start, end)\n            .setBlockType(start, start, nodeType, attrs);\n    });\n}\n\nexport { InputRule, closeDoubleQuote, closeSingleQuote, ellipsis, emDash, inputRules, openDoubleQuote, openSingleQuote, smartQuotes, textblockTypeInputRule, undoInputRule, wrappingInputRule };\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1 } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), doJoin = false, outerRange = range;\n        if (!range)\n            return false;\n        // This is at the top of an existing list item\n        if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n            // Don't do anything if this is the top of the list\n            if ($from.index(range.depth - 1) == 0)\n                return false;\n            let $insert = state.doc.resolve(range.start - 2);\n            outerRange = new NodeRange($insert, $insert, range.depth);\n            if (range.endIndex < range.parent.childCount)\n                range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth);\n            doJoin = true;\n        }\n        let wrap = findWrapping(outerRange, listType, attrs, range);\n        if (!wrap)\n            return false;\n        if (dispatch)\n            dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView());\n        return true;\n    };\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, wrapInList };\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Link} Link\n */\n\nimport {visit, SKIP} from 'unist-util-visit'\nimport {definitions} from 'mdast-util-definitions'\n\n/**\n * Plugin to transform references and definitions into normal links and images.\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\nexport default function remarkInlineLinks() {\n  return (tree) => {\n    const definition = definitions(tree)\n\n    visit(tree, (node, index, parent) => {\n      if (\n        node.type === 'definition' &&\n        parent !== null &&\n        typeof index === 'number'\n      ) {\n        parent.children.splice(index, 1)\n        return [SKIP, index]\n      }\n\n      if (node.type === 'imageReference' || node.type === 'linkReference') {\n        const def = definition(node.identifier)\n\n        if (def && parent !== null && typeof index === 'number') {\n          /** @type {Image|Link} */\n          const replacement =\n            node.type === 'imageReference'\n              ? {type: 'image', url: def.url, title: def.title, alt: node.alt}\n              : {\n                  type: 'link',\n                  url: def.url,\n                  title: def.title,\n                  children: node.children\n                }\n\n          parent.children[index] = replacement\n          return [SKIP, index]\n        }\n      }\n    })\n  }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nexport const SupportedKeys = {\n    HardBreak: 'HardBreak',\n    Blockquote: 'Blockquote',\n    BulletList: 'BulletList',\n    OrderedList: 'OrderedList',\n    CodeFence: 'CodeFence',\n    H1: 'H1',\n    H2: 'H2',\n    H3: 'H3',\n    H4: 'H4',\n    H5: 'H5',\n    H6: 'H6',\n    DowngradeHeading: 'DowngradeHeading',\n    Text: 'Text',\n    CodeInline: 'CodeInline',\n    Em: 'Em',\n    Bold: 'Bold',\n    NextListItem: 'NextListItem',\n    SinkListItem: 'SinkListItem',\n    LiftListItem: 'LiftListItem',\n} as const;\n\nexport type SupportedKeys = typeof SupportedKeys;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { MarkType } from '@milkdown/prose/model';\nimport { createMark, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['CodeInline'];\nconst id = 'code_inline';\n\nexport const ToggleInlineCode = createCmdKey('ToggleInlineCode');\n\nexport const codeInline = createMark<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            priority: 100,\n            code: true,\n            inclusive: false,\n            parseDOM: [{ tag: 'code' }],\n            toDOM: (mark) => ['code', { class: utils.getClassName(mark.attrs, 'code-inline') }],\n            parseMarkdown: {\n                match: (node) => node.type === 'inlineCode',\n                runner: (state, node, markType) => {\n                    state.openMark(markType);\n                    state.addText(node['value'] as string);\n                    state.closeMark(markType);\n                },\n            },\n            toMarkdown: {\n                match: (mark) => mark.type.name === id,\n                runner: (state, mark, node) => {\n                    state.withMark(mark, 'inlineCode', node.text || '');\n                },\n            },\n        }),\n        commands: (markType) => [\n            createCmd(ToggleInlineCode, () => (state, dispatch) => {\n                const { selection, tr } = state;\n                if (selection.empty) return false;\n                const { from, to } = selection;\n\n                const has = state.doc.rangeHasMark(from, to, markType);\n                if (has) {\n                    dispatch?.(tr.removeMark(from, to, markType));\n                    return true;\n                }\n\n                const restMarksName = Object.keys(state.schema.marks).filter((x) => x !== markType.name);\n\n                restMarksName\n                    .map((name) => state.schema.marks[name] as MarkType)\n                    .forEach((t) => {\n                        tr.removeMark(from, to, t);\n                    });\n\n                dispatch?.(tr.addMark(from, to, markType.create()));\n                return true;\n            }),\n        ],\n        shortcuts: {\n            [SupportedKeys.CodeInline]: createShortcut(ToggleInlineCode, 'Mod-e'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { toggleMark } from '@milkdown/prose/commands';\nimport { createMark, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Em'];\n\nconst id = 'em';\n\nexport const ToggleItalic = createCmdKey('ToggleItalic');\nexport const em = createMark<Keys>((utils) => ({\n    id,\n    schema: () => ({\n        inclusive: false,\n        parseDOM: [\n            { tag: 'i' },\n            { tag: 'em' },\n            { style: 'font-style', getAttrs: (value) => (value === 'italic') as false },\n        ],\n        toDOM: (mark) => ['em', { class: utils.getClassName(mark.attrs, id) }],\n        parseMarkdown: {\n            match: (node) => node.type === 'emphasis',\n            runner: (state, node, markType) => {\n                state.openMark(markType);\n                state.next(node.children);\n                state.closeMark(markType);\n            },\n        },\n        toMarkdown: {\n            match: (mark) => mark.type.name === id,\n            runner: (state, mark) => {\n                state.withMark(mark, 'emphasis');\n            },\n        },\n    }),\n    commands: (markType) => [createCmd(ToggleItalic, () => toggleMark(markType))],\n    shortcuts: {\n        [SupportedKeys.Em]: createShortcut(ToggleItalic, 'Mod-i'),\n    },\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, createCmd, createCmdKey, ThemeInputChipType } from '@milkdown/core';\nimport { expectDomTypeError, missingRootElement } from '@milkdown/exception';\nimport { calculateTextPosition } from '@milkdown/prose';\nimport { toggleMark } from '@milkdown/prose/commands';\nimport { Node as ProseNode } from '@milkdown/prose/model';\nimport { NodeSelection, Plugin, PluginKey, TextSelection } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\nimport { createMark } from '@milkdown/utils';\n\nconst key = new PluginKey('MILKDOWN_LINK_INPUT');\n\nexport const ToggleLink = createCmdKey<string>('ToggleLink');\nexport const ModifyLink = createCmdKey<string>('ModifyLink');\nconst id = 'link';\nexport type LinkOptions = {\n    input: {\n        placeholder: string;\n        buttonText?: string;\n    };\n};\nexport const link = createMark<string, LinkOptions>((utils, options) => {\n    return {\n        id,\n        schema: () => ({\n            attrs: {\n                href: {},\n                title: { default: null },\n            },\n            parseDOM: [\n                {\n                    tag: 'a[href]',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return { href: dom.getAttribute('href'), title: dom.getAttribute('title') };\n                    },\n                },\n            ],\n            toDOM: (mark) => ['a', { ...mark.attrs, class: utils.getClassName(mark.attrs, id) }],\n            parseMarkdown: {\n                match: (node) => node.type === 'link',\n                runner: (state, node, markType) => {\n                    const url = node['url'] as string;\n                    const title = node['title'] as string;\n                    state.openMark(markType, { href: url, title });\n                    state.next(node.children);\n                    state.closeMark(markType);\n                },\n            },\n            toMarkdown: {\n                match: (mark) => mark.type.name === id,\n                runner: (state, mark) => {\n                    state.withMark(mark, 'link', undefined, {\n                        title: mark.attrs['title'],\n                        url: mark.attrs['href'],\n                    });\n                },\n            },\n        }),\n        commands: (markType) => [\n            createCmd(ToggleLink, (href = '') => toggleMark(markType, { href })),\n            createCmd(ModifyLink, (href = '') => (state, dispatch) => {\n                if (!dispatch) return false;\n\n                const { marks } = state.schema;\n\n                let node: ProseNode | undefined;\n                let pos = -1;\n                const { selection } = state;\n                const { from, to } = selection;\n                state.doc.nodesBetween(from, from === to ? to + 1 : to, (n, p) => {\n                    if (marks['link']?.isInSet(n.marks)) {\n                        node = n;\n                        pos = p;\n                        return false;\n                    }\n                    return;\n                });\n                if (!node) return false;\n\n                const mark = node.marks.find(({ type }) => type === markType);\n                if (!mark) return false;\n\n                const start = pos;\n                const end = pos + node.nodeSize;\n                const { tr } = state;\n                const linkMark = marks['link']?.create({ ...mark.attrs, href });\n                if (!linkMark) return false;\n                dispatch(\n                    tr\n                        .removeMark(start, end, mark)\n                        .addMark(start, end, linkMark)\n                        .setSelection(new TextSelection(tr.selection.$anchor))\n                        .scrollIntoView(),\n                );\n\n                return true;\n            }),\n        ],\n        prosePlugins: (type, ctx) => {\n            let renderOnTop = false;\n            return [\n                new Plugin({\n                    key,\n                    view: (editorView) => {\n                        const inputChipRenderer = utils.themeManager.get<ThemeInputChipType>('input-chip', {\n                            placeholder: options?.input?.placeholder ?? 'Input Web Link',\n                            buttonText: options?.input?.buttonText,\n                            onUpdate: (value) => {\n                                ctx.get(commandsCtx).call(ModifyLink, value);\n                            },\n                            calculatePosition: (view, input) => {\n                                calculateTextPosition(view, input, (start, end, target, parent) => {\n                                    const $editor = view.dom.parentElement;\n                                    if (!$editor) {\n                                        throw missingRootElement();\n                                    }\n\n                                    const selectionWidth = end.left - start.left;\n                                    let left = start.left - parent.left - (target.width - selectionWidth) / 2;\n                                    let top = start.bottom - parent.top + 14 + $editor.scrollTop;\n\n                                    if (renderOnTop) {\n                                        top = start.top - parent.top - target.height - 14 + $editor.scrollTop;\n                                    }\n\n                                    if (left < 0) left = 0;\n\n                                    return [top, left];\n                                });\n                            },\n                        });\n                        if (!inputChipRenderer) return {};\n                        const shouldDisplay = (view: EditorView) => {\n                            const { selection, doc } = view.state;\n                            const { from, to } = selection;\n\n                            if (!view.hasFocus()) {\n                                return false;\n                            }\n\n                            if (\n                                selection.empty &&\n                                selection instanceof TextSelection &&\n                                to < doc.content.size &&\n                                from < doc.content.size &&\n                                doc.rangeHasMark(from, from === to ? to + 1 : to, type)\n                            ) {\n                                renderOnTop = false;\n                                return true;\n                            }\n\n                            if (selection instanceof NodeSelection) {\n                                const { node } = selection;\n                                if (\n                                    node.type.name === 'image' &&\n                                    node.marks.findIndex((mark) => mark.type.name === id) > -1\n                                ) {\n                                    renderOnTop = true;\n                                    return true;\n                                }\n                            }\n\n                            return false;\n                        };\n                        const getCurrentLink = (view: EditorView) => {\n                            const { selection } = view.state;\n                            let node: ProseNode | undefined;\n                            const { from, to } = selection;\n                            view.state.doc.nodesBetween(from, from === to ? to + 1 : to, (n) => {\n                                if (type.isInSet(n.marks)) {\n                                    node = n;\n                                    return false;\n                                }\n                                return;\n                            });\n                            if (!node) return;\n\n                            const mark = node.marks.find((m) => m.type === type);\n                            if (!mark) return;\n\n                            const value = mark.attrs['href'];\n                            return value;\n                        };\n                        const renderByView = (view: EditorView) => {\n                            if (!view.editable) {\n                                return;\n                            }\n                            const display = shouldDisplay(view);\n                            if (display) {\n                                inputChipRenderer.show(view);\n                                inputChipRenderer.update(getCurrentLink(view));\n                            } else {\n                                inputChipRenderer.hide();\n                            }\n                        };\n                        inputChipRenderer.init(editorView);\n                        renderByView(editorView);\n\n                        return {\n                            update: (view, prevState) => {\n                                const isEqualSelection =\n                                    prevState?.doc.eq(view.state.doc) && prevState.selection.eq(view.state.selection);\n                                if (isEqualSelection) return;\n\n                                requestAnimationFrame(() => {\n                                    renderByView(view);\n                                });\n                            },\n                            destroy: () => {\n                                inputChipRenderer.destroy();\n                            },\n                        };\n                    },\n                }),\n            ];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { toggleMark } from '@milkdown/prose/commands';\nimport { createMark, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Bold'];\nconst id = 'strong';\nexport const ToggleBold = createCmdKey('ToggleBold');\nexport const strong = createMark<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            inclusive: false,\n            parseDOM: [\n                { tag: 'b' },\n                { tag: 'strong' },\n                { style: 'font-style', getAttrs: (value) => (value === 'bold') as false },\n            ],\n            toDOM: (mark) => ['strong', { class: utils.getClassName(mark.attrs, id) }],\n            parseMarkdown: {\n                match: (node) => node.type === 'strong',\n                runner: (state, node, markType) => {\n                    state.openMark(markType);\n                    state.next(node.children);\n                    state.closeMark(markType);\n                },\n            },\n            toMarkdown: {\n                match: (mark) => mark.type.name === id,\n                runner: (state, mark) => {\n                    state.withMark(mark, 'strong');\n                },\n            },\n        }),\n        commands: (markType) => [createCmd(ToggleBold, () => toggleMark(markType))],\n        shortcuts: {\n            [SupportedKeys.Bold]: createShortcut(ToggleBold, 'Mod-b'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { codeInline } from './code-inline';\nimport { em } from './em';\nimport { link } from './link';\nimport { strong } from './strong';\n\nexport const marks = [codeInline(), em(), strong(), link()];\n\nexport * from './code-inline';\nexport * from './em';\nexport * from './link';\nexport * from './strong';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { wrapIn } from '@milkdown/prose/commands';\nimport { wrappingInputRule } from '@milkdown/prose/inputrules';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Blockquote'];\n\nconst id = 'blockquote';\n\nexport const WrapInBlockquote = createCmdKey('WrapInBlockquote');\n\nexport const blockquote = createNode<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            content: 'block+',\n            group: 'block',\n            defining: true,\n            parseDOM: [{ tag: 'blockquote' }],\n            toDOM: (node) => ['blockquote', { class: utils.getClassName(node.attrs, id) }, 0],\n            parseMarkdown: {\n                match: ({ type }) => type === id,\n                runner: (state, node, type) => {\n                    state.openNode(type).next(node.children).closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.openNode('blockquote').next(node.content).closeNode();\n                },\n            },\n        }),\n        inputRules: (nodeType) => [wrappingInputRule(/^\\s*>\\s$/, nodeType)],\n        commands: (nodeType) => [createCmd(WrapInBlockquote, () => wrapIn(nodeType))],\n        shortcuts: {\n            [SupportedKeys.Blockquote]: createShortcut(WrapInBlockquote, 'Mod-Shift-b'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { wrapIn } from '@milkdown/prose/commands';\nimport { wrappingInputRule } from '@milkdown/prose/inputrules';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['BulletList'];\n\nexport const WrapInBulletList = createCmdKey('WrapInBulletList');\n\nexport const bulletList = createNode<Keys>((utils) => {\n    const id = 'bullet_list';\n    return {\n        id,\n        schema: () => ({\n            content: 'listItem+',\n            group: 'block',\n            attrs: {\n                spread: {\n                    default: false,\n                },\n            },\n            parseDOM: [\n                {\n                    tag: 'ul',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return {\n                            spread: dom.dataset['spread'],\n                        };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                return [\n                    'ul',\n                    {\n                        'data-spread': node.attrs['spread'],\n                        class: utils.getClassName(node.attrs, 'bullet-list'),\n                    },\n                    0,\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type, ordered }) => type === 'list' && !ordered,\n                runner: (state, node, type) => {\n                    const spread = node['spread'] != null ? `${node['spread']}` : 'false';\n                    state.openNode(type, { spread }).next(node.children).closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state\n                        .openNode('list', undefined, { ordered: false, spread: node.attrs['spread'] === 'true' })\n                        .next(node.content)\n                        .closeNode();\n                },\n            },\n        }),\n        inputRules: (nodeType) => [wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType)],\n        commands: (nodeType) => [createCmd(WrapInBulletList, () => wrapIn(nodeType))],\n        shortcuts: {\n            [SupportedKeys.BulletList]: createShortcut(WrapInBulletList, 'Mod-Alt-8'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, editorViewCtx, ThemeCodeFenceType } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { setBlockType } from '@milkdown/prose/commands';\nimport { textblockTypeInputRule } from '@milkdown/prose/inputrules';\nimport { Fragment } from '@milkdown/prose/model';\nimport { NodeView } from '@milkdown/prose/view';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['CodeFence'];\n\nconst languageOptions = [\n    '',\n    'javascript',\n    'typescript',\n    'bash',\n    'sql',\n    'json',\n    'html',\n    'css',\n    'c',\n    'cpp',\n    'java',\n    'ruby',\n    'python',\n    'go',\n    'rust',\n    'markdown',\n];\n\nexport const backtickInputRegex = /^```(?<language>[a-z]*)?[\\s\\n]$/;\nexport const tildeInputRegex = /^~~~(?<language>[a-z]*)?[\\s\\n]$/;\n\nexport const TurnIntoCodeFence = createCmdKey('TurnIntoCodeFence');\n\nconst id = 'fence';\nexport const codeFence = createNode<Keys, { languageList?: string[] }>((utils, options) => {\n    const languageList = options?.languageList || languageOptions;\n\n    return {\n        id,\n        schema: (ctx) => ({\n            content: 'text*',\n            group: 'block',\n            marks: '',\n            defining: true,\n            code: true,\n            attrs: {\n                language: {\n                    default: '',\n                },\n                fold: {\n                    default: true,\n                },\n            },\n            parseDOM: [\n                {\n                    tag: 'div.code-fence-container',\n                    preserveWhitespace: 'full',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return { language: dom.querySelector('pre')?.dataset['language'] };\n                    },\n                    getContent: (dom, schema) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        const text = dom.querySelector('pre')?.textContent ?? '';\n                        if (!text) {\n                            return Fragment.empty;\n                        }\n                        const textNode = schema.text(text);\n                        return Fragment.from(textNode);\n                    },\n                },\n                {\n                    tag: 'pre',\n                    preserveWhitespace: 'full',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return { language: dom.dataset['language'] };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                const select = document.createElement('select');\n                languageList.forEach((lang) => {\n                    const option = document.createElement('option');\n                    option.value = lang;\n                    option.innerText = !lang ? '--' : lang;\n                    if (lang === node.attrs['language']) {\n                        option.selected = true;\n                    }\n                    select.appendChild(option);\n                });\n                select.onchange = (e) => {\n                    const target = e.target;\n                    if (!(target instanceof HTMLSelectElement)) {\n                        return;\n                    }\n                    const view = ctx.get(editorViewCtx);\n                    if (!view.editable) {\n                        target.value = node.attrs['language'];\n                        return;\n                    }\n\n                    const { top, left } = target.getBoundingClientRect();\n                    const result = view.posAtCoords({ top, left });\n                    if (!result) return;\n\n                    const { tr } = view.state;\n\n                    view.dispatch(\n                        tr.setNodeMarkup(result.inside, undefined, {\n                            ...node.attrs,\n                            language: target.value,\n                        }),\n                    );\n                };\n                return [\n                    'div',\n                    {\n                        class: 'code-fence-container',\n                    },\n                    select,\n                    [\n                        'pre',\n                        {\n                            'data-language': node.attrs['language'],\n                            class: utils.getClassName(node.attrs, 'code-fence'),\n                        },\n                        ['code', { spellCheck: 'false' }, 0],\n                    ],\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === 'code',\n                runner: (state, node, type) => {\n                    const language = node['lang'] as string;\n                    const value = node['value'] as string;\n                    state.openNode(type, { language });\n                    if (value) {\n                        state.addText(value);\n                    }\n                    state.closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.addNode('code', undefined, node.content.firstChild?.text || '', {\n                        lang: node.attrs['language'],\n                    });\n                },\n            },\n        }),\n        inputRules: (nodeType) => [\n            textblockTypeInputRule(backtickInputRegex, nodeType, (match) => {\n                const [ok, language] = match;\n                if (!ok) return;\n                return { language };\n            }),\n            textblockTypeInputRule(tildeInputRegex, nodeType, (match) => {\n                const [ok, language] = match;\n                if (!ok) return;\n                return { language };\n            }),\n        ],\n        commands: (nodeType) => [createCmd(TurnIntoCodeFence, () => setBlockType(nodeType))],\n        shortcuts: {\n            [SupportedKeys.CodeFence]: createShortcut(TurnIntoCodeFence, 'Mod-Alt-c'),\n        },\n        view: () => (node, view, getPos) => {\n            let currNode = node;\n\n            const onSelectLanguage = (language: string) => {\n                const { tr } = view.state;\n                view.dispatch(\n                    tr.setNodeMarkup(getPos(), undefined, {\n                        fold: true,\n                        language,\n                    }),\n                );\n            };\n            const onBlur = () => {\n                const { tr } = view.state;\n\n                view.dispatch(\n                    tr.setNodeMarkup(getPos(), undefined, {\n                        ...currNode.attrs,\n                        fold: true,\n                    }),\n                );\n            };\n            const onFocus = () => {\n                const { tr } = view.state;\n\n                view.dispatch(\n                    tr.setNodeMarkup(getPos(), undefined, {\n                        ...currNode.attrs,\n                        fold: false,\n                    }),\n                );\n            };\n\n            const renderer = utils.themeManager.get<ThemeCodeFenceType>('code-fence', {\n                onBlur,\n                onFocus,\n                onSelectLanguage,\n                editable: () => view.editable,\n                languageList,\n            });\n            if (!renderer) return {} as NodeView;\n\n            const { dom, contentDOM, onUpdate, onDestroy } = renderer;\n            onUpdate(currNode);\n\n            return {\n                dom,\n                contentDOM,\n                update: (updatedNode) => {\n                    if (updatedNode.type.name !== id) return false;\n                    currNode = updatedNode;\n                    onUpdate(currNode);\n\n                    return true;\n                },\n                destroy: onDestroy,\n            };\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createNode } from '@milkdown/utils';\n\nexport const doc = createNode(() => {\n    return {\n        id: 'doc',\n        schema: () => ({\n            content: 'block+',\n            parseMarkdown: {\n                match: ({ type }) => type === 'root',\n                runner: (state, node, type) => {\n                    state.injectRoot(node, type);\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === 'doc',\n                runner: (state, node) => {\n                    state.openNode('root');\n                    state.next(node.content);\n                },\n            },\n        }),\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { Plugin, PluginKey, Selection } from '@milkdown/prose/state';\nimport { AddMarkStep, ReplaceStep } from '@milkdown/prose/transform';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['HardBreak'];\n\nexport const InsertHardbreak = createCmdKey('InsertHardbreak');\n\nexport const HardbreakFilterPluginKey = new PluginKey('MILKDOWN_HARDBREAK_FILTER');\n\nexport const hardbreak = createNode<\n    Keys,\n    {\n        notIn: string[];\n    }\n>((utils, options) => {\n    const notIn = options?.notIn ?? ['table', 'fence'];\n    return {\n        id: 'hardbreak',\n        schema: () => ({\n            inline: true,\n            group: 'inline',\n            selectable: false,\n            parseDOM: [{ tag: 'br' }],\n            toDOM: (node) => ['br', { class: utils.getClassName(node.attrs, 'hardbreak') }],\n            parseMarkdown: {\n                match: ({ type }) => type === 'break',\n                runner: (state, _, type) => {\n                    state.addNode(type);\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === 'hardbreak',\n                runner: (state) => {\n                    state.addNode('break');\n                },\n            },\n        }),\n        commands: (type) => [\n            createCmd(InsertHardbreak, () => (state, dispatch) => {\n                const { selection, tr } = state;\n                if (selection.empty) {\n                    // Transform two successive hardbreak into a new line\n                    const node = selection.$from.node();\n                    if (node.childCount > 0 && node.lastChild?.type.name === 'hardbreak') {\n                        dispatch?.(\n                            tr\n                                .replaceRangeWith(selection.to - 1, selection.to, state.schema.node('paragraph'))\n                                .setSelection(Selection.near(tr.doc.resolve(selection.to)))\n                                .scrollIntoView(),\n                        );\n                        return true;\n                    }\n                }\n                dispatch?.(tr.setMeta('hardbreak', true).replaceSelectionWith(type.create()).scrollIntoView());\n                return true;\n            }),\n        ],\n        shortcuts: {\n            [SupportedKeys.HardBreak]: createShortcut(InsertHardbreak, 'Shift-Enter'),\n        },\n        prosePlugins: (type) => [\n            new Plugin({\n                key: HardbreakFilterPluginKey,\n                filterTransaction: (tr, state) => {\n                    const isInsertHr = tr.getMeta('hardbreak');\n                    const [step] = tr.steps;\n                    if (isInsertHr && step) {\n                        const { from } = step as unknown as { from: number };\n                        const $from = state.doc.resolve(from);\n                        let curDepth = $from.depth;\n                        let canApply = true;\n                        while (curDepth > 0) {\n                            if (notIn.includes($from.node(curDepth).type.name)) {\n                                canApply = false;\n                            }\n                            curDepth--;\n                        }\n                        return canApply;\n                    }\n                    return true;\n                },\n            }),\n            new Plugin({\n                key: new PluginKey('MILKDOWN_HARDBREAK_MARKS'),\n                appendTransaction: (trs, _oldState, newState) => {\n                    if (!trs.length) return;\n                    const [tr] = trs;\n                    if (!tr) return;\n\n                    const [step] = tr.steps;\n\n                    const isInsertHr = tr.getMeta('hardbreak');\n                    if (isInsertHr) {\n                        if (!(step instanceof ReplaceStep)) {\n                            return;\n                        }\n                        const { from } = step as unknown as { from: number };\n                        return newState.tr.setNodeMarkup(from, type, undefined, []);\n                    }\n\n                    const isAddMarkStep = step instanceof AddMarkStep;\n                    if (isAddMarkStep) {\n                        let _tr = newState.tr;\n                        const { from, to } = step as unknown as { from: number; to: number };\n                        newState.doc.nodesBetween(from, to, (node, pos) => {\n                            if (node.type === type) {\n                                _tr = _tr.setNodeMarkup(pos, type, undefined, []);\n                            }\n                        });\n\n                        return _tr;\n                    }\n\n                    return;\n                },\n            }),\n        ],\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, Ctx, editorViewCtx, getPalette, schemaCtx } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { cloneTr } from '@milkdown/prose';\nimport { setBlockType } from '@milkdown/prose/commands';\nimport { textblockTypeInputRule } from '@milkdown/prose/inputrules';\nimport { Fragment, Node, NodeType } from '@milkdown/prose/model';\nimport { EditorState, Plugin, PluginKey, Transaction } from '@milkdown/prose/state';\nimport { Decoration, DecorationSet } from '@milkdown/prose/view';\nimport { createNode, createShortcut, ThemeUtils } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\nconst headingIndex = Array(6)\n    .fill(0)\n    .map((_, i) => i + 1);\n\ntype Keys =\n    | SupportedKeys['H1']\n    | SupportedKeys['H2']\n    | SupportedKeys['H3']\n    | SupportedKeys['H4']\n    | SupportedKeys['H5']\n    | SupportedKeys['H6']\n    | SupportedKeys['DowngradeHeading'];\n\nexport const TurnIntoHeading = createCmdKey<number>('TurnIntoHeading');\nexport const DowngradeHeading = createCmdKey('DowngradeHeading');\n\nexport const headingIdPluginKey = new PluginKey('MILKDOWN_HEADING_ID');\nexport const headingHashPluginKey = new PluginKey('MILKDOWN_HEADING_HASH');\n\nconst createId = (node: Node) =>\n    node.textContent\n        .replace(/[\\p{P}\\p{S}]/gu, '')\n        .replace(/\\s/g, '-')\n        .toLowerCase()\n        .trim();\n\nconst headingIdPlugin = (ctx: Ctx, type: NodeType, getId: (node: Node) => string): Plugin => {\n    let lock = false;\n    const walkThrough = (state: EditorState, callback: (tr: Transaction) => void) => {\n        const tr = state.tr.setMeta('addToHistory', false);\n        let found = false;\n        state.doc.descendants((node, pos) => {\n            if (node.type === type && !lock) {\n                if (node.textContent.trim().length === 0) {\n                    return;\n                }\n                const attrs = node.attrs;\n                const id = getId(node);\n\n                if (attrs['id'] !== id) {\n                    found = true;\n                    tr.setMeta(headingIdPluginKey, true).setNodeMarkup(pos, undefined, {\n                        ...attrs,\n                        id,\n                    });\n                }\n            }\n        });\n        if (found) {\n            callback(tr);\n        }\n    };\n    return new Plugin({\n        key: headingIdPluginKey,\n        props: {\n            handleDOMEvents: {\n                compositionstart: () => {\n                    lock = true;\n                    return false;\n                },\n                compositionend: () => {\n                    lock = false;\n                    const view = ctx.get(editorViewCtx);\n                    setTimeout(() => {\n                        walkThrough(view.state, (tr) => view.dispatch(tr));\n                    }, 0);\n                    return false;\n                },\n            },\n        },\n        appendTransaction: (transactions, _, nextState) => {\n            let tr: Transaction | null = null;\n\n            if (\n                transactions.every((transaction) => !transaction.getMeta(headingIdPluginKey)) &&\n                transactions.some((transaction) => transaction.docChanged)\n            ) {\n                walkThrough(nextState, (t) => {\n                    tr = t;\n                });\n            }\n\n            return tr;\n        },\n        view: (view) => {\n            const doc = view.state.doc;\n            let tr = view.state.tr.setMeta('addToHistory', false);\n            doc.descendants((node, pos) => {\n                if (node.type.name === 'heading' && node.attrs['level']) {\n                    if (!node.attrs['id']) {\n                        tr = tr.setNodeMarkup(pos, undefined, {\n                            ...node.attrs,\n                            id: getId(node),\n                        });\n                    }\n                }\n            });\n            view.dispatch(tr);\n            return {};\n        },\n    });\n};\n\nconst headingHashPlugin = (ctx: Ctx, type: NodeType, utils: ThemeUtils): Plugin => {\n    return new Plugin({\n        key: headingHashPluginKey,\n        state: {\n            init: () => {\n                return DecorationSet.empty;\n            },\n            apply: (tr) => {\n                const view = ctx.get(editorViewCtx);\n                if (!view.hasFocus?.() || !view.editable) return DecorationSet.empty;\n\n                const { $from } = tr.selection;\n                const node = $from.node();\n                if (node.type !== type) {\n                    return DecorationSet.empty;\n                }\n\n                const level = node.attrs['level'];\n                const getHashes = (level: number) => {\n                    return Array(level)\n                        .fill(0)\n                        .map((_) => `#`)\n                        .join('');\n                };\n                const widget = document.createElement('span');\n                widget.textContent = getHashes(level);\n                widget.contentEditable = 'false';\n                utils.themeManager.onFlush(() => {\n                    const style = utils.getStyle(({ css }) => {\n                        const palette = getPalette(utils.themeManager);\n                        return css`\n                            margin-right: 4px;\n                            color: ${palette('primary')};\n                        `;\n                    });\n                    if (style) {\n                        widget.className = style;\n                    }\n                });\n\n                const deco = Decoration.widget($from.before() + 1, widget, { side: -1 });\n                return DecorationSet.create(tr.doc, [deco]);\n            },\n        },\n        props: {\n            handleDOMEvents: {\n                focus: (view) => {\n                    const tr = cloneTr(view.state.tr);\n                    view.dispatch(tr);\n                    return false;\n                },\n            },\n            decorations(this: Plugin, state) {\n                return this.getState(state);\n            },\n        },\n    });\n};\n\nexport const heading = createNode<Keys, { getId: (node: Node) => string; displayHashtag: boolean }>(\n    (utils, options) => {\n        const id = 'heading';\n\n        const getId = options?.getId ?? createId;\n        const displayHashtag = options?.displayHashtag ?? true;\n\n        return {\n            id,\n            schema: () => ({\n                content: 'inline*',\n                group: 'block',\n                defining: true,\n                attrs: {\n                    id: {\n                        default: '',\n                    },\n                    level: {\n                        default: 1,\n                    },\n                },\n                parseDOM: headingIndex.map((x) => ({\n                    tag: `h${x}`,\n                    getAttrs: (node) => {\n                        if (!(node instanceof HTMLElement)) {\n                            throw expectDomTypeError(node);\n                        }\n                        return { level: x, id: node.id };\n                    },\n                })),\n                toDOM: (node) => {\n                    return [\n                        `h${node.attrs['level']}`,\n                        {\n                            id: node.attrs['id'] || getId(node),\n                            class: utils.getClassName(node.attrs, `heading h${node.attrs['level']}`),\n                        },\n                        0,\n                    ];\n                },\n                parseMarkdown: {\n                    match: ({ type }) => type === id,\n                    runner: (state, node, type) => {\n                        const depth = node['depth'] as number;\n                        state.openNode(type, { level: depth });\n                        state.next(node.children);\n                        state.closeNode();\n                    },\n                },\n                toMarkdown: {\n                    match: (node) => node.type.name === id,\n                    runner: (state, node) => {\n                        state.openNode('heading', undefined, { depth: node.attrs['level'] });\n                        const lastIsHardbreak = node.childCount >= 1 && node.lastChild?.type.name === 'hardbreak';\n                        if (lastIsHardbreak) {\n                            const contentArr: Node[] = [];\n                            node.content.forEach((n, _, i) => {\n                                if (i === node.childCount - 1) {\n                                    return;\n                                }\n                                contentArr.push(n);\n                            });\n                            state.next(Fragment.fromArray(contentArr));\n                        } else {\n                            state.next(node.content);\n                        }\n                        state.closeNode();\n                    },\n                },\n            }),\n            inputRules: (type, ctx) =>\n                headingIndex.map((x) =>\n                    textblockTypeInputRule(new RegExp(`^(#{1,${x}})\\\\s$`), type, () => {\n                        const view = ctx.get(editorViewCtx);\n                        const { $from } = view.state.selection;\n                        const node = $from.node();\n                        if (node.type.name === 'heading') {\n                            let level = Number(node.attrs['level']) + Number(x);\n                            if (level > 6) {\n                                level = 6;\n                            }\n                            return {\n                                level,\n                            };\n                        }\n                        return {\n                            level: x,\n                        };\n                    }),\n                ),\n            commands: (type, ctx) => [\n                createCmd(TurnIntoHeading, (level = 1) => {\n                    if (level < 1) {\n                        return setBlockType(level === 0 ? ctx.get(schemaCtx).nodes['paragraph'] || type : type);\n                    }\n                    return setBlockType(level === 0 ? ctx.get(schemaCtx).nodes['paragraph'] || type : type, { level });\n                }),\n                createCmd(DowngradeHeading, () => {\n                    return (state, dispatch, view) => {\n                        const { $from } = state.selection;\n                        const node = $from.node();\n                        if (node.type !== type || !state.selection.empty || $from.parentOffset !== 0) return false;\n\n                        const level = node.attrs['level'] - 1;\n                        if (!level) {\n                            return setBlockType(ctx.get(schemaCtx).nodes['paragraph'] || type)(state, dispatch, view);\n                        }\n\n                        dispatch?.(\n                            state.tr.setNodeMarkup(state.selection.$from.before(), undefined, {\n                                ...node.attrs,\n                                level,\n                            }),\n                        );\n                        return true;\n                    };\n                }),\n            ],\n            shortcuts: {\n                [SupportedKeys.H1]: createShortcut(TurnIntoHeading, 'Mod-Alt-1', 1),\n                [SupportedKeys.H2]: createShortcut(TurnIntoHeading, 'Mod-Alt-2', 2),\n                [SupportedKeys.H3]: createShortcut(TurnIntoHeading, 'Mod-Alt-3', 3),\n                [SupportedKeys.H4]: createShortcut(TurnIntoHeading, 'Mod-Alt-4', 4),\n                [SupportedKeys.H5]: createShortcut(TurnIntoHeading, 'Mod-Alt-5', 5),\n                [SupportedKeys.H6]: createShortcut(TurnIntoHeading, 'Mod-Alt-6', 6),\n                [SupportedKeys.DowngradeHeading]: createShortcut(DowngradeHeading, ['Backspace', 'Delete']),\n            },\n            prosePlugins: (type, ctx) => {\n                const plugins = [headingIdPlugin(ctx, type, getId)];\n                if (displayHashtag) {\n                    plugins.push(headingHashPlugin(ctx, type, utils));\n                }\n                return plugins;\n            },\n        };\n    },\n);\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, schemaCtx } from '@milkdown/core';\nimport { InputRule } from '@milkdown/prose/inputrules';\nimport { Selection } from '@milkdown/prose/state';\nimport { createNode } from '@milkdown/utils';\n\nconst id = 'hr';\nexport const InsertHr = createCmdKey<string>('InsertHr');\nexport const hr = createNode((utils) => {\n    return {\n        id,\n        schema: () => ({\n            group: 'block',\n            parseDOM: [{ tag: 'hr' }],\n            toDOM: (node) => ['hr', { class: utils.getClassName(node.attrs, id) }],\n            parseMarkdown: {\n                match: ({ type }) => type === 'thematicBreak',\n                runner: (state, _, type) => {\n                    state.addNode(type);\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state) => {\n                    state.addNode('thematicBreak');\n                },\n            },\n        }),\n        inputRules: (type) => [\n            new InputRule(/^(?:---|___\\s|\\*\\*\\*\\s)$/, (state, match, start, end) => {\n                const { tr } = state;\n\n                if (match[0]) {\n                    tr.replaceWith(start - 1, end, type.create());\n                }\n\n                return tr;\n            }),\n        ],\n        commands: (type, ctx) => [\n            createCmd(InsertHr, () => (state, dispatch) => {\n                if (!dispatch) return true;\n\n                const paragraph = ctx.get(schemaCtx).node('paragraph');\n                const { tr, selection } = state;\n                const { from } = selection;\n                const node = type.create();\n                if (!node) {\n                    return true;\n                }\n                const _tr = tr.replaceSelectionWith(node).insert(from, paragraph);\n                const sel = Selection.findFrom(_tr.doc.resolve(from), 1, true);\n                if (!sel) {\n                    return true;\n                }\n                dispatch(_tr.setSelection(sel).scrollIntoView());\n                return true;\n            }),\n        ],\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, createCmd, createCmdKey, ThemeImageType, ThemeInputChipType } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { findSelectedNodeOfType } from '@milkdown/prose';\nimport { InputRule } from '@milkdown/prose/inputrules';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { EditorView, NodeView } from '@milkdown/prose/view';\nimport { createNode } from '@milkdown/utils';\n\nexport const ModifyImage = createCmdKey<string>('ModifyImage');\nexport const InsertImage = createCmdKey<string>('InsertImage');\nconst id = 'image';\nexport type ImageOptions = {\n    isBlock: boolean;\n    placeholder: string;\n    input: {\n        placeholder: string;\n        buttonText?: string;\n    };\n};\nconst key = new PluginKey('MILKDOWN_IMAGE_INPUT');\n\nexport const image = createNode<string, ImageOptions>((utils, options) => {\n    return {\n        id: 'image',\n        schema: () => ({\n            inline: true,\n            group: 'inline',\n            selectable: true,\n            draggable: true,\n            marks: '',\n            atom: true,\n            defining: true,\n            isolating: true,\n            attrs: {\n                src: { default: '' },\n                alt: { default: '' },\n                title: { default: '' },\n            },\n            parseDOM: [\n                {\n                    tag: 'img[src]',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return {\n                            src: dom.getAttribute('src') || '',\n                            alt: dom.getAttribute('alt') || '',\n                            title: dom.getAttribute('title') || dom.getAttribute('alt') || '',\n                        };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                return [\n                    'img',\n                    {\n                        ...node.attrs,\n                        class: utils.getClassName(node.attrs, id),\n                    },\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === id,\n                runner: (state, node, type) => {\n                    const url = node['url'] as string;\n                    const alt = node['alt'] as string;\n                    const title = node['title'] as string;\n                    state.addNode(type, {\n                        src: url,\n                        alt,\n                        title,\n                    });\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.addNode('image', undefined, undefined, {\n                        title: node.attrs['title'],\n                        url: node.attrs['src'],\n                        alt: node.attrs['alt'],\n                    });\n                },\n            },\n        }),\n        commands: (type) => [\n            createCmd(InsertImage, (src = '') => (state, dispatch) => {\n                if (!dispatch) return true;\n                const { tr } = state;\n                const node = type.create({ src });\n                if (!node) {\n                    return true;\n                }\n                const _tr = tr.replaceSelectionWith(node);\n                dispatch(_tr.scrollIntoView());\n                return true;\n            }),\n            createCmd(ModifyImage, (src = '') => (state, dispatch) => {\n                const node = findSelectedNodeOfType(state.selection, type);\n                if (!node) return false;\n\n                const { tr } = state;\n                dispatch?.(\n                    tr.setNodeMarkup(node.pos, undefined, { ...node.node.attrs, loading: true, src }).scrollIntoView(),\n                );\n\n                return true;\n            }),\n        ],\n        inputRules: (type) => [\n            new InputRule(\n                /!\\[(?<alt>.*?)]\\((?<filename>.*?)\\s*(?=\"|\\))\"?(?<title>[^\"]+)?\"?\\)/,\n                (state, match, start, end) => {\n                    const [okay, alt, src = '', title] = match;\n                    const { tr } = state;\n                    if (okay) {\n                        tr.replaceWith(start, end, type.create({ src, alt, title }));\n                    }\n\n                    return tr;\n                },\n            ),\n        ],\n        view: () => (node) => {\n            let currNode = node;\n\n            const placeholder = options?.placeholder ?? 'Add an Image';\n            const isBlock = options?.isBlock ?? false;\n            const renderer = utils.themeManager.get<ThemeImageType>('image', {\n                placeholder,\n                isBlock,\n            });\n\n            if (!renderer) {\n                return {} as NodeView;\n            }\n\n            const { dom, onUpdate } = renderer;\n            onUpdate(currNode);\n\n            return {\n                dom,\n                update: (updatedNode) => {\n                    if (updatedNode.type.name !== id) return false;\n\n                    currNode = updatedNode;\n                    onUpdate(currNode);\n\n                    return true;\n                },\n                selectNode: () => {\n                    dom.classList.add('ProseMirror-selectednode');\n                },\n                deselectNode: () => {\n                    dom.classList.remove('ProseMirror-selectednode');\n                },\n            };\n        },\n        prosePlugins: (type, ctx) => {\n            return [\n                new Plugin({\n                    key,\n                    view: (editorView) => {\n                        const inputChipRenderer = utils.themeManager.get<ThemeInputChipType>('input-chip', {\n                            placeholder: options?.input?.placeholder ?? 'Input Image Link',\n                            buttonText: options?.input?.buttonText,\n                            onUpdate: (value) => {\n                                ctx.get(commandsCtx).call(ModifyImage, value);\n                            },\n                        });\n                        if (!inputChipRenderer) return {};\n                        const shouldDisplay = (view: EditorView) => {\n                            return Boolean(\n                                view.hasFocus() && type && findSelectedNodeOfType(view.state.selection, type),\n                            );\n                        };\n                        const getCurrentLink = (view: EditorView) => {\n                            const result = findSelectedNodeOfType(view.state.selection, type);\n                            if (!result) return;\n\n                            const value = result.node.attrs['src'];\n                            return value;\n                        };\n                        const renderByView = (view: EditorView) => {\n                            if (!view.editable) {\n                                return;\n                            }\n                            const display = shouldDisplay(view);\n                            if (display) {\n                                inputChipRenderer.show(view);\n                                inputChipRenderer.update(getCurrentLink(view));\n                            } else {\n                                inputChipRenderer.hide();\n                            }\n                        };\n                        inputChipRenderer.init(editorView);\n                        renderByView(editorView);\n\n                        return {\n                            update: (view, prevState) => {\n                                const isEqualSelection =\n                                    prevState?.doc.eq(view.state.doc) && prevState.selection.eq(view.state.selection);\n                                if (isEqualSelection) return;\n\n                                renderByView(view);\n                            },\n                            destroy: () => {\n                                inputChipRenderer.destroy();\n                            },\n                        };\n                    },\n                }),\n            ];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { getNodeFromSchema } from '@milkdown/prose';\nimport { wrappingInputRule } from '@milkdown/prose/inputrules';\nimport { NodeType } from '@milkdown/prose/model';\nimport { liftListItem, sinkListItem, splitListItem } from '@milkdown/prose/schema-list';\nimport { EditorState, Plugin, PluginKey, Transaction } from '@milkdown/prose/state';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['SinkListItem'] | SupportedKeys['LiftListItem'] | SupportedKeys['NextListItem'];\n\nconst id = 'list_item';\n\nexport const SplitListItem = createCmdKey('SplitListItem');\nexport const SinkListItem = createCmdKey('SinkListItem');\nexport const LiftListItem = createCmdKey('LiftListItem');\n\nconst keepListOrderPluginKey = new PluginKey('MILKDOWN_KEEP_LIST_ORDER');\n\nconst createKeepListOrderPlugin = (type: NodeType) => {\n    const walkThrough = (state: EditorState, callback: (tr: Transaction) => void) => {\n        const orderedListType = getNodeFromSchema('ordered_list', state.schema);\n        let tr = state.tr;\n        state.doc.descendants((node, pos, parent, index) => {\n            if (node.type === type && parent?.type === orderedListType) {\n                let changed = false;\n                const attrs = { ...node.attrs };\n                if (node.attrs['listType'] !== 'ordered') {\n                    attrs['listType'] = 'ordered';\n                    changed = true;\n                }\n\n                const base = parent?.maybeChild(0);\n                if (base && base.type === type && base.attrs['listType'] === 'ordered') {\n                    attrs['label'] = `${index + 1}.`;\n                    changed = true;\n                }\n\n                if (node.attrs['label'] === '•') {\n                    attrs['label'] = `${index + 1}.`;\n                    changed = true;\n                }\n\n                if (changed) {\n                    tr = tr.setNodeMarkup(pos, undefined, attrs);\n                }\n            }\n        });\n        callback(tr);\n    };\n    return new Plugin({\n        key: keepListOrderPluginKey,\n        appendTransaction: (transactions, _oldState, nextState) => {\n            let tr: Transaction | null = null;\n            if (transactions.some((transaction) => transaction.docChanged)) {\n                walkThrough(nextState, (t) => {\n                    tr = t;\n                });\n            }\n\n            return tr;\n        },\n    });\n};\n\nexport const listItem = createNode<Keys>((utils) => ({\n    id,\n    schema: () => ({\n        group: 'listItem',\n        content: 'paragraph block*',\n        attrs: {\n            label: {\n                default: '•',\n            },\n            listType: {\n                default: 'bullet',\n            },\n            spread: {\n                default: 'true',\n            },\n        },\n        defining: true,\n        parseDOM: [\n            {\n                tag: 'li.list-item',\n                getAttrs: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw expectDomTypeError(dom);\n                    }\n                    return {\n                        label: dom.dataset['label'],\n                        listType: dom.dataset['list-type'],\n                        spread: dom.dataset['spread'],\n                    };\n                },\n                contentElement: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw expectDomTypeError(dom);\n                    }\n\n                    const body = dom.querySelector<HTMLElement>('.list-item_body');\n                    if (!body) {\n                        return dom;\n                    }\n                    return body;\n                },\n            },\n            { tag: 'li' },\n        ],\n        toDOM: (node) => {\n            return [\n                'li',\n                {\n                    class: utils.getClassName(node.attrs, 'list-item'),\n                    'data-label': node.attrs['label'],\n                    'data-list-type': node.attrs['listType'],\n                    'data-spread': node.attrs['spread'],\n                },\n                ['div', { class: utils.getClassName(node.attrs, 'list-item_label') }, node.attrs['label']],\n                ['div', { class: utils.getClassName(node.attrs, 'list-item_body') }, 0],\n            ];\n        },\n        parseMarkdown: {\n            match: ({ type, checked }) => type === 'listItem' && checked === null,\n            runner: (state, node, type) => {\n                const label = node['label'] != null ? `${node['label']}.` : '•';\n                const listType = node['label'] != null ? 'ordered' : 'bullet';\n                const spread = node['spread'] != null ? `${node['spread']}` : 'true';\n                state.openNode(type, { label, listType, spread });\n                state.next(node.children);\n                state.closeNode();\n            },\n        },\n        toMarkdown: {\n            match: (node) => node.type.name === id,\n            runner: (state, node) => {\n                state.openNode('listItem', undefined, { spread: node.attrs['spread'] === 'true' });\n                state.next(node.content);\n                state.closeNode();\n            },\n        },\n    }),\n    inputRules: (nodeType) => [wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType)],\n    commands: (nodeType) => [\n        createCmd(SplitListItem, () => splitListItem(nodeType)),\n        createCmd(SinkListItem, () => sinkListItem(nodeType)),\n        createCmd(LiftListItem, () => liftListItem(nodeType)),\n    ],\n    shortcuts: {\n        [SupportedKeys.NextListItem]: createShortcut(SplitListItem, 'Enter'),\n        [SupportedKeys.SinkListItem]: createShortcut(SinkListItem, 'Mod-]'),\n        [SupportedKeys.LiftListItem]: createShortcut(LiftListItem, 'Mod-['),\n    },\n    prosePlugins: (nodeType) => [createKeepListOrderPlugin(nodeType)],\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { wrapIn } from '@milkdown/prose/commands';\nimport { wrappingInputRule } from '@milkdown/prose/inputrules';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['OrderedList'];\n\nexport const WrapInOrderedList = createCmdKey('WrapInOrderedList');\n\nconst id = 'ordered_list';\nexport const orderedList = createNode<Keys>((utils) => ({\n    id,\n    schema: () => ({\n        content: 'listItem+',\n        group: 'block',\n        attrs: {\n            order: {\n                default: 1,\n            },\n            spread: {\n                default: false,\n            },\n        },\n        parseDOM: [\n            {\n                tag: 'ol',\n                getAttrs: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw expectDomTypeError(dom);\n                    }\n                    return {\n                        spread: dom.dataset['spread'],\n                        order: dom.hasAttribute('start') ? Number(dom.getAttribute('start')) : 1,\n                    };\n                },\n            },\n        ],\n        toDOM: (node) => [\n            'ol',\n            {\n                ...(node.attrs['order'] === 1 ? {} : node.attrs['order']),\n                'data-spread': node.attrs['spread'],\n                class: utils.getClassName(node.attrs, 'ordered-list'),\n            },\n            0,\n        ],\n        parseMarkdown: {\n            match: ({ type, ordered }) => type === 'list' && !!ordered,\n            runner: (state, node, type) => {\n                const spread = node['spread'] != null ? `${node['spread']}` : 'true';\n                state.openNode(type, { spread }).next(node.children).closeNode();\n            },\n        },\n        toMarkdown: {\n            match: (node) => node.type.name === id,\n            runner: (state, node) => {\n                state.openNode('list', undefined, { ordered: true, start: 1, spread: node.attrs['spread'] === 'true' });\n                state.next(node.content);\n                state.closeNode();\n            },\n        },\n    }),\n    inputRules: (nodeType) => [\n        wrappingInputRule(\n            /^(\\d+)\\.\\s$/,\n            nodeType,\n            (match) => ({ order: Number(match[1]) }),\n            (match, node) => node.childCount + node.attrs['order'] === Number(match[1]),\n        ),\n    ],\n    commands: (nodeType) => [createCmd(WrapInOrderedList, () => wrapIn(nodeType))],\n    shortcuts: {\n        [SupportedKeys.OrderedList]: createShortcut(WrapInOrderedList, 'Mod-Alt-7'),\n    },\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { setBlockType } from '@milkdown/prose/commands';\nimport { Fragment, Node } from '@milkdown/prose/model';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Text'];\n\nexport const TurnIntoText = createCmdKey('TurnIntoText');\n\nconst id = 'paragraph';\nexport const paragraph = createNode<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            content: 'inline*',\n            group: 'block',\n            parseDOM: [{ tag: 'p' }],\n            toDOM: (node) => ['p', { class: utils.getClassName(node.attrs, id) }, 0],\n            parseMarkdown: {\n                match: (node) => node.type === 'paragraph',\n                runner: (state, node, type) => {\n                    state.openNode(type);\n                    if (node.children) {\n                        state.next(node.children);\n                    } else {\n                        state.addText(node['value'] as string);\n                    }\n                    state.closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === 'paragraph',\n                runner: (state, node) => {\n                    state.openNode('paragraph');\n                    const lastIsHardbreak = node.childCount >= 1 && node.lastChild?.type.name === 'hardbreak';\n                    if (lastIsHardbreak) {\n                        const contentArr: Node[] = [];\n                        node.content.forEach((n, _, i) => {\n                            if (i === node.childCount - 1) {\n                                return;\n                            }\n                            contentArr.push(n);\n                        });\n                        state.next(Fragment.fromArray(contentArr));\n                    } else {\n                        state.next(node.content);\n                    }\n                    state.closeNode();\n                },\n            },\n        }),\n        commands: (nodeType) => [createCmd(TurnIntoText, () => setBlockType(nodeType))],\n        shortcuts: {\n            [SupportedKeys.Text]: createShortcut(TurnIntoText, 'Mod-Alt-0'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createNode } from '@milkdown/utils';\n\nexport const text = createNode(() => ({\n    id: 'text',\n    schema: () => ({\n        group: 'inline',\n        parseMarkdown: {\n            match: ({ type }) => type === 'text',\n            runner: (state, node) => {\n                state.addText(node['value'] as string);\n            },\n        },\n        toMarkdown: {\n            match: (node) => node.type.name === 'text',\n            runner: (state, node) => {\n                state.addNode('text', undefined, node.text as string);\n            },\n        },\n    }),\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { AtomPlugin } from '@milkdown/utils';\n\nimport { blockquote } from './blockquote';\nimport { bulletList } from './bullet-list';\nimport { codeFence } from './code-fence';\nimport { doc } from './doc';\nimport { hardbreak } from './hardbreak';\nimport { heading } from './heading';\nimport { hr } from './hr';\nimport { image } from './image';\nimport { listItem } from './list-item';\nimport { orderedList } from './ordered-list';\nimport { paragraph } from './paragraph';\nimport { text } from './text';\n\nexport const nodes: AtomPlugin[] = [\n    doc(),\n    paragraph(),\n    hardbreak(),\n    blockquote(),\n    codeFence(),\n    bulletList(),\n    orderedList(),\n    listItem(),\n    heading(),\n    hr(),\n    image(),\n    text(),\n];\n\nexport * from './blockquote';\nexport * from './bullet-list';\nexport * from './code-fence';\nexport * from './doc';\nexport * from './hardbreak';\nexport * from './heading';\nexport * from './hr';\nexport * from './image';\nexport * from './list-item';\nexport * from './ordered-list';\nexport * from './paragraph';\nexport * from './text';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Node } from 'unist';\nimport { Parent, visit } from 'unist-util-visit';\n\nexport const addOrderInList = () => {\n    function transformer(ast: Node) {\n        visit(ast, 'list', (node: Parent & { ordered?: boolean; start?: number }) => {\n            if (node.ordered) {\n                const start = node.start ?? 1;\n                node.children.forEach((child, index) => {\n                    (child as Node & { label: number }).label = index + start;\n                });\n                return;\n            }\n        });\n    }\n\n    return transformer;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Literal, Node, Parent } from 'unist';\n\nconst isParent = (node: Node): node is Parent => !!(node as Parent).children;\nconst isHTML = (node: Node): node is Literal<string> => node.type === 'html';\n\nfunction flatMapWithDepth(ast: Node, fn: (node: Node, index: number, parent: Node | null) => Node[]) {\n    return transform(ast, 0, null)[0];\n\n    function transform(node: Node, index: number, parent: Node | null) {\n        if (isParent(node)) {\n            const out = [];\n            for (let i = 0, n = node.children.length; i < n; i++) {\n                const nthChild = node.children[i];\n                if (nthChild) {\n                    const xs = transform(nthChild, i, node);\n                    if (xs) {\n                        for (let j = 0, m = xs.length; j < m; j++) {\n                            const item = xs[j];\n                            if (item) {\n                                out.push(item);\n                            }\n                        }\n                    }\n                }\n            }\n            node.children = out;\n        }\n\n        return fn(node, index, parent);\n    }\n}\n\nexport const filterHTMLPlugin = () => {\n    function transformer(tree: Node) {\n        flatMapWithDepth(tree, (node) => {\n            if (!isHTML(node)) {\n                return [node];\n            }\n\n            return [];\n        });\n    }\n    return transformer;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { Decoration, DecorationSet } from '@milkdown/prose/view';\n\nconst inlineNodesCursorPluginKey = new PluginKey('MILKDOWN_INLINE_NODES_CURSOR');\n\n/**\n * This plugin is to solve the chrome 98 bug:\n * https://discuss.prosemirror.net/t/cursor-jumps-at-the-end-of-line-when-it-betweens-two-inline-nodes/4641\n */\nexport const getInlineNodesCursorPlugin = (): Plugin => {\n    let lock = false;\n    const inlineNodesCursorPlugin: Plugin = new Plugin({\n        key: inlineNodesCursorPluginKey,\n        state: {\n            init() {\n                return false;\n            },\n            apply(tr) {\n                if (!tr.selection.empty) {\n                    return false;\n                }\n                const pos = tr.selection.$from;\n                const left = pos.nodeBefore;\n                const right = pos.nodeAfter;\n                if (left && right && left.isInline && !left.isText && right.isInline && !right.isText) {\n                    return true;\n                }\n\n                return false;\n            },\n        },\n        props: {\n            handleDOMEvents: {\n                compositionend: (view, e) => {\n                    if (lock) {\n                        lock = false;\n                        requestAnimationFrame(() => {\n                            const active = inlineNodesCursorPlugin.getState(view.state);\n                            if (active) {\n                                const from = view.state.selection.from;\n                                e.preventDefault();\n                                view.dispatch(view.state.tr.insertText(e.data || '', from));\n                            }\n                        });\n\n                        return true;\n                    }\n                    return false;\n                },\n                compositionstart: (view) => {\n                    const active = inlineNodesCursorPlugin.getState(view.state);\n                    if (active) {\n                        lock = true;\n                    }\n                    return false;\n                },\n                beforeinput: (view, e) => {\n                    const active = inlineNodesCursorPlugin.getState(view.state);\n                    if (active && e instanceof InputEvent && e.data && !lock) {\n                        const from = view.state.selection.from;\n                        e.preventDefault();\n                        view.dispatch(view.state.tr.insertText(e.data || '', from));\n\n                        return true;\n                    }\n\n                    return false;\n                },\n            },\n            decorations(state) {\n                const active = inlineNodesCursorPlugin.getState(state);\n                if (active) {\n                    const pos = state.selection.$from;\n                    const position = pos.pos;\n                    const left = document.createElement('span');\n                    const leftDec = Decoration.widget(position, left, {\n                        side: -1,\n                    });\n                    const right = document.createElement('span');\n                    const rightDec = Decoration.widget(position, right);\n                    setTimeout(() => {\n                        left.contentEditable = 'true';\n                        right.contentEditable = 'true';\n                    });\n                    return DecorationSet.create(state.doc, [leftDec, rightDec]);\n                }\n                return DecorationSet.empty;\n            },\n        },\n    });\n\n    return inlineNodesCursorPlugin;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nexport const linkRegexp = /\\[(?<span>((www|https:\\/\\/|http:\\/\\/)\\S+))]\\((?<url>\\S+)\\)/;\n\nexport const punctuationRegexp = (holePlaceholder: string) =>\n    new RegExp(`\\\\\\\\(?=[^\\\\w\\\\s${holePlaceholder}\\\\\\\\]|_)`, 'g');\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Node } from '@milkdown/prose/model';\n\nimport { SyncNodePlaceholder } from './config';\nimport { linkRegexp, punctuationRegexp } from './regexp';\n\nexport const keepLink = (str: string) => {\n    let text = str;\n    let match = text.match(linkRegexp);\n    while (match && match.groups) {\n        const { span } = match.groups;\n        text = text.replace(linkRegexp, span as string);\n\n        match = text.match(linkRegexp);\n    }\n    return text;\n};\n\nexport const swap = (text: string, first: number, last: number) => {\n    const arr = text.split('');\n    const temp = arr[first];\n    if (arr[first] && arr[last]) {\n        arr[first] = arr[last] as string;\n        arr[last] = temp as string;\n    }\n    return arr.join('').toString();\n};\n\nexport const replacePunctuation = (holePlaceholder: string) => (text: string) =>\n    text.replace(punctuationRegexp(holePlaceholder), '');\n\nexport const calculatePlaceholder = (placeholder: SyncNodePlaceholder) => (text: string) => {\n    const index = text.indexOf(placeholder.hole);\n    const left = text.charAt(index - 1);\n    const right = text.charAt(index + 1);\n    const notAWord = /[^\\w]|_/;\n\n    // cursor on the right\n    if (!right) {\n        return placeholder.punctuation;\n    }\n\n    // cursor on the left\n    if (!left) {\n        return placeholder.char;\n    }\n\n    if (notAWord.test(left) && notAWord.test(right)) {\n        return placeholder.punctuation;\n    }\n\n    return placeholder.char;\n};\n\nexport const calcOffset = (node: Node, from: number, placeholder: string) => {\n    let offset = from;\n    let find = false;\n    node.descendants((n) => {\n        if (find) return false;\n        if (n.isText) {\n            const i = n.text?.indexOf(placeholder);\n            if (i != null && i >= 0) {\n                find = true;\n                offset += i;\n                return false;\n            }\n        }\n        offset += n.nodeSize;\n        return;\n    });\n    return offset;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, Ctx } from '@milkdown/core';\nimport { Node, NodeType } from '@milkdown/prose/model';\nimport { Transaction } from '@milkdown/prose/state';\n\nimport { swap } from './utils';\n\nexport type ShouldSyncNode = (context: {\n    prevNode: Node;\n    nextNode: Node;\n    ctx: Ctx;\n    tr: Transaction;\n    text: string;\n}) => boolean;\n\nexport type SyncNodePlaceholder = {\n    hole: string;\n    punctuation: string;\n    char: string;\n};\n\nexport type InlineSyncConfig = {\n    placeholderConfig: SyncNodePlaceholder;\n    shouldSyncNode: ShouldSyncNode;\n    globalNodes: Array<NodeType | string>;\n    movePlaceholder: (placeholderToMove: string, text: string) => string;\n};\n\nexport const defaultConfig: InlineSyncConfig = {\n    placeholderConfig: {\n        hole: '∅',\n        punctuation: '⁂',\n        char: '∴',\n    },\n    globalNodes: ['footnote_definition'],\n    shouldSyncNode: ({ prevNode, nextNode }) =>\n        prevNode.inlineContent &&\n        nextNode &&\n        // if node type changes, do not sync\n        prevNode.type === nextNode.type &&\n        // if two node fully equal, we don't modify them\n        !prevNode.eq(nextNode),\n    movePlaceholder: (placeholderToMove: string, text: string) => {\n        const symbolsNeedToMove = ['*', '_'];\n\n        let index = text.indexOf(placeholderToMove);\n        while (symbolsNeedToMove.includes(text[index - 1] || '') && symbolsNeedToMove.includes(text[index + 1] || '')) {\n            text = swap(text, index, index + 1);\n            index = index + 1;\n        }\n\n        return text;\n    },\n};\n\nexport const inlineSyncConfigCtx = createSlice<InlineSyncConfig, 'inlineSyncConfig'>(defaultConfig, 'inlineSyncConfig');\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx, parserCtx, serializerCtx } from '@milkdown/core';\nimport { Node } from '@milkdown/prose/model';\nimport { EditorState } from '@milkdown/prose/state';\nimport { pipe } from '@milkdown/utils';\n\nimport { inlineSyncConfigCtx } from './config';\nimport { calculatePlaceholder, keepLink, replacePunctuation } from './utils';\n\nexport * from './config';\n\nexport type InlineSyncContext = {\n    text: string;\n    prevNode: Node;\n    nextNode: Node;\n    placeholder: string;\n};\n\nconst getNodeFromSelection = (state: EditorState) => {\n    const { selection } = state;\n    const { $from } = selection;\n    const node = $from.node();\n\n    return node;\n};\n\nconst getMarkdown = (ctx: Ctx, state: EditorState, node: Node, globalNode: Node[]) => {\n    const serializer = ctx.get(serializerCtx);\n    const doc = state.schema.topNodeType.create(undefined, [node, ...globalNode]);\n\n    const markdown = serializer(doc);\n\n    return markdown;\n};\n\nconst addPlaceholder = (ctx: Ctx, markdown: string) => {\n    const config = ctx.get(inlineSyncConfigCtx);\n    const holePlaceholder = config.placeholderConfig.hole;\n\n    const [firstLine = '', ...rest] = markdown.split('\\n\\n');\n\n    const movePlaceholder = (text: string) => config.movePlaceholder(holePlaceholder, text);\n\n    const handleText = pipe(replacePunctuation(holePlaceholder), movePlaceholder, keepLink);\n\n    let text = handleText(firstLine);\n    const placeholder = calculatePlaceholder(config.placeholderConfig)(text);\n\n    text = text.replace(holePlaceholder, placeholder);\n\n    text = [text, ...rest].join('\\n\\n');\n\n    return [text, placeholder] as [markdown: string, placeholder: string];\n};\n\nconst getNewNode = (ctx: Ctx, text: string) => {\n    const parser = ctx.get(parserCtx);\n    const parsed = parser(text);\n\n    if (!parsed) return null;\n\n    return parsed.firstChild;\n};\n\nconst collectGlobalNodes = (ctx: Ctx, state: EditorState) => {\n    const { globalNodes } = ctx.get(inlineSyncConfigCtx);\n    const nodes: Node[] = [];\n\n    state.doc.descendants((node) => {\n        if (globalNodes.includes(node.type.name) || globalNodes.includes(node.type)) {\n            nodes.push(node);\n            return false;\n        }\n        return;\n    });\n\n    return nodes;\n};\n\nconst removeGlobalFromText = (text: string) => text.split('\\n\\n')[0] || '';\n\nexport const getContextByState = (ctx: Ctx, state: EditorState): InlineSyncContext | null => {\n    try {\n        const globalNode = collectGlobalNodes(ctx, state);\n        const node = getNodeFromSelection(state);\n\n        const markdown = getMarkdown(ctx, state, node, globalNode);\n        const [text, placeholder] = addPlaceholder(ctx, markdown);\n\n        const newNode = getNewNode(ctx, text);\n\n        if (!newNode || node.type !== newNode.type) return null;\n\n        // @ts-expect-error hijack the node attribute\n        newNode.attrs = { ...node.attrs };\n\n        newNode.descendants((node) => {\n            const marks = node.marks;\n            const link = marks.find((mark) => mark.type.name === 'link');\n            if (link && node.text?.includes(placeholder) && link.attrs['href'].includes(placeholder)) {\n                // @ts-expect-error hijack the mark attribute\n                link.attrs['href'] = link.attrs['href'].replace(placeholder, '');\n            }\n        });\n\n        return {\n            text: removeGlobalFromText(text),\n            prevNode: node,\n            nextNode: newNode,\n            placeholder,\n        };\n    } catch {\n        return null;\n    }\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx } from '@milkdown/core';\nimport { Attrs } from '@milkdown/prose/model';\nimport { EditorState, PluginKey, TextSelection, Transaction } from '@milkdown/prose/state';\n\nimport { inlineSyncConfigCtx } from './config';\nimport { getContextByState } from './context';\nimport { calcOffset } from './utils';\n\nexport const runReplacer = (\n    ctx: Ctx,\n    key: PluginKey,\n    state: EditorState,\n    dispatch: (tr: Transaction) => void,\n    attrs: Attrs,\n) => {\n    const { placeholderConfig } = ctx.get(inlineSyncConfigCtx);\n    const holePlaceholder = placeholderConfig.hole;\n    // insert a placeholder to restore the selection\n    let tr = state.tr.setMeta(key, true).insertText(holePlaceholder, state.selection.from);\n\n    const nextState = state.apply(tr);\n    const context = getContextByState(ctx, nextState);\n\n    if (!context) return;\n\n    const { $from } = nextState.selection;\n    const from = $from.before();\n    const to = $from.after();\n\n    const offset = calcOffset(context.nextNode, from, context.placeholder);\n\n    tr = tr\n        .replaceWith(from, to, context.nextNode)\n        .setNodeMarkup(from, undefined, attrs)\n        // delete the placeholder\n        .delete(offset + 1, offset + 2);\n\n    // restore the selection\n    tr = tr.setSelection(TextSelection.near(tr.doc.resolve(offset + 1)));\n\n    dispatch(tr);\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx, editorViewCtx } from '@milkdown/core';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\n\nimport { inlineSyncConfigCtx } from './config';\nimport { getContextByState } from './context';\nimport { runReplacer } from './replacer';\n\nexport * from './config';\n\nexport const inlineSyncPluginKey = new PluginKey('MILKDOWN_INLINE_SYNC');\nexport const getInlineSyncPlugin = (ctx: Ctx) => {\n    let requestId: number | null = null;\n    const inlineSyncPlugin = new Plugin<null>({\n        key: inlineSyncPluginKey,\n        state: {\n            init: () => {\n                return null;\n            },\n            apply: (tr, _value, _oldState, newState) => {\n                const view = ctx.get(editorViewCtx);\n                if (!view.hasFocus?.() || !view.editable) return null;\n\n                if (!tr.docChanged) return null;\n\n                const meta = tr.getMeta(inlineSyncPluginKey);\n                if (meta) {\n                    return null;\n                }\n\n                const context = getContextByState(ctx, newState);\n                if (!context) return null;\n\n                if (requestId) {\n                    cancelAnimationFrame(requestId);\n                    requestId = null;\n                }\n\n                const { prevNode, nextNode, text } = context;\n\n                const { shouldSyncNode } = ctx.get(inlineSyncConfigCtx);\n\n                if (!shouldSyncNode({ prevNode, nextNode, ctx, tr, text })) return null;\n\n                requestId = requestAnimationFrame(() => {\n                    requestId = null;\n\n                    const { dispatch, state } = ctx.get(editorViewCtx);\n\n                    runReplacer(ctx, inlineSyncPluginKey, state, dispatch, prevNode.attrs);\n                });\n\n                return null;\n            },\n        },\n    });\n\n    return inlineSyncPlugin;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createPlugin } from '@milkdown/utils';\nimport links from 'remark-inline-links';\n\nimport { addOrderInList } from './add-order-in-list';\nimport { filterHTMLPlugin } from './filter-html';\nimport { getInlineNodesCursorPlugin } from './inline-nodes-cursor';\nimport { getInlineSyncPlugin, inlineSyncConfigCtx } from './inline-sync';\n\nexport { inlineSyncConfigCtx };\nexport const commonmarkPlugins = [\n    createPlugin(\n        () => ({\n            prosePlugins: (_, ctx) => [getInlineNodesCursorPlugin(), getInlineSyncPlugin(ctx)],\n            remarkPlugins: () => [links, filterHTMLPlugin, addOrderInList],\n        }),\n        [inlineSyncConfigCtx],\n    )(),\n];\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nexport const getFootnoteRefId = (label: string) => `footnote-ref-${label}`;\n\nexport const getFootnoteDefId = (label: string) => `footnote-def-${label}`;\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { commandsCtx, createCmd, createCmdKey, editorViewCtx, ThemeInputChipType } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { findSelectedNodeOfType } from '@milkdown/prose';\nimport { wrappingInputRule } from '@milkdown/prose/inputrules';\nimport { NodeSelection, Plugin, PluginKey } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\nimport { createNode } from '@milkdown/utils';\n\nimport { getFootnoteDefId, getFootnoteRefId } from './utils';\n\nconst key = new PluginKey('MILKDOWN_FOOTNOTE_DEF_INPUT');\nexport const ModifyFootnoteDef = createCmdKey<string>('ModifyFootnoteDef');\n\nexport const footnoteDefinition = createNode((utils) => {\n    const id = 'footnote_definition';\n    const markdownId = 'footnoteDefinition';\n\n    return {\n        id,\n        schema: (ctx) => ({\n            group: 'block',\n            content: 'block+',\n            defining: true,\n            attrs: {\n                label: {\n                    default: '',\n                },\n            },\n            parseDOM: [\n                {\n                    tag: `div[data-type=\"${id}\"]`,\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return {\n                            label: dom.dataset['label'],\n                        };\n                    },\n                    contentElement: 'dd',\n                },\n            ],\n            toDOM: (node) => {\n                const label = node.attrs['label'];\n                const className = utils.getClassName(node.attrs, 'footnote-definition');\n\n                const dt = document.createElement('dt');\n                dt.textContent = `[${label}]:`;\n                dt.onclick = () => {\n                    const view = ctx.get(editorViewCtx);\n                    const selection = NodeSelection.create(view.state.doc, view.state.selection.from - 2);\n                    view.dispatch(view.state.tr.setSelection(selection));\n                };\n\n                const a = document.createElement('a');\n                a.href = `#${getFootnoteRefId(label)}`;\n                a.contentEditable = 'false';\n                a.textContent = '↩';\n                a.onmousedown = (e) => {\n                    e.preventDefault();\n                };\n\n                return [\n                    'div',\n                    {\n                        class: className,\n                        'data-label': label,\n                        'data-type': id,\n                        id: getFootnoteDefId(label),\n                    },\n                    ['div', { class: 'footnote-definition_content' }, dt, ['dd', 0]],\n                    ['div', { class: 'footnote-definition_anchor' }, a],\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === markdownId,\n                runner: (state, node, type) => {\n                    state\n                        .openNode(type, {\n                            label: node['label'] as string,\n                        })\n                        .next(node.children)\n                        .closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state\n                        .openNode(markdownId, undefined, {\n                            label: node.attrs['label'],\n                            identifier: node.attrs['label'],\n                        })\n                        .next(node.content)\n                        .closeNode();\n                },\n            },\n        }),\n        commands: (nodeType) => [\n            createCmd(ModifyFootnoteDef, (label = '') => (state, dispatch) => {\n                const node = findSelectedNodeOfType(state.selection, nodeType);\n                if (!node) return false;\n\n                const { tr } = state;\n                const _tr = tr.setNodeMarkup(node.pos, undefined, { ...node.node.attrs, label });\n                dispatch?.(_tr.setSelection(NodeSelection.create(_tr.doc, node.pos)));\n\n                return true;\n            }),\n        ],\n        inputRules: (nodeType) => [\n            wrappingInputRule(\n                /(?:\\[\\^)([^:]+)(?::)$/,\n                nodeType,\n                (match) => {\n                    const label = match[1] ?? 'footnote';\n                    return {\n                        label,\n                    };\n                },\n                () => false,\n            ),\n        ],\n        prosePlugins: (type, ctx) => {\n            return [\n                new Plugin({\n                    key,\n                    view: (editorView) => {\n                        const inputChipRenderer = utils.themeManager.get<ThemeInputChipType>('input-chip', {\n                            width: '12em',\n                            placeholder: 'Input Footnote Label',\n                            onUpdate: (value) => {\n                                ctx.get(commandsCtx).call(ModifyFootnoteDef, value);\n                            },\n                            isBindMode: true,\n                        });\n                        if (!inputChipRenderer) return {};\n                        const shouldDisplay = (view: EditorView) =>\n                            Boolean(type && findSelectedNodeOfType(view.state.selection, type));\n                        const getCurrentLabel = (view: EditorView) => {\n                            const result = findSelectedNodeOfType(view.state.selection, type);\n                            if (!result) return;\n\n                            const value = result.node.attrs['label'];\n                            return value;\n                        };\n                        const renderByView = (view: EditorView) => {\n                            if (!view.editable) {\n                                return;\n                            }\n                            const display = shouldDisplay(view);\n                            if (display) {\n                                inputChipRenderer.show(view);\n                                inputChipRenderer.update(getCurrentLabel(view));\n                            } else {\n                                inputChipRenderer.hide();\n                            }\n                        };\n                        inputChipRenderer.init(editorView);\n                        renderByView(editorView);\n\n                        return {\n                            update: (view, prevState) => {\n                                const isEqualSelection =\n                                    prevState?.doc.eq(view.state.doc) && prevState.selection.eq(view.state.selection);\n                                if (isEqualSelection) return;\n\n                                renderByView(view);\n                            },\n                            destroy: () => {\n                                inputChipRenderer.destroy();\n                            },\n                        };\n                    },\n                }),\n            ];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { commandsCtx, createCmd, createCmdKey, editorViewCtx, ThemeInputChipType } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { findSelectedNodeOfType } from '@milkdown/prose';\nimport { InputRule } from '@milkdown/prose/inputrules';\nimport { NodeSelection, Plugin, PluginKey } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\nimport { createNode } from '@milkdown/utils';\n\nimport { getFootnoteDefId, getFootnoteRefId } from './utils';\n\nexport const ModifyFootnoteRef = createCmdKey<string>('ModifyFootnoteRef');\nconst key = new PluginKey('MILKDOWN_FOOTNOTE_REF_INPUT');\n\nexport const footnoteReference = createNode((utils) => {\n    const id = 'footnote_reference';\n\n    return {\n        id,\n        schema: (ctx) => ({\n            group: 'inline',\n            inline: true,\n            atom: true,\n            attrs: {\n                label: {\n                    default: '',\n                },\n            },\n            parseDOM: [\n                {\n                    tag: `sup[data-type=\"${id}\"]`,\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return {\n                            label: dom.dataset['label'],\n                        };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                const label = node.attrs['label'];\n                const a = document.createElement('a');\n                const href = `#${getFootnoteDefId(label)}`;\n                a.href = href;\n                a.textContent = `[${label}]`;\n                a.onclick = (e) => {\n                    const view = ctx.get(editorViewCtx);\n                    if (view.editable) {\n                        e.preventDefault();\n                    }\n                };\n                a.ondblclick = () => {\n                    const view = ctx.get(editorViewCtx);\n                    if (view.editable) {\n                        window.location.href = href;\n                    }\n                };\n                return [\n                    'sup',\n                    {\n                        'data-label': label,\n                        'data-type': id,\n                        id: getFootnoteRefId(label),\n                    },\n                    a,\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === 'footnoteReference',\n                runner: (state, node, type) => {\n                    state.addNode(type, {\n                        label: node['label'] as string,\n                    });\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.addNode('footnoteReference', undefined, undefined, {\n                        label: node.attrs['label'],\n                        identifier: node.attrs['label'],\n                    });\n                },\n            },\n        }),\n        commands: (nodeType) => [\n            createCmd(ModifyFootnoteRef, (label = '') => (state, dispatch) => {\n                const node = findSelectedNodeOfType(state.selection, nodeType);\n                if (!node) return false;\n\n                const { tr } = state;\n                const _tr = tr.setNodeMarkup(node.pos, undefined, { ...node.node.attrs, label });\n                dispatch?.(_tr.setSelection(NodeSelection.create(_tr.doc, node.pos)));\n\n                return true;\n            }),\n        ],\n        inputRules: (nodeType) => [\n            new InputRule(/(?:\\[\\^)([^\\]]+)(?:\\])$/, (state, match, start, end) => {\n                const $start = state.doc.resolve(start);\n                const index = $start.index();\n                const $end = state.doc.resolve(end);\n                if (!$start.parent.canReplaceWith(index, $end.index(), nodeType)) {\n                    return null;\n                }\n                const label = match[1];\n                return state.tr.replaceRangeWith(\n                    start,\n                    end,\n                    nodeType.create({\n                        label,\n                    }),\n                );\n            }),\n        ],\n        prosePlugins: (type, ctx) => {\n            const inputChipRenderer = utils.themeManager.get<ThemeInputChipType>('input-chip', {\n                width: '12em',\n                placeholder: 'Input Footnote Label',\n                onUpdate: (value) => {\n                    ctx.get(commandsCtx).call(ModifyFootnoteRef, value);\n                },\n                isBindMode: true,\n            });\n            if (!inputChipRenderer) return [];\n            const shouldDisplay = (view: EditorView) =>\n                Boolean(type && findSelectedNodeOfType(view.state.selection, type));\n            const getCurrentLabel = (view: EditorView) => {\n                const result = findSelectedNodeOfType(view.state.selection, type);\n                if (!result) return;\n\n                const value = result.node.attrs['label'];\n                return value;\n            };\n            const renderByView = (view: EditorView) => {\n                if (!view.editable) {\n                    return;\n                }\n                const display = shouldDisplay(view);\n                if (display) {\n                    inputChipRenderer.show(view);\n                    inputChipRenderer.update(getCurrentLabel(view));\n                } else {\n                    inputChipRenderer.hide();\n                }\n            };\n            return [\n                new Plugin({\n                    key,\n                    view: (editorView) => {\n                        inputChipRenderer.init(editorView);\n                        renderByView(editorView);\n\n                        return {\n                            update: (view, prevState) => {\n                                const isEqualSelection =\n                                    prevState?.doc.eq(view.state.doc) && prevState.selection.eq(view.state.selection);\n                                if (isEqualSelection) return;\n\n                                renderByView(view);\n                            },\n                            destroy: () => {\n                                inputChipRenderer.destroy();\n                            },\n                        };\n                    },\n                }),\n            ];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Attrs, Node } from '@milkdown/prose/model';\n\nconst cache = new WeakMap<Node, TableMap>();\nconst readFromCache = (key: Node) => cache.get(key);\nconst addToCache = (key: Node, value: TableMap) => {\n    cache.set(key, value);\n    return value;\n};\n\nexport class Rect {\n    public tableStart?: number;\n    public map?: TableMap;\n    public table?: Node;\n    constructor(public left: number, public top: number, public right: number, public bottom: number) {}\n}\n\n// ::- A table map describes the structore of a given table. To avoid\n// recomputing them all the time, they are cached per table node. To\n// be able to do that, positions saved in the map are relative to the\n// start of the table, rather than the start of the document.\nexport class TableMap {\n    constructor(public width: number, public height: number, public map: number[], public problems?: Problem[]) {\n        // :: number The width of the table\n        this.width = width;\n        // :: number The table's height\n        this.height = height;\n        // :: [number] A width * height array with the start position of\n        // the cell covering that part of the table in each slot\n        this.map = map;\n        // An optional array of problems (cell overlap or non-rectangular\n        // shape) for the table, used by the table normalizer.\n        this.problems = problems;\n    }\n\n    // Find the dimensions of the cell at the given position.\n    findCell(pos: number): Rect {\n        for (let i = 0; i < this.map.length; i++) {\n            const curPos = this.map[i];\n            if (curPos != pos) continue;\n            const left = i % this.width,\n                top = (i / this.width) | 0;\n            let right = left + 1,\n                bottom = top + 1;\n            for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) right++;\n            for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) bottom++;\n            return new Rect(left, top, right, bottom);\n        }\n        throw new RangeError('No cell with offset ' + pos + ' found');\n    }\n\n    colCount(pos: number): number {\n        for (let i = 0; i < this.map.length; i++) if (this.map[i] == pos) return i % this.width;\n        throw new RangeError('No cell with offset ' + pos + ' found');\n    }\n\n    // :: (number, string, number) → ?number\n    // Find the next cell in the given direction, starting from the cell\n    // at `pos`, if any.\n    nextCell(pos: number, axis: string, dir: number): number | undefined {\n        const { left, right, top, bottom } = this.findCell(pos);\n        if (axis == 'horiz') {\n            if (dir < 0 ? left == 0 : right == this.width) return undefined;\n            return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n        } else {\n            if (dir < 0 ? top == 0 : bottom == this.height) return undefined;\n            return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n        }\n    }\n\n    // :: (number, number) → Rect\n    // Get the rectangle spanning the two given cells.\n    rectBetween(a: number, b: number): Rect {\n        const { left: leftA, right: rightA, top: topA, bottom: bottomA } = this.findCell(a);\n        const { left: leftB, right: rightB, top: topB, bottom: bottomB } = this.findCell(b);\n        return new Rect(\n            Math.min(leftA, leftB),\n            Math.min(topA, topB),\n            Math.max(rightA, rightB),\n            Math.max(bottomA, bottomB),\n        );\n    }\n\n    // :: (Rect) → [number]\n    // Return the position of all cells that have the top left corner in\n    // the given rectangle.\n    cellsInRect(rect: Rect): number[] {\n        const result: number[] = [],\n            seen: Record<number, boolean> = {};\n        for (let row = rect.top; row < rect.bottom; row++) {\n            for (let col = rect.left; col < rect.right; col++) {\n                const index = row * this.width + col,\n                    pos = this.map[index] as number;\n                if (seen[pos]) continue;\n                seen[pos] = true;\n                if (\n                    (col != rect.left || !col || this.map[index - 1] != pos) &&\n                    (row != rect.top || !row || this.map[index - this.width] != pos)\n                )\n                    result.push(pos);\n            }\n        }\n        return result;\n    }\n\n    // :: (number, number, Node) → number\n    // Return the position at which the cell at the given row and column\n    // starts, or would start, if a cell started there.\n    positionAt(row: number, col: number, table: Node): number {\n        for (let i = 0, rowStart = 0; ; i++) {\n            const rowEnd = rowStart + table.child(i).nodeSize;\n            if (i == row) {\n                let index = col + row * this.width;\n                const rowEndIndex = (row + 1) * this.width;\n                // Skip past cells from previous rows (via rowspan)\n                while (index < rowEndIndex && (this.map[index] as number) < rowStart) index++;\n                return index == rowEndIndex ? rowEnd - 1 : (this.map[index] as number);\n            }\n            rowStart = rowEnd;\n        }\n    }\n\n    // Find the table map for the given table node.\n    static get(table: Node): TableMap {\n        return readFromCache(table) || addToCache(table, computeMap(table));\n    }\n}\n\nexport type Problem =\n    | {\n          type: 'missing';\n          row: number;\n          n: number;\n      }\n    | {\n          type: 'overlong_rowspan';\n          pos: number;\n          n: number;\n      }\n    | {\n          type: 'collision';\n          row: number;\n          pos: number;\n          n: number;\n      }\n    | {\n          type: 'colwidth mismatch';\n          pos: number;\n          colwidth: boolean;\n      };\n\n// Compute a table map.\nfunction computeMap(table: Node) {\n    if (table.type.spec['tableRole'] != 'table') throw new RangeError('Not a table node: ' + table.type.name);\n    const width = findWidth(table),\n        height = table.childCount;\n    const map: number[] = [];\n    const colWidths: number[] = [];\n    let mapPos = 0,\n        problems: Problem[] | undefined = undefined;\n    for (let i = 0, e = width * height; i < e; i++) map[i] = 0;\n\n    for (let row = 0, pos = 0; row < height; row++) {\n        const rowNode = table.child(row);\n        pos++;\n        for (let i = 0; ; i++) {\n            while (mapPos < map.length && map[mapPos] != 0) mapPos++;\n            if (i == rowNode.childCount) break;\n            const cellNode = rowNode.child(i),\n                { colspan, rowspan, colwidth } = cellNode.attrs;\n            for (let h = 0; h < rowspan; h++) {\n                if (h + row >= height) {\n                    (problems || (problems = [])).push({\n                        type: 'overlong_rowspan',\n                        pos,\n                        n: rowspan - h,\n                    });\n                    break;\n                }\n                const start = mapPos + h * width;\n                for (let w = 0; w < colspan; w++) {\n                    if (map[start + w] == 0) map[start + w] = pos;\n                    else\n                        (problems || (problems = [])).push({\n                            type: 'collision',\n                            row,\n                            pos,\n                            n: colspan - w,\n                        });\n                    const colW = colwidth && colwidth[w];\n                    if (colW) {\n                        const widthIndex = ((start + w) % width) * 2,\n                            prev = colWidths[widthIndex];\n                        if (prev == null || (prev != colW && colWidths[widthIndex + 1] == 1)) {\n                            colWidths[widthIndex] = colW;\n                            colWidths[widthIndex + 1] = 1;\n                        } else if (prev == colW) {\n                            colWidths[widthIndex + 1]++;\n                        }\n                    }\n                }\n            }\n            mapPos += colspan;\n            pos += cellNode.nodeSize;\n        }\n        const expectedPos = (row + 1) * width;\n        let missing = 0;\n        while (mapPos < expectedPos) if (map[mapPos++] == 0) missing++;\n        if (missing) (problems || (problems = [])).push({ type: 'missing', row, n: missing });\n        pos++;\n    }\n\n    const tableMap = new TableMap(width, height, map, problems);\n    let badWidths = false;\n\n    // For columns that have defined widths, but whose widths disagree\n    // between rows, fix up the cells whose width doesn't match the\n    // computed one.\n    for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n        if (colWidths[i] != null && (colWidths[i + 1] as number) < height) badWidths = true;\n    if (badWidths) findBadColWidths(tableMap, colWidths, table);\n\n    return tableMap;\n}\n\nfunction findWidth(table: Node) {\n    let width = -1,\n        hasRowSpan = false;\n    for (let row = 0; row < table.childCount; row++) {\n        const rowNode = table.child(row);\n        let rowWidth = 0;\n        if (hasRowSpan)\n            for (let j = 0; j < row; j++) {\n                const prevRow = table.child(j);\n                for (let i = 0; i < prevRow.childCount; i++) {\n                    const cell = prevRow.child(i);\n                    if (j + cell.attrs['rowspan'] > row) rowWidth += cell.attrs['colspan'];\n                }\n            }\n        for (let i = 0; i < rowNode.childCount; i++) {\n            const cell = rowNode.child(i);\n            rowWidth += cell.attrs['colspan'];\n            if (cell.attrs['rowspan'] > 1) hasRowSpan = true;\n        }\n        if (width == -1) width = rowWidth;\n        else if (width != rowWidth) width = Math.max(width, rowWidth);\n    }\n    return width;\n}\n\nfunction findBadColWidths(map: TableMap, colWidths: number[], table: Node) {\n    if (!map.problems) map.problems = [];\n    for (let i = 0, seen: Record<number, boolean> = {}; i < map.map.length; i++) {\n        const pos = map.map[i] as number;\n        if (seen[pos]) continue;\n        seen[pos] = true;\n        const node = table.nodeAt(pos) as Node;\n        let updated = null;\n        for (let j = 0; j < node.attrs['colspan']; j++) {\n            const col = (i + j) % map.width,\n                colWidth = colWidths[col * 2];\n            if (colWidth != null && (!node.attrs['colwidth'] || node.attrs['colwidth'][j] != colWidth))\n                (updated || (updated = freshColWidth(node.attrs)))[j] = colWidth;\n        }\n        if (updated)\n            map.problems.unshift({\n                type: 'colwidth mismatch',\n                pos,\n                colwidth: updated,\n            });\n    }\n}\n\nfunction freshColWidth(attrs: Attrs) {\n    if (attrs['colwidth']) return attrs['colwidth'].slice();\n    const result = [];\n    for (let i = 0; i < attrs['colspan']; i++) result.push(0);\n    return result;\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Fragment, Node, ResolvedPos, Slice } from '@milkdown/prose/model';\nimport {\n    EditorState,\n    NodeSelection,\n    Selection,\n    SelectionRange,\n    TextSelection,\n    Transaction,\n} from '@milkdown/prose/state';\nimport { Mappable } from '@milkdown/prose/transform';\nimport { Decoration, DecorationSet } from '@milkdown/prose/view';\n\nimport { TableMap } from './table-map';\nimport { inSameTable, pointsAtCell, removeColSpan, setAttr } from './util';\n\n// ::- A [`Selection`](http://prosemirror.net/docs/ref/#state.Selection)\n// subclass that represents a cell selection spanning part of a table.\n// With the plugin enabled, these will be created when the user\n// selects across cells, and will be drawn by giving selected cells a\n// `selectedCell` CSS class.\nexport class CellSelection extends Selection {\n    // :: (ResolvedPos, ?ResolvedPos)\n    // A table selection is identified by its anchor and head cells. The\n    // positions given to this constructor should point _before_ two\n    // cells in the same table. They may be the same, to select a single\n    // cell.\n    constructor(public $anchorCell: ResolvedPos, public $headCell = $anchorCell) {\n        const table = $anchorCell.node(-1),\n            map = TableMap.get(table),\n            start = $anchorCell.start(-1);\n        const rect = map.rectBetween($anchorCell.pos - start, $headCell.pos - start);\n        const doc = $anchorCell.node(0);\n        const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - start);\n        // Make the head cell the first range, so that it counts as the\n        // primary part of the selection\n        cells.unshift($headCell.pos - start);\n        const ranges = cells.map((pos) => {\n            const cell = table.nodeAt(pos) as Node,\n                from = pos + start + 1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new (SelectionRange as any)(doc.resolve(from), doc.resolve(from + cell.content.size));\n        });\n        super(ranges[0].$from, ranges[0].$to, ranges);\n        // :: ResolvedPos\n        // A resolved position pointing _in front of_ the anchor cell (the one\n        // that doesn't move when extending the selection).\n        this.$anchorCell = $anchorCell;\n        // :: ResolvedPos\n        // A resolved position pointing in front of the head cell (the one\n        // moves when extending the selection).\n        this.$headCell = $headCell;\n    }\n\n    map(doc: Node, mapping: Mappable): Selection {\n        const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n        const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n        if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n            const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n            if (tableChanged && this.isRowSelection()) return CellSelection.rowSelection($anchorCell, $headCell);\n            else if (tableChanged && this.isColSelection()) return CellSelection.colSelection($anchorCell, $headCell);\n            else return new CellSelection($anchorCell, $headCell);\n        }\n        return TextSelection.between($anchorCell, $headCell);\n    }\n\n    // :: () → Slice\n    // Returns a rectangular slice of table rows containing the selected\n    // cells.\n    override content(): Slice {\n        const table = this.$anchorCell.node(-1),\n            map = TableMap.get(table),\n            start = this.$anchorCell.start(-1);\n        const rect = map.rectBetween(this.$anchorCell.pos - start, this.$headCell.pos - start);\n        const seen: Record<number, boolean> = {},\n            rows = [];\n        for (let row = rect.top; row < rect.bottom; row++) {\n            const rowContent = [];\n            for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n                const pos = map.map[index] as number;\n                if (!seen[pos]) {\n                    seen[pos] = true;\n                    const cellRect = map.findCell(pos);\n                    let cell = table.nodeAt(pos) as Node;\n                    const extraLeft = rect.left - cellRect.left,\n                        extraRight = cellRect.right - rect.right;\n                    if (extraLeft > 0 || extraRight > 0) {\n                        let attrs = cell.attrs;\n                        if (extraLeft > 0) attrs = removeColSpan(attrs, 0, extraLeft);\n                        if (extraRight > 0) attrs = removeColSpan(attrs, attrs['colspan'] - extraRight, extraRight);\n                        if (cellRect.left < rect.left) cell = cell.type.createAndFill(attrs) as Node;\n                        else cell = cell.type.create(attrs, cell.content);\n                    }\n                    if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n                        const attrs = setAttr(\n                            cell.attrs,\n                            'rowspan',\n                            Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top),\n                        );\n                        if (cellRect.top < rect.top) cell = cell.type.createAndFill(attrs) as Node;\n                        else cell = cell.type.create(attrs, cell.content);\n                    }\n                    rowContent.push(cell);\n                }\n            }\n            rows.push(table.child(row).copy(Fragment.from(rowContent)));\n        }\n\n        const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n        return new Slice(Fragment.from(fragment), 1, 1);\n    }\n\n    override replace(tr: Transaction, content = Slice.empty) {\n        const mapFrom = tr.steps.length,\n            ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            const { $from, $to } = ranges[i] as SelectionRange,\n                mapping = tr.mapping.slice(mapFrom);\n            tr.replace(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n        }\n        const sel = Selection.findFrom(tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)), -1);\n        if (sel) tr.setSelection(sel);\n    }\n\n    override replaceWith(tr: Transaction, node: Node) {\n        this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n    }\n\n    forEachCell(f: (node: Node, index: number) => void) {\n        const table = this.$anchorCell.node(-1),\n            map = TableMap.get(table),\n            start = this.$anchorCell.start(-1);\n        const cells = map.cellsInRect(map.rectBetween(this.$anchorCell.pos - start, this.$headCell.pos - start));\n        for (let i = 0; i < cells.length; i++)\n            f(table.nodeAt(cells[i] as number) as Node, start + (cells[i] as number));\n    }\n\n    // :: () → bool\n    // True if this selection goes all the way from the top to the\n    // bottom of the table.\n    isColSelection() {\n        const anchorTop = this.$anchorCell.index(-1),\n            headTop = this.$headCell.index(-1);\n        if (Math.min(anchorTop, headTop) > 0) return false;\n        const anchorBot = anchorTop + (this.$anchorCell.nodeAfter as Node).attrs['rowspan'],\n            headBot = headTop + (this.$headCell.nodeAfter as Node).attrs['rowspan'];\n        return Math.max(anchorBot, headBot) == this.$headCell.node(-1).childCount;\n    }\n\n    // :: (ResolvedPos, ?ResolvedPos) → CellSelection\n    // Returns the smallest column selection that covers the given anchor\n    // and head cell.\n    static colSelection($anchorCell: ResolvedPos, $headCell = $anchorCell) {\n        const map = TableMap.get($anchorCell.node(-1)),\n            start = $anchorCell.start(-1);\n        const anchorRect = map.findCell($anchorCell.pos - start),\n            headRect = map.findCell($headCell.pos - start);\n        const doc = $anchorCell.node(0);\n        if (anchorRect.top <= headRect.top) {\n            if (anchorRect.top > 0) {\n                const left = map.map[anchorRect.left] as number;\n                $anchorCell = doc.resolve(start + left);\n            }\n            if (headRect.bottom < map.height) {\n                const pos = map.map[map.width * (map.height - 1) + headRect.right - 1] as number;\n                $headCell = doc.resolve(start + pos);\n            }\n        } else {\n            if (headRect.top > 0) {\n                const left = map.map[anchorRect.left] as number;\n                $headCell = doc.resolve(start + left);\n            }\n            if (anchorRect.bottom < map.height) {\n                const pos = map.map[map.width * (map.height - 1) + anchorRect.right - 1] as number;\n                $anchorCell = doc.resolve(start + pos);\n            }\n        }\n        return new CellSelection($anchorCell, $headCell);\n    }\n\n    // :: () → bool\n    // True if this selection goes all the way from the left to the\n    // right of the table.\n    isRowSelection() {\n        const map = TableMap.get(this.$anchorCell.node(-1)),\n            start = this.$anchorCell.start(-1);\n        const anchorLeft = map.colCount(this.$anchorCell.pos - start),\n            headLeft = map.colCount(this.$headCell.pos - start);\n        if (Math.min(anchorLeft, headLeft) > 0) return false;\n        const anchorRight = anchorLeft + (this.$anchorCell.nodeAfter as Node).attrs['colspan'],\n            headRight = headLeft + (this.$headCell.nodeAfter as Node).attrs['colspan'];\n        return Math.max(anchorRight, headRight) == map.width;\n    }\n\n    eq(other: Selection): boolean {\n        return (\n            other instanceof CellSelection &&\n            other.$anchorCell.pos == this.$anchorCell.pos &&\n            other.$headCell.pos == this.$headCell.pos\n        );\n    }\n\n    // :: (ResolvedPos, ?ResolvedPos) → CellSelection\n    // Returns the smallest row selection that covers the given anchor\n    // and head cell.\n    static rowSelection($anchorCell: ResolvedPos, $headCell = $anchorCell) {\n        const map = TableMap.get($anchorCell.node(-1)),\n            start = $anchorCell.start(-1);\n        const anchorRect = map.findCell($anchorCell.pos - start),\n            headRect = map.findCell($headCell.pos - start);\n        const doc = $anchorCell.node(0);\n        if (anchorRect.left <= headRect.left) {\n            if (anchorRect.left > 0) {\n                const pos = map.map[anchorRect.top * map.width] as number;\n                $anchorCell = doc.resolve(start + pos);\n            }\n            if (headRect.right < map.width) {\n                const pos = map.map[map.width * (headRect.top + 1) - 1] as number;\n                $headCell = doc.resolve(start + pos);\n            }\n        } else {\n            if (headRect.left > 0) {\n                const pos = map.map[headRect.top * map.width] as number;\n                $headCell = doc.resolve(start + pos);\n            }\n            if (anchorRect.right < map.width) {\n                const pos = map.map[map.width * (anchorRect.top + 1) - 1] as number;\n\n                $anchorCell = doc.resolve(start + pos);\n            }\n        }\n        return new CellSelection($anchorCell, $headCell);\n    }\n\n    toJSON() {\n        return {\n            type: 'cell',\n            anchor: this.$anchorCell.pos,\n            head: this.$headCell.pos,\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static override fromJSON(doc: Node, json: any) {\n        return new CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n\n    // :: (Node, number, ?number) → CellSelection\n    static create(doc: Node, anchorCell: number, headCell = anchorCell) {\n        return new CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n    }\n\n    override getBookmark() {\n        return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n    }\n}\n\nCellSelection.prototype.visible = false;\n\nSelection.jsonID('cell', CellSelection);\n\nclass CellBookmark {\n    constructor(public anchor: number, public head: number) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping: Mappable) {\n        return new CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc: Node): Selection {\n        const $anchorCell = doc.resolve(this.anchor),\n            $headCell = doc.resolve(this.head);\n        if (\n            $anchorCell.parent.type.spec['tableRole'] == 'row' &&\n            $headCell.parent.type.spec['tableRole'] == 'row' &&\n            $anchorCell.index() < $anchorCell.parent.childCount &&\n            $headCell.index() < $headCell.parent.childCount &&\n            inSameTable($anchorCell, $headCell)\n        )\n            return new CellSelection($anchorCell, $headCell);\n        else return Selection.near($headCell, 1);\n    }\n}\n\nexport function drawCellSelection(state: EditorState) {\n    if (!(state.selection instanceof CellSelection)) return null;\n    const cells: Decoration[] = [];\n    state.selection.forEachCell((node, pos) => {\n        cells.push(Decoration.node(pos, pos + node.nodeSize, { class: 'selectedCell' }));\n    });\n    return DecorationSet.create(state.doc, cells);\n}\n\nfunction isCellBoundarySelection({ $from, $to }: Selection) {\n    if ($from.pos == $to.pos || $from.pos < $from.pos - 6) return false; // Cheap elimination\n    let afterFrom = $from.pos,\n        beforeTo = $to.pos,\n        depth = $from.depth;\n    for (; depth >= 0; depth--, afterFrom++) if ($from.after(depth + 1) < $from.end(depth)) break;\n    for (let d = $to.depth; d >= 0; d--, beforeTo--) if ($to.before(d + 1) > $to.start(d)) break;\n    return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec['tableRole']);\n}\n\nfunction isTextSelectionAcrossCells({ $from, $to }: Selection) {\n    let fromCellBoundaryNode;\n    let toCellBoundaryNode;\n\n    for (let i = $from.depth; i > 0; i--) {\n        const node = $from.node(i);\n        if (node.type.spec['tableRole'] === 'cell' || node.type.spec['tableRole'] === 'header_cell') {\n            fromCellBoundaryNode = node;\n            break;\n        }\n    }\n\n    for (let i = $to.depth; i > 0; i--) {\n        const node = $to.node(i);\n        if (node.type.spec['tableRole'] === 'cell' || node.type.spec['tableRole'] === 'header_cell') {\n            toCellBoundaryNode = node;\n            break;\n        }\n    }\n\n    return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\n\nexport function normalizeSelection(state: EditorState, tr: Transaction | undefined, allowTableNodeSelection: boolean) {\n    const sel = (tr || state).selection,\n        doc = (tr || state).doc;\n    let normalize, role;\n    if (sel instanceof NodeSelection && (role = sel.node.type.spec['tableRole'])) {\n        if (role == 'cell' || role == 'header_cell') {\n            normalize = CellSelection.create(doc, sel.from);\n        } else if (role == 'row') {\n            const $cell = doc.resolve(sel.from + 1);\n            normalize = CellSelection.rowSelection($cell, $cell);\n        } else if (!allowTableNodeSelection) {\n            const map = TableMap.get(sel.node),\n                start = sel.from + 1;\n            const pos = map.map[map.width * map.height - 1] as number;\n            const lastCell = start + pos;\n            normalize = CellSelection.create(doc, start + 1, lastCell);\n        }\n    } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n        normalize = TextSelection.create(doc, sel.from);\n    } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n        normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n    }\n    if (normalize) (tr || (tr = state.tr)).setSelection(normalize);\n    return tr;\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Attrs, Node, NodeSpec, Schema } from '@milkdown/prose/model';\n\nimport { TableNodesOptions } from './types';\n\nfunction getCellAttrs(dom: HTMLElement, extraAttrs: Attrs) {\n    const widthAttr = dom.getAttribute('data-colwidth');\n    const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(',').map((s) => Number(s)) : null;\n    const colspan = Number(dom.getAttribute('colspan') || 1);\n    const result = {\n        colspan,\n        rowspan: Number(dom.getAttribute('rowspan') || 1),\n        colwidth: widths && widths.length == colspan ? widths : null,\n    };\n    for (const prop in extraAttrs) {\n        const getter = extraAttrs[prop].getFromDOM;\n        const value = getter && getter(dom);\n        if (value != null) result[prop as keyof typeof result] = value;\n    }\n    return result;\n}\n\nfunction setCellAttrs(node: Node, extraAttrs: Attrs) {\n    const attrs: Record<string, unknown> = {};\n    if (node.attrs['colspan'] != 1) attrs['colspan'] = node.attrs['colspan'];\n    if (node.attrs['rowspan'] != 1) attrs['rowspan'] = node.attrs['rowspan'];\n    if (node.attrs['colwidth']) attrs['data-colwidth'] = node.attrs['colwidth'].join(',');\n    for (const prop in extraAttrs) {\n        const setter = extraAttrs[prop].setDOMAttr;\n        if (setter) setter(node.attrs[prop], attrs);\n    }\n    return attrs;\n}\n\nfunction tableNodesSpecCreator(options: TableNodesOptions) {\n    const extraAttrs: Attrs = options.cellAttributes || {};\n    const cellAttrs: Record<string, unknown> = {\n        colspan: { default: 1 },\n        rowspan: { default: 1 },\n        colwidth: { default: null },\n    };\n    for (const prop in extraAttrs) cellAttrs[prop] = { default: extraAttrs[prop].default };\n    const finalAttrs = cellAttrs as Attrs;\n\n    const schema: Record<'table' | 'table_row' | 'table_cell' | 'table_header', NodeSpec> = {\n        table: {\n            content: 'table_row+',\n            tableRole: 'table',\n            isolating: true,\n            group: options.tableGroup,\n            parseDOM: [{ tag: 'table' }],\n            toDOM() {\n                return ['table', ['tbody', 0]];\n            },\n        },\n        table_row: {\n            content: '(table_cell | table_header)*',\n            tableRole: 'row',\n            parseDOM: [{ tag: 'tr' }],\n            toDOM() {\n                return ['tr', 0];\n            },\n        },\n        table_cell: {\n            content: options.cellContent,\n            attrs: finalAttrs,\n            tableRole: 'cell',\n            isolating: true,\n            parseDOM: [{ tag: 'td', getAttrs: (dom) => getCellAttrs(dom as HTMLElement, extraAttrs) }],\n            toDOM(node) {\n                return ['td', setCellAttrs(node, extraAttrs), 0];\n            },\n        },\n        table_header: {\n            content: options.cellContent,\n            attrs: finalAttrs,\n            tableRole: 'header_cell',\n            isolating: true,\n            parseDOM: [{ tag: 'th', getAttrs: (dom) => getCellAttrs(dom as HTMLElement, extraAttrs) }],\n            toDOM(node) {\n                return ['th', setCellAttrs(node, extraAttrs), 0];\n            },\n        },\n    };\n\n    return schema;\n}\n\nexport function tableNodeTypes(schema: Schema) {\n    let result = schema.cached['tableNodeTypes'];\n    if (!result) {\n        result = schema.cached['tableNodeTypes'] = {};\n        for (const name in schema.nodes) {\n            const type = schema.nodes[name],\n                role = type?.spec['tableRole'];\n            if (role) result[role] = type;\n        }\n    }\n    return result;\n}\n\nexport const schema = tableNodesSpecCreator({\n    tableGroup: 'block',\n    cellContent: 'paragraph',\n    cellAttributes: {\n        alignment: {\n            default: 'left',\n            getFromDOM: (dom) => (dom as HTMLElement).style.textAlign || 'left',\n            setDOMAttr: (value, attrs) => {\n                attrs['style'] = `text-align: ${value || 'left'}`;\n            },\n        },\n    },\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Attrs, Node, ResolvedPos } from '@milkdown/prose/model';\nimport { EditorState, NodeSelection } from '@milkdown/prose/state';\n\nimport { CellSelection } from './cell-selection';\nimport { tableNodeTypes } from './schema';\nimport { TableMap } from './table-map';\n\nexport function cellAround($pos: ResolvedPos) {\n    for (let d = $pos.depth - 1; d > 0; d--)\n        if ($pos.node(d).type.spec['tableRole'] == 'row') return $pos.node(0).resolve($pos.before(d + 1));\n    return undefined;\n}\n\nexport function cellWrapping($pos: ResolvedPos) {\n    for (let d = $pos.depth; d > 0; d--) {\n        // Sometimes the cell can be in the same depth.\n        const role = $pos.node(d).type.spec['tableRole'];\n        if (role === 'cell' || role === 'header_cell') return $pos.node(d);\n    }\n    return null;\n}\n\nexport function pointsAtCell($pos: ResolvedPos): Node | null {\n    if ($pos.parent.type.spec['tableRole'] == 'row') return $pos.nodeAfter;\n    return null;\n}\n\nexport function moveCellForward($pos: ResolvedPos) {\n    return $pos.node(0).resolve($pos.pos + ($pos.nodeAfter as Node).nodeSize);\n}\n\nexport function inSameTable($a: ResolvedPos, $b: ResolvedPos) {\n    return $a.depth == $b.depth && $a.pos >= $b.start(-1) && $a.pos <= $b.end(-1);\n}\n\nexport function nextCell($pos: ResolvedPos, axis: string, dir: number) {\n    const start = $pos.start(-1),\n        map = TableMap.get($pos.node(-1));\n    const moved = map.nextCell($pos.pos - start, axis, dir);\n    return moved == null ? null : $pos.node(0).resolve(start + moved);\n}\n\nexport function setAttr<T>(attrs: Attrs, name: string, value: T) {\n    const result: Record<string, unknown> = {};\n    for (const prop in attrs) result[prop] = attrs[prop];\n    result[name] = value;\n    return result as Attrs;\n}\n\nexport function removeColSpan(attrs: Attrs, pos: number, n = 1) {\n    const result = setAttr(attrs, 'colspan', attrs['colspan'] - n) as Record<string, unknown>;\n    if (result['colwidth']) {\n        const widths = result['colwidth'] as number[];\n        result['colwidth'] = widths.slice();\n        widths.splice(pos, n);\n        if (!widths.some((w) => w > 0)) result['colwidth'] = null;\n    }\n    return result;\n}\n\nexport function isInTable(state: EditorState) {\n    const $head = state.selection.$head;\n    for (let d = $head.depth; d > 0; d--) if ($head.node(d).type.spec['tableRole'] == 'row') return true;\n    return false;\n}\n\nexport function selectionCell(state: EditorState) {\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n        return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n    } else if ((sel as NodeSelection).node && (sel as NodeSelection).node.type.spec['tableRole'] == 'cell') {\n        return sel.$anchor;\n    }\n    return cellAround(sel.$head) || cellNear(sel.$head);\n}\n\nfunction cellNear($pos: ResolvedPos) {\n    for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n        const role = after.type.spec['tableRole'];\n        if (role == 'cell' || role == 'header_cell') return $pos.doc.resolve(pos);\n    }\n    for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n        const role = before.type.spec['tableRole'];\n        if (role == 'cell' || role == 'header_cell') return $pos.doc.resolve(pos - before.nodeSize);\n    }\n    return;\n}\n\nexport function addColSpan(attrs: Attrs, pos: number, n = 1) {\n    const result = setAttr(attrs, 'colspan', attrs['colspan'] + n) as Record<string, unknown>;\n    if (result['colwidth']) {\n        const widths = result['colwidth'] as number[];\n        result['colwidth'] = widths.slice();\n        for (let i = 0; i < n; i++) widths.splice(pos, 0, 0);\n    }\n    return result as Attrs;\n}\n\nexport function columnIsHeader(map: TableMap, table: Node, col: number) {\n    const headerCell = tableNodeTypes(table.type.schema).header_cell;\n    for (let row = 0; row < map.height; row++) {\n        const pos = map.map[col + row * map.width] as number;\n        if ((table.nodeAt(pos) as Node).type != headerCell) return false;\n    }\n    return true;\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Node, NodeType } from '@milkdown/prose/model';\nimport { Command, Selection } from '@milkdown/prose/state';\n\nimport { isInTable } from './plugin/util';\n\nexport const exitTable =\n    (node: NodeType): Command =>\n    (state, dispatch) => {\n        if (!isInTable(state)) {\n            return false;\n        }\n        const { $head } = state.selection;\n        const pos = $head.after();\n        const tr = state.tr.replaceWith(pos, pos, node.createAndFill() as Node);\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch?.(tr.scrollIntoView());\n        return true;\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Fragment, Node, NodeSpec, NodeType, ResolvedPos } from '@milkdown/prose/model';\nimport { Command, EditorState, TextSelection, Transaction } from '@milkdown/prose/state';\n\nimport { CellSelection } from './cell-selection';\nimport { tableNodeTypes } from './schema';\nimport { Rect, TableMap } from './table-map';\nimport {\n    addColSpan,\n    cellAround,\n    cellWrapping,\n    columnIsHeader,\n    isInTable,\n    moveCellForward,\n    removeColSpan,\n    selectionCell,\n    setAttr,\n} from './util';\n\n// Helper to get the selected rectangle in a table, if any. Adds table\n// map, table node, and table start offset to the object for\n// convenience.\nexport function selectedRect(state: EditorState): Required<Rect> {\n    const sel = state.selection,\n        $pos = selectionCell(state) as ResolvedPos;\n    const table = $pos.node(-1),\n        tableStart = $pos.start(-1),\n        map = TableMap.get(table);\n    let rect;\n    if (sel instanceof CellSelection)\n        rect = map.rectBetween(sel.$anchorCell.pos - tableStart, sel.$headCell.pos - tableStart);\n    else rect = map.findCell($pos.pos - tableStart);\n    rect.tableStart = tableStart;\n    rect.map = map;\n    rect.table = table;\n    return rect as Required<Rect>;\n}\n\n// Add a column at the given position in a table.\nexport function addColumn(tr: Transaction, { map, tableStart, table }: Rect, col: number) {\n    map = map as TableMap;\n    table = table as Node;\n    tableStart = tableStart as number;\n    let refColumn: number | null = col > 0 ? -1 : 0;\n    if (columnIsHeader(map, table, col + refColumn)) refColumn = col == 0 || col == map.width ? null : 0;\n\n    for (let row = 0; row < map.height; row++) {\n        const index = row * map.width + col;\n        // If this position falls inside a col-spanning cell\n        if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n            const pos = map.map[index] as number,\n                cell = table.nodeAt(pos) as Node;\n            tr.setNodeMarkup(tr.mapping.map(tableStart + pos), null, addColSpan(cell.attrs, col - map.colCount(pos)));\n            // Skip ahead if rowspan > 1\n            row += cell.attrs['rowspan'] - 1;\n        } else {\n            const offset = map.map[index + (refColumn as number)] as number;\n            const type =\n                refColumn == null ? tableNodeTypes(table.type.schema).cell : (table.nodeAt(offset) as Node).type;\n            const pos = map.positionAt(row, col, table);\n            tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n        }\n    }\n    return tr;\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command to add a column before the column with the selection.\nexport const addColumnBefore: Command = (state, dispatch) => {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n        const rect = selectedRect(state);\n        dispatch(addColumn(state.tr, rect, rect.left));\n    }\n    return true;\n};\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command to add a column after the column with the selection.\nexport const addColumnAfter: Command = (state, dispatch) => {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n        const rect = selectedRect(state);\n        dispatch(addColumn(state.tr, rect, rect.right));\n    }\n    return true;\n};\n\nexport function removeColumn(tr: Transaction, { map, table, tableStart }: Rect, col: number) {\n    map = map as TableMap;\n    table = table as Node;\n    tableStart = tableStart as number;\n    const mapStart = tr.mapping.maps.length;\n    for (let row = 0; row < map.height; ) {\n        const index = row * map.width + col,\n            pos = map.map[index] as number,\n            cell = table.nodeAt(pos) as Node;\n        // If this is part of a col-spanning cell\n        if ((col > 0 && map.map[index - 1] == pos) || (col < map.width - 1 && map.map[index + 1] == pos)) {\n            tr.setNodeMarkup(\n                tr.mapping.slice(mapStart).map(tableStart + pos),\n                null,\n                removeColSpan(cell.attrs, col - map.colCount(pos)),\n            );\n        } else {\n            const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n            tr.delete(start, start + cell.nodeSize);\n        }\n        row += cell.attrs['rowspan'];\n    }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command function that removes the selected columns from a table.\nexport const deleteColumn: Command = (state, dispatch) => {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n        const rect = selectedRect(state) as Required<Rect>,\n            tr = state.tr;\n        if (rect.left == 0 && rect.right == rect.map.width) return false;\n        for (let i = rect.right - 1; ; i--) {\n            removeColumn(tr, rect, i);\n            if (i == rect.left) break;\n            rect.table = (rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc) as Node;\n            rect.map = TableMap.get(rect.table);\n        }\n        dispatch(tr);\n    }\n    return true;\n};\n\nexport function rowIsHeader(map: TableMap, table: Node, row: number) {\n    const headerCell = tableNodeTypes(table.type.schema).header_cell;\n    for (let col = 0; col < map.width; col++) {\n        const offset = map.map[col + row * map.width] as number;\n        if ((table.nodeAt(offset) as Node).type != headerCell) return false;\n    }\n    return true;\n}\n\nexport function addRow(tr: Transaction, { map, tableStart, table }: Rect, row: number) {\n    map = map as TableMap;\n    table = table as Node;\n    tableStart = tableStart as number;\n    let rowPos = tableStart;\n    for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize;\n    const cells = [];\n    let refRow: number | null = row > 0 ? -1 : 0;\n    if (rowIsHeader(map, table, row + refRow)) refRow = row == 0 || row == map.height ? null : 0;\n    for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n        // Covered by a rowspan cell\n        if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n            const pos = map.map[index] as number,\n                attrs = (table.nodeAt(pos) as Node).attrs;\n            tr.setNodeMarkup(tableStart + pos, null, setAttr(attrs, 'rowspan', attrs['rowspan'] + 1));\n            col += attrs['colspan'] - 1;\n        } else {\n            const type =\n                refRow == null\n                    ? tableNodeTypes(table.type.schema).cell\n                    : (table.nodeAt(map.map[index + refRow * map.width] as number) as Node).type;\n            cells.push(type.createAndFill());\n        }\n    }\n    tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n    return tr;\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Add a table row before the selection.\nexport function addRowBefore(state: EditorState, dispatch?: (tr: Transaction) => boolean) {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n        const rect = selectedRect(state);\n        dispatch(addRow(state.tr, rect, rect.top));\n    }\n    return true;\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Add a table row after the selection.\nexport function addRowAfter(state: EditorState, dispatch?: (tr: Transaction) => boolean) {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n        const rect = selectedRect(state);\n        dispatch(addRow(state.tr, rect, rect.bottom));\n    }\n    return true;\n}\n\nexport function removeRow(tr: Transaction, { map, tableStart, table }: Rect, row: number) {\n    map = map as TableMap;\n    table = table as Node;\n    tableStart = tableStart as number;\n    let rowPos = 0;\n    for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize;\n    const nextRow = rowPos + table.child(row).nodeSize;\n\n    const mapFrom = tr.mapping.maps.length;\n    tr.delete(rowPos + tableStart, nextRow + tableStart);\n\n    for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n        const pos = map.map[index] as number;\n        if (row > 0 && pos == map.map[index - map.width]) {\n            // If this cell starts in the row above, simply reduce its rowspan\n            const attrs = (table.nodeAt(pos) as Node).attrs;\n            tr.setNodeMarkup(\n                tr.mapping.slice(mapFrom).map(pos + tableStart),\n                null,\n                setAttr(attrs, 'rowspan', attrs['rowspan'] - 1),\n            );\n            col += attrs['colspan'] - 1;\n        } else if (row < map.width && pos == map.map[index + map.width]) {\n            // Else, if it continues in the row below, it has to be moved down\n            const cell = table.nodeAt(pos) as Node;\n            const copy = cell.type.create(setAttr(cell.attrs, 'rowspan', cell.attrs['rowspan'] - 1), cell.content);\n            const newPos = map.positionAt(row + 1, col, table);\n            tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n            col += cell.attrs['colspan'] - 1;\n        }\n    }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Remove the selected rows from a table.\nexport const deleteRow: Command = (state, dispatch) => {\n    if (!isInTable(state)) return false;\n    if (dispatch) {\n        const rect = selectedRect(state) as Required<Rect>,\n            tr = state.tr;\n        if (rect.top == 0 && rect.bottom == rect.map.height) return false;\n        for (let i = rect.bottom - 1; ; i--) {\n            removeRow(tr, rect, i);\n            if (i == rect.top) break;\n            rect.table = rect.tableStart ? (tr.doc.nodeAt(rect.tableStart - 1) as Node) : tr.doc;\n            rect.map = TableMap.get(rect.table);\n        }\n        dispatch(tr);\n    }\n    return true;\n};\n\nfunction isEmpty(cell: Node) {\n    const c = cell.content;\n    return c.childCount == 1 && (c.firstChild as Node).isTextblock && (c.firstChild as Node).childCount == 0;\n}\n\nfunction cellsOverlapRectangle({ width, height, map }: TableMap, rect: Rect) {\n    let indexTop = rect.top * width + rect.left,\n        indexLeft = indexTop;\n    let indexBottom = (rect.bottom - 1) * width + rect.left,\n        indexRight = indexTop + (rect.right - rect.left - 1);\n    for (let i = rect.top; i < rect.bottom; i++) {\n        if (\n            (rect.left > 0 && map[indexLeft] == map[indexLeft - 1]) ||\n            (rect.right < width && map[indexRight] == map[indexRight + 1])\n        )\n            return true;\n        indexLeft += width;\n        indexRight += width;\n    }\n    for (let i = rect.left; i < rect.right; i++) {\n        if (\n            (rect.top > 0 && map[indexTop] == map[indexTop - width]) ||\n            (rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n        )\n            return true;\n        indexTop++;\n        indexBottom++;\n    }\n    return false;\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Merge the selected cells into a single cell. Only available when\n// the selected cells' outline forms a rectangle.\nexport function mergeCells(state: EditorState, dispatch?: (tr: Transaction) => boolean) {\n    const sel = state.selection;\n    if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos) return false;\n    const rect = selectedRect(state) as Required<Rect>,\n        { map } = rect;\n    if (cellsOverlapRectangle(map as TableMap, rect)) return false;\n    if (dispatch) {\n        const tr = state.tr,\n            seen: Record<number, boolean> = {};\n        let content = Fragment.empty,\n            mergedPos,\n            mergedCell;\n        for (let row = rect.top; row < rect.bottom; row++) {\n            for (let col = rect.left; col < rect.right; col++) {\n                const cellPos = map.map[row * map.width + col] as number,\n                    cell = rect.table.nodeAt(cellPos) as Node;\n                if (seen[cellPos]) continue;\n                seen[cellPos] = true;\n                if (mergedPos == null) {\n                    mergedPos = cellPos;\n                    mergedCell = cell;\n                } else {\n                    if (!isEmpty(cell)) content = content.append(cell.content);\n                    const mapped = tr.mapping.map(cellPos + rect.tableStart);\n                    tr.delete(mapped, mapped + cell.nodeSize);\n                }\n            }\n        }\n        mergedCell = mergedCell as Node;\n        mergedPos = mergedPos as number;\n        tr.setNodeMarkup(\n            mergedPos + rect.tableStart,\n            null,\n            setAttr(\n                addColSpan(\n                    mergedCell.attrs,\n                    mergedCell.attrs['colspan'],\n                    rect.right - rect.left - mergedCell.attrs['colspan'],\n                ),\n                'rowspan',\n                rect.bottom - rect.top,\n            ),\n        );\n        if (content.size) {\n            const end = mergedPos + 1 + mergedCell.content.size;\n            const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n            tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n        }\n        tr.setSelection(new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart)));\n        dispatch(tr);\n    }\n    return true;\n}\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Split a selected cell, whose rowpan or colspan is greater than one,\n// into smaller cells. Use the first cell type for the new cells.\nexport function splitCell(state: EditorState, dispatch?: (tr: Transaction) => boolean) {\n    const nodeTypes = tableNodeTypes(state.schema);\n    return splitCellWithType(({ node }) => {\n        return nodeTypes[node.type.spec['tableRole']];\n    })(state, dispatch);\n}\n\n// :: (getCellType: ({ row: number, col: number, node: Node}) → NodeType) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Split a selected cell, whose rowpan or colspan is greater than one,\n// into smaller cells with the cell type (th, td) returned by getType function.\nexport function splitCellWithType(getCellType: (pos: { row: number; col: number; node: Node }) => NodeType) {\n    return (state: EditorState, dispatch?: (tr: Transaction) => boolean) => {\n        const sel = state.selection;\n        let cellNode, cellPos;\n        if (!(sel instanceof CellSelection)) {\n            cellNode = cellWrapping(sel.$from);\n            if (!cellNode) return false;\n            cellPos = (cellAround(sel.$from) as ResolvedPos).pos;\n        } else {\n            if (sel.$anchorCell.pos != sel.$headCell.pos) return false;\n            cellNode = sel.$anchorCell.nodeAfter as Node;\n            cellPos = sel.$anchorCell.pos;\n        }\n        if (cellNode.attrs['colspan'] == 1 && cellNode.attrs['rowspan'] == 1) {\n            return false;\n        }\n        if (dispatch) {\n            let baseAttrs = cellNode.attrs;\n            const attrs = [],\n                colwidth = baseAttrs['colwidth'];\n            if (baseAttrs['rowspan'] > 1) baseAttrs = setAttr(baseAttrs, 'rowspan', 1);\n            if (baseAttrs['colspan'] > 1) baseAttrs = setAttr(baseAttrs, 'colspan', 1);\n            const rect = selectedRect(state) as Required<Rect>,\n                tr = state.tr;\n            for (let i = 0; i < rect.right - rect.left; i++)\n                attrs.push(\n                    colwidth\n                        ? setAttr(baseAttrs, 'colwidth', colwidth && colwidth[i] ? [colwidth[i]] : null)\n                        : baseAttrs,\n                );\n            let lastCell;\n            for (let row = rect.top; row < rect.bottom; row++) {\n                let pos = rect.map.positionAt(row, rect.left, rect.table);\n                if (row == rect.top) pos += cellNode.nodeSize;\n                for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n                    if (col == rect.left && row == rect.top) continue;\n                    tr.insert(\n                        (lastCell = tr.mapping.map(pos + rect.tableStart, 1)),\n                        getCellType({ node: cellNode, row, col }).createAndFill(attrs[i]) as Node,\n                    );\n                }\n            }\n            tr.setNodeMarkup(cellPos, getCellType({ node: cellNode, row: rect.top, col: rect.left }), attrs[0]);\n            if (sel instanceof CellSelection) {\n                let pos: ResolvedPos | undefined = undefined;\n                if (lastCell) {\n                    pos = tr.doc.resolve(lastCell);\n                }\n                tr.setSelection(new CellSelection(tr.doc.resolve(sel.$anchorCell.pos), pos));\n            }\n            dispatch(tr);\n        }\n        return true;\n    };\n}\n\n// :: (string, any) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that sets the given attribute to the given value,\n// and is only available when the currently selected cell doesn't\n// already have that attribute set to that value.\nexport function setCellAttr<T>(name: string, value: T): Command {\n    return (state, dispatch) => {\n        if (!isInTable(state)) return false;\n        const $cell = selectionCell(state) as ResolvedPos;\n        if (($cell.nodeAfter as Node).attrs[name] === value) return false;\n        if (dispatch) {\n            const tr = state.tr;\n            if (state.selection instanceof CellSelection)\n                state.selection.forEachCell((node, pos) => {\n                    if (node.attrs[name] !== value) tr.setNodeMarkup(pos, null, setAttr(node.attrs, name, value));\n                });\n            else tr.setNodeMarkup($cell.pos, null, setAttr(($cell.nodeAfter as Node).attrs, name, value));\n            dispatch(tr);\n        }\n        return true;\n    };\n}\n\nfunction isHeaderEnabledByType(type: string, rect: Required<Rect>, types: Record<string, NodeSpec>) {\n    // Get cell positions for first row or first column\n    const cellPositions = rect.map.cellsInRect({\n        left: 0,\n        top: 0,\n        right: type == 'row' ? rect.map.width : 1,\n        bottom: type == 'column' ? rect.map.height : 1,\n    });\n\n    for (let i = 0; i < cellPositions.length; i++) {\n        const cell = rect.table.nodeAt(cellPositions[i] as number);\n        if (cell && cell.type !== types['header_cell']) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n// Toggles between row/column header and normal cells (Only applies to first row/column).\n// For deprecated behavior pass `useDeprecatedLogic` in options with true.\nexport function toggleHeader(type: string) {\n    return function (state: EditorState, dispatch?: (tr: Transaction) => boolean) {\n        if (!isInTable(state)) return false;\n        if (dispatch) {\n            const types = tableNodeTypes(state.schema);\n            const rect = selectedRect(state),\n                tr = state.tr;\n\n            const isHeaderRowEnabled = isHeaderEnabledByType('row', rect, types);\n            const isHeaderColumnEnabled = isHeaderEnabledByType('column', rect, types);\n\n            const isHeaderEnabled =\n                type === 'column' ? isHeaderRowEnabled : type === 'row' ? isHeaderColumnEnabled : false;\n\n            const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n\n            const cellsRect =\n                type == 'column'\n                    ? new Rect(0, selectionStartsAt, 1, rect.map.height)\n                    : type == 'row'\n                    ? new Rect(selectionStartsAt, 0, rect.map.width, 1)\n                    : rect;\n\n            const newType =\n                type == 'column'\n                    ? isHeaderColumnEnabled\n                        ? types.cell\n                        : types.header_cell\n                    : type == 'row'\n                    ? isHeaderRowEnabled\n                        ? types.cell\n                        : types.header_cell\n                    : types.cell;\n\n            rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n                const cellPos = relativeCellPos + rect.tableStart;\n                const cell = tr.doc.nodeAt(cellPos);\n\n                if (cell) {\n                    tr.setNodeMarkup(cellPos, newType, cell.attrs);\n                }\n            });\n\n            dispatch(tr);\n        }\n        return true;\n    };\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected row contains header cells.\nexport const toggleHeaderRow = toggleHeader('row');\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected column contains header cells.\nexport const toggleHeaderColumn = toggleHeader('column');\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected cells are header cells.\nexport const toggleHeaderCell = toggleHeader('cell');\n\nfunction findNextCell($cell: ResolvedPos, dir: number) {\n    if (dir < 0) {\n        const before = $cell.nodeBefore;\n        if (before) return $cell.pos - before.nodeSize;\n        for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n            const rowNode = $cell.node(-1).child(row);\n            if (rowNode.childCount) return rowEnd - 1 - (rowNode.lastChild as Node).nodeSize;\n            rowEnd -= rowNode.nodeSize;\n        }\n    } else {\n        if ($cell.index() < $cell.parent.childCount - 1) return $cell.pos + ($cell.nodeAfter as Node).nodeSize;\n        const table = $cell.node(-1);\n        for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n            const rowNode = table.child(row);\n            if (rowNode.childCount) return rowStart + 1;\n            rowStart += rowNode.nodeSize;\n        }\n    }\n    return;\n}\n\n// Returns a command for selecting the next (direction=1) or previous\n// (direction=-1) cell in a table.\nexport function goToNextCell(direction: number): Command {\n    return (state, dispatch) => {\n        if (!isInTable(state)) return false;\n        const cell = findNextCell(selectionCell(state) as ResolvedPos, direction);\n        if (cell == null) return false;\n        if (dispatch) {\n            const $cell = state.doc.resolve(cell);\n            dispatch(state.tr.setSelection(TextSelection.between($cell, moveCellForward($cell))).scrollIntoView());\n        }\n        return true;\n    };\n}\n\n// Deletes the table around the selection, if any.\nexport const deleteTable: Command = (state, dispatch) => {\n    const $pos = state.selection.$anchor;\n    for (let d = $pos.depth; d > 0; d--) {\n        const node = $pos.node(d);\n        if (node.type.spec['tableRole'] == 'table') {\n            if (dispatch) dispatch(state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView());\n            return true;\n        }\n    }\n    return false;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { cloneTr, findParentNode } from '@milkdown/prose';\nimport { Node as ProsemirrorNode, Schema } from '@milkdown/prose/model';\nimport { Selection, Transaction } from '@milkdown/prose/state';\n\nimport { CellSelection } from './plugin/cell-selection';\nimport { tableNodeTypes } from './plugin/schema';\nimport { Rect, TableMap } from './plugin/table-map';\n\nexport type CellPos = {\n    pos: number;\n    start: number;\n    node: ProsemirrorNode;\n};\n\nexport const findTable = (selection: Selection) =>\n    findParentNode((node) => node.type.spec['tableRole'] === 'table')(selection);\n\nexport const getCellsInColumn =\n    (columnIndex: number) =>\n    (selection: Selection): CellPos[] | undefined => {\n        const table = findTable(selection);\n        if (!table) return undefined;\n        const map = TableMap.get(table.node);\n        if (columnIndex < 0 || columnIndex >= map.width) {\n            return undefined;\n        }\n\n        return map\n            .cellsInRect({ left: columnIndex, right: columnIndex + 1, top: 0, bottom: map.height })\n            .map((pos) => {\n                const node = table.node.nodeAt(pos);\n                if (!node) return;\n                const start = pos + table.start;\n                return {\n                    pos: start,\n                    start: start + 1,\n                    node,\n                };\n            })\n            .filter((x): x is CellPos => x != null);\n    };\n\nexport const getCellsInRow =\n    (rowIndex: number) =>\n    (selection: Selection): CellPos[] | undefined => {\n        const table = findTable(selection);\n        if (!table) return undefined;\n        const map = TableMap.get(table.node);\n        if (rowIndex < 0 || rowIndex >= map.height) {\n            return undefined;\n        }\n\n        return map\n            .cellsInRect({ left: 0, right: map.width, top: rowIndex, bottom: rowIndex + 1 })\n            .map((pos) => {\n                const node = table.node.nodeAt(pos);\n                if (!node) return;\n                const start = pos + table.start;\n                return {\n                    pos: start,\n                    start: start + 1,\n                    node,\n                };\n            })\n            .filter((x): x is CellPos => x != null);\n    };\n\nexport const createTable = (schema: Schema, rowsCount = 3, colsCount = 3) => {\n    const { cell: tableCell, header_cell: tableHeader, row: tableRow, table } = tableNodeTypes(schema);\n\n    const cells = Array(colsCount)\n        .fill(0)\n        .map(() => tableCell.createAndFill(null) as ProsemirrorNode);\n\n    const headerCells = Array(colsCount)\n        .fill(0)\n        .map(() => tableHeader.createAndFill(null) as ProsemirrorNode);\n\n    const rows = Array(rowsCount)\n        .fill(0)\n        .map((_, i) => tableRow.create(null, i === 0 ? headerCells : cells));\n\n    return table.create(null, rows);\n};\n\nexport const selectLine = (type: 'row' | 'col') => (index: number) => (tr: Transaction) => {\n    const table = findTable(tr.selection);\n    const isRowSelection = type === 'row';\n    if (table) {\n        const map = TableMap.get(table.node);\n\n        // Check if the index is valid\n        if (index >= 0 && index < (isRowSelection ? map.height : map.width)) {\n            const lastCell = map.positionAt(\n                isRowSelection ? index : map.height - 1,\n                isRowSelection ? map.width - 1 : index,\n                table.node,\n            );\n            const $lastCell = tr.doc.resolve(table.start + lastCell);\n\n            const createCellSelection = isRowSelection ? CellSelection.rowSelection : CellSelection.colSelection;\n\n            const firstCell = map.positionAt(isRowSelection ? index : 0, isRowSelection ? 0 : index, table.node);\n            const $firstCell = tr.doc.resolve(table.start + firstCell);\n            return cloneTr(tr.setSelection(createCellSelection($lastCell, $firstCell) as unknown as Selection));\n        }\n    }\n    return tr;\n};\n\nexport const getCellsInTable = (selection: Selection) => {\n    const table = findTable(selection);\n    if (!table) {\n        return;\n    }\n    const map = TableMap.get(table.node);\n    const cells = map.cellsInRect({\n        left: 0,\n        right: map.width,\n        top: 0,\n        bottom: map.height,\n    });\n    return cells.map((nodePos) => {\n        const node = table.node.nodeAt(nodePos);\n        const pos = nodePos + table.start;\n        return { pos, start: pos + 1, node };\n    });\n};\n\nexport const selectTable = (tr: Transaction) => {\n    const cells = getCellsInTable(tr.selection);\n    if (cells && cells[0]) {\n        const $firstCell = tr.doc.resolve(cells[0].pos);\n        const last = cells[cells.length - 1];\n        if (last) {\n            const $lastCell = tr.doc.resolve(last.pos);\n            return cloneTr(tr.setSelection(new CellSelection($lastCell, $firstCell) as unknown as Selection));\n        }\n    }\n    return tr;\n};\n\nexport function addRowWithAlignment(tr: Transaction, { map, tableStart, table }: Required<Rect>, row: number) {\n    const rowPos = Array(row)\n        .fill(0)\n        .reduce((acc, _, i) => {\n            return acc + table.child(i).nodeSize;\n        }, tableStart);\n\n    const { cell: cellType, row: rowType } = tableNodeTypes(table.type.schema);\n\n    const cells = Array(map.width)\n        .fill(0)\n        .map((_, col) => {\n            const headerCol = table.nodeAt(map.map[col] as number);\n            return cellType.createAndFill({ alignment: headerCol?.attrs['alignment'] }) as ProsemirrorNode;\n        });\n\n    tr.insert(rowPos, rowType.create(null, cells));\n    return tr;\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorView } from '@milkdown/prose/view';\n\nimport { CellSelection } from '../plugin';\nimport { TableMap } from '../plugin/table-map';\nimport { Item } from './actions';\n\nexport const getCellSelection = (view: EditorView): CellSelection => view.state.selection as unknown as CellSelection;\n\nexport const isFirstRowSelected = (selection: CellSelection) => {\n    const map = TableMap.get(selection.$anchorCell.node(-1));\n    const start = selection.$anchorCell.start(-1);\n    const cells = map.cellsInRect({\n        left: 0,\n        right: map.width,\n        top: 0,\n        bottom: 1,\n    });\n    const selectedCells = map.cellsInRect(\n        map.rectBetween(selection.$anchorCell.pos - start, selection.$headCell.pos - start),\n    );\n\n    for (let i = 0, count = cells.length; i < count; i++) {\n        if (selectedCells.indexOf(cells[i] as number) === -1) {\n            return false;\n        }\n    }\n    return true;\n};\n\nexport const calculateItem = (actions: Record<string, Item>, view: EditorView) => {\n    Object.values(actions).forEach((item) => {\n        const disable = item.disable?.(view);\n        if (disable) {\n            item.$.classList.add('hide');\n            return;\n        }\n        item.$.classList.remove('hide');\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx, ThemeIcon, themeManagerCtx } from '@milkdown/core';\nimport { Command } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\n\nimport {\n    addColumnAfter,\n    addColumnBefore,\n    deleteColumn,\n    deleteRow,\n    deleteTable,\n    isInTable,\n    selectedRect,\n    setCellAttr,\n} from '../plugin';\nimport { addRowWithAlignment } from '../utils';\nimport { getCellSelection, isFirstRowSelected } from './helper';\n\nexport type Item = {\n    $: HTMLElement;\n    command: (e: Event, view: EditorView) => Command;\n    disable?: (view: EditorView) => boolean;\n};\n\nexport enum Action {\n    AddColLeft,\n    AddColRight,\n    AddRowTop,\n    AddRowBottom,\n    AlignLeft,\n    AlignCenter,\n    AlignRight,\n    Delete,\n}\n\nexport const createActions: (ctx: Ctx) => Record<Action, Item> = (ctx) => ({\n    [Action.AddColLeft]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'leftArrow')?.dom as HTMLElement,\n        command: () => addColumnBefore,\n        disable: (view) => !getCellSelection(view).isColSelection(),\n    },\n    [Action.AddColRight]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'rightArrow')?.dom as HTMLElement,\n        command: () => addColumnAfter,\n        disable: (view) => !getCellSelection(view).isColSelection(),\n    },\n    [Action.AddRowTop]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'upArrow')?.dom as HTMLElement,\n        command: () => (state, dispatch) => {\n            if (!isInTable(state)) return false;\n            if (dispatch) {\n                const rect = selectedRect(state);\n                dispatch(addRowWithAlignment(state.tr, rect, rect.top));\n            }\n            return true;\n        },\n        disable: (view) =>\n            !getCellSelection(view).isRowSelection() ||\n            getCellSelection(view).$head.parent.type.name === 'table_header',\n    },\n    [Action.AddRowBottom]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'downArrow')?.dom as HTMLElement,\n        command: () => (state, dispatch) => {\n            if (!isInTable(state)) return false;\n            if (dispatch) {\n                const rect = selectedRect(state);\n                dispatch(addRowWithAlignment(state.tr, rect, rect.bottom));\n            }\n            return true;\n        },\n        disable: (view) => !getCellSelection(view).isRowSelection(),\n    },\n    [Action.AlignLeft]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'alignLeft')?.dom as HTMLElement,\n        command: () => setCellAttr('alignment', 'left'),\n        disable: (view) => !getCellSelection(view).isColSelection(),\n    },\n    [Action.AlignCenter]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'alignCenter')?.dom as HTMLElement,\n        command: () => setCellAttr('alignment', 'center'),\n        disable: (view) => !getCellSelection(view).isColSelection(),\n    },\n    [Action.AlignRight]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'alignRight')?.dom as HTMLElement,\n        command: () => setCellAttr('alignment', 'right'),\n        disable: (view) => !getCellSelection(view).isColSelection(),\n    },\n    [Action.Delete]: {\n        $: ctx.get(themeManagerCtx).get(ThemeIcon, 'delete')?.dom as HTMLElement,\n        command: (_, view) => {\n            const selection = getCellSelection(view);\n            const isCol = selection.isColSelection();\n            const isRow = selection.isRowSelection();\n            if (isCol && isRow) {\n                return deleteTable;\n            }\n\n            if (isCol) {\n                return deleteColumn;\n            }\n\n            return deleteRow;\n        },\n        disable: (view) => {\n            const selection = getCellSelection(view);\n            if (selection.isRowSelection()) {\n                if (selection.isColSelection()) {\n                    return false;\n                }\n                return isFirstRowSelected(selection);\n            }\n            return false;\n        },\n    },\n});\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { missingRootElement } from '@milkdown/exception';\nimport { calculateNodePosition } from '@milkdown/prose';\nimport { EditorView } from '@milkdown/prose/view';\n\nimport { CellSelection } from '../plugin';\n\nexport const calculatePosition = (view: EditorView, dom: HTMLElement) => {\n    const { selection } = view.state as unknown as { selection: CellSelection };\n    const isCol = selection.isColSelection();\n    const isRow = selection.isRowSelection();\n\n    calculateNodePosition(view, dom, (selected, target, parent) => {\n        const $editor = dom.parentElement;\n        if (!$editor) {\n            throw missingRootElement();\n        }\n        let left = !isRow\n            ? selected.left - parent.left + (selected.width - target.width) / 2\n            : selected.left - parent.left - target.width / 2 - 8;\n        const top = selected.top - parent.top - target.height - (isCol ? 14 : 0) - 14 + $editor.scrollTop;\n\n        if (left < 0) {\n            left = 0;\n        }\n        return [top, left];\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nexport enum ToolTipPos {\n    Left = 'Left',\n    Top = 'Top',\n    Point = 'Point',\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion, getPalette, ThemeBorder, ThemeManager, ThemeShadow, ThemeSize } from '@milkdown/core';\n\nexport const injectStyle = (themeManager: ThemeManager, { css, injectGlobal }: Emotion) => {\n    const palette = getPalette(themeManager);\n    const radius = themeManager.get(ThemeSize, 'radius');\n    const lineWidth = themeManager.get(ThemeSize, 'lineWidth');\n\n    injectGlobal`\n        .milkdown {\n            .tableWrapper {\n                table {\n                    width: calc(100% - 32px) !important;\n                    margin: 16px 0 16px 16px !important;\n\n                    .milkdown-cell-left,\n                    .milkdown-cell-point,\n                    .milkdown-cell-top {\n                        position: absolute;\n\n                        &::after {\n                            cursor: pointer;\n                            position: absolute;\n                            top: 0;\n                            left: 0;\n                            height: 100%;\n                            width: 100%;\n                            display: block;\n                            transition: all 0.2s ease-in-out;\n                            background: ${palette('secondary', 0.12)};\n                            content: '';\n                        }\n\n                        &:hover::after {\n                            background: ${palette('secondary', 0.38)};\n                        }\n                    }\n\n                    .milkdown-cell-left {\n                        left: -14px;\n                        top: 0;\n                        bottom: 0;\n                        width: 8px;\n                    }\n\n                    .milkdown-cell-top {\n                        left: 0;\n                        right: 0;\n                        top: -14px;\n                        height: 8px;\n                    }\n\n                    .milkdown-cell-point {\n                        left: -18px;\n                        top: -18px;\n                        width: 16px;\n                        height: 16px;\n\n                        .icon {\n                            position: absolute;\n                            top: 0;\n                            bottom: 0;\n                            left: 0;\n                            right: 0;\n                        }\n                    }\n                }\n            }\n        }\n    `;\n\n    return css`\n        display: inline-flex;\n        cursor: pointer;\n        z-index: 2;\n\n        justify-content: space-evenly;\n\n        position: absolute;\n\n        border-radius: ${radius};\n\n        ${themeManager.get(ThemeBorder, undefined)};\n        ${themeManager.get(ThemeShadow, undefined)};\n\n        overflow: hidden;\n        background: ${palette('surface')};\n\n        .icon {\n            position: relative;\n            color: ${palette('solid', 0.87)};\n\n            width: 48px;\n            line-height: 48px;\n            text-align: center;\n            transition: all 0.4s ease-in-out;\n\n            &:hover {\n                background-color: ${palette('secondary', 0.12)};\n            }\n\n            &.active {\n                color: ${palette('primary')};\n            }\n\n            &:not(:last-child)::after {\n                content: '';\n                position: absolute;\n                right: 0;\n                top: 0;\n                width: ${lineWidth};\n                bottom: 0;\n                background: ${palette('line')};\n            }\n        }\n\n        &.hide,\n        .hide {\n            display: none;\n        }\n    `;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, ThemeIcon, themeManagerCtx } from '@milkdown/core';\nimport { Decoration } from '@milkdown/prose/view';\n\nimport { CellPos, selectLine, selectTable } from '../utils';\nimport { ToolTipPos } from './constant';\n\nconst calculateClassName = (pos: ToolTipPos) => {\n    switch (pos) {\n        case ToolTipPos.Left: {\n            return 'milkdown-cell-left';\n        }\n        case ToolTipPos.Top: {\n            return 'milkdown-cell-top';\n        }\n        case ToolTipPos.Point:\n        default: {\n            return 'milkdown-cell-point';\n        }\n    }\n};\n\nexport function createWidget(ctx: Ctx, cell: CellPos, pos: ToolTipPos.Point): Decoration;\nexport function createWidget(ctx: Ctx, cell: CellPos, pos: ToolTipPos.Left, index: number): Decoration;\nexport function createWidget(ctx: Ctx, cell: CellPos, pos: ToolTipPos.Top, index: number): Decoration;\nexport function createWidget(ctx: Ctx, cell: CellPos, pos: ToolTipPos, index = 0) {\n    return Decoration.widget(cell.pos + 1, (view) => {\n        const div = document.createElement('div');\n        div.classList.add(calculateClassName(pos));\n        if (pos === ToolTipPos.Point) {\n            div.appendChild(ctx.get(themeManagerCtx).get(ThemeIcon, 'select')?.dom as HTMLElement);\n        }\n        div.addEventListener('mousedown', (e) => {\n            if (!view) return;\n\n            e.preventDefault();\n            switch (pos) {\n                case ToolTipPos.Point: {\n                    view.dispatch(selectTable(view.state.tr));\n                    return;\n                }\n                case ToolTipPos.Left: {\n                    view.dispatch(selectLine('row')(index)(view.state.tr));\n                    return;\n                }\n                case ToolTipPos.Top: {\n                    view.dispatch(selectLine('col')(index)(view.state.tr));\n                    return;\n                }\n            }\n        });\n        return div;\n    });\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx } from '@milkdown/core';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { Decoration, DecorationSet } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport { CellSelection } from '../plugin';\nimport { CellPos, getCellsInColumn, getCellsInRow } from '../utils';\nimport { createActions } from './actions';\nimport { calculatePosition } from './calc-pos';\nimport { ToolTipPos } from './constant';\nimport { calculateItem } from './helper';\nimport { injectStyle } from './style';\nimport { createWidget } from './widget';\n\nexport const key = 'MILKDOWN_TABLE';\n\nexport const operatorPlugin = (ctx: Ctx, utils: ThemeUtils) => {\n    return new Plugin({\n        key: new PluginKey('MILKDOWN_TABLE_OP'),\n        props: {\n            decorations: (state) => {\n                const decorations: Decoration[] = [];\n                const leftCells = getCellsInColumn(0)(state.selection);\n                if (!leftCells) return null;\n                const topCells = getCellsInRow(0)(state.selection);\n                if (!topCells) return null;\n\n                const [topLeft] = leftCells;\n\n                decorations.push(createWidget(ctx, topLeft as CellPos, ToolTipPos.Point));\n                leftCells.forEach((cell, i) => {\n                    decorations.push(createWidget(ctx, cell, ToolTipPos.Left, i));\n                });\n                topCells.forEach((cell, i) => {\n                    decorations.push(createWidget(ctx, cell, ToolTipPos.Top, i));\n                });\n\n                return DecorationSet.create(state.doc, decorations);\n            },\n        },\n        view: (editorView) => {\n            const items = Object.fromEntries(Object.entries(createActions(ctx)).filter(([, value]) => value.$ != null));\n            const tooltip = document.createElement('div');\n            utils.themeManager.onFlush(() => {\n                const style = utils.getStyle((emotion) => injectStyle(utils.themeManager, emotion));\n                if (style) {\n                    tooltip.classList.add(style);\n                }\n            });\n            tooltip.classList.add('table-tooltip', 'hide');\n            Object.values(items).forEach(({ $ }) => tooltip.appendChild($));\n            editorView.dom.parentNode?.appendChild(tooltip);\n\n            const listener = (e: Event) => {\n                if (!editorView) return;\n                e.stopPropagation();\n                e.preventDefault();\n                Object.values(items).forEach(({ $, command }) => {\n                    if ($.contains(e.target as Element)) {\n                        command(e, editorView)(editorView.state, editorView.dispatch, editorView);\n                    }\n                });\n            };\n\n            const hide = () => {\n                tooltip.classList.add('hide');\n            };\n\n            tooltip.addEventListener('mousedown', listener);\n\n            return {\n                update: (view, prevState) => {\n                    const state = view.state;\n\n                    if (prevState?.doc.eq(state.doc) && prevState.selection.eq(state.selection)) return;\n\n                    const isCellSelection = state.selection instanceof CellSelection;\n\n                    if (!isCellSelection || !view.editable) {\n                        hide();\n                        return;\n                    }\n\n                    calculateItem(items, view);\n                    if (Object.values(items).every(({ $ }) => $.classList.contains('hide'))) {\n                        hide();\n                        return;\n                    }\n                    tooltip.classList.remove('hide');\n                    calculatePosition(view, tooltip);\n                },\n                destroy: () => {\n                    tooltip.removeEventListener('mousedown', listener);\n                    tooltip.remove();\n                },\n            };\n        },\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { browser } from '@milkdown/prose';\nimport { Node } from '@milkdown/prose/model';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\n\nimport { isInTable } from './util';\n\nconst isEmptyParagraph = (node: Node) => {\n    return node.type.name === 'paragraph' && node.nodeSize === 2;\n};\n\nconst isParagraph = (node: Node) => {\n    return node.type.name === 'paragraph';\n};\n\nconst pluginKey = new PluginKey('plugin_autoInsertZeroSpace');\n\nexport const autoInsertZeroSpace = () => {\n    return new Plugin({\n        key: pluginKey,\n        props: {\n            handleDOMEvents: {\n                compositionstart(view) {\n                    const { state, dispatch } = view;\n                    const { tr, selection } = state;\n                    const { $from } = selection;\n                    if (browser.safari && isInTable(state) && selection.empty && isEmptyParagraph($from.parent)) {\n                        dispatch(tr.insertText('\\u2060', $from.start()));\n                    }\n                    return false;\n                },\n                compositionend(view) {\n                    const { state, dispatch } = view;\n                    const { tr, selection } = state;\n                    const { $from } = selection;\n\n                    if (\n                        browser.safari &&\n                        isInTable(state) &&\n                        selection.empty &&\n                        isParagraph($from.parent) &&\n                        $from.parent.textContent.startsWith('\\u2060')\n                    ) {\n                        dispatch(tr.delete($from.start(), $from.start() + 1));\n                    }\n                    return false;\n                },\n            },\n        },\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Node } from '@milkdown/prose/model';\nimport { NodeView } from '@milkdown/prose/view';\n\n/* Copyright 2021, Milkdown by Mirone. */\nexport class TableView implements NodeView {\n    public dom: HTMLElement;\n    public contentDOM: HTMLElement;\n    public table: HTMLTableElement;\n    public colgroup: HTMLTableColElement;\n\n    constructor(public node: Node, public cellMinWidth: number) {\n        this.node = node;\n        this.cellMinWidth = cellMinWidth;\n        this.dom = document.createElement('div');\n        this.dom.className = 'tableWrapper';\n        this.table = this.dom.appendChild(document.createElement('table'));\n        this.colgroup = this.table.appendChild(document.createElement('colgroup'));\n        updateColumns(node, this.colgroup, this.table, cellMinWidth);\n        this.contentDOM = this.table.appendChild(document.createElement('tbody'));\n    }\n\n    update(node: Node) {\n        if (node.type != this.node.type) return false;\n        this.node = node;\n        updateColumns(node, this.colgroup, this.table, this.cellMinWidth);\n        return true;\n    }\n\n    ignoreMutation(record: MutationRecord) {\n        return record.type == 'attributes' && (record.target == this.table || this.colgroup.contains(record.target));\n    }\n}\n\nexport function updateColumns(\n    node: Node,\n    colgroup: HTMLTableColElement,\n    table: HTMLTableElement,\n    cellMinWidth: number,\n    overrideCol?: number,\n    overrideValue?: number,\n) {\n    let totalWidth = 0,\n        fixedWidth = true;\n    let nextDOM = colgroup.firstChild;\n    const row = node.firstChild as Node;\n    for (let i = 0, col = 0; i < row.childCount; i++) {\n        const { colspan, colwidth } = row.child(i).attrs;\n        for (let j = 0; j < colspan; j++, col++) {\n            const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n            const cssWidth = hasWidth ? hasWidth + 'px' : '';\n            totalWidth += hasWidth || cellMinWidth;\n            if (!hasWidth) fixedWidth = false;\n            if (!nextDOM) {\n                colgroup.appendChild(document.createElement('col')).style.width = cssWidth;\n            } else {\n                if ((nextDOM as HTMLElement).style.width != cssWidth) (nextDOM as HTMLElement).style.width = cssWidth;\n                nextDOM = nextDOM.nextSibling;\n            }\n        }\n    }\n\n    while (nextDOM) {\n        const after = nextDOM.nextSibling;\n        nextDOM.parentNode?.removeChild(nextDOM);\n        nextDOM = after;\n    }\n\n    if (fixedWidth) {\n        table.style.width = totalWidth + 'px';\n        table.style.minWidth = '';\n    } else {\n        table.style.width = '';\n        table.style.minWidth = totalWidth + 'px';\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Attrs, Node } from '@milkdown/prose/model';\nimport { EditorState, Plugin, PluginKey, Transaction } from '@milkdown/prose/state';\nimport { Decoration, DecorationSet, EditorView } from '@milkdown/prose/view';\n\nimport { tableNodeTypes } from './schema';\nimport { TableMap } from './table-map';\nimport { TableView, updateColumns } from './table-view';\nimport { cellAround, pointsAtCell, setAttr } from './util';\n\nexport const key = new PluginKey('tableColumnResizing');\n\nexport function columnResizing({\n    handleWidth = 5,\n    cellMinWidth = 25,\n    View = TableView,\n    lastColumnResizable = true,\n} = {}) {\n    const plugin = new Plugin({\n        key,\n        state: {\n            init(this: Plugin, _, state) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this.spec.props!.nodeViews![tableNodeTypes(state.schema).table.name] = (node) =>\n                    new View(node, cellMinWidth);\n                return new ResizeState(-1, false);\n            },\n            apply(tr, prev) {\n                return prev.apply(tr);\n            },\n        },\n        props: {\n            attributes(state) {\n                const pluginState = key.getState(state);\n                return pluginState.activeHandle > -1 ? { class: 'resize-cursor' } : (undefined as unknown as Attrs);\n            },\n\n            handleDOMEvents: {\n                mousemove(view, event) {\n                    handleMouseMove(view, event as MouseEvent, handleWidth, lastColumnResizable);\n                },\n                mouseleave(view) {\n                    handleMouseLeave(view);\n                },\n                mousedown(view, event) {\n                    handleMouseDown(view, event as MouseEvent, cellMinWidth);\n                },\n            },\n\n            decorations(state) {\n                const pluginState = key.getState(state);\n                if (pluginState.activeHandle > -1) return handleDecorations(state, pluginState.activeHandle);\n\n                return null;\n            },\n\n            nodeViews: {},\n        },\n    });\n    return plugin;\n}\n\nclass ResizeState {\n    constructor(public activeHandle: number, public dragging: null | boolean) {\n        this.activeHandle = activeHandle;\n        this.dragging = dragging;\n    }\n\n    apply(this: ResizeState, tr: Transaction) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let state = this;\n        const action = tr.getMeta(key);\n        if (action && action.setHandle != null) return new ResizeState(action.setHandle, null);\n        if (action && action.setDragging !== undefined) return new ResizeState(state.activeHandle, action.setDragging);\n        if (state.activeHandle > -1 && tr.docChanged) {\n            let handle = tr.mapping.map(state.activeHandle, -1);\n            if (!pointsAtCell(tr.doc.resolve(handle))) handle = 0;\n            state = new ResizeState(handle, state.dragging);\n        }\n        return state;\n    }\n}\n\nfunction handleMouseMove(view: EditorView, event: MouseEvent, handleWidth: number, lastColumnResizable: boolean) {\n    const pluginState = key.getState(view.state);\n\n    if (!pluginState.dragging) {\n        const target = domCellAround(event.target as Element);\n        let cell = -1;\n        if (target) {\n            const { left, right } = target.getBoundingClientRect();\n            if (event.clientX - left <= handleWidth) cell = edgeCell(view, event, 'left');\n            else if (right - event.clientX <= handleWidth) cell = edgeCell(view, event, 'right');\n        }\n\n        if (cell != pluginState.activeHandle) {\n            if (!lastColumnResizable && cell !== -1) {\n                const $cell = view.state.doc.resolve(cell);\n                const table = $cell.node(-1),\n                    map = TableMap.get(table),\n                    start = $cell.start(-1);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const col = map.colCount($cell.pos - start) + $cell.nodeAfter!.attrs['colspan'] - 1;\n\n                if (col == map.width - 1) {\n                    return;\n                }\n            }\n\n            updateHandle(view, cell);\n        }\n    }\n}\n\nfunction handleMouseLeave(view: EditorView) {\n    const pluginState = key.getState(view.state);\n    if (pluginState.activeHandle > -1 && !pluginState.dragging) updateHandle(view, -1);\n}\n\nfunction handleMouseDown(view: EditorView, event: MouseEvent, cellMinWidth: number) {\n    const pluginState = key.getState(view.state);\n    if (pluginState.activeHandle == -1 || pluginState.dragging) return false;\n\n    const cell = view.state.doc.nodeAt(pluginState.activeHandle) as Node;\n    const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n    view.dispatch(\n        view.state.tr.setMeta(key, {\n            setDragging: { startX: event.clientX, startWidth: width },\n        }),\n    );\n\n    function finish(event: MouseEvent) {\n        window.removeEventListener('mouseup', finish);\n        window.removeEventListener('mousemove', move);\n        const pluginState = key.getState(view.state);\n        if (pluginState.dragging) {\n            updateColumnWidth(view, pluginState.activeHandle, draggedWidth(pluginState.dragging, event, cellMinWidth));\n            view.dispatch(view.state.tr.setMeta(key, { setDragging: null }));\n        }\n    }\n    function move(event: MouseEvent) {\n        if (!event.which) return finish(event);\n        const pluginState = key.getState(view.state);\n        const dragged = draggedWidth(pluginState.dragging, event, cellMinWidth);\n        displayColumnWidth(view, pluginState.activeHandle, dragged, cellMinWidth);\n    }\n\n    window.addEventListener('mouseup', finish);\n    window.addEventListener('mousemove', move);\n    event.preventDefault();\n    return true;\n}\n\nfunction currentColWidth(view: EditorView, cellPos: number, { colspan, colwidth }: Attrs) {\n    const width = colwidth && colwidth[colwidth.length - 1];\n    if (width) return width;\n    const dom = view.domAtPos(cellPos);\n    const node = dom.node.childNodes[dom.offset] as HTMLElement;\n    let domWidth = node.offsetWidth,\n        parts = colspan;\n    if (colwidth)\n        for (let i = 0; i < colspan; i++)\n            if (colwidth[i]) {\n                domWidth -= colwidth[i];\n                parts--;\n            }\n    return domWidth / parts;\n}\n\nfunction domCellAround(target: Element | null) {\n    while (target && target.nodeName != 'TD' && target.nodeName != 'TH')\n        target = target.classList.contains('ProseMirror') ? null : (target.parentNode as Element);\n    return target;\n}\n\nfunction edgeCell(view: EditorView, event: MouseEvent, side: 'left' | 'right') {\n    const found = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (!found) return -1;\n    const { pos } = found;\n    const $cell = cellAround(view.state.doc.resolve(pos));\n    if (!$cell) return -1;\n    if (side == 'right') return $cell.pos;\n    const map = TableMap.get($cell.node(-1)),\n        start = $cell.start(-1);\n    const index = map.map.indexOf($cell.pos - start);\n    return index % map.width == 0 ? -1 : start + (map.map[index - 1] as number);\n}\n\nfunction draggedWidth(dragging: { startX: number; startWidth: number }, event: MouseEvent, cellMinWidth: number) {\n    const offset = event.clientX - dragging.startX;\n    return Math.max(cellMinWidth, dragging.startWidth + offset);\n}\n\nfunction updateHandle(view: EditorView, value: number) {\n    view.dispatch(view.state.tr.setMeta(key, { setHandle: value }));\n}\n\nfunction updateColumnWidth(view: EditorView, cell: number, width: number) {\n    const $cell = view.state.doc.resolve(cell);\n    const table = $cell.node(-1),\n        map = TableMap.get(table),\n        start = $cell.start(-1);\n    const col = map.colCount($cell.pos - start) + ($cell.nodeAfter as Node).attrs['colspan'] - 1;\n    const tr = view.state.tr;\n    for (let row = 0; row < map.height; row++) {\n        const mapIndex = row * map.width + col;\n        // Rowspanning cell that has already been handled\n        if (row && map.map[mapIndex] == map.map[mapIndex - map.width]) continue;\n        const pos = map.map[mapIndex] as number,\n            { attrs } = table.nodeAt(pos) as Node;\n        const index = attrs['colspan'] == 1 ? 0 : col - map.colCount(pos);\n        if (attrs['colwidth'] && attrs['colwidth'][index] == width) continue;\n        const colwidth = attrs['colwidth'] ? attrs['colwidth'].slice() : zeroes(attrs['colspan']);\n        colwidth[index] = width;\n        tr.setNodeMarkup(start + pos, null, setAttr(attrs, 'colwidth', colwidth));\n    }\n    if (tr.docChanged) view.dispatch(tr);\n}\n\nfunction displayColumnWidth(view: EditorView, cell: number, width: number, cellMinWidth: number) {\n    const $cell = view.state.doc.resolve(cell);\n    const table = $cell.node(-1),\n        start = $cell.start(-1);\n    const col = TableMap.get(table).colCount($cell.pos - start) + ($cell.nodeAfter as Node).attrs['colspan'] - 1;\n    let dom = view.domAtPos($cell.start(-1)).node as HTMLElement;\n    while (dom.nodeName != 'TABLE') dom = dom.parentNode as HTMLElement;\n    updateColumns(table, dom.firstChild as HTMLTableColElement, dom as HTMLTableElement, cellMinWidth, col, width);\n}\n\nfunction zeroes(n: number) {\n    const result = [];\n    for (let i = 0; i < n; i++) result.push(0);\n    return result;\n}\n\nfunction handleDecorations(state: EditorState, cell: number) {\n    const decorations = [];\n    const $cell = state.doc.resolve(cell);\n    const table = $cell.node(-1),\n        map = TableMap.get(table),\n        start = $cell.start(-1);\n    const col = map.colCount($cell.pos - start) + ($cell.nodeAfter as Node).attrs['colspan'];\n    for (let row = 0; row < map.height; row++) {\n        const index = col + row * map.width - 1;\n        // For positions that are have either a different cell or the end\n        // of the table to their right, and either the top of the table or\n        // a different cell above them, add a decoration\n        if (\n            (col == map.width || map.map[index] != map.map[index + 1]) &&\n            (row == 0 || map.map[index - 1] != map.map[index - 1 - map.width])\n        ) {\n            const cellPos = map.map[index] as number;\n            const pos = start + cellPos + (table.nodeAt(cellPos) as Node).nodeSize - 1;\n            const dom = document.createElement('div');\n            dom.className = 'column-resize-handle';\n            decorations.push(Decoration.widget(pos, dom));\n        }\n    }\n    return DecorationSet.create(state.doc, decorations);\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Fragment, Node, NodeType, Schema, Slice } from '@milkdown/prose/model';\nimport { EditorState, Transaction } from '@milkdown/prose/state';\nimport { Transform } from '@milkdown/prose/transform';\n\nimport { CellSelection } from './cell-selection';\nimport { tableNodeTypes } from './schema';\nimport { Rect, TableMap } from './table-map';\nimport { removeColSpan, setAttr } from './util';\n\n// Utilities to help with copying and pasting table cells\n\n// : (Slice) → ?{width: number, height: number, rows: [Fragment]}\n// Get a rectangular area of cells from a slice, or null if the outer\n// nodes of the slice aren't table cells or rows.\nexport function pastedCells(slice: Slice) {\n    if (!slice.size) return null;\n    let { content, openStart, openEnd } = slice;\n    while (\n        content.childCount == 1 &&\n        ((openStart > 0 && openEnd > 0) || (content.firstChild as Node).type.spec['tableRole'] == 'table')\n    ) {\n        openStart--;\n        openEnd--;\n        content = (content.firstChild as Node).content;\n    }\n    const first = content.firstChild as Node,\n        role = first.type.spec['tableRole'];\n    const schema = first.type.schema,\n        rows = [];\n    if (role == 'row') {\n        for (let i = 0; i < content.childCount; i++) {\n            let cells = content.child(i).content;\n            const left = i ? 0 : Math.max(0, openStart - 1);\n            const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n            if (left || right) cells = fitSlice(tableNodeTypes(schema).row, new Slice(cells, left, right)).content;\n            rows.push(cells);\n        }\n    } else if (role == 'cell' || role == 'header_cell') {\n        rows.push(\n            openStart || openEnd\n                ? fitSlice(tableNodeTypes(schema).row, new Slice(content, openStart, openEnd)).content\n                : content,\n        );\n    } else {\n        return null;\n    }\n    return ensureRectangular(schema, rows);\n}\n\n// : (Schema, [Fragment]) → {width: number, height: number, rows: [Fragment]}\n// Compute the width and height of a set of cells, and make sure each\n// row has the same number of cells.\nexport type R = { width: number; height: number; rows: Fragment[] };\nfunction ensureRectangular(schema: Schema, rows: Fragment[]): R {\n    const widths: number[] = [];\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i] as Fragment;\n        for (let j = row.childCount - 1; j >= 0; j--) {\n            const { rowspan, colspan } = row.child(j).attrs;\n            for (let r = i; r < i + rowspan; r++) widths[r] = (widths[r] || 0) + colspan;\n        }\n    }\n    let width = 0;\n    for (let r = 0; r < widths.length; r++) width = Math.max(width, widths[r] as number);\n    for (let r = 0; r < widths.length; r++) {\n        if (r >= rows.length) rows.push(Fragment.empty);\n        if ((widths[r] as number) < width) {\n            const empty = tableNodeTypes(schema).cell.createAndFill(),\n                cells = [];\n            for (let i = widths[r] as number; i < width; i++) cells.push(empty);\n            rows[r] = (rows[r] as Fragment).append(Fragment.from(cells));\n        }\n    }\n    return { height: rows.length, width, rows };\n}\n\nexport function fitSlice(nodeType: NodeType, slice: Slice) {\n    const node = nodeType.createAndFill() as Node;\n    const tr = new Transform(node).replace(0, node.content.size, slice);\n    return tr.doc;\n}\n\n// Clip or extend (repeat) the given set of cells to cover the given\n// width and height. Will clip rowspan/colspan cells at the edges when\n// they stick out.\nexport function clipCells({ width, height, rows }: R, newWidth: number, newHeight: number): R {\n    if (width != newWidth) {\n        const added: number[] = [],\n            newRows: Fragment[] = [];\n        for (let row = 0; row < rows.length; row++) {\n            const frag = rows[row] as Fragment,\n                cells = [];\n            for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n                let cell = frag.child(i % frag.childCount);\n                if (col + cell.attrs['colspan'] > newWidth)\n                    cell = cell.type.create(\n                        removeColSpan(cell.attrs, cell.attrs['colspan'], col + cell.attrs['colspan'] - newWidth),\n                        cell.content,\n                    );\n                cells.push(cell);\n                col += cell.attrs['colspan'];\n                for (let j = 1; j < cell.attrs['rowspan']; j++)\n                    added[row + j] = (added[row + j] || 0) + cell.attrs['colspan'];\n            }\n            newRows.push(Fragment.from(cells));\n        }\n        rows = newRows;\n        width = newWidth;\n    }\n\n    if (height != newHeight) {\n        const newRows = [];\n        for (let row = 0, i = 0; row < newHeight; row++, i++) {\n            const cells = [],\n                source = rows[i % height] as Fragment;\n            for (let j = 0; j < source.childCount; j++) {\n                let cell = source.child(j);\n                if (row + cell.attrs['rowspan'] > newHeight)\n                    cell = cell.type.create(\n                        setAttr(cell.attrs, 'rowspan', Math.max(1, newHeight - cell.attrs['rowspan'])),\n                        cell.content,\n                    );\n                cells.push(cell);\n            }\n            newRows.push(Fragment.from(cells));\n        }\n        rows = newRows;\n        height = newHeight;\n    }\n\n    return { width, height, rows };\n}\n\n// Make sure a table has at least the given width and height. Return\n// true if something was changed.\nfunction growTable(\n    tr: Transaction,\n    map: TableMap,\n    table: Node,\n    start: number,\n    width: number,\n    height: number,\n    mapFrom: number,\n) {\n    const schema = tr.doc.type.schema,\n        types = tableNodeTypes(schema);\n    let empty, emptyHead;\n    if (width > map.width) {\n        for (let row = 0, rowEnd = 0; row < map.height; row++) {\n            const rowNode = table.child(row);\n            rowEnd += rowNode.nodeSize;\n            const cells = [];\n            let add;\n            if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n                add = empty || (empty = types.cell.createAndFill());\n            else add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n            for (let i = map.width; i < width; i++) cells.push(add);\n            tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n        }\n    }\n    if (height > map.height) {\n        const cells = [];\n        for (let i = 0, start = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n            const header =\n                i >= map.width ? false : (table.nodeAt(map.map[start + i] as number) as Node).type == types.header_cell;\n            cells.push(\n                header\n                    ? emptyHead || (emptyHead = types.header_cell.createAndFill())\n                    : empty || (empty = types.cell.createAndFill()),\n            );\n        }\n\n        const emptyRow = types.row.create(null, Fragment.from(cells)),\n            rows = [];\n        for (let i = map.height; i < height; i++) rows.push(emptyRow);\n        tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n    }\n    return !!(empty || emptyHead);\n}\n\n// Make sure the given line (left, top) to (right, top) doesn't cross\n// any rowspan cells by splitting cells that cross it. Return true if\n// something changed.\nfunction isolateHorizontal(\n    tr: Transaction,\n    map: TableMap,\n    table: Node,\n    start: number,\n    left: number,\n    right: number,\n    top: number,\n    mapFrom: number,\n) {\n    if (top == 0 || top == map.height) return false;\n    let found = false;\n    for (let col = left; col < right; col++) {\n        const index = top * map.width + col,\n            pos = map.map[index] as number;\n        if (map.map[index - map.width] == pos) {\n            found = true;\n            const cell = table.nodeAt(pos) as Node;\n            const { top: cellTop, left: cellLeft } = map.findCell(pos);\n            tr.setNodeMarkup(\n                tr.mapping.slice(mapFrom).map(pos + start),\n                null,\n                setAttr(cell.attrs, 'rowspan', top - cellTop),\n            );\n            tr.insert(\n                tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n                cell.type.createAndFill(setAttr(cell.attrs, 'rowspan', cellTop + cell.attrs['rowspan'] - top)) as Node,\n            );\n            col += cell.attrs['colspan'] - 1;\n        }\n    }\n    return found;\n}\n\n// Make sure the given line (left, top) to (left, bottom) doesn't\n// cross any colspan cells by splitting cells that cross it. Return\n// true if something changed.\nfunction isolateVertical(\n    tr: Transaction,\n    map: TableMap,\n    table: Node,\n    start: number,\n    top: number,\n    bottom: number,\n    left: number,\n    mapFrom: number,\n) {\n    if (left == 0 || left == map.width) return false;\n    let found = false;\n    for (let row = top; row < bottom; row++) {\n        const index = row * map.width + left,\n            pos = map.map[index] as number;\n        if (map.map[index - 1] == pos) {\n            found = true;\n            const cell = table.nodeAt(pos) as Node,\n                cellLeft = map.colCount(pos);\n            const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n            tr.setNodeMarkup(\n                updatePos,\n                null,\n                removeColSpan(cell.attrs, left - cellLeft, cell.attrs['colspan'] - (left - cellLeft)),\n            );\n            tr.insert(\n                updatePos + cell.nodeSize,\n                cell.type.createAndFill(removeColSpan(cell.attrs, 0, left - cellLeft)) as Node,\n            );\n            row += cell.attrs['rowspan'] - 1;\n        }\n    }\n    return found;\n}\n\n// Insert the given set of cells (as returned by `pastedCells`) into a\n// table, at the position pointed at by rect.\nexport function insertCells(\n    state: EditorState,\n    dispatch: (tr: Transaction) => void,\n    tableStart: number,\n    rect: Rect,\n    cells: R,\n) {\n    let table = (tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc) as Node,\n        map = TableMap.get(table);\n    const { top, left } = rect;\n    const right = left + cells.width,\n        bottom = top + cells.height;\n    const tr = state.tr;\n    let mapFrom = 0;\n    function recomp() {\n        table = (tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc) as Node;\n        map = TableMap.get(table);\n        mapFrom = tr.mapping.maps.length;\n    }\n    // Prepare the table to be large enough and not have any cells\n    // crossing the boundaries of the rectangle that we want to\n    // insert into. If anything about it changes, recompute the table\n    // map so that subsequent operations can see the current shape.\n    if (growTable(tr, map, table, tableStart, right, bottom, mapFrom)) recomp();\n    if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom)) recomp();\n    if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom)) recomp();\n    if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom)) recomp();\n    if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom)) recomp();\n\n    for (let row = top; row < bottom; row++) {\n        const from = map.positionAt(row, left, table),\n            to = map.positionAt(row, right, table);\n        tr.replace(\n            tr.mapping.slice(mapFrom).map(from + tableStart),\n            tr.mapping.slice(mapFrom).map(to + tableStart),\n            new Slice(cells.rows[row - top] as Fragment, 0, 0),\n        );\n    }\n    recomp();\n    tr.setSelection(\n        new CellSelection(\n            tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n            tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table)),\n        ),\n    );\n    dispatch(tr);\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Node } from '@milkdown/prose/model';\nimport { EditorState, PluginKey, Transaction } from '@milkdown/prose/state';\n\nimport { tableNodeTypes } from './schema';\nimport { Problem, TableMap } from './table-map';\nimport { removeColSpan, setAttr } from './util';\n\nexport const fixTablesKey = new PluginKey('fix-tables');\n\n// Helper for iterating through the nodes in a document that changed\n// compared to the given previous document. Useful for avoiding\n// duplicate work on each transaction.\nfunction changedDescendants(old: Node, cur: Node, offset: number, f: (node: Node, pos: number) => void | boolean) {\n    const oldSize = old.childCount,\n        curSize = cur.childCount;\n    outer: for (let i = 0, j = 0; i < curSize; i++) {\n        const child = cur.child(i);\n        for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n            if (old.child(scan) == child) {\n                j = scan + 1;\n                offset += child.nodeSize;\n                continue outer;\n            }\n        }\n        f(child, offset);\n        if (j < oldSize && old.child(j).sameMarkup(child)) changedDescendants(old.child(j), child, offset + 1, f);\n        else child.nodesBetween(0, child.content.size, f, offset + 1);\n        offset += child.nodeSize;\n    }\n}\n\n// :: (EditorState, ?EditorState) → ?Transaction\n// Inspect all tables in the given state's document and return a\n// transaction that fixes them, if necessary. If `oldState` was\n// provided, that is assumed to hold a previous, known-good state,\n// which will be used to avoid re-scanning unchanged parts of the\n// document.\nexport function fixTables(state: EditorState, oldState: EditorState) {\n    let tr: undefined | Transaction;\n    const check = (node: Node, pos: number) => {\n        if (node.type.spec['tableRole'] == 'table') tr = fixTable(state, node, pos, tr);\n    };\n    if (!oldState) state.doc.descendants(check);\n    else if (oldState.doc != state.doc) changedDescendants(oldState.doc, state.doc, 0, check);\n    return tr;\n}\n\n// : (EditorState, Node, number, ?Transaction) → ?Transaction\n// Fix the given table, if necessary. Will append to the transaction\n// it was given, if non-null, or create a new one if necessary.\nexport function fixTable(state: EditorState, table: Node, tablePos: number, tr?: Transaction) {\n    const map = TableMap.get(table);\n    if (!map.problems) return tr;\n    if (!tr) tr = state.tr;\n\n    // Track which rows we must add cells to, so that we can adjust that\n    // when fixing collisions.\n    const mustAdd = [];\n    for (let i = 0; i < map.height; i++) mustAdd.push(0);\n    for (let i = 0; i < map.problems.length; i++) {\n        const prob = map.problems[i] as Problem;\n        if (prob.type == 'collision') {\n            const cell = table.nodeAt(prob.pos) as Node;\n            for (let j = 0; j < cell.attrs['rowspan']; j++) mustAdd[prob.row + j] += prob.n;\n            tr.setNodeMarkup(\n                tr.mapping.map(tablePos + 1 + prob.pos),\n                null,\n                removeColSpan(cell.attrs, cell.attrs['colspan'] - prob.n, prob.n),\n            );\n        } else if (prob.type == 'missing') {\n            mustAdd[prob.row] += prob.n;\n        } else if (prob.type == 'overlong_rowspan') {\n            const cell = table.nodeAt(prob.pos) as Node;\n            tr.setNodeMarkup(\n                tr.mapping.map(tablePos + 1 + prob.pos),\n                null,\n                setAttr(cell.attrs, 'rowspan', cell.attrs['rowspan'] - prob.n),\n            );\n        } else if (prob.type == 'colwidth mismatch') {\n            const cell = table.nodeAt(prob.pos) as Node;\n            tr.setNodeMarkup(\n                tr.mapping.map(tablePos + 1 + prob.pos),\n                null,\n                setAttr(cell.attrs, 'colwidth', prob.colwidth),\n            );\n        }\n    }\n    let first, last;\n    for (let i = 0; i < mustAdd.length; i++)\n        if (mustAdd[i]) {\n            if (first == null) first = i;\n            last = i;\n        }\n    // Add the necessary cells, using a heuristic for whether to add the\n    // cells at the start or end of the rows (if it looks like a 'bite'\n    // was taken out of the table, add cells at the start of the row\n    // after the bite. Otherwise add them at the end).\n    for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n        const row = table.child(i);\n        const end = pos + row.nodeSize;\n        const add = mustAdd[i] as number;\n        if (add > 0) {\n            let tableNodeType = 'cell';\n            if (row.firstChild) {\n                tableNodeType = row.firstChild.type.spec['tableRole'];\n            }\n            const nodes = [];\n            for (let j = 0; j < add; j++) nodes.push(tableNodeTypes(state.schema)[tableNodeType].createAndFill());\n            const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n            tr.insert(tr.mapping.map(side), nodes);\n        }\n        pos = end;\n    }\n    return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { keydownHandler } from '@milkdown/prose/keymap';\nimport { Fragment, ResolvedPos, Slice } from '@milkdown/prose/model';\nimport { Command, EditorState, Plugin, PluginKey, Selection, TextSelection, Transaction } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\n\nimport { CellSelection, drawCellSelection, normalizeSelection } from './cell-selection';\nimport { clipCells, fitSlice, insertCells, pastedCells } from './copy-paste';\nimport { fixTables } from './fix-tables';\nimport { tableNodeTypes } from './schema';\nimport { TableMap } from './table-map';\nimport { cellAround, inSameTable, isInTable, nextCell, selectionCell } from './util';\n\nexport const tableEditingKey = new PluginKey('selectingCells');\n\nfunction domInCell(view: EditorView, dom: EventTarget | null) {\n    for (; dom && dom != view.dom; dom = (dom as Element).parentNode as Element)\n        if ((dom as Element).nodeName == 'TD' || (dom as Element).nodeName == 'TH') return dom;\n    return;\n}\n\nfunction cellUnderMouse(view: EditorView, event: MouseEvent) {\n    const mousePos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (!mousePos) return null;\n    return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\nfunction handleMouseDown(view: EditorView, event: Event) {\n    const startEvent = event as MouseEvent;\n    if (startEvent.ctrlKey || startEvent.metaKey) return;\n\n    const startDOMCell = domInCell(view, startEvent.target as Element);\n    let $anchor;\n    if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n        // Adding to an existing cell selection\n        setCellSelection(view.state.selection.$anchorCell, startEvent);\n        startEvent.preventDefault();\n    } else if (\n        startEvent.shiftKey &&\n        startDOMCell &&\n        ($anchor = cellAround(view.state.selection.$anchor)) != null &&\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        cellUnderMouse(view, startEvent)!.pos != $anchor.pos\n    ) {\n        // Adding to a selection that starts in another cell (causing a\n        // cell selection to be created).\n        setCellSelection($anchor, startEvent);\n        startEvent.preventDefault();\n    } else if (!startDOMCell) {\n        // Not in a cell, let the default behavior happen.\n        return;\n    }\n\n    // Create and dispatch a cell selection between the given anchor and\n    // the position under the mouse.\n    function setCellSelection($anchor: ResolvedPos, event: MouseEvent) {\n        let $head = cellUnderMouse(view, event);\n        const starting = tableEditingKey.getState(view.state) == null;\n        if (!$head || !inSameTable($anchor, $head)) {\n            if (starting) $head = $anchor;\n            else return;\n        }\n        const selection = new CellSelection($anchor, $head);\n        if (starting || !view.state.selection.eq(selection)) {\n            const tr = view.state.tr.setSelection(selection);\n            if (starting) tr.setMeta(tableEditingKey, $anchor.pos);\n            view.dispatch(tr);\n        }\n    }\n\n    // Stop listening to mouse motion events.\n    function stop() {\n        view.root.removeEventListener('mouseup', stop);\n        view.root.removeEventListener('dragstart', stop);\n        view.root.removeEventListener('mousemove', move);\n        if (tableEditingKey.getState(view.state) != null) view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n    }\n\n    function move(event: Event) {\n        const anchor = tableEditingKey.getState(view.state);\n        let $anchor;\n        if (anchor != null) {\n            // Continuing an existing cross-cell selection\n            $anchor = view.state.doc.resolve(anchor);\n        } else if (domInCell(view, event.target) != startDOMCell) {\n            // Moving out of the initial cell -- start a new cell selection\n            $anchor = cellUnderMouse(view, startEvent);\n            if (!$anchor) return stop();\n        }\n        if ($anchor) setCellSelection($anchor, event as MouseEvent);\n    }\n    view.root.addEventListener('mouseup', stop);\n    view.root.addEventListener('dragstart', stop);\n    view.root.addEventListener('mousemove', move);\n}\n\nfunction handleTripleClick(view: EditorView, pos: number) {\n    const doc = view.state.doc,\n        $cell = cellAround(doc.resolve(pos));\n    if (!$cell) return false;\n    view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n    return true;\n}\n\nfunction maybeSetSelection(\n    state: EditorState,\n    dispatch: undefined | ((tr: Transaction) => void),\n    selection: Selection,\n) {\n    if (selection.eq(state.selection)) return false;\n    if (dispatch) dispatch(state.tr.setSelection(selection).scrollIntoView());\n    return true;\n}\n\nfunction atEndOfCell(view: EditorView, axis: string, dir: number) {\n    if (!(view.state.selection instanceof TextSelection)) return null;\n    const { $head } = view.state.selection;\n    for (let d = $head.depth - 1; d >= 0; d--) {\n        const parent = $head.node(d),\n            index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n        if (index != (dir < 0 ? 0 : parent.childCount)) return null;\n        if (parent.type.spec['tableRole'] == 'cell' || parent.type.spec['tableRole'] == 'header_cell') {\n            const cellPos = $head.before(d);\n            const dirStr = axis == 'vert' ? (dir > 0 ? 'down' : 'up') : dir > 0 ? 'right' : 'left';\n            return view.endOfTextblock(dirStr) ? cellPos : null;\n        }\n    }\n    return null;\n}\n\nfunction arrow(axis: string, dir: number): Command {\n    return (state, dispatch, view) => {\n        const sel = state.selection;\n        if (sel instanceof CellSelection) {\n            return maybeSetSelection(state, dispatch, Selection.near(sel.$headCell, dir));\n        }\n        if (axis != 'horiz' && !sel.empty) return false;\n        const end = atEndOfCell(view as EditorView, axis, dir);\n        if (end == null) return false;\n        if (axis == 'horiz') {\n            return maybeSetSelection(state, dispatch, Selection.near(state.doc.resolve(sel.head + dir), dir));\n        } else {\n            const $cell = state.doc.resolve(end),\n                $next = nextCell($cell, axis, dir);\n            let newSel;\n            if ($next) newSel = Selection.near($next, 1);\n            else if (dir < 0) newSel = Selection.near(state.doc.resolve($cell.before(-1)), -1);\n            else newSel = Selection.near(state.doc.resolve($cell.after(-1)), 1);\n            return maybeSetSelection(state, dispatch, newSel);\n        }\n    };\n}\n\nfunction shiftArrow(axis: string, dir: number): Command {\n    return (state, dispatch, view) => {\n        let sel = state.selection;\n        if (!(sel instanceof CellSelection)) {\n            const end = atEndOfCell(view as EditorView, axis, dir);\n            if (end == null) return false;\n            sel = new CellSelection(state.doc.resolve(end));\n        }\n        const $head = nextCell((sel as CellSelection).$headCell, axis, dir);\n        if (!$head) return false;\n        return maybeSetSelection(state, dispatch, new CellSelection((sel as CellSelection).$anchorCell, $head));\n    };\n}\n\nfunction deleteCellSelection(state: EditorState, dispatch?: (tr: Transaction) => void) {\n    const sel = state.selection;\n    if (!(sel instanceof CellSelection)) return false;\n    if (dispatch) {\n        const tr = state.tr,\n            baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n        sel.forEachCell((cell, pos) => {\n            if (!cell.content.eq(baseContent))\n                tr.replace(\n                    tr.mapping.map(pos + 1),\n                    tr.mapping.map(pos + cell.nodeSize - 1),\n                    new Slice(baseContent, 0, 0),\n                );\n        });\n        if (tr.docChanged) dispatch(tr);\n    }\n    return true;\n}\n\nconst handleKeyDown = keydownHandler({\n    ArrowLeft: arrow('horiz', -1),\n    ArrowRight: arrow('horiz', 1),\n    ArrowUp: arrow('vert', -1),\n    ArrowDown: arrow('vert', 1),\n\n    'Shift-ArrowLeft': shiftArrow('horiz', -1),\n    'Shift-ArrowRight': shiftArrow('horiz', 1),\n    'Shift-ArrowUp': shiftArrow('vert', -1),\n    'Shift-ArrowDown': shiftArrow('vert', 1),\n\n    Backspace: deleteCellSelection,\n    'Mod-Backspace': deleteCellSelection,\n    Delete: deleteCellSelection,\n    'Mod-Delete': deleteCellSelection,\n});\n\nexport function handlePaste(view: EditorView, _: Event, slice: Slice) {\n    if (!isInTable(view.state)) return false;\n    let cells = pastedCells(slice);\n    const sel = view.state.selection;\n    if (sel instanceof CellSelection) {\n        if (!cells)\n            cells = {\n                width: 1,\n                height: 1,\n                rows: [Fragment.from(fitSlice(tableNodeTypes(view.state.schema).cell, slice))],\n            };\n        const table = sel.$anchorCell.node(-1),\n            start = sel.$anchorCell.start(-1);\n        const rect = TableMap.get(table).rectBetween(sel.$anchorCell.pos - start, sel.$headCell.pos - start);\n        cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n        insertCells(view.state, view.dispatch, start, rect, cells);\n        return true;\n    } else if (cells) {\n        const $cell = selectionCell(view.state) as ResolvedPos,\n            start = $cell.start(-1);\n        insertCells(view.state, view.dispatch, start, TableMap.get($cell.node(-1)).findCell($cell.pos - start), cells);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function tableEditing({ allowTableNodeSelection = false } = {}) {\n    return new Plugin({\n        key: tableEditingKey,\n\n        // This piece of state is used to remember when a mouse-drag\n        // cell-selection is happening, so that it can continue even as\n        // transactions (which might move its anchor cell) come in.\n        state: {\n            init() {\n                return null;\n            },\n            apply(tr, cur) {\n                const set = tr.getMeta(tableEditingKey);\n                if (set != null) return set == -1 ? null : set;\n                if (cur == null || !tr.docChanged) return cur;\n                const { deleted, pos } = tr.mapping.mapResult(cur);\n                return deleted ? null : pos;\n            },\n        },\n\n        props: {\n            decorations: drawCellSelection,\n\n            handleDOMEvents: {\n                mousedown: handleMouseDown,\n            },\n\n            createSelectionBetween(view) {\n                if (tableEditingKey.getState(view.state) != null) return view.state.selection;\n\n                return null;\n            },\n\n            handleTripleClick,\n\n            handleKeyDown,\n\n            handlePaste,\n        },\n\n        appendTransaction(_, oldState, state) {\n            return normalizeSelection(state, fixTables(state, oldState), allowTableNodeSelection);\n        },\n    });\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, MarkdownNode, schemaCtx } from '@milkdown/core';\nimport { InputRule } from '@milkdown/prose/inputrules';\nimport { NodeType } from '@milkdown/prose/model';\nimport { Selection, TextSelection } from '@milkdown/prose/state';\nimport { createPlugin, createShortcut } from '@milkdown/utils';\n\nimport { exitTable } from '../command';\nimport { operatorPlugin } from '../operator-plugin';\nimport { autoInsertZeroSpace } from '../plugin/auto-insert-zero-space';\nimport { columnResizing } from '../plugin/column-resizing';\nimport { goToNextCell } from '../plugin/commands';\nimport { schema } from '../plugin/schema';\nimport { tableEditing } from '../plugin/table-editing';\nimport { createTable } from '../utils';\n\nexport const SupportedKeys = {\n    NextCell: 'NextCell',\n    PrevCell: 'PrevCell',\n    ExitTable: 'ExitTable',\n} as const;\nexport type SupportedKeys = typeof SupportedKeys;\n\ntype Keys = keyof SupportedKeys;\n\nexport const PrevCell = createCmdKey('PrevCell');\nexport const NextCell = createCmdKey('NextCell');\nexport const BreakTable = createCmdKey('BreakTable');\nexport const InsertTable = createCmdKey('InsertTable');\n\nexport const table = createPlugin<Keys, Record<string, unknown>, keyof typeof schema>((utils) => {\n    return {\n        schema: () => ({\n            node: {\n                table: {\n                    ...schema.table,\n                    parseMarkdown: {\n                        match: (node) => node.type === 'table',\n                        runner: (state, node, type) => {\n                            const align = node['align'] as (string | null)[];\n                            const children = (node.children as MarkdownNode[]).map((x, i) => ({\n                                ...x,\n                                align,\n                                isHeader: i === 0,\n                            }));\n                            state.openNode(type);\n                            state.next(children);\n                            state.closeNode();\n                        },\n                    },\n                    toMarkdown: {\n                        match: (node) => node.type.name === 'table',\n                        runner: (state, node) => {\n                            const firstLine = node.content.firstChild?.content;\n                            if (!firstLine) return;\n\n                            const align: (string | null)[] = [];\n                            firstLine.forEach((cell) => {\n                                align.push(cell.attrs['alignment']);\n                            });\n                            state.openNode('table', undefined, { align });\n                            state.next(node.content);\n                            state.closeNode();\n                        },\n                    },\n                },\n                table_row: {\n                    ...schema.table_row,\n                    parseMarkdown: {\n                        match: (node) => node.type === 'tableRow',\n                        runner: (state, node, type) => {\n                            const align = node['align'] as (string | null)[];\n                            const children = (node.children as MarkdownNode[]).map((x, i) => ({\n                                ...x,\n                                align: align[i],\n                                isHeader: node['isHeader'],\n                            }));\n                            state.openNode(type);\n                            state.next(children);\n                            state.closeNode();\n                        },\n                    },\n                    toMarkdown: {\n                        match: (node) => node.type.name === 'table_row',\n                        runner: (state, node) => {\n                            state.openNode('tableRow');\n                            state.next(node.content);\n                            state.closeNode();\n                        },\n                    },\n                },\n                table_cell: {\n                    ...schema.table_cell,\n                    parseMarkdown: {\n                        match: (node) => node.type === 'tableCell' && !node['isHeader'],\n                        runner: (state, node, type) => {\n                            const align = node['align'] as string;\n                            state\n                                .openNode(type, { alignment: align })\n                                .openNode(state.schema.nodes['paragraph'] as NodeType)\n                                .next(node.children)\n                                .closeNode()\n                                .closeNode();\n                        },\n                    },\n                    toMarkdown: {\n                        match: (node) => node.type.name === 'table_cell',\n                        runner: (state, node) => {\n                            state.openNode('tableCell').next(node.content).closeNode();\n                        },\n                    },\n                },\n                table_header: {\n                    ...schema.table_header,\n                    parseMarkdown: {\n                        match: (node) => node.type === 'tableCell' && !!node['isHeader'],\n                        runner: (state, node, type) => {\n                            const align = node['align'] as string;\n                            state.openNode(type, { alignment: align });\n                            state.openNode(state.schema.nodes['paragraph'] as NodeType);\n                            state.next(node.children);\n                            state.closeNode();\n                            state.closeNode();\n                        },\n                    },\n                    toMarkdown: {\n                        match: (node) => node.type.name === 'table_header',\n                        runner: (state, node) => {\n                            state.openNode('tableCell');\n                            state.next(node.content);\n                            state.closeNode();\n                        },\n                    },\n                },\n            },\n        }),\n        inputRules: (nodeType, ctx) => [\n            new InputRule(/^\\|\\|\\s$/, (state, _match, start, end) => {\n                const $start = state.doc.resolve(start);\n                if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType.table))\n                    return null;\n\n                const tableNode = createTable(ctx.get(schemaCtx));\n                const tr = state.tr.replaceRangeWith(start, end, tableNode).scrollIntoView();\n                return tr.setSelection(TextSelection.create(tr.doc, start + 3));\n            }),\n        ],\n        commands: (_, ctx) => [\n            createCmd(PrevCell, () => goToNextCell(-1)),\n            createCmd(NextCell, () => goToNextCell(1)),\n            createCmd(BreakTable, () => exitTable(ctx.get(schemaCtx).nodes['paragraph'] as NodeType)),\n            createCmd(InsertTable, () => (state, dispatch) => {\n                const { selection, tr } = state;\n                const { from } = selection;\n                const table = createTable(ctx.get(schemaCtx));\n                const _tr = tr.replaceSelectionWith(table);\n                const sel = Selection.findFrom(_tr.doc.resolve(from), 1, true);\n                if (sel) {\n                    dispatch?.(_tr.setSelection(sel));\n                }\n                return true;\n            }),\n        ],\n        shortcuts: {\n            [SupportedKeys.NextCell]: createShortcut(NextCell, 'Mod-]'),\n            [SupportedKeys.PrevCell]: createShortcut(PrevCell, 'Mod-['),\n            [SupportedKeys.ExitTable]: createShortcut(BreakTable, 'Mod-Enter'),\n        },\n        prosePlugins: (_, ctx) => {\n            return [operatorPlugin(ctx, utils), autoInsertZeroSpace(), columnResizing(), tableEditing()];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { toggleMark } from '@milkdown/prose/commands';\nimport { createMark, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from './supported-keys';\n\ntype Keys = SupportedKeys['StrikeThrough'];\n\nexport const ToggleStrikeThrough = createCmdKey('ToggleStrikeThrough');\n\nconst id = 'strike_through';\nexport const strikeThrough = createMark<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            inclusive: false,\n            parseDOM: [\n                { tag: 'del' },\n                { style: 'text-decoration', getAttrs: (value) => (value === 'line-through') as false },\n            ],\n            toDOM: (mark) => ['del', { class: utils.getClassName(mark.attrs, 'strike-through') }],\n            parseMarkdown: {\n                match: (node) => node.type === 'delete',\n                runner: (state, node, markType) => {\n                    state.openMark(markType);\n                    state.next(node.children);\n                    state.closeMark(markType);\n                },\n            },\n            toMarkdown: {\n                match: (mark) => mark.type.name === id,\n                runner: (state, mark) => {\n                    state.withMark(mark, 'delete');\n                },\n            },\n        }),\n        commands: (markType) => [createCmd(ToggleStrikeThrough, () => toggleMark(markType))],\n        shortcuts: {\n            [SupportedKeys.StrikeThrough]: createShortcut(ToggleStrikeThrough, 'Mod-Alt-x'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, editorViewCtx, ThemeTaskListItemType } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { wrapIn } from '@milkdown/prose/commands';\nimport { wrappingInputRule } from '@milkdown/prose/inputrules';\nimport { liftListItem, sinkListItem, splitListItem } from '@milkdown/prose/schema-list';\nimport { NodeView } from '@milkdown/prose/view';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from './supported-keys';\n\ntype Keys = Extract<keyof SupportedKeys, 'SinkListItem' | 'LiftListItem' | 'NextListItem' | 'TaskList'>;\n\nexport const SplitTaskListItem = createCmdKey('SplitTaskListItem');\nexport const SinkTaskListItem = createCmdKey('SinkTaskListItem');\nexport const LiftTaskListItem = createCmdKey('LiftTaskListItem');\nexport const TurnIntoTaskList = createCmdKey('TurnIntoTaskList');\n\nexport const taskListItem = createNode<Keys>((utils) => {\n    const id = 'task_list_item';\n\n    return {\n        id,\n        schema: (ctx) => ({\n            group: 'listItem',\n            content: 'paragraph block*',\n            defining: true,\n            priority: 60,\n            attrs: {\n                checked: {\n                    default: false,\n                },\n            },\n            parseDOM: [\n                {\n                    tag: 'li[data-type=\"task-item\"]',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return { checked: dom.dataset['checked'] === 'true' };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                const checkbox = document.createElement('input');\n                checkbox.type = 'checkbox';\n                checkbox.checked = node.attrs['checked'];\n                checkbox.className = utils.getClassName(node.attrs, 'task-list-item_checkbox');\n                checkbox.onchange = (event) => {\n                    const target = event.target;\n                    if (!(target instanceof HTMLInputElement)) return;\n                    const view = ctx.get(editorViewCtx);\n\n                    if (!view.editable) {\n                        checkbox.checked = !checkbox.checked;\n\n                        return;\n                    }\n\n                    const { top, left } = target.getBoundingClientRect();\n                    const result = view.posAtCoords({ top, left });\n                    if (!result) return;\n\n                    const { tr } = view.state;\n\n                    view.dispatch(\n                        tr.setNodeMarkup(result.inside, undefined, {\n                            checked: target.checked,\n                        }),\n                    );\n                };\n                return [\n                    'li',\n                    {\n                        'data-type': 'task-item',\n                        'data-checked': node.attrs['checked'] ? 'true' : 'false',\n                        class: utils.getClassName(node.attrs, 'task-list-item'),\n                    },\n                    checkbox,\n                    ['span', { class: utils.getClassName(node.attrs, 'task-list-item_body') }, 0],\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type, checked }) => {\n                    return type === 'listItem' && checked !== null;\n                },\n                runner: (state, node, type) => {\n                    state.openNode(type, { checked: node['checked'] as boolean });\n                    state.next(node.children);\n                    state.closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.openNode('listItem', undefined, { checked: node.attrs['checked'] });\n                    state.next(node.content);\n                    state.closeNode();\n                },\n            },\n        }),\n        inputRules: (nodeType) => [\n            wrappingInputRule(/^\\s*(\\[([ |x])\\])\\s$/, nodeType, (match) => ({\n                checked: match[match.length - 1] === 'x',\n            })),\n        ],\n        commands: (nodeType) => [\n            createCmd(SplitTaskListItem, () => splitListItem(nodeType)),\n            createCmd(SinkTaskListItem, () => sinkListItem(nodeType)),\n            createCmd(LiftTaskListItem, () => liftListItem(nodeType)),\n            createCmd(TurnIntoTaskList, () => wrapIn(nodeType)),\n        ],\n        shortcuts: {\n            [SupportedKeys.NextListItem]: createShortcut(SplitTaskListItem, 'Enter'),\n            [SupportedKeys.SinkListItem]: createShortcut(SinkTaskListItem, 'Mod-]'),\n            [SupportedKeys.LiftListItem]: createShortcut(LiftTaskListItem, 'Mod-['),\n            [SupportedKeys.TaskList]: createShortcut(TurnIntoTaskList, 'Mod-Alt-9'),\n        },\n        view: () => (node, view, getPos) => {\n            let currNode = node;\n\n            const renderer = utils.themeManager.get<ThemeTaskListItemType>('task-list-item', {\n                editable: () => view.editable,\n                onChange: (selected) => {\n                    const { tr } = view.state;\n                    view.dispatch(\n                        tr.setNodeMarkup(getPos(), undefined, {\n                            checked: selected,\n                        }),\n                    );\n                },\n            });\n\n            if (!renderer) return {} as NodeView;\n\n            const { dom, contentDOM, onUpdate } = renderer;\n            onUpdate(currNode);\n\n            return {\n                dom,\n                contentDOM,\n                update: (updatedNode) => {\n                    if (updatedNode.type.name !== id) return false;\n\n                    currNode = updatedNode;\n                    onUpdate(currNode);\n\n                    return true;\n                },\n            };\n        },\n    };\n});\n","\nimport { PluginKey } from 'prosemirror-state' // eslint-disable-line\n\n/**\n * The unique prosemirror plugin key for syncPlugin\n *\n * @public\n */\nexport const ySyncPluginKey = new PluginKey('y-sync')\n\n/**\n * The unique prosemirror plugin key for undoPlugin\n *\n * @public\n */\nexport const yUndoPluginKey = new PluginKey('y-undo')\n\n/**\n * The unique prosemirror plugin key for cursorPlugin\n *\n * @public\n */\nexport const yCursorPluginKey = new PluginKey('yjs-cursor')\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set => {\n  return set.values().next().value || undefined\n}\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => {\n  return new Set(entries)\n}\n","/**\n * Efficient diffs.\n *\n * @module diff\n */\n\nimport { equalityStrict } from './function.js'\n\n/**\n * A SimpleDiff describes a change on a String.\n *\n * ```js\n * console.log(a) // the old value\n * console.log(b) // the updated value\n * // Apply changes of diff (pseudocode)\n * a.remove(diff.index, diff.remove) // Remove `diff.remove` characters\n * a.insert(diff.index, diff.insert) // Insert `diff.insert`\n * a === b // values match\n * ```\n *\n * @typedef {Object} SimpleDiff\n * @property {Number} index The index where changes were applied\n * @property {Number} remove The number of characters to delete starting\n *                                  at `index`.\n * @property {T} insert The new text to insert at `index` after applying\n *                           `delete`\n *\n * @template T\n */\n\n/**\n * Create a diff between two strings. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * @function\n *\n * @param {string} a The old version of the string\n * @param {string} b The updated version of the string\n * @return {SimpleDiff<string>} The diff description.\n */\nexport const simpleDiffString = (a, b) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && a[left] === b[left]) {\n    left++\n  }\n  while (right + left < a.length && right + left < b.length && a[a.length - right - 1] === b[b.length - right - 1]) {\n    right++\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * @todo Remove in favor of simpleDiffString\n * @deprecated\n */\nexport const simpleDiff = simpleDiffString\n\n/**\n * Create a diff between two arrays. This diff implementation is highly\n * efficient, but not very sophisticated.\n *\n * Note: This is basically the same function as above. Another function was created so that the runtime\n * can better optimize these function calls.\n *\n * @function\n * @template T\n *\n * @param {Array<T>} a The old version of the array\n * @param {Array<T>} b The updated version of the array\n * @param {function(T, T):boolean} [compare]\n * @return {SimpleDiff<Array<T>>} The diff description.\n */\nexport const simpleDiffArray = (a, b, compare = equalityStrict) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  while (left < a.length && left < b.length && compare(a[left], b[left])) {\n    left++\n  }\n  while (right + left < a.length && right + left < b.length && compare(a[a.length - right - 1], b[b.length - right - 1])) {\n    right++\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n\n/**\n * Diff text and try to diff at the current cursor position.\n *\n * @param {string} a\n * @param {string} b\n * @param {number} cursor This should refer to the current left cursor-range position\n */\nexport const simpleDiffStringWithCursor = (a, b, cursor) => {\n  let left = 0 // number of same characters counting from left\n  let right = 0 // number of same characters counting from right\n  // Iterate left to the right until we find a changed character\n  // First iteration considers the current cursor position\n  while (\n    left < a.length &&\n    left < b.length &&\n    a[left] === b[left] &&\n    left < cursor\n  ) {\n    left++\n  }\n  // Iterate right to the left until we find a changed character\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[a.length - right - 1] === b[b.length - right - 1]\n  ) {\n    right++\n  }\n  // Try to iterate left further to the right without caring about the current cursor position\n  while (\n    right + left < a.length &&\n    right + left < b.length &&\n    a[left] === b[left]\n  ) {\n    left++\n  }\n  return {\n    index: left,\n    remove: a.length - left - right,\n    insert: b.slice(left, b.length - right)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Error}\n */\nexport const create = s => new Error(s)\n\n/* istanbul ignore next */\n/**\n * @throws {Error}\n * @return {never}\n */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/* istanbul ignore next */\n/**\n * @throws {Error}\n * @return {never}\n */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n\nexport const isArray = Array.isArray\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* istanbul ignore else */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* istanbul ignore next */\nexport const writeVarString = string.utf8TextEncoder ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  while (true) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* istanbul ignore if */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* istanbul ignore if */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* istanbul ignore next */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* istanbul ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template T\n * @param {Array<Promise<T>>} arrp\n * @return {Promise<Array<T>>}\n */\nexport const all = arrp => Promise.all(arrp)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* istanbul ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = err => {\n  console.error(err)\n  vconsoles.forEach(vc => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\n    }\n  }\n  return spans\n}\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = dom => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\n  }\n}\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","\nimport {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal()\n    encoding.writeVarUint(encoder.restEncoder, client)\n    const len = dsitems.length\n    encoding.writeVarUint(encoder.restEncoder, len)\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i]\n      encoder.writeDsClock(item.clock)\n      encoder.writeDsLen(item.len)\n    }\n  })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => [])\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    this.isLoaded = false\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n","\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n","\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  Array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n","import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n","\nimport {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n","\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n","\nimport {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1]\n  const right = structs[pos]\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1)\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc._transaction = null\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                )\n              events\n                .forEach(event => {\n                  event.currentTarget = type\n                })\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length)\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction)\n            }\n          })\n        )\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      })\n      callAll(fs, [])\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1)\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    f(doc._transaction)\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0)\n    }\n  }\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport { Observable } from 'lib0/observable'\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = []\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.doc = doc\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n","\nimport * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as logging from 'lib0/logging'\nimport * as math from 'lib0/math'\nimport {\n  createID,\n  readItemContent,\n  readDeleteSet,\n  writeDeleteSet,\n  Skip,\n  mergeDeleteSets,\n  DSEncoderV1,\n  DSEncoderV2,\n  decodeStateVector,\n  Item, GC, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1)\n","\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, content)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nexport const readYArray = decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {MapType} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nexport const readYMap = decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const marker = findMarker(parent, index)\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  let end = curr\n  const endAttributes = map.copy(currAttributes)\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content))\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedEndOfCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedEndOfCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedEndOfCurr && (currAttributes.get(key) || null) === value && (startAttributes.get(key) || null) !== value) {\n              currAttributes.delete(key)\n            }\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen }\n                deleteLen = 0\n                break\n              case 'insert':\n                op = { insert }\n                if (currentAttributes.size > 0) {\n                  op.attributes = {}\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value\n                    }\n                  })\n                }\n                insert = ''\n                break\n              case 'retain':\n                op = { retain }\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {}\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key]\n                  }\n                }\n                retain = 0\n                break\n            }\n            delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    const doc = transaction.doc\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this)\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot)\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot)\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }, splitSnapshotAffectedStructs)\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        insertText(transaction, this, pos, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook, Snapshot // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof this):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = decoder => new YXmlFragment()\n","\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Snapshot, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key])\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key])\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n","\nimport {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n","\nimport {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","\nimport {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n","\nimport {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n","\nimport {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n","\nimport {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n","\nimport {\n  AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n","\nimport {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && isDeleted(itemsToDelete, left.right.id)) {\n        left = left.right\n      }\n      // follow redone\n      // trace redone until parent matches\n      while (left !== null && left.redone !== null) {\n        left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} offset\n   * @return {AbstractContent}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  ContentBinary,\n  ContentDeleted,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  UpdateEncoderV1\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* istanbul ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/* istanbul ignore next */\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* istanbul ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/* istanbul ignore next */\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n","/**\n * @module bindings/prosemirror\n */\n\nimport { createMutex } from 'lib0/mutex'\nimport * as PModel from 'prosemirror-model'\nimport { Plugin, TextSelection } from \"prosemirror-state\"; // eslint-disable-line\nimport * as math from 'lib0/math'\nimport * as object from 'lib0/object'\nimport * as set from 'lib0/set'\nimport { simpleDiff } from 'lib0/diff'\nimport * as error from 'lib0/error'\nimport { ySyncPluginKey, yUndoPluginKey } from './keys.js'\nimport * as Y from 'yjs'\nimport {\n  absolutePositionToRelativePosition,\n  relativePositionToAbsolutePosition\n} from '../lib.js'\nimport * as random from 'lib0/random'\nimport * as environment from 'lib0/environment'\nimport * as dom from 'lib0/dom'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * @param {Y.Item} item\n * @param {Y.Snapshot} [snapshot]\n */\nexport const isVisible = (item, snapshot) =>\n  snapshot === undefined\n    ? !item.deleted\n    : (snapshot.sv.has(item.id.client) && /** @type {number} */\n      (snapshot.sv.get(item.id.client)) > item.id.clock &&\n      !Y.isDeleted(snapshot.ds, item.id))\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType<any>, PModel.Node | Array<PModel.Node>>} ProsemirrorMapping\n */\n\n/**\n * @typedef {Object} ColorDef\n * @property {string} ColorDef.light\n * @property {string} ColorDef.dark\n */\n\n/**\n * @typedef {Object} YSyncOpts\n * @property {Array<ColorDef>} [YSyncOpts.colors]\n * @property {Map<string,ColorDef>} [YSyncOpts.colorMapping]\n * @property {Y.PermanentUserData|null} [YSyncOpts.permanentUserData]\n * @property {function} [YSyncOpts.onFirstRender] Fired when the content from Yjs is initially rendered to ProseMirror\n */\n\n/**\n * @type {Array<ColorDef>}\n */\nconst defaultColors = [{ light: '#ecd44433', dark: '#ecd444' }]\n\n/**\n * @param {Map<string,ColorDef>} colorMapping\n * @param {Array<ColorDef>} colors\n * @param {string} user\n * @return {ColorDef}\n */\nconst getUserColor = (colorMapping, colors, user) => {\n  // @todo do not hit the same color twice if possible\n  if (!colorMapping.has(user)) {\n    if (colorMapping.size < colors.length) {\n      const usedColors = set.create()\n      colorMapping.forEach((color) => usedColors.add(color))\n      colors = colors.filter((color) => !usedColors.has(color))\n    }\n    colorMapping.set(user, random.oneOf(colors))\n  }\n  return /** @type {ColorDef} */ (colorMapping.get(user))\n}\n\n/**\n * This plugin listens to changes in prosemirror view and keeps yXmlState and view in sync.\n *\n * This plugin also keeps references to the type and the shared document so other plugins can access it.\n * @param {Y.XmlFragment} yXmlFragment\n * @param {YSyncOpts} opts\n * @return {any} Returns a prosemirror plugin that binds to this type\n */\nexport const ySyncPlugin = (yXmlFragment, {\n  colors = defaultColors,\n  colorMapping = new Map(),\n  permanentUserData = null,\n  onFirstRender = () => {}\n} = {}) => {\n  let changedInitialContent = false\n  let rerenderTimeout\n  const plugin = new Plugin({\n    props: {\n      editable: (state) => {\n        const syncState = ySyncPluginKey.getState(state)\n        return syncState.snapshot == null && syncState.prevSnapshot == null\n      }\n    },\n    key: ySyncPluginKey,\n    state: {\n      init: (_initargs, _state) => {\n        return {\n          type: yXmlFragment,\n          doc: yXmlFragment.doc,\n          binding: null,\n          snapshot: null,\n          prevSnapshot: null,\n          isChangeOrigin: false,\n          addToHistory: true,\n          colors,\n          colorMapping,\n          permanentUserData\n        }\n      },\n      apply: (tr, pluginState) => {\n        const change = tr.getMeta(ySyncPluginKey)\n        if (change !== undefined) {\n          pluginState = Object.assign({}, pluginState)\n          for (const key in change) {\n            pluginState[key] = change[key]\n          }\n        }\n        pluginState.addToHistory = tr.getMeta('addToHistory') !== false\n        // always set isChangeOrigin. If undefined, this is not change origin.\n        pluginState.isChangeOrigin = change !== undefined &&\n          !!change.isChangeOrigin\n        if (pluginState.binding !== null) {\n          if (\n            change !== undefined &&\n            (change.snapshot != null || change.prevSnapshot != null)\n          ) {\n            // snapshot changed, rerender next\n            eventloop.timeout(0, () => {\n              if (\n                pluginState.binding == null || pluginState.binding.isDestroyed\n              ) {\n                return\n              }\n              if (change.restore == null) {\n                pluginState.binding._renderSnapshot(\n                  change.snapshot,\n                  change.prevSnapshot,\n                  pluginState\n                )\n              } else {\n                pluginState.binding._renderSnapshot(\n                  change.snapshot,\n                  change.snapshot,\n                  pluginState\n                )\n                // reset to current prosemirror state\n                delete pluginState.restore\n                delete pluginState.snapshot\n                delete pluginState.prevSnapshot\n                pluginState.binding.mux(() => {\n                  pluginState.binding._prosemirrorChanged(\n                    pluginState.binding.prosemirrorView.state.doc\n                  )\n                })\n              }\n            })\n          }\n        }\n        return pluginState\n      }\n    },\n    view: (view) => {\n      const binding = new ProsemirrorBinding(yXmlFragment, view)\n      if (rerenderTimeout != null) {\n        rerenderTimeout.destroy()\n      }\n      // Make sure this is called in a separate context\n      rerenderTimeout = eventloop.timeout(0, () => {\n        binding._forceRerender()\n        view.dispatch(view.state.tr.setMeta(ySyncPluginKey, { binding }))\n        onFirstRender()\n      })\n      return {\n        update: () => {\n          const pluginState = plugin.getState(view.state)\n          if (\n            pluginState.snapshot == null && pluginState.prevSnapshot == null\n          ) {\n            if (\n              changedInitialContent ||\n              view.state.doc.content.findDiffStart(\n                view.state.doc.type.createAndFill().content\n              ) !== null\n            ) {\n              changedInitialContent = true\n              if (\n                pluginState.addToHistory === false &&\n                !pluginState.isChangeOrigin\n              ) {\n                const yUndoPluginState = yUndoPluginKey.getState(view.state)\n                /**\n                 * @type {Y.UndoManager}\n                 */\n                const um = yUndoPluginState && yUndoPluginState.undoManager\n                if (um) {\n                  um.stopCapturing()\n                }\n              }\n              binding.mux(() => {\n                pluginState.doc.transact((tr) => {\n                  tr.meta.set('addToHistory', pluginState.addToHistory)\n                  binding._prosemirrorChanged(view.state.doc)\n                }, ySyncPluginKey)\n              })\n            }\n          }\n        },\n        destroy: () => {\n          rerenderTimeout.destroy()\n          binding.destroy()\n        }\n      }\n    }\n  })\n  return plugin\n}\n\n/**\n * @param {any} tr\n * @param {any} relSel\n * @param {ProsemirrorBinding} binding\n */\nconst restoreRelativeSelection = (tr, relSel, binding) => {\n  if (relSel !== null && relSel.anchor !== null && relSel.head !== null) {\n    const anchor = relativePositionToAbsolutePosition(\n      binding.doc,\n      binding.type,\n      relSel.anchor,\n      binding.mapping\n    )\n    const head = relativePositionToAbsolutePosition(\n      binding.doc,\n      binding.type,\n      relSel.head,\n      binding.mapping\n    )\n    if (anchor !== null && head !== null) {\n      tr = tr.setSelection(TextSelection.create(tr.doc, anchor, head))\n    }\n  }\n}\n\nexport const getRelativeSelection = (pmbinding, state) => ({\n  anchor: absolutePositionToRelativePosition(\n    state.selection.anchor,\n    pmbinding.type,\n    pmbinding.mapping\n  ),\n  head: absolutePositionToRelativePosition(\n    state.selection.head,\n    pmbinding.type,\n    pmbinding.mapping\n  )\n})\n\n/**\n * Binding for prosemirror.\n *\n * @protected\n */\nexport class ProsemirrorBinding {\n  /**\n   * @param {Y.XmlFragment} yXmlFragment The bind source\n   * @param {any} prosemirrorView The target binding\n   */\n  constructor (yXmlFragment, prosemirrorView) {\n    this.type = yXmlFragment\n    this.prosemirrorView = prosemirrorView\n    this.mux = createMutex()\n    this.isDestroyed = false\n    /**\n     * @type {ProsemirrorMapping}\n     */\n    this.mapping = new Map()\n    this._observeFunction = this._typeChanged.bind(this)\n    /**\n     * @type {Y.Doc}\n     */\n    // @ts-ignore\n    this.doc = yXmlFragment.doc\n    /**\n     * current selection as relative positions in the Yjs model\n     */\n    this.beforeTransactionSelection = null\n    this.beforeAllTransactions = () => {\n      if (this.beforeTransactionSelection === null) {\n        this.beforeTransactionSelection = getRelativeSelection(\n          this,\n          prosemirrorView.state\n        )\n      }\n    }\n    this.afterAllTransactions = () => {\n      this.beforeTransactionSelection = null\n    }\n\n    this.doc.on('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.on('afterAllTransactions', this.afterAllTransactions)\n    yXmlFragment.observeDeep(this._observeFunction)\n\n    this._domSelectionInView = null\n  }\n\n  /**\n   * Create a transaction for changing the prosemirror state.\n   *\n   * @returns\n   */\n  get _tr () {\n    return this.prosemirrorView.state.tr.setMeta('addToHistory', false)\n  }\n\n  _isLocalCursorInView () {\n    if (!this.prosemirrorView.hasFocus()) return false\n    if (environment.isBrowser && this._domSelectionInView === null) {\n      // Calculate the domSelectionInView and clear by next tick after all events are finished\n      eventloop.timeout(0, () => {\n        this._domSelectionInView = null\n      })\n      this._domSelectionInView = this._isDomSelectionInView()\n    }\n    return this._domSelectionInView\n  }\n\n  _isDomSelectionInView () {\n    const selection = this.prosemirrorView._root.getSelection()\n\n    const range = this.prosemirrorView._root.createRange()\n    range.setStart(selection.anchorNode, selection.anchorOffset)\n    range.setEnd(selection.focusNode, selection.focusOffset)\n\n    // This is a workaround for an edgecase where getBoundingClientRect will\n    // return zero values if the selection is collapsed at the start of a newline\n    // see reference here: https://stackoverflow.com/a/59780954\n    const rects = range.getClientRects()\n    if (rects.length === 0) {\n      // probably buggy newline behavior, explicitly select the node contents\n      if (range.startContainer && range.collapsed) {\n        range.selectNodeContents(range.startContainer)\n      }\n    }\n\n    const bounding = range.getBoundingClientRect()\n    const documentElement = dom.doc.documentElement\n\n    return bounding.bottom >= 0 && bounding.right >= 0 &&\n      bounding.left <=\n        (window.innerWidth || documentElement.clientWidth || 0) &&\n      bounding.top <= (window.innerHeight || documentElement.clientHeight || 0)\n  }\n\n  renderSnapshot (snapshot, prevSnapshot) {\n    if (!prevSnapshot) {\n      prevSnapshot = Y.createSnapshot(Y.createDeleteSet(), new Map())\n    }\n    this.prosemirrorView.dispatch(\n      this._tr.setMeta(ySyncPluginKey, { snapshot, prevSnapshot })\n    )\n  }\n\n  unrenderSnapshot () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeFromYElement(\n          /** @type {Y.XmlElement} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      tr.setMeta(ySyncPluginKey, { snapshot: null, prevSnapshot: null })\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _forceRerender () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeFromYElement(\n          /** @type {Y.XmlElement} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      const tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      this.prosemirrorView.dispatch(\n        tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n      )\n    })\n  }\n\n  /**\n   * @param {Y.Snapshot} snapshot\n   * @param {Y.Snapshot} prevSnapshot\n   * @param {Object} pluginState\n   */\n  _renderSnapshot (snapshot, prevSnapshot, pluginState) {\n    if (!snapshot) {\n      snapshot = Y.snapshot(this.doc)\n    }\n    // clear mapping because we are going to rerender\n    this.mapping = new Map()\n    this.mux(() => {\n      this.doc.transact((transaction) => {\n        // before rendering, we are going to sanitize ops and split deleted ops\n        // if they were deleted by seperate users.\n        const pud = pluginState.permanentUserData\n        if (pud) {\n          pud.dss.forEach((ds) => {\n            Y.iterateDeletedStructs(transaction, ds, (_item) => {})\n          })\n        }\n        /**\n         * @param {'removed'|'added'} type\n         * @param {Y.ID} id\n         */\n        const computeYChange = (type, id) => {\n          const user = type === 'added'\n            ? pud.getUserByClientId(id.client)\n            : pud.getUserByDeletedId(id)\n          return {\n            user,\n            type,\n            color: getUserColor(\n              pluginState.colorMapping,\n              pluginState.colors,\n              user\n            )\n          }\n        }\n        // Create document fragment and render\n        const fragmentContent = Y.typeListToArraySnapshot(\n          this.type,\n          new Y.Snapshot(prevSnapshot.ds, snapshot.sv)\n        ).map((t) => {\n          if (\n            !t._item.deleted || isVisible(t._item, snapshot) ||\n            isVisible(t._item, prevSnapshot)\n          ) {\n            return createNodeFromYElement(\n              t,\n              this.prosemirrorView.state.schema,\n              new Map(),\n              snapshot,\n              prevSnapshot,\n              computeYChange\n            )\n          } else {\n            // No need to render elements that are not visible by either snapshot.\n            // If a client adds and deletes content in the same snapshot the element is not visible by either snapshot.\n            return null\n          }\n        }).filter((n) => n !== null)\n        // @ts-ignore\n        const tr = this._tr.replace(\n          0,\n          this.prosemirrorView.state.doc.content.size,\n          new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n        )\n        this.prosemirrorView.dispatch(\n          tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n        )\n      }, ySyncPluginKey)\n    })\n  }\n\n  /**\n   * @param {Array<Y.YEvent<any>>} events\n   * @param {Y.Transaction} transaction\n   */\n  _typeChanged (events, transaction) {\n    const syncState = ySyncPluginKey.getState(this.prosemirrorView.state)\n    if (\n      events.length === 0 || syncState.snapshot != null ||\n      syncState.prevSnapshot != null\n    ) {\n      // drop out if snapshot is active\n      this.renderSnapshot(syncState.snapshot, syncState.prevSnapshot)\n      return\n    }\n    this.mux(() => {\n      /**\n       * @param {any} _\n       * @param {Y.AbstractType<any>} type\n       */\n      const delType = (_, type) => this.mapping.delete(type)\n      Y.iterateDeletedStructs(\n        transaction,\n        transaction.deleteSet,\n        (struct) =>\n          struct.constructor === Y.Item &&\n          this.mapping.delete(\n            /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (struct)\n              .content).type\n          )\n      )\n      transaction.changed.forEach(delType)\n      transaction.changedParentTypes.forEach(delType)\n      const fragmentContent = this.type.toArray().map((t) =>\n        createNodeIfNotExists(\n          /** @type {Y.XmlElement | Y.XmlHook} */ (t),\n          this.prosemirrorView.state.schema,\n          this.mapping\n        )\n      ).filter((n) => n !== null)\n      // @ts-ignore\n      let tr = this._tr.replace(\n        0,\n        this.prosemirrorView.state.doc.content.size,\n        new PModel.Slice(PModel.Fragment.from(fragmentContent), 0, 0)\n      )\n      restoreRelativeSelection(tr, this.beforeTransactionSelection, this)\n      tr = tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n      if (\n        this.beforeTransactionSelection !== null && this._isLocalCursorInView()\n      ) {\n        tr.scrollIntoView()\n      }\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _prosemirrorChanged (doc) {\n    this.doc.transact((tr) => {\n      updateYFragment(this.doc, this.type, doc, this.mapping)\n      this.beforeTransactionSelection = getRelativeSelection(\n        this,\n        this.prosemirrorView.state\n      )\n    }, ySyncPluginKey)\n  }\n\n  destroy () {\n    this.isDestroyed = true\n    this.type.unobserveDeep(this._observeFunction)\n    this.doc.off('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.off('afterAllTransactions', this.afterAllTransactions)\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlElement | Y.XmlHook} el\n * @param {PModel.Schema} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null}\n */\nconst createNodeIfNotExists = (\n  el,\n  schema,\n  mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const node = /** @type {PModel.Node} */ (mapping.get(el))\n  if (node === undefined) {\n    if (el instanceof Y.XmlElement) {\n      return createNodeFromYElement(\n        el,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n    } else {\n      throw error.methodUnimplemented() // we are currently not handling hooks\n    }\n  }\n  return node\n}\n\n/**\n * @private\n * @param {Y.XmlElement} el\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null} Returns node if node could be created. Otherwise it deletes the yjs type and returns null\n */\nconst createNodeFromYElement = (\n  el,\n  schema,\n  mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const children = []\n  const createChildren = (type) => {\n    if (type.constructor === Y.XmlElement) {\n      const n = createNodeIfNotExists(\n        type,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n      if (n !== null) {\n        children.push(n)\n      }\n    } else {\n      const ns = createTextNodesFromYText(\n        type,\n        schema,\n        mapping,\n        snapshot,\n        prevSnapshot,\n        computeYChange\n      )\n      if (ns !== null) {\n        ns.forEach((textchild) => {\n          if (textchild !== null) {\n            children.push(textchild)\n          }\n        })\n      }\n    }\n  }\n  if (snapshot === undefined || prevSnapshot === undefined) {\n    el.toArray().forEach(createChildren)\n  } else {\n    Y.typeListToArraySnapshot(el, new Y.Snapshot(prevSnapshot.ds, snapshot.sv))\n      .forEach(createChildren)\n  }\n  try {\n    const attrs = el.getAttributes(snapshot)\n    if (snapshot !== undefined) {\n      if (!isVisible(/** @type {Y.Item} */ (el._item), snapshot)) {\n        attrs.ychange = computeYChange\n          ? computeYChange('removed', /** @type {Y.Item} */ (el._item).id)\n          : { type: 'removed' }\n      } else if (!isVisible(/** @type {Y.Item} */ (el._item), prevSnapshot)) {\n        attrs.ychange = computeYChange\n          ? computeYChange('added', /** @type {Y.Item} */ (el._item).id)\n          : { type: 'added' }\n      }\n    }\n    const node = schema.node(el.nodeName, attrs, children)\n    mapping.set(el, node)\n    return node\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (el.doc).transact((transaction) => {\n      /** @type {Y.Item} */ (el._item).delete(transaction)\n    }, ySyncPluginKey)\n    mapping.delete(el)\n    return null\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlText} text\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {Array<PModel.Node>|null}\n */\nconst createTextNodesFromYText = (\n  text,\n  schema,\n  mapping,\n  snapshot,\n  prevSnapshot,\n  computeYChange\n) => {\n  const nodes = []\n  const deltas = text.toDelta(snapshot, prevSnapshot, computeYChange)\n  try {\n    for (let i = 0; i < deltas.length; i++) {\n      const delta = deltas[i]\n      const marks = []\n      for (const markName in delta.attributes) {\n        marks.push(schema.mark(markName, delta.attributes[markName]))\n      }\n      nodes.push(schema.text(delta.insert, marks))\n    }\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (text.doc).transact((transaction) => {\n      /** @type {Y.Item} */ (text._item).delete(transaction)\n    }, ySyncPluginKey)\n    return null\n  }\n  // @ts-ignore\n  return nodes\n}\n\n/**\n * @private\n * @param {Array<any>} nodes prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlText}\n */\nconst createTypeFromTextNodes = (nodes, mapping) => {\n  const type = new Y.XmlText()\n  const delta = nodes.map((node) => ({\n    // @ts-ignore\n    insert: node.text,\n    attributes: marksToAttributes(node.marks)\n  }))\n  type.applyDelta(delta)\n  mapping.set(type, nodes)\n  return type\n}\n\n/**\n * @private\n * @param {any} node prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement}\n */\nconst createTypeFromElementNode = (node, mapping) => {\n  const type = new Y.XmlElement(node.type.name)\n  for (const key in node.attrs) {\n    const val = node.attrs[key]\n    if (val !== null && key !== 'ychange') {\n      type.setAttribute(key, val)\n    }\n  }\n  type.insert(\n    0,\n    normalizePNodeContent(node).map((n) =>\n      createTypeFromTextOrElementNode(n, mapping)\n    )\n  )\n  mapping.set(type, node)\n  return type\n}\n\n/**\n * @private\n * @param {PModel.Node|Array<PModel.Node>} node prosemirror text node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement|Y.XmlText}\n */\nconst createTypeFromTextOrElementNode = (node, mapping) =>\n  node instanceof Array\n    ? createTypeFromTextNodes(node, mapping)\n    : createTypeFromElementNode(node, mapping)\n\nconst isObject = (val) => typeof val === 'object' && val !== null\n\nconst equalAttrs = (pattrs, yattrs) => {\n  const keys = Object.keys(pattrs).filter((key) => pattrs[key] !== null)\n  let eq =\n    keys.length ===\n      Object.keys(yattrs).filter((key) => yattrs[key] !== null).length\n  for (let i = 0; i < keys.length && eq; i++) {\n    const key = keys[i]\n    const l = pattrs[key]\n    const r = yattrs[key]\n    eq = key === 'ychange' || l === r ||\n      (isObject(l) && isObject(r) && equalAttrs(l, r))\n  }\n  return eq\n}\n\n/**\n * @typedef {Array<Array<PModel.Node>|PModel.Node>} NormalizedPNodeContent\n */\n\n/**\n * @param {any} pnode\n * @return {NormalizedPNodeContent}\n */\nconst normalizePNodeContent = (pnode) => {\n  const c = pnode.content.content\n  const res = []\n  for (let i = 0; i < c.length; i++) {\n    const n = c[i]\n    if (n.isText) {\n      const textNodes = []\n      for (let tnode = c[i]; i < c.length && tnode.isText; tnode = c[++i]) {\n        textNodes.push(tnode)\n      }\n      i--\n      res.push(textNodes)\n    } else {\n      res.push(n)\n    }\n  }\n  return res\n}\n\n/**\n * @param {Y.XmlText} ytext\n * @param {Array<any>} ptexts\n */\nconst equalYTextPText = (ytext, ptexts) => {\n  const delta = ytext.toDelta()\n  return delta.length === ptexts.length &&\n    delta.every((d, i) =>\n      d.insert === /** @type {any} */ (ptexts[i]).text &&\n      object.keys(d.attributes || {}).length === ptexts[i].marks.length &&\n      ptexts[i].marks.every((mark) =>\n        equalAttrs(d.attributes[mark.type.name] || {}, mark.attrs)\n      )\n    )\n}\n\n/**\n * @param {Y.XmlElement|Y.XmlText|Y.XmlHook} ytype\n * @param {any|Array<any>} pnode\n */\nconst equalYTypePNode = (ytype, pnode) => {\n  if (\n    ytype instanceof Y.XmlElement && !(pnode instanceof Array) &&\n    matchNodeName(ytype, pnode)\n  ) {\n    const normalizedContent = normalizePNodeContent(pnode)\n    return ytype._length === normalizedContent.length &&\n      equalAttrs(ytype.getAttributes(), pnode.attrs) &&\n      ytype.toArray().every((ychild, i) =>\n        equalYTypePNode(ychild, normalizedContent[i])\n      )\n  }\n  return ytype instanceof Y.XmlText && pnode instanceof Array &&\n    equalYTextPText(ytype, pnode)\n}\n\n/**\n * @param {PModel.Node | Array<PModel.Node> | undefined} mapped\n * @param {PModel.Node | Array<PModel.Node>} pcontent\n */\nconst mappedIdentity = (mapped, pcontent) =>\n  mapped === pcontent ||\n  (mapped instanceof Array && pcontent instanceof Array &&\n    mapped.length === pcontent.length && mapped.every((a, i) =>\n    pcontent[i] === a\n  ))\n\n/**\n * @param {Y.XmlElement} ytype\n * @param {PModel.Node} pnode\n * @param {ProsemirrorMapping} mapping\n * @return {{ foundMappedChild: boolean, equalityFactor: number }}\n */\nconst computeChildEqualityFactor = (ytype, pnode, mapping) => {\n  const yChildren = ytype.toArray()\n  const pChildren = normalizePNodeContent(pnode)\n  const pChildCnt = pChildren.length\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(yChildCnt, pChildCnt)\n  let left = 0\n  let right = 0\n  let foundMappedChild = false\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (mappedIdentity(mapping.get(leftY), leftP)) {\n      foundMappedChild = true // definite (good) match!\n    } else if (!equalYTypePNode(leftY, leftP)) {\n      break\n    }\n  }\n  for (; left + right < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (mappedIdentity(mapping.get(rightY), rightP)) {\n      foundMappedChild = true\n    } else if (!equalYTypePNode(rightY, rightP)) {\n      break\n    }\n  }\n  return {\n    equalityFactor: left + right,\n    foundMappedChild\n  }\n}\n\nconst ytextTrans = (ytext) => {\n  let str = ''\n  /**\n   * @type {Y.Item|null}\n   */\n  let n = ytext._start\n  const nAttrs = {}\n  while (n !== null) {\n    if (!n.deleted) {\n      if (n.countable && n.content instanceof Y.ContentString) {\n        str += n.content.str\n      } else if (n.content instanceof Y.ContentFormat) {\n        nAttrs[n.content.key] = null\n      }\n    }\n    n = n.right\n  }\n  return {\n    str,\n    nAttrs\n  }\n}\n\n/**\n * @todo test this more\n *\n * @param {Y.Text} ytext\n * @param {Array<any>} ptexts\n * @param {ProsemirrorMapping} mapping\n */\nconst updateYText = (ytext, ptexts, mapping) => {\n  mapping.set(ytext, ptexts)\n  const { nAttrs, str } = ytextTrans(ytext)\n  const content = ptexts.map((p) => ({\n    insert: /** @type {any} */ (p).text,\n    attributes: Object.assign({}, nAttrs, marksToAttributes(p.marks))\n  }))\n  const { insert, remove, index } = simpleDiff(\n    str,\n    content.map((c) => c.insert).join('')\n  )\n  ytext.delete(index, remove)\n  ytext.insert(index, insert)\n  ytext.applyDelta(\n    content.map((c) => ({ retain: c.insert.length, attributes: c.attributes }))\n  )\n}\n\nconst marksToAttributes = (marks) => {\n  const pattrs = {}\n  marks.forEach((mark) => {\n    if (mark.type.name !== 'ychange') {\n      pattrs[mark.type.name] = mark.attrs\n    }\n  })\n  return pattrs\n}\n\n/**\n * @private\n * @param {{transact: Function}} y\n * @param {Y.XmlFragment} yDomFragment\n * @param {any} pNode\n * @param {ProsemirrorMapping} mapping\n */\nexport const updateYFragment = (y, yDomFragment, pNode, mapping) => {\n  if (\n    yDomFragment instanceof Y.XmlElement &&\n    yDomFragment.nodeName !== pNode.type.name\n  ) {\n    throw new Error('node name mismatch!')\n  }\n  mapping.set(yDomFragment, pNode)\n  // update attributes\n  if (yDomFragment instanceof Y.XmlElement) {\n    const yDomAttrs = yDomFragment.getAttributes()\n    const pAttrs = pNode.attrs\n    for (const key in pAttrs) {\n      if (pAttrs[key] !== null) {\n        if (yDomAttrs[key] !== pAttrs[key] && key !== 'ychange') {\n          yDomFragment.setAttribute(key, pAttrs[key])\n        }\n      } else {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n    // remove all keys that are no longer in pAttrs\n    for (const key in yDomAttrs) {\n      if (pAttrs[key] === undefined) {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n  }\n  // update children\n  const pChildren = normalizePNodeContent(pNode)\n  const pChildCnt = pChildren.length\n  const yChildren = yDomFragment.toArray()\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(pChildCnt, yChildCnt)\n  let left = 0\n  let right = 0\n  // find number of matching elements from left\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (!mappedIdentity(mapping.get(leftY), leftP)) {\n      if (equalYTypePNode(leftY, leftP)) {\n        // update mapping\n        mapping.set(leftY, leftP)\n      } else {\n        break\n      }\n    }\n  }\n  // find number of matching elements from right\n  for (; right + left + 1 < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (!mappedIdentity(mapping.get(rightY), rightP)) {\n      if (equalYTypePNode(rightY, rightP)) {\n        // update mapping\n        mapping.set(rightY, rightP)\n      } else {\n        break\n      }\n    }\n  }\n  y.transact(() => {\n    // try to compare and update\n    while (yChildCnt - left - right > 0 && pChildCnt - left - right > 0) {\n      const leftY = yChildren[left]\n      const leftP = pChildren[left]\n      const rightY = yChildren[yChildCnt - right - 1]\n      const rightP = pChildren[pChildCnt - right - 1]\n      if (leftY instanceof Y.XmlText && leftP instanceof Array) {\n        if (!equalYTextPText(leftY, leftP)) {\n          updateYText(leftY, leftP, mapping)\n        }\n        left += 1\n      } else {\n        let updateLeft = leftY instanceof Y.XmlElement &&\n          matchNodeName(leftY, leftP)\n        let updateRight = rightY instanceof Y.XmlElement &&\n          matchNodeName(rightY, rightP)\n        if (updateLeft && updateRight) {\n          // decide which which element to update\n          const equalityLeft = computeChildEqualityFactor(\n            /** @type {Y.XmlElement} */ (leftY),\n            /** @type {PModel.Node} */ (leftP),\n            mapping\n          )\n          const equalityRight = computeChildEqualityFactor(\n            /** @type {Y.XmlElement} */ (rightY),\n            /** @type {PModel.Node} */ (rightP),\n            mapping\n          )\n          if (\n            equalityLeft.foundMappedChild && !equalityRight.foundMappedChild\n          ) {\n            updateRight = false\n          } else if (\n            !equalityLeft.foundMappedChild && equalityRight.foundMappedChild\n          ) {\n            updateLeft = false\n          } else if (\n            equalityLeft.equalityFactor < equalityRight.equalityFactor\n          ) {\n            updateLeft = false\n          } else {\n            updateRight = false\n          }\n        }\n        if (updateLeft) {\n          updateYFragment(\n            y,\n            /** @type {Y.XmlFragment} */ (leftY),\n            /** @type {PModel.Node} */ (leftP),\n            mapping\n          )\n          left += 1\n        } else if (updateRight) {\n          updateYFragment(\n            y,\n            /** @type {Y.XmlFragment} */ (rightY),\n            /** @type {PModel.Node} */ (rightP),\n            mapping\n          )\n          right += 1\n        } else {\n          yDomFragment.delete(left, 1)\n          yDomFragment.insert(left, [\n            createTypeFromTextOrElementNode(leftP, mapping)\n          ])\n          left += 1\n        }\n      }\n    }\n    const yDelLen = yChildCnt - left - right\n    if (\n      yChildCnt === 1 && pChildCnt === 0 && yChildren[0] instanceof Y.XmlText\n    ) {\n      // Edge case handling https://github.com/yjs/y-prosemirror/issues/108\n      // Only delete the content of the Y.Text to retain remote changes on the same Y.Text object\n      yChildren[0].delete(0, yChildren[0].length)\n    } else if (yDelLen > 0) {\n      yDomFragment.delete(left, yDelLen)\n    }\n    if (left + right < pChildCnt) {\n      const ins = []\n      for (let i = left; i < pChildCnt - right; i++) {\n        ins.push(createTypeFromTextOrElementNode(pChildren[i], mapping))\n      }\n      yDomFragment.insert(left, ins)\n    }\n  }, ySyncPluginKey)\n}\n\n/**\n * @function\n * @param {Y.XmlElement} yElement\n * @param {any} pNode Prosemirror Node\n */\nconst matchNodeName = (yElement, pNode) =>\n  !(pNode instanceof Array) && yElement.nodeName === pNode.type.name\n","import { updateYFragment } from './plugins/sync-plugin.js' // eslint-disable-line\nimport { ySyncPluginKey } from './plugins/keys.js'\nimport * as Y from 'yjs'\nimport { EditorView } from 'prosemirror-view' // eslint-disable-line\nimport { Node, Schema } from 'prosemirror-model' // eslint-disable-line\nimport * as error from 'lib0/error'\nimport * as map from 'lib0/map'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType, Node | Array<Node>>} ProsemirrorMapping\n */\n\n/**\n * Is null if no timeout is in progress.\n * Is defined if a timeout is in progress.\n * Maps from view\n * @type {Map<EditorView, Map<any, any>>|null}\n */\nlet viewsToUpdate = null\n\nconst updateMetas = () => {\n  const ups = /** @type {Map<EditorView, Map<any, any>>} */ (viewsToUpdate)\n  viewsToUpdate = null\n  ups.forEach((metas, view) => {\n    const tr = view.state.tr\n    const syncState = ySyncPluginKey.getState(view.state)\n    if (syncState && syncState.binding && !syncState.binding.isDestroyed) {\n      metas.forEach((val, key) => {\n        tr.setMeta(key, val)\n      })\n      view.dispatch(tr)\n    }\n  })\n}\n\nexport const setMeta = (view, key, value) => {\n  if (!viewsToUpdate) {\n    viewsToUpdate = new Map()\n    eventloop.timeout(0, updateMetas)\n  }\n  map.setIfUndefined(viewsToUpdate, view, map.create).set(key, value)\n}\n\n/**\n * Transforms a Prosemirror based absolute position to a Yjs Cursor (relative position in the Yjs model).\n *\n * @param {number} pos\n * @param {Y.XmlFragment} type\n * @param {ProsemirrorMapping} mapping\n * @return {any} relative position\n */\nexport const absolutePositionToRelativePosition = (pos, type, mapping) => {\n  if (pos === 0) {\n    return Y.createRelativePositionFromTypeIndex(type, 0)\n  }\n  /**\n   * @type {any}\n   */\n  let n = type._first === null ? null : /** @type {Y.ContentType} */ (type._first.content).type\n  while (n !== null && type !== n) {\n    if (n instanceof Y.XmlText) {\n      if (n._length >= pos) {\n        return Y.createRelativePositionFromTypeIndex(n, pos)\n      } else {\n        pos -= n._length\n      }\n      if (n._item !== null && n._item.next !== null) {\n        n = /** @type {Y.ContentType} */ (n._item.next.content).type\n      } else {\n        do {\n          n = n._item === null ? null : n._item.parent\n          pos--\n        } while (n !== type && n !== null && n._item !== null && n._item.next === null)\n        if (n !== null && n !== type) {\n          // @ts-gnore we know that n.next !== null because of above loop conditition\n          n = n._item === null ? null : /** @type {Y.ContentType} */ (/** @type Y.Item */ (n._item.next).content).type\n        }\n      }\n    } else {\n      const pNodeSize = /** @type {any} */ (mapping.get(n) || { nodeSize: 0 }).nodeSize\n      if (n._first !== null && pos < pNodeSize) {\n        n = /** @type {Y.ContentType} */ (n._first.content).type\n        pos--\n      } else {\n        if (pos === 1 && n._length === 0 && pNodeSize > 1) {\n          // edge case, should end in this paragraph\n          return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n        }\n        pos -= pNodeSize\n        if (n._item !== null && n._item.next !== null) {\n          n = /** @type {Y.ContentType} */ (n._item.next.content).type\n        } else {\n          if (pos === 0) {\n            // set to end of n.parent\n            n = n._item === null ? n : n._item.parent\n            return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n          }\n          do {\n            n = /** @type {Y.Item} */ (n._item).parent\n            pos--\n          } while (n !== type && /** @type {Y.Item} */ (n._item).next === null)\n          // if n is null at this point, we have an unexpected case\n          if (n !== type) {\n            // We know that n._item.next is defined because of above loop condition\n            n = /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (/** @type {Y.Item} */ (n._item).next).content).type\n          }\n        }\n      }\n    }\n    if (n === null) {\n      throw error.unexpectedCase()\n    }\n    if (pos === 0 && n.constructor !== Y.XmlText && n !== type) { // TODO: set to <= 0\n      return createRelativePosition(n._item.parent, n._item)\n    }\n  }\n  return Y.createRelativePositionFromTypeIndex(type, type._length)\n}\n\nconst createRelativePosition = (type, item) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = Y.findRootTypeKey(type)\n  } else {\n    typeid = Y.createID(type._item.id.client, type._item.id.clock)\n  }\n  return new Y.RelativePosition(typeid, tname, item.id)\n}\n\n/**\n * @param {Y.Doc} y\n * @param {Y.XmlFragment} documentType Top level type that is bound to pView\n * @param {any} relPos Encoded Yjs based relative position\n * @param {ProsemirrorMapping} mapping\n * @return {null|number}\n */\nexport const relativePositionToAbsolutePosition = (y, documentType, relPos, mapping) => {\n  const decodedPos = Y.createAbsolutePositionFromRelativePosition(relPos, y)\n  if (decodedPos === null || (decodedPos.type !== documentType && !Y.isParentOf(documentType, decodedPos.type._item))) {\n    return null\n  }\n  let type = decodedPos.type\n  let pos = 0\n  if (type.constructor === Y.XmlText) {\n    pos = decodedPos.index\n  } else if (type._item === null || !type._item.deleted) {\n    let n = type._first\n    let i = 0\n    while (i < type._length && i < decodedPos.index && n !== null) {\n      if (!n.deleted) {\n        const t = /** @type {Y.ContentType} */ (n.content).type\n        i++\n        if (t instanceof Y.XmlText) {\n          pos += t._length\n        } else {\n          pos += /** @type {any} */ (mapping.get(t)).nodeSize\n        }\n      }\n      n = /** @type {Y.Item} */ (n.right)\n    }\n    pos += 1 // increase because we go out of n\n  }\n  while (type !== documentType && type._item !== null) {\n    // @ts-ignore\n    const parent = type._item.parent\n    // @ts-ignore\n    if (parent._item === null || !parent._item.deleted) {\n      pos += 1 // the start tag\n      let n = /** @type {Y.AbstractType} */ (parent)._first\n      // now iterate until we found type\n      while (n !== null) {\n        const contentType = /** @type {Y.ContentType} */ (n.content).type\n        if (contentType === type) {\n          break\n        }\n        if (!n.deleted) {\n          if (contentType instanceof Y.XmlText) {\n            pos += contentType._length\n          } else {\n            pos += /** @type {any} */ (mapping.get(contentType)).nodeSize\n          }\n        }\n        n = n.right\n      }\n    }\n    type = /** @type {Y.AbstractType} */ (parent)\n  }\n  return pos - 1 // we don't count the most outer tag, because it is a fragment\n}\n\n/**\n * Utility method to convert a Prosemirror Doc Node into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Node} doc\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorToYDoc (doc, xmlFragment = 'prosemirror') {\n  const ydoc = new Y.Doc()\n  const type = /** @type {Y.XmlFragment} */ (ydoc.get(xmlFragment, Y.XmlFragment))\n  if (!type.doc) {\n    return ydoc\n  }\n\n  prosemirrorToYXmlFragment(doc, type)\n  return type.doc\n}\n\n/**\n * Utility method to update an empty Y.XmlFragment with content from a Prosemirror Doc Node.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * Note: The Y.XmlFragment does not need to be part of a Y.Doc document at the time that this\n * method is called, but it must be added before any other operations are performed on it.\n *\n * @param {Node} doc prosemirror document.\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorToYXmlFragment (doc, xmlFragment) {\n  const type = xmlFragment || new Y.XmlFragment()\n  const ydoc = type.doc ? type.doc : { transact: (transaction) => transaction(undefined) }\n  updateYFragment(ydoc, type, doc, new Map())\n  return type\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorJSONToYDoc (schema, state, xmlFragment = 'prosemirror') {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYDoc(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON to a Y.XmlFragment\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {Y.XmlFragment} [xmlFragment] If supplied, an xml fragment to be\n *   populated from the prosemirror state; otherwise a new XmlFragment will be created.\n * @return {Y.XmlFragment}\n */\nexport function prosemirrorJSONToYXmlFragment (schema, state, xmlFragment) {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYXmlFragment(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert a Y.Doc to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.Doc} ydoc\n * @return {Node}\n */\nexport function yDocToProsemirror (schema, ydoc) {\n  const state = yDocToProsemirrorJSON(ydoc)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n * Utility method to convert a Y.XmlFragment to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.XmlFragment} xmlFragment\n * @return {Node}\n */\nexport function yXmlFragmentToProsemirror (schema, xmlFragment) {\n  const state = yXmlFragmentToProsemirrorJSON(xmlFragment)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.Doc} ydoc\n * @param {string} xmlFragment\n * @return {Record<string, any>}\n */\nexport function yDocToProsemirrorJSON (\n  ydoc,\n  xmlFragment = 'prosemirror'\n) {\n  return yXmlFragmentToProsemirrorJSON(ydoc.getXmlFragment(xmlFragment))\n}\n\n/**\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.XmlFragment} xmlFragment The fragment, which must be part of a Y.Doc.\n * @return {Record<string, any>}\n */\nexport function yXmlFragmentToProsemirrorJSON (xmlFragment) {\n  const items = xmlFragment.toArray()\n\n  function serialize (item) {\n    /**\n     * @type {Object} NodeObject\n     * @property {string} NodeObject.type\n     * @property {Record<string, string>=} NodeObject.attrs\n     * @property {Array<NodeObject>=} NodeObject.content\n     */\n    let response\n\n    // TODO: Must be a better way to detect text nodes than this\n    if (!item.nodeName) {\n      const delta = item.toDelta()\n      response = delta.map((d) => {\n        const text = {\n          type: 'text',\n          text: d.insert\n        }\n\n        if (d.attributes) {\n          text.marks = Object.keys(d.attributes).map((type) => {\n            const attrs = d.attributes[type]\n            const mark = {\n              type\n            }\n\n            if (Object.keys(attrs)) {\n              mark.attrs = attrs\n            }\n\n            return mark\n          })\n        }\n        return text\n      })\n    } else {\n      response = {\n        type: item.nodeName\n      }\n\n      const attrs = item.getAttributes()\n      if (Object.keys(attrs).length) {\n        response.attrs = attrs\n      }\n\n      const children = item.toArray()\n      if (children.length) {\n        response.content = children.map(serialize).flat()\n      }\n    }\n\n    return response\n  }\n\n  return {\n    type: 'doc',\n    content: items.map(serialize)\n  }\n}\n","\nimport { Plugin } from 'prosemirror-state' // eslint-disable-line\n\nimport { getRelativeSelection } from './sync-plugin.js'\nimport { UndoManager, Item, ContentType, XmlElement, Text } from 'yjs'\nimport { yUndoPluginKey, ySyncPluginKey } from './keys.js'\n\nexport const undo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.undo()\n    return true\n  }\n}\n\nexport const redo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.redo()\n    return true\n  }\n}\n\nexport const defaultProtectedNodes = new Set(['paragraph'])\n\nexport const defaultDeleteFilter = (item, protectedNodes) => !(item instanceof Item) ||\n!(item.content instanceof ContentType) ||\n!(item.content.type instanceof Text ||\n  (item.content.type instanceof XmlElement && protectedNodes.has(item.content.type.nodeName))) ||\nitem.content.type._length === 0\n\nexport const yUndoPlugin = ({ protectedNodes = defaultProtectedNodes, trackedOrigins = [], undoManager = null } = {}) => new Plugin({\n  key: yUndoPluginKey,\n  state: {\n    init: (initargs, state) => {\n      // TODO: check if plugin order matches and fix\n      const ystate = ySyncPluginKey.getState(state)\n      const _undoManager = undoManager || new UndoManager(ystate.type, {\n        trackedOrigins: new Set([ySyncPluginKey].concat(trackedOrigins)),\n        deleteFilter: (item) => defaultDeleteFilter(item, protectedNodes),\n        captureTransaction: tr => tr.meta.get('addToHistory') !== false\n      })\n      return {\n        undoManager: _undoManager,\n        prevSel: null,\n        hasUndoOps: _undoManager.undoStack.length > 0,\n        hasRedoOps: _undoManager.redoStack.length > 0\n      }\n    },\n    apply: (tr, val, oldState, state) => {\n      const binding = ySyncPluginKey.getState(state).binding\n      const undoManager = val.undoManager\n      const hasUndoOps = undoManager.undoStack.length > 0\n      const hasRedoOps = undoManager.redoStack.length > 0\n      if (binding) {\n        return {\n          undoManager,\n          prevSel: getRelativeSelection(binding, oldState),\n          hasUndoOps,\n          hasRedoOps\n        }\n      } else {\n        if (hasUndoOps !== val.hasUndoOps || hasRedoOps !== val.hasRedoOps) {\n          return Object.assign({}, val, {\n            hasUndoOps: undoManager.undoStack.length > 0,\n            hasRedoOps: undoManager.redoStack.length > 0\n          })\n        } else { // nothing changed\n          return val\n        }\n      }\n    }\n  },\n  view: view => {\n    const ystate = ySyncPluginKey.getState(view.state)\n    const undoManager = yUndoPluginKey.getState(view.state).undoManager\n    undoManager.on('stack-item-added', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        stackItem.meta.set(binding, yUndoPluginKey.getState(view.state).prevSel)\n      }\n    })\n    undoManager.on('stack-item-popped', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        binding.beforeTransactionSelection = stackItem.meta.get(binding) || binding.beforeTransactionSelection\n      }\n    })\n    return {\n      destroy: () => {\n        undoManager.destroy()\n      }\n    }\n  }\n})\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","import * as Y from 'yjs'\nimport { Decoration, DecorationSet } from \"prosemirror-view\"; // eslint-disable-line\nimport { Plugin } from \"prosemirror-state\"; // eslint-disable-line\nimport { Awareness } from \"y-protocols/awareness\"; // eslint-disable-line\nimport {\n  absolutePositionToRelativePosition,\n  relativePositionToAbsolutePosition,\n  setMeta\n} from '../lib.js'\nimport { yCursorPluginKey, ySyncPluginKey } from './keys.js'\n\nimport * as math from 'lib0/math'\n\n/**\n * Default generator for a cursor element\n *\n * @param {any} user user data\n * @return {HTMLElement}\n */\nexport const defaultCursorBuilder = (user) => {\n  const cursor = document.createElement('span')\n  cursor.classList.add('ProseMirror-yjs-cursor')\n  cursor.setAttribute('style', `border-color: ${user.color}`)\n  const userDiv = document.createElement('div')\n  userDiv.setAttribute('style', `background-color: ${user.color}`)\n  userDiv.insertBefore(document.createTextNode(user.name), null)\n  const nonbreakingSpace1 = document.createTextNode('\\u2060')\n  const nonbreakingSpace2 = document.createTextNode('\\u2060')\n  cursor.insertBefore(nonbreakingSpace1, null)\n  cursor.insertBefore(userDiv, null)\n  cursor.insertBefore(nonbreakingSpace2, null)\n  return cursor\n}\n\n/**\n * Default generator for the selection attributes\n *\n * @param {any} user user data\n * @return {import('prosemirror-view').DecorationAttrs}\n */\nexport const defaultSelectionBuilder = (user) => {\n  return {\n    style: `background-color: ${user.color}70`,\n    class: 'ProseMirror-yjs-selection'\n  }\n}\n\nconst rxValidColor = /^#[0-9a-fA-F]{6}$/\n\n/**\n * @param {any} state\n * @param {Awareness} awareness\n * @param {function({ name: string, color: string }):Element} createCursor\n * @param {function({ name: string, color: string }):import('prosemirror-view').DecorationAttrs} createSelection\n * @return {any} DecorationSet\n */\nexport const createDecorations = (\n  state,\n  awareness,\n  createCursor,\n  createSelection\n) => {\n  const ystate = ySyncPluginKey.getState(state)\n  const y = ystate.doc\n  const decorations = []\n  if (\n    ystate.snapshot != null || ystate.prevSnapshot != null ||\n    ystate.binding === null\n  ) {\n    // do not render cursors while snapshot is active\n    return DecorationSet.create(state.doc, [])\n  }\n  awareness.getStates().forEach((aw, clientId) => {\n    if (clientId === y.clientID) {\n      return\n    }\n    if (aw.cursor != null) {\n      const user = aw.user || {}\n      if (user.color == null) {\n        user.color = '#ffa500'\n      } else if (!rxValidColor.test(user.color)) {\n        // We only support 6-digit RGB colors in y-prosemirror\n        console.warn('A user uses an unsupported color format', user)\n      }\n      if (user.name == null) {\n        user.name = `User: ${clientId}`\n      }\n      let anchor = relativePositionToAbsolutePosition(\n        y,\n        ystate.type,\n        Y.createRelativePositionFromJSON(aw.cursor.anchor),\n        ystate.binding.mapping\n      )\n      let head = relativePositionToAbsolutePosition(\n        y,\n        ystate.type,\n        Y.createRelativePositionFromJSON(aw.cursor.head),\n        ystate.binding.mapping\n      )\n      if (anchor !== null && head !== null) {\n        const maxsize = math.max(state.doc.content.size - 1, 0)\n        anchor = math.min(anchor, maxsize)\n        head = math.min(head, maxsize)\n        decorations.push(\n          Decoration.widget(head, () => createCursor(user), {\n            key: clientId + '',\n            side: 10\n          })\n        )\n        const from = math.min(anchor, head)\n        const to = math.max(anchor, head)\n        decorations.push(\n          Decoration.inline(from, to, createSelection(user), {\n            inclusiveEnd: true,\n            inclusiveStart: false\n          })\n        )\n      }\n    }\n  })\n  return DecorationSet.create(state.doc, decorations)\n}\n\n/**\n * A prosemirror plugin that listens to awareness information on Yjs.\n * This requires that a `prosemirrorPlugin` is also bound to the prosemirror.\n *\n * @public\n * @param {Awareness} awareness\n * @param {object} [opts]\n * @param {function(any):HTMLElement} [opts.cursorBuilder]\n * @param {function(any):import('prosemirror-view').DecorationAttrs} [opts.selectionBuilder]\n * @param {function(any):any} [opts.getSelection]\n * @param {string} [cursorStateField] By default all editor bindings use the awareness 'cursor' field to propagate cursor information.\n * @return {any}\n */\nexport const yCursorPlugin = (\n  awareness,\n  {\n    cursorBuilder = defaultCursorBuilder,\n    selectionBuilder = defaultSelectionBuilder,\n    getSelection = (state) => state.selection\n  } = {},\n  cursorStateField = 'cursor'\n) =>\n  new Plugin({\n    key: yCursorPluginKey,\n    state: {\n      init (_, state) {\n        return createDecorations(\n          state,\n          awareness,\n          cursorBuilder,\n          selectionBuilder\n        )\n      },\n      apply (tr, prevState, _oldState, newState) {\n        const ystate = ySyncPluginKey.getState(newState)\n        const yCursorState = tr.getMeta(yCursorPluginKey)\n        if (\n          (ystate && ystate.isChangeOrigin) ||\n          (yCursorState && yCursorState.awarenessUpdated)\n        ) {\n          return createDecorations(\n            newState,\n            awareness,\n            cursorBuilder,\n            selectionBuilder\n          )\n        }\n        return prevState.map(tr.mapping, tr.doc)\n      }\n    },\n    props: {\n      decorations: (state) => {\n        return yCursorPluginKey.getState(state)\n      }\n    },\n    view: (view) => {\n      const awarenessListener = () => {\n        // @ts-ignore\n        if (view.docView) {\n          setMeta(view, yCursorPluginKey, { awarenessUpdated: true })\n        }\n      }\n      const updateCursorInfo = () => {\n        const ystate = ySyncPluginKey.getState(view.state)\n        // @note We make implicit checks when checking for the cursor property\n        const current = awareness.getLocalState() || {}\n        if (ystate.binding == null) {\n          return\n        }\n        if (view.hasFocus()) {\n          const selection = getSelection(view.state)\n          /**\n           * @type {Y.RelativePosition}\n           */\n          const anchor = absolutePositionToRelativePosition(\n            selection.anchor,\n            ystate.type,\n            ystate.binding.mapping\n          )\n          /**\n           * @type {Y.RelativePosition}\n           */\n          const head = absolutePositionToRelativePosition(\n            selection.head,\n            ystate.type,\n            ystate.binding.mapping\n          )\n          if (\n            current.cursor == null ||\n            !Y.compareRelativePositions(\n              Y.createRelativePositionFromJSON(current.cursor.anchor),\n              anchor\n            ) ||\n            !Y.compareRelativePositions(\n              Y.createRelativePositionFromJSON(current.cursor.head),\n              head\n            )\n          ) {\n            awareness.setLocalStateField(cursorStateField, {\n              anchor,\n              head\n            })\n          }\n        } else if (\n          current.cursor != null &&\n          relativePositionToAbsolutePosition(\n            ystate.doc,\n            ystate.type,\n            Y.createRelativePositionFromJSON(current.cursor.anchor),\n            ystate.binding.mapping\n          ) !== null\n        ) {\n          // delete cursor information if current cursor information is owned by this editor binding\n          awareness.setLocalStateField(cursorStateField, null)\n        }\n      }\n      awareness.on('change', awarenessListener)\n      view.dom.addEventListener('focusin', updateCursorInfo)\n      view.dom.addEventListener('focusout', updateCursorInfo)\n      return {\n        update: updateCursorInfo,\n        destroy: () => {\n          view.dom.removeEventListener('focusin', updateCursorInfo)\n          view.dom.removeEventListener('focusout', updateCursorInfo)\n          awareness.off('change', awarenessListener)\n          awareness.setLocalStateField(cursorStateField, null)\n        }\n      }\n    }\n  })\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Ctx,\n    DefaultValue,\n    editorViewCtx,\n    getDoc,\n    parserCtx,\n    prosePluginsCtx,\n    schemaCtx,\n    themeManagerCtx,\n} from '@milkdown/core';\nimport { ctxNotBind, missingYjsDoc } from '@milkdown/exception';\nimport { keydownHandler } from '@milkdown/prose/keymap';\nimport { Node } from '@milkdown/prose/model';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport type { DecorationAttrs } from '@milkdown/prose/view';\nimport {\n    prosemirrorToYDoc,\n    redo,\n    undo,\n    yCursorPlugin,\n    yCursorPluginKey,\n    yDocToProsemirror,\n    ySyncPlugin,\n    ySyncPluginKey,\n    yUndoPlugin,\n    yUndoPluginKey,\n} from 'y-prosemirror';\nimport { Awareness } from 'y-protocols/awareness';\nimport { applyUpdate, Doc, encodeStateAsUpdate, PermanentUserData } from 'yjs';\n\nexport type ColorDef = {\n    light: string;\n    dark: string;\n};\nexport type YSyncOpts = {\n    colors?: Array<ColorDef>;\n    colorMapping?: Map<string, ColorDef>;\n    permanentUserData?: PermanentUserData | null;\n};\nexport type yCursorOpts = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    cursorBuilder?: (arg: any) => HTMLElement;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    selectionBuilder?: (arg: any) => DecorationAttrs;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getSelection?: (arg: any) => any;\n};\nexport type yUndoOpts = {\n    protectedNodes?: Set<string>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    trackedOrigins?: any[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    undoManager?: any;\n};\n\nexport type Options = {\n    ySyncOpts?: YSyncOpts;\n    yCursorOpts?: yCursorOpts;\n    yCursorStateField?: string;\n    yUndoOpts?: yUndoOpts;\n};\n\nexport const CollabKeymapPluginKey = new PluginKey('MILKDOWN_COLLAB_KEYMAP');\n\nconst collabPluginKeys = [CollabKeymapPluginKey, ySyncPluginKey, yCursorPluginKey, yUndoPluginKey];\n\nexport class CollabService {\n    #options: Options = {};\n    #doc: Doc | null = null;\n    #awareness: Awareness | null = null;\n    #ctx: Ctx | null = null;\n    #connected = false;\n\n    #valueToNode(value: DefaultValue): Node | undefined {\n        if (!this.#ctx) throw ctxNotBind();\n\n        const schema = this.#ctx.get(schemaCtx);\n        const parser = this.#ctx.get(parserCtx);\n\n        const doc = getDoc(value, parser, schema);\n        return doc;\n    }\n\n    #createPlugins(): Plugin[] {\n        if (!this.#doc) throw missingYjsDoc();\n        const { ySyncOpts, yUndoOpts } = this.#options;\n        const type = this.#doc.getXmlFragment('prosemirror');\n        const plugins = [\n            ySyncPlugin(type, ySyncOpts),\n            yUndoPlugin(yUndoOpts),\n            new Plugin({\n                key: CollabKeymapPluginKey,\n                props: {\n                    handleKeyDown: keydownHandler({\n                        'Mod-z': undo,\n                        'Mod-y': redo,\n                        'Mod-Shift-z': redo,\n                    }),\n                },\n            }),\n        ];\n        if (this.#awareness) {\n            const { yCursorOpts, yCursorStateField } = this.#options;\n            plugins.push(yCursorPlugin(this.#awareness, yCursorOpts as Required<yCursorOpts>, yCursorStateField));\n        }\n\n        return plugins;\n    }\n\n    #flushEditor(plugins: Plugin[]) {\n        if (!this.#ctx) throw ctxNotBind();\n        this.#ctx.set(prosePluginsCtx, plugins);\n\n        const view = this.#ctx.get(editorViewCtx);\n        const newState = view.state.reconfigure({ plugins });\n        view.updateState(newState);\n\n        const theme = this.#ctx.get(themeManagerCtx);\n        theme.flush(this.#ctx);\n    }\n\n    bindCtx(ctx: Ctx) {\n        this.#ctx = ctx;\n        return this;\n    }\n\n    bindDoc(doc: Doc) {\n        this.#doc = doc;\n        return this;\n    }\n\n    setOptions(options: Options) {\n        this.#options = options;\n        return this;\n    }\n\n    mergeOptions(options: Partial<Options>) {\n        Object.assign(this.#options, options);\n        return this;\n    }\n\n    setAwareness(awareness: Awareness) {\n        this.#awareness = awareness;\n        return this;\n    }\n\n    applyTemplate(template: DefaultValue, condition?: (yDocNode: Node, templateNode: Node) => boolean) {\n        if (!this.#ctx) throw ctxNotBind();\n        if (!this.#doc) throw missingYjsDoc();\n        const conditionFn = condition || ((yDocNode) => yDocNode.textContent.length === 0);\n\n        const node = this.#valueToNode(template);\n        const schema = this.#ctx.get(schemaCtx);\n        const yDocNode = yDocToProsemirror(schema, this.#doc);\n\n        if (node && conditionFn(yDocNode, node)) {\n            const fragment = this.#doc.getXmlFragment('prosemirror');\n            fragment.delete(0, fragment.length);\n            const templateDoc = prosemirrorToYDoc(node);\n            const template = encodeStateAsUpdate(templateDoc);\n            applyUpdate(this.#doc, template);\n            templateDoc.destroy();\n        }\n\n        return this;\n    }\n\n    connect() {\n        if (!this.#ctx) throw ctxNotBind();\n        if (this.#connected) return;\n\n        const prosePlugins = this.#ctx.get(prosePluginsCtx);\n        const collabPlugins = this.#createPlugins();\n        const plugins = prosePlugins.concat(collabPlugins);\n\n        this.#flushEditor(plugins);\n        this.#connected = true;\n\n        return this;\n    }\n\n    disconnect() {\n        if (!this.#ctx) throw ctxNotBind();\n        if (!this.#connected) return this;\n\n        const prosePlugins = this.#ctx.get(prosePluginsCtx);\n        const plugins = prosePlugins.filter(\n            (plugin) => !plugin.spec.key || !collabPluginKeys.includes(plugin.spec.key),\n        );\n\n        this.#flushEditor(plugins);\n        this.#connected = false;\n\n        return this;\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Color, Emotion, ThemeBorder, ThemeColor, ThemeManager, ThemeSize } from '@milkdown/core';\n\nexport const injectStyle = (themeManager: ThemeManager, { injectGlobal }: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n    const lineWidth = themeManager.get(ThemeSize, 'lineWidth');\n    const css = injectGlobal;\n    css`\n        .milkdown .paragraph {\n            overflow: visible;\n        }\n        /* this is a rough fix for the first cursor position when the first paragraph is empty */\n        .ProseMirror > .ProseMirror-yjs-cursor:first-child {\n            margin-top: 1em;\n        }\n        .ProseMirror p:first-child,\n        .ProseMirror h1:first-child,\n        .ProseMirror h2:first-child,\n        .ProseMirror h3:first-child,\n        .ProseMirror h4:first-child,\n        .ProseMirror h5:first-child,\n        .ProseMirror h6:first-child {\n            margin-top: 1em;\n        }\n        /* This gives the remote user caret. The colors are automatically overwritten*/\n        .ProseMirror-yjs-cursor {\n            position: relative;\n            margin-left: -${lineWidth};\n            margin-right: -${lineWidth};\n            ${themeManager.get(ThemeBorder, 'left')};\n            ${themeManager.get(ThemeBorder, 'right')};\n            word-break: normal;\n            pointer-events: none;\n        }\n        /* This renders the username above the caret */\n        .ProseMirror-yjs-cursor > div {\n            position: absolute;\n            top: -1.05em;\n            left: -${lineWidth};\n            font-size: 13px;\n            background-color: ${palette('background')};\n            font-family: serif;\n            font-style: normal;\n            font-weight: normal;\n            line-height: normal;\n            user-select: none;\n            color: white;\n            padding-left: 2px;\n            padding-right: 2px;\n            white-space: nowrap;\n        }\n    `;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createCmdKey } from '@milkdown/core';\nimport { setBlockType, wrapIn } from '@milkdown/prose/commands';\nimport { redo, undo } from '@milkdown/prose/history';\nimport { MarkType } from '@milkdown/prose/model';\nimport { liftListItem, sinkListItem } from '@milkdown/prose/schema-list';\nimport { EditorState, TextSelection } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\n\nimport { ButtonConfig } from './button';\nimport { SelectConfig } from './select';\n\nexport type CommonConfig = {\n    disabled?: (view: EditorView) => boolean;\n};\n\nexport type ConfigItem = SelectConfig | ButtonConfig;\n\nexport type Config = Array<Array<ConfigItem>>;\n\nconst hasMark = (state: EditorState, type: MarkType | undefined): boolean => {\n    if (!type) return false;\n    const { from, $from, to, empty } = state.selection;\n    if (empty) {\n        return !!type.isInSet(state.storedMarks || $from.marks());\n    }\n    return state.doc.rangeHasMark(from, to, type);\n};\n\nexport const SelectParent = createCmdKey('SelectParent');\nexport const defaultConfig: Config = [\n    [\n        {\n            type: 'button',\n            icon: 'undo',\n            key: 'Undo',\n            disabled: (view) => {\n                return !undo(view.state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'redo',\n            key: 'Redo',\n            disabled: (view) => {\n                return !redo(view.state);\n            },\n        },\n    ],\n    [\n        {\n            type: 'select',\n            text: 'Heading',\n            options: [\n                { id: '1', text: 'Large Heading' },\n                { id: '2', text: 'Medium Heading' },\n                { id: '3', text: 'Small Heading' },\n                { id: '0', text: 'Plain Text' },\n            ],\n            disabled: (view) => {\n                const { state } = view;\n                const heading = state.schema.nodes['heading'];\n                if (!heading) return true;\n                const setToHeading = (level: number) => setBlockType(heading, { level })(state);\n                return (\n                    !(view.state.selection instanceof TextSelection) ||\n                    !(setToHeading(1) || setToHeading(2) || setToHeading(3))\n                );\n            },\n            onSelect: (id) => (Number(id) ? ['TurnIntoHeading', Number(id)] : ['TurnIntoText', null]),\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'bold',\n            key: 'ToggleBold',\n            active: (view) => hasMark(view.state, view.state.schema.marks['strong']),\n            disabled: (view) => !view.state.schema.marks['strong'],\n        },\n        {\n            type: 'button',\n            icon: 'italic',\n            key: 'ToggleItalic',\n            active: (view) => hasMark(view.state, view.state.schema.marks['em']),\n            disabled: (view) => !view.state.schema.marks['em'],\n        },\n        {\n            type: 'button',\n            icon: 'strikeThrough',\n            key: 'ToggleStrikeThrough',\n            active: (view) => hasMark(view.state, view.state.schema.marks['strike_through']),\n            disabled: (view) => !view.state.schema.marks['strike_through'],\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'bulletList',\n            key: 'WrapInBulletList',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['bullet_list'];\n                if (!node) return true;\n                return !wrapIn(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'orderedList',\n            key: 'WrapInOrderedList',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['ordered_list'];\n                if (!node) return true;\n                return !wrapIn(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'taskList',\n            key: 'TurnIntoTaskList',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['task_list_item'];\n                if (!node) return true;\n                return !wrapIn(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'liftList',\n            key: 'LiftListItem',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['list_item'];\n                if (!node) return true;\n                return !liftListItem(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'sinkList',\n            key: 'SinkListItem',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['list_item'];\n                if (!node) return true;\n                return !sinkListItem(node)(state);\n            },\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'link',\n            key: 'ToggleLink',\n            active: (view) => hasMark(view.state, view.state.schema.marks['link']),\n        },\n        {\n            type: 'button',\n            icon: 'image',\n            key: 'InsertImage',\n        },\n        {\n            type: 'button',\n            icon: 'table',\n            key: 'InsertTable',\n        },\n        {\n            type: 'button',\n            icon: 'code',\n            key: 'TurnIntoCodeFence',\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'quote',\n            key: 'WrapInBlockquote',\n        },\n        {\n            type: 'button',\n            icon: 'divider',\n            key: 'InsertHr',\n        },\n        {\n            type: 'button',\n            icon: 'select',\n            key: SelectParent,\n        },\n    ],\n];\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { CmdKey, commandsCtx, Ctx, getPalette, Icon, ThemeIcon } from '@milkdown/core';\nimport type { EditorView } from '@milkdown/prose/view';\nimport type { ThemeUtils } from '@milkdown/utils';\n\nimport type { CommonConfig } from './default-config';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ButtonConfig<T = any> = {\n    type: 'button';\n    icon: Icon;\n    active?: (view: EditorView) => boolean;\n    key: CmdKey<T> | string;\n    options?: T;\n} & CommonConfig;\n\nexport const button = (utils: ThemeUtils, config: ButtonConfig, ctx: Ctx) => {\n    const $button = document.createElement('button');\n    $button.setAttribute('type', 'button');\n    utils.themeManager.onFlush(() => {\n        $button.className = 'button';\n\n        const buttonStyle = utils.getStyle(({ css }) => {\n            const palette = getPalette(utils.themeManager);\n            return css`\n                border: 0;\n                box-sizing: unset;\n                width: 28px;\n                height: 28px;\n                padding: 4px;\n                margin: 8px;\n                flex-shrink: 0;\n                font-size: 14px;\n\n                display: flex;\n                justify-content: center;\n                align-items: center;\n\n                background-color: ${palette('surface')};\n                color: ${palette('solid')};\n                transition: color 0.4s ease-in-out, background-color 0.4s ease-in-out;\n\n                cursor: pointer;\n\n                &.active,\n                &:hover {\n                    background-color: ${palette('secondary', 0.12)};\n                    color: ${palette('primary')};\n                }\n\n                &:disabled {\n                    display: none;\n                }\n\n                .material-icons-outlined {\n                    font-size: 24px;\n                }\n            `;\n        });\n\n        if (buttonStyle) {\n            $button.classList.add(buttonStyle);\n        }\n    });\n\n    const $icon = utils.themeManager.get(ThemeIcon, config.icon);\n    if ($icon) {\n        const { label, dom } = $icon;\n        if (label) {\n            $button.setAttribute('aria-label', label);\n            $button.setAttribute('title', label);\n        }\n        $button.appendChild(dom);\n    } else {\n        $button.setAttribute('aria-label', config.icon);\n        $button.setAttribute('title', config.icon);\n        $button.textContent = config.icon;\n    }\n\n    $button.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        ctx.get(commandsCtx).call(config.key, config.options);\n    });\n    return $button;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { ThemeColor, ThemeSize } from '@milkdown/core';\nimport { ThemeUtils } from '@milkdown/utils';\n\nexport type DividerConfig = {\n    type: 'divider';\n    group: HTMLElement[];\n};\nexport const divider = (utils: ThemeUtils) => {\n    const $divider = document.createElement('div');\n    $divider.classList.add('divider');\n    const { themeManager } = utils;\n    themeManager.onFlush(() => {\n        const dividerStyle = utils.getStyle(({ css }) => {\n            return css`\n                flex-shrink: 0;\n                width: ${themeManager.get(ThemeSize, 'lineWidth')};\n                background-color: ${themeManager.get(ThemeColor, ['line'])};\n                margin: 12px 16px;\n                min-height: 24px;\n            `;\n        });\n        if (dividerStyle) {\n            $divider.classList.add(dividerStyle);\n        }\n    });\n    return $divider;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport {\n    CmdKey,\n    Color,\n    commandsCtx,\n    Ctx,\n    ThemeBorder,\n    ThemeColor,\n    ThemeIcon,\n    ThemeShadow,\n    ThemeSize,\n} from '@milkdown/core';\nimport { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport type { CommonConfig } from './default-config';\n\ntype SelectOptions = {\n    id: string;\n    text: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type SelectConfig<T = any> = {\n    type: 'select';\n    text: string;\n    options: SelectOptions[];\n    active?: (view: EditorView) => string;\n    onSelect: (id: string, view: EditorView) => [key: CmdKey<T> | string, payload?: T];\n} & CommonConfig;\n\nexport const select = (utils: ThemeUtils, config: SelectConfig, ctx: Ctx, view: EditorView) => {\n    const selectorWrapper = document.createElement('div');\n    selectorWrapper.classList.add('menu-selector-wrapper', 'fold');\n\n    const selector = document.createElement('button');\n    selector.setAttribute('type', 'button');\n    selector.classList.add('menu-selector', 'fold');\n    selector.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        selectorWrapper.classList.toggle('fold');\n        const wrapperRect = selectorWrapper.getBoundingClientRect();\n        selectorList.style.left = `${wrapperRect.left - (view.dom.parentElement?.getBoundingClientRect().left || 0)}px`;\n        const border = utils.themeManager.get(ThemeSize, 'lineWidth');\n        selectorList.style.top = `calc(${wrapperRect.height + 'px'} + ${border} * 2)`;\n    });\n    view.dom.addEventListener('click', () => {\n        selectorWrapper.classList.add('fold');\n    });\n\n    const selectorValue = document.createElement('span');\n    selectorValue.classList.add('menu-selector-value');\n    selectorValue.textContent = config.text;\n\n    const selectorButton = utils.themeManager.get(ThemeIcon, 'downArrow')?.dom;\n\n    selectorWrapper.appendChild(selector);\n    selector.appendChild(selectorValue);\n    if (selectorButton) {\n        selectorButton.setAttribute('aria-hidden', 'true');\n        selector.appendChild(selectorButton);\n    }\n\n    const selectorList = document.createElement('div');\n    selectorList.classList.add('menu-selector-list');\n    config.options.forEach((option) => {\n        const selectorListItem = document.createElement('button');\n        selectorListItem.setAttribute('type', 'button');\n        selectorListItem.dataset['id'] = option.id;\n        selectorListItem.textContent = option.text;\n        selectorListItem.classList.add('menu-selector-list-item');\n        selectorList.appendChild(selectorListItem);\n    });\n\n    selectorList.addEventListener('mousedown', (e) => {\n        const { target } = e;\n        if (target instanceof HTMLButtonElement && target.dataset['id']) {\n            const params = config.onSelect(target.dataset['id'], view);\n            const [key, payload] = params;\n            if (typeof key === 'string') {\n                ctx.get(commandsCtx).call(key, payload);\n            } else {\n                ctx.get(commandsCtx).call(key, payload);\n            }\n            selectorWrapper.classList.add('fold');\n        }\n    });\n\n    selectorWrapper.appendChild(selectorList);\n\n    const { themeManager } = utils;\n    themeManager.onFlush(() => {\n        const selectStyle = utils.getStyle(({ css }) => {\n            const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n            return css`\n                flex-shrink: 0;\n                font-weight: 500;\n                font-size: 14px;\n\n                ${themeManager.get(ThemeBorder, 'right')}\n                ${themeManager.get(ThemeBorder, 'left')}\n\n                .menu-selector {\n                    border: 0;\n                    box-sizing: unset;\n                    cursor: pointer;\n                    font: inherit;\n                    text-align: left;\n                    justify-content: space-between;\n                    align-items: center;\n                    color: ${palette('neutral', 0.87)};\n                    display: flex;\n                    padding: 4px;\n                    margin: 8px;\n                    height: 28px;\n                    background: ${palette('secondary', 0.12)};\n                    width: 160px;\n\n                    &:disabled {\n                        display: none;\n                    }\n                }\n\n                .menu-selector-value {\n                    flex: 1;\n                    white-space: nowrap;\n                    text-overflow: ellipsis;\n                }\n\n                .menu-selector-list {\n                    width: 184px;\n                    position: absolute;\n                    background: ${palette('surface')};\n                    ${themeManager.get(ThemeBorder, undefined)}\n                    ${themeManager.get(ThemeShadow, undefined)}\n                    border-bottom-left-radius: ${themeManager.get(ThemeSize, 'radius')};\n                    border-bottom-right-radius: ${themeManager.get(ThemeSize, 'radius')};\n                    z-index: 3;\n                }\n\n                .menu-selector-list-item {\n                    background-color: transparent;\n                    border: 0;\n                    cursor: pointer;\n                    display: block;\n                    font: inherit;\n                    text-align: left;\n                    padding: 12px 16px;\n                    line-height: 28px;\n                    width: 100%;\n                    color: ${palette('neutral', 0.87)};\n\n                    &:hover {\n                        background: ${palette('secondary', 0.12)};\n                        color: ${palette('primary')};\n                    }\n                }\n\n                &.fold {\n                    border-color: transparent;\n\n                    .menu-selector {\n                        background: unset;\n                    }\n\n                    .menu-selector-list {\n                        display: none;\n                    }\n                }\n            `;\n        });\n        if (selectStyle) {\n            selectorWrapper.classList.add(selectStyle);\n        }\n    });\n\n    return selectorWrapper;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx, rootCtx, ThemeBorder, ThemeColor, ThemeFont, ThemeScrollbar } from '@milkdown/core';\nimport { missingMenuWrapper, missingRootElement } from '@milkdown/exception';\nimport { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nexport type HandleDOMParams = {\n    menu: HTMLDivElement;\n    menuWrapper: HTMLDivElement;\n    editorRoot: HTMLElement;\n    milkdownDOM: HTMLElement;\n    editorDOM: HTMLDivElement;\n};\n\nexport type HandleDOM = (params: HandleDOMParams) => void;\n\nconst restore: HandleDOM = ({ menu, menuWrapper, milkdownDOM, editorRoot }) => {\n    editorRoot.appendChild(milkdownDOM);\n    menuWrapper.remove();\n    menu.remove();\n};\n\nconst defaultDOMHandler: HandleDOM = ({ menu, menuWrapper, milkdownDOM }) => {\n    menuWrapper.insertBefore(menu, milkdownDOM);\n};\n\nconst getRoot = (root: string | Node | null | undefined) => {\n    if (!root) return document.body;\n\n    if (typeof root === 'string') {\n        const el = document.querySelector(root);\n        if (el) return el;\n\n        return document.body;\n    }\n\n    return root;\n};\n\nexport const initWrapper = (ctx: Ctx, view: EditorView) => {\n    let _menuWrapper: HTMLDivElement | null = null;\n    _menuWrapper = document.createElement('div');\n    _menuWrapper.classList.add('milkdown-menu-wrapper');\n\n    const root = ctx.get(rootCtx);\n\n    const editorDOM = view.dom;\n    const editorRoot = getRoot(root) as HTMLElement;\n    const milkdownDOM = editorDOM.parentElement;\n\n    if (!milkdownDOM) {\n        throw missingRootElement();\n    }\n\n    editorRoot.replaceChild(_menuWrapper, milkdownDOM);\n    _menuWrapper.appendChild(milkdownDOM);\n    return _menuWrapper;\n};\n\nexport const menubar = (\n    utils: ThemeUtils,\n    view: EditorView,\n    ctx: Ctx,\n    menuWrapper: HTMLDivElement | null,\n    domHandler: HandleDOM = defaultDOMHandler,\n) => {\n    if (!menuWrapper) {\n        throw missingMenuWrapper();\n    }\n\n    const menu = document.createElement('div');\n    menu.classList.add('milkdown-menu');\n\n    const editorDOM = view.dom as HTMLDivElement;\n    const { themeManager } = utils;\n\n    themeManager.onFlush(() => {\n        const editorWrapperStyle = utils.getStyle(() => {\n            return themeManager.get(ThemeScrollbar, ['y']) as string;\n        });\n        if (editorWrapperStyle) {\n            editorDOM.classList.add(editorWrapperStyle);\n        }\n        const menuStyle = utils.getStyle(({ css }) => {\n            const border = themeManager.get(ThemeBorder, undefined);\n            const scrollbar = themeManager.get(ThemeScrollbar, ['x', 'thin']);\n            const style = css`\n                font-family: ${themeManager.get(ThemeFont, 'typography')};\n                box-sizing: border-box;\n                width: 100%;\n                display: flex;\n                flex-wrap: nowrap;\n                overflow-x: scroll;\n                ${border};\n                ${scrollbar};\n                overflow-y: hidden;\n                background: ${themeManager.get(ThemeColor, ['surface'])};\n                transition: background-color 0.4s ease-in-out;\n\n                -webkit-overflow-scrolling: auto;\n\n                .disabled {\n                    display: none;\n                }\n            `;\n            return style;\n        });\n        if (menuStyle) {\n            menuStyle.split(' ').forEach((x) => menu.classList.add(x));\n        }\n    });\n\n    const root = ctx.get(rootCtx);\n\n    const editorRoot = getRoot(root) as HTMLElement;\n    const milkdownDOM = editorDOM.parentElement;\n\n    if (!milkdownDOM) {\n        throw missingRootElement();\n    }\n\n    domHandler({\n        menu,\n        menuWrapper,\n        editorDOM,\n        editorRoot,\n        milkdownDOM,\n    });\n\n    const restoreDOM = () => {\n        restore({\n            menu,\n            menuWrapper,\n            editorDOM,\n            editorRoot,\n            milkdownDOM,\n        });\n        return milkdownDOM;\n    };\n\n    return [menu, restoreDOM] as const;\n};\n","import compute from 'compute-scroll-into-view';\n\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\n\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var canSmoothScroll = ('scrollBehavior' in document.body.style);\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\n\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n\n  if (isOptionsObject(options)) {\n    return options;\n  }\n\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\n\nfunction scrollIntoView(target, options) {\n  var isTargetAttached = target.isConnected || target.ownerDocument.documentElement.contains(target);\n\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(isTargetAttached ? compute(target, options) : []);\n  }\n\n  if (!isTargetAttached) {\n    return;\n  }\n\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\n\nexport default scrollIntoView;","import scrollIntoView from 'scroll-into-view-if-needed';\nvar memoizedNow;\n\nvar now = function now() {\n  if (!memoizedNow) {\n    memoizedNow = 'performance' in window ? performance.now.bind(performance) : Date.now;\n  }\n\n  return memoizedNow();\n};\n\nfunction step(context) {\n  var time = now();\n  var elapsed = Math.min((time - context.startTime) / context.duration, 1);\n  var value = context.ease(elapsed);\n  var currentX = context.startX + (context.x - context.startX) * value;\n  var currentY = context.startY + (context.y - context.startY) * value;\n  context.method(currentX, currentY);\n\n  if (currentX !== context.x || currentY !== context.y) {\n    requestAnimationFrame(function () {\n      return step(context);\n    });\n  } else {\n    context.cb();\n  }\n}\n\nfunction smoothScroll(el, x, y, duration, ease, cb) {\n  if (duration === void 0) {\n    duration = 600;\n  }\n\n  if (ease === void 0) {\n    ease = function ease(t) {\n      return 1 + --t * t * t * t * t;\n    };\n  }\n\n  var scrollable;\n  var startX;\n  var startY;\n  var method;\n  scrollable = el;\n  startX = el.scrollLeft;\n  startY = el.scrollTop;\n\n  method = function method(x, y) {\n    el.scrollLeft = Math.ceil(x);\n    el.scrollTop = Math.ceil(y);\n  };\n\n  step({\n    scrollable: scrollable,\n    method: method,\n    startTime: now(),\n    startX: startX,\n    startY: startY,\n    x: x,\n    y: y,\n    duration: duration,\n    ease: ease,\n    cb: cb\n  });\n}\n\nvar shouldSmoothScroll = function shouldSmoothScroll(options) {\n  return options && !options.behavior || options.behavior === 'smooth';\n};\n\nfunction scroll(target, options) {\n  var overrides = options || {};\n\n  if (shouldSmoothScroll(overrides)) {\n    return scrollIntoView(target, {\n      block: overrides.block,\n      inline: overrides.inline,\n      scrollMode: overrides.scrollMode,\n      boundary: overrides.boundary,\n      behavior: function behavior(actions) {\n        return Promise.all(actions.reduce(function (results, _ref) {\n          var el = _ref.el,\n              left = _ref.left,\n              top = _ref.top;\n          var startLeft = el.scrollLeft;\n          var startTop = el.scrollTop;\n\n          if (startLeft === left && startTop === top) {\n            return results;\n          }\n\n          return [].concat(results, [new Promise(function (resolve) {\n            return smoothScroll(el, left, top, overrides.duration, overrides.ease, function () {\n              return resolve({\n                el: el,\n                left: [startLeft, left],\n                top: [startTop, top]\n              });\n            });\n          })]);\n        }, []));\n      }\n    });\n  }\n\n  return Promise.resolve(scrollIntoView(target, options));\n}\n\nvar smoothScrollIntoView = scroll;\nexport default smoothScrollIntoView;","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeIcon, ThemeManager } from '@milkdown/core';\nimport type { Icon } from '@milkdown/design-system';\nimport { missingIcon } from '@milkdown/exception';\nimport type { Node } from '@milkdown/prose/model';\nimport type { Command } from '@milkdown/prose/state';\nimport type { ThemeUtils } from '@milkdown/utils';\n\nimport { injectStyle } from './style';\n\nexport const createDropdown = (utils: ThemeUtils, className: string) => {\n    const div = document.createElement('div');\n    div.setAttribute('role', 'listbox');\n    div.setAttribute('tabindex', '-1');\n    utils.themeManager.onFlush(() => {\n        const style = utils.getStyle((emotion) => injectStyle(utils.themeManager, emotion));\n\n        if (style) {\n            div.classList.add(style);\n        }\n    });\n\n    div.classList.add(utils.getClassName({}, className), 'hide');\n\n    return div;\n};\n\ntype ItemOptions = {\n    textClassName: string;\n};\nexport const createDropdownItem = (\n    themeManager: ThemeManager,\n    text: string,\n    icon: Icon,\n    options?: Partial<ItemOptions>,\n) => {\n    const textClassName = options?.textClassName ?? 'text';\n\n    const div = document.createElement('div');\n    div.setAttribute('role', 'option');\n    div.classList.add('slash-dropdown-item');\n\n    const iconSpan = themeManager.get(ThemeIcon, icon);\n\n    if (!iconSpan) {\n        throw missingIcon(icon);\n    }\n\n    const textSpan = document.createElement('span');\n    textSpan.textContent = text;\n    textSpan.className = textClassName;\n\n    div.appendChild(iconSpan.dom);\n    div.appendChild(textSpan);\n\n    return div;\n};\n\nexport const getDepth = (node: Node) => {\n    let cur = node;\n    let depth = 0;\n    while (cur.childCount) {\n        cur = cur.child(0);\n        depth += 1;\n    }\n\n    return depth;\n};\n\nconst cleanUp: Command = (state, dispatch) => {\n    const { selection } = state;\n    const { $from } = selection;\n    const tr = state.tr.deleteRange($from.start(), $from.pos);\n    dispatch?.(tr);\n    return false;\n};\n\nexport const cleanUpAndCreateNode =\n    (createCommand: () => void): Command =>\n    (state, dispatch, view) => {\n        if (view) {\n            cleanUp(state, dispatch, view);\n            createCommand();\n        }\n        return true;\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, Ctx, schemaCtx, themeManagerCtx } from '@milkdown/core';\nimport { Node } from '@milkdown/prose/model';\nimport { EditorState } from '@milkdown/prose/state';\n\nimport { WrappedAction } from './item';\nimport { createDropdownItem } from './utility';\n\ntype Nullable<T> = T | null | undefined;\n\nexport type StatusConfig = {\n    placeholder?: Nullable<string>;\n    actions?: Nullable<WrappedAction[]>;\n};\n\nexport type StatusConfigBuilderParams = {\n    content: string;\n    isTopLevel: boolean;\n    parentNode: Node;\n    state: EditorState;\n};\n\nexport type StatusConfigBuilder = (params: StatusConfigBuilderParams) => Nullable<StatusConfig>;\n\nexport type Config = (ctx: Ctx) => StatusConfigBuilder;\n\nexport const defaultActions = (ctx: Ctx, input = '/'): WrappedAction[] => {\n    const { nodes } = ctx.get(schemaCtx);\n    const actions: Array<WrappedAction & { keyword: string[]; typeName: string }> = [\n        {\n            id: 'h1',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Large Heading', 'h1'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoHeading', 1),\n            keyword: ['h1', 'large heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'h2',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Medium Heading', 'h2'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoHeading', 2),\n            keyword: ['h2', 'medium heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'h3',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Small Heading', 'h3'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoHeading', 3),\n            keyword: ['h3', 'small heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'bulletList',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Bullet List', 'bulletList'),\n            command: () => ctx.get(commandsCtx).call('WrapInBulletList'),\n            keyword: ['bullet list', 'ul'],\n            typeName: 'bullet_list',\n        },\n        {\n            id: 'orderedList',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Ordered List', 'orderedList'),\n            command: () => ctx.get(commandsCtx).call('WrapInOrderedList'),\n            keyword: ['ordered list', 'ol'],\n            typeName: 'ordered_list',\n        },\n        {\n            id: 'taskList',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Task List', 'taskList'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoTaskList'),\n            keyword: ['task list', 'task'],\n            typeName: 'task_list_item',\n        },\n        {\n            id: 'image',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Image', 'image'),\n            command: () => ctx.get(commandsCtx).call('InsertImage'),\n            keyword: ['image'],\n            typeName: 'image',\n        },\n        {\n            id: 'blockquote',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Quote', 'quote'),\n            command: () => ctx.get(commandsCtx).call('WrapInBlockquote'),\n            keyword: ['quote', 'blockquote'],\n            typeName: 'blockquote',\n        },\n        {\n            id: 'table',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Table', 'table'),\n            command: () => ctx.get(commandsCtx).call('InsertTable'),\n            keyword: ['table'],\n            typeName: 'table',\n        },\n        {\n            id: 'code',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Code Fence', 'code'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoCodeFence'),\n            keyword: ['code'],\n            typeName: 'fence',\n        },\n        {\n            id: 'divider',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Divide Line', 'divider'),\n            command: () => ctx.get(commandsCtx).call('InsertHr'),\n            keyword: ['divider', 'hr'],\n            typeName: 'hr',\n        },\n    ];\n\n    const userInput = input.slice(1).toLocaleLowerCase();\n\n    return actions\n        .filter((action) => !!nodes[action.typeName] && action.keyword.some((keyword) => keyword.includes(userInput)))\n        .map(({ keyword, typeName, ...action }) => action);\n};\n\nexport const defaultConfig: Config = (ctx) => {\n    return ({ content, isTopLevel }) => {\n        if (!isTopLevel) return null;\n\n        if (!content) {\n            return { placeholder: 'Type / to use the slash commands...' };\n        }\n\n        if (content.startsWith('/')) {\n            return content === '/'\n                ? {\n                      placeholder: 'Type to filter...',\n                      actions: defaultActions(ctx),\n                  }\n                : {\n                      actions: defaultActions(ctx, content),\n                  };\n        }\n\n        return null;\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Color, Emotion, ThemeColor, ThemeFont, ThemeManager } from '@milkdown/core';\nimport { findParentNode } from '@milkdown/prose';\nimport { EditorState } from '@milkdown/prose/state';\nimport { Decoration, DecorationSet, EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport type { Status } from './status';\n\nexport type Props = ReturnType<typeof createProps>;\n\nconst createEmptyStyle = (themeManager: ThemeManager, { css }: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n    const typography = themeManager.get(ThemeFont, 'typography');\n\n    return css`\n        position: relative;\n        &::before {\n            position: absolute;\n            cursor: text;\n            font-family: ${typography};\n            font-size: 14px;\n            color: ${palette('neutral', 0.6)};\n            content: attr(data-text);\n            height: 100%;\n            display: flex;\n            align-items: center;\n        }\n    `;\n};\n\nconst createSlashStyle = (_: ThemeManager, { css }: Emotion) => css`\n    &::before {\n        left: 8px;\n    }\n`;\n\nexport const createProps = (status: Status, utils: ThemeUtils) => {\n    return {\n        handleKeyDown: (_: EditorView, event: Event) => {\n            if (status.isEmpty()) {\n                return false;\n            }\n            if (!(event instanceof KeyboardEvent)) {\n                return false;\n            }\n\n            if (!['ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) {\n                return false;\n            }\n\n            return true;\n        },\n        decorations: (state: EditorState) => {\n            const paragraph = findParentNode(({ type }) => type.name === 'paragraph')(state.selection);\n            const uploadPlugin = state.plugins.find(\n                (x) => (x as unknown as { key: string }).key === 'MILKDOWN_UPLOAD$',\n            );\n            const decorations: DecorationSet = uploadPlugin?.getState(state);\n            if (decorations != null && decorations.find(state.selection.from, state.selection.to).length > 0) {\n                status.clear();\n                return null;\n            }\n\n            if (\n                !paragraph ||\n                paragraph.node.childCount > 1 ||\n                state.selection.$from.parentOffset !== paragraph.node.textContent.length ||\n                (paragraph.node.firstChild && paragraph.node.firstChild.type.name !== 'text')\n            ) {\n                status.clear();\n                return null;\n            }\n\n            const { placeholder, actions } = status.update({\n                parentNode: state.selection.$from.node(state.selection.$from.depth - 1),\n                isTopLevel: state.selection.$from.depth === 1,\n                content: paragraph.node.textContent,\n                state,\n            });\n\n            if (!placeholder) {\n                return null;\n            }\n\n            const createDecoration = (text: string, className: (string | undefined)[]) => {\n                const pos = paragraph.pos;\n                return DecorationSet.create(state.doc, [\n                    Decoration.node(pos, pos + paragraph.node.nodeSize, {\n                        class: className.filter((x) => x).join(' '),\n                        'data-text': text,\n                    }),\n                ]);\n            };\n\n            const emptyStyle = utils.getStyle((emotion) => createEmptyStyle(utils.themeManager, emotion));\n            const slashStyle = utils.getStyle((emotion) => createSlashStyle(utils.themeManager, emotion));\n\n            if (actions.length) {\n                return createDecoration(placeholder, [emptyStyle, slashStyle, 'empty-node', 'is-slash']);\n            }\n\n            return createDecoration(placeholder, [emptyStyle, 'empty-node']);\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Command } from '@milkdown/prose/state';\n\nimport { cleanUpAndCreateNode } from './utility';\n\nexport type Action = {\n    id: string;\n    $: HTMLElement;\n    command: Command;\n};\n\nexport type WrappedAction = Pick<Action, 'id'> & {\n    command: () => void;\n    dom: HTMLElement;\n};\n\nexport const transformAction = (action: WrappedAction): Action => ({\n    id: action.id,\n    $: action.dom,\n    command: cleanUpAndCreateNode(action.command),\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { StatusConfigBuilder, StatusConfigBuilderParams } from '..';\nimport { Action, transformAction } from '../item';\n\nexport type StatusCtx = {\n    placeholder: string | null;\n    actions: Action[];\n};\n\nconst createStatusCtx = (): StatusCtx => {\n    return {\n        placeholder: null,\n        actions: [],\n    };\n};\n\nexport type Status = ReturnType<typeof createStatus>;\n\nexport const createStatus = (builder: StatusConfigBuilder) => {\n    const statusCtx = createStatusCtx();\n\n    return {\n        get: () => statusCtx,\n        clear: () => {\n            statusCtx.placeholder = null;\n            statusCtx.actions = [];\n        },\n        update: (builderParams: StatusConfigBuilderParams) => {\n            const config = builder(builderParams);\n            statusCtx.placeholder = config?.placeholder ?? null;\n            statusCtx.actions = (config?.actions ?? []).map(transformAction);\n            return statusCtx;\n        },\n        isEmpty: () => statusCtx.actions.length === 0,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\n\nimport { Status } from './status';\n\ntype Listeners = {\n    mouseEnter: EventListener;\n    mouseLeave: EventListener;\n};\n\nexport const renderDropdown = (status: Status, dropdownElement: HTMLElement, listeners: Listeners): boolean => {\n    const { actions } = status.get();\n\n    if (!actions.length) {\n        dropdownElement.classList.add('hide');\n        return false;\n    }\n\n    dropdownElement.childNodes.forEach((child) => {\n        child.removeEventListener('mouseenter', listeners.mouseEnter);\n        child.removeEventListener('mouseleave', listeners.mouseLeave);\n    });\n\n    while (dropdownElement.firstChild) {\n        dropdownElement.firstChild.remove();\n    }\n\n    actions.forEach(({ $ }) => {\n        $.classList.remove('active');\n        $.addEventListener('mouseenter', listeners.mouseEnter);\n        $.addEventListener('mouseleave', listeners.mouseLeave);\n        dropdownElement.appendChild($);\n    });\n\n    dropdownElement.classList.remove('hide');\n\n    const first$ = actions[0];\n    if (first$) {\n        first$.$.classList.add('active');\n        requestAnimationFrame(() => {\n            scrollIntoView(first$.$, {\n                scrollMode: 'if-needed',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n        });\n    }\n\n    return true;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { EditorView } from '@milkdown/prose/view';\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\n\nimport { Status } from './status';\n\nexport const createMouseManager = () => {\n    let mouseLock = false;\n\n    return {\n        isLock: () => mouseLock,\n        lock: () => {\n            mouseLock = true;\n        },\n        unlock: () => {\n            mouseLock = false;\n        },\n    };\n};\nexport type MouseManager = ReturnType<typeof createMouseManager>;\n\nexport const handleMouseMove = (mouseManager: MouseManager) => () => {\n    mouseManager.unlock();\n};\n\nexport const handleMouseEnter = (status: Status, mouseManager: MouseManager) => (e: MouseEvent) => {\n    if (mouseManager.isLock()) return;\n    const { actions } = status.get();\n    const active = actions.findIndex((x) => x.$.classList.contains('active'));\n    const active$ = actions[active];\n    if (active$ && active >= 0) {\n        active$.$.classList.remove('active');\n    }\n    const { target } = e;\n    if (!(target instanceof HTMLElement)) return;\n    target.classList.add('active');\n};\n\nexport const handleMouseLeave = () => (e: MouseEvent) => {\n    const { target } = e;\n    if (!(target instanceof HTMLElement)) return;\n    target.classList.remove('active');\n};\n\nexport const handleClick =\n    (status: Status, view: EditorView, dropdownElement: HTMLElement) =>\n    (e: Event): void => {\n        const { target } = e;\n        if (!(target instanceof HTMLElement)) return;\n        if (!view) return;\n\n        const stop = () => {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n\n        const { actions } = status.get();\n\n        const el = Object.values(actions).find(({ $ }) => $.contains(target));\n        if (!el) {\n            if (status.isEmpty()) return;\n\n            status.clear();\n            dropdownElement.classList.add('hide');\n            stop();\n\n            return;\n        }\n\n        stop();\n        el.command(view.state, view.dispatch, view);\n    };\n\nexport const handleKeydown =\n    (status: Status, view: EditorView, dropdownElement: HTMLElement, mouseManager: MouseManager) => (e: Event) => {\n        if (!(e instanceof KeyboardEvent)) return;\n        if (!mouseManager.isLock()) mouseManager.lock();\n\n        const { key } = e;\n        if (status.isEmpty()) return;\n        if (!['ArrowDown', 'ArrowUp', 'Enter', 'Escape'].includes(key)) return;\n\n        const { actions } = status.get();\n\n        let active = actions.findIndex(({ $ }) => $.classList.contains('active'));\n        if (active < 0) active = 0;\n\n        const moveActive = (next: number) => {\n            const active$ = actions[active];\n            const next$ = actions[next];\n            if (!active$ || !next$) return;\n            active$.$.classList.remove('active');\n            next$.$.classList.add('active');\n            scrollIntoView(next$.$, {\n                scrollMode: 'if-needed',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n        };\n\n        if (key === 'ArrowDown') {\n            const next = active === actions.length - 1 ? 0 : active + 1;\n\n            moveActive(next);\n            return;\n        }\n\n        if (key === 'ArrowUp') {\n            const next = active === 0 ? actions.length - 1 : active - 1;\n\n            moveActive(next);\n            return;\n        }\n\n        if (key === 'Escape') {\n            if (status.isEmpty()) return;\n\n            status.clear();\n            dropdownElement.classList.add('hide');\n            return;\n        }\n\n        const active$ = actions[active];\n        if (!active$) return;\n        active$.command(view.state, view.dispatch, view);\n        active$.$.classList.remove('active');\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { missingRootElement } from '@milkdown/exception';\nimport { calculateNodePosition } from '@milkdown/prose';\nimport { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport { createDropdown } from '../utility';\nimport { renderDropdown } from './dropdown';\nimport {\n    createMouseManager,\n    handleClick,\n    handleKeydown,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleMouseMove,\n} from './input';\nimport { Status } from './status';\n\nexport const defaultCalcPosition = (view: EditorView, dropdownElement: HTMLElement) => {\n    calculateNodePosition(view, dropdownElement, (selected, target, parent) => {\n        const $editor = dropdownElement.parentElement;\n        if (!$editor) {\n            throw missingRootElement();\n        }\n\n        let left = selected.left - parent.left;\n        let top = selected.bottom - parent.top + 14 + $editor.scrollTop;\n\n        if (left < 0) {\n            left = 0;\n        }\n\n        if (parent.height + parent.top - selected.bottom < target.height) {\n            const topOffset = selected.top - parent.top - target.height - 14 + $editor.scrollTop;\n            if (topOffset > 0) {\n                top = topOffset;\n            }\n        }\n        return [top, left];\n    });\n};\n\nexport type CalcPosition = (view: EditorView, dropdownElement: HTMLElement) => void;\n\nexport const createView = (\n    status: Status,\n    view: EditorView,\n    utils: ThemeUtils,\n    className: string,\n    calcPosition: CalcPosition,\n) => {\n    const wrapper = view.dom.parentNode;\n    if (!wrapper) return {};\n\n    const dropdownElement = createDropdown(utils, className);\n    const mouseManager = createMouseManager();\n    wrapper.appendChild(dropdownElement);\n\n    const _mouseMove = handleMouseMove(mouseManager);\n    const _mouseDown = handleClick(status, view, dropdownElement);\n    const _keydown = handleKeydown(status, view, dropdownElement, mouseManager);\n    const _mouseEnter = handleMouseEnter(status, mouseManager);\n    const _mouseLeave = handleMouseLeave();\n\n    wrapper.addEventListener('mousemove', _mouseMove);\n    wrapper.addEventListener('mousedown', _mouseDown);\n    wrapper.addEventListener('keydown', _keydown);\n\n    return {\n        update: (view: EditorView) => {\n            const show = renderDropdown(status, dropdownElement, {\n                mouseEnter: _mouseEnter as EventListener,\n                mouseLeave: _mouseLeave as EventListener,\n            });\n\n            if (!show) return;\n\n            calcPosition(view, dropdownElement);\n        },\n\n        destroy: () => {\n            wrapper.removeEventListener('mousemove', _mouseMove);\n            wrapper.removeEventListener('mousedown', _mouseDown);\n            wrapper.removeEventListener('keydown', _keydown);\n            dropdownElement.remove();\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport type { StatusConfigBuilder } from '..';\nimport { createProps } from './props';\nimport { createStatus } from './status';\nimport { CalcPosition, createView } from './view';\n\nexport const key = 'MILKDOWN_SLASH';\n\nexport const createSlashPlugin = (\n    utils: ThemeUtils,\n    builder: StatusConfigBuilder,\n    className: string,\n    calcPosition: CalcPosition,\n) => {\n    const status = createStatus(builder);\n\n    return new Plugin({\n        key: new PluginKey(key),\n        props: createProps(status, utils),\n        view: (view) => createView(status, view, utils, className, calcPosition),\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { findParentNode } from '@milkdown/prose';\nimport { MarkType, Node, NodeType } from '@milkdown/prose/model';\nimport { EditorState, TextSelection } from '@milkdown/prose/state';\n\nexport type Position = {\n    start: number;\n    end: number;\n};\n\nexport const hasMark = (editorState: EditorState, type?: MarkType): boolean => {\n    if (!type) {\n        return false;\n    }\n    const { from, to } = editorState.selection;\n\n    return editorState.doc.rangeHasMark(from, from === to ? to + 1 : to, type);\n};\n\nexport const isTextSelection = (editorState: EditorState): boolean => {\n    const { selection } = editorState;\n    if (selection instanceof TextSelection) {\n        const text = editorState.doc.textBetween(selection.from, selection.to);\n\n        if (!text) return false;\n\n        return true;\n    }\n    return false;\n};\n\nexport const isInCodeFence = (editorState: EditorState): boolean =>\n    Boolean(findParentNode((node) => !!node.type.spec.code)(editorState.selection));\n\nexport const isTextAndNotHasMark = (editorState: EditorState, mark?: MarkType): boolean =>\n    !isTextSelection(editorState) || isInCodeFence(editorState) || hasMark(editorState, mark);\n\nexport const equalNodeType = (nodeType: NodeType, node: Node) => {\n    return (Array.isArray(nodeType) && nodeType.indexOf(node.type) > -1) || node.type === nodeType;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { missingRootElement } from '@milkdown/exception';\nimport { calculateTextPosition } from '@milkdown/prose';\nimport { EditorView } from '@milkdown/prose/view';\n\nexport const calcButtonPos = (buttons: HTMLElement, view: EditorView, isBottom: boolean) => {\n    buttons.classList.remove('hide');\n    calculateTextPosition(view, buttons, (start, end, target, parent) => {\n        const $editor = buttons.parentElement;\n        if (!$editor) {\n            throw missingRootElement();\n        }\n        const selectionWidth = end.left - start.left;\n        let left = start.left - parent.left - (target.width - selectionWidth) / 2;\n        let top = start.top - parent.top - target.height - 14 + $editor.scrollTop;\n\n        if (left < 0) left = 0;\n\n        if (start.top - parent.top < target.height || (isBottom && parent.bottom - start.bottom > target.height)) {\n            top = start.bottom - parent.top + 14 + $editor.scrollTop;\n        }\n        return [top, left];\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Color, Emotion, ThemeBorder, ThemeColor, ThemeManager, ThemeShadow, ThemeSize } from '@milkdown/core';\n\nexport const injectStyle = (themeManager: ThemeManager, { css }: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n    const lineWidth = themeManager.get(ThemeSize, 'lineWidth');\n    return css`\n        display: inline-flex;\n        cursor: pointer;\n        justify-content: space-evenly;\n        position: absolute;\n        border-radius: ${themeManager.get(ThemeSize, 'radius')};\n        z-index: 2;\n\n        ${themeManager.get(ThemeBorder, undefined)}\n        ${themeManager.get(ThemeShadow, undefined)}\n\n        overflow: hidden;\n        background: ${palette('surface')};\n\n        .icon {\n            position: relative;\n            color: ${palette('solid', 0.87)};\n\n            width: 48px;\n            line-height: 48px;\n            text-align: center;\n            transition: all 0.4s ease-in-out;\n            &:hover {\n                background-color: ${palette('secondary', 0.12)};\n            }\n            &.active {\n                color: ${palette('primary')};\n            }\n            &:not(:last-child)::after {\n                content: '';\n                position: absolute;\n                top: 0;\n                right: calc(-0.5 * ${lineWidth});\n                width: ${lineWidth};\n                bottom: 0;\n                background: ${palette('line')};\n            }\n        }\n        &.hide,\n        .hide {\n            display: none;\n        }\n    `;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose/view';\nimport type { ThemeUtils } from '@milkdown/utils';\n\nimport type { ButtonList } from '../item';\nimport { injectStyle } from './style';\n\ntype Tooltip = {\n    dom: HTMLDivElement;\n    render: (editorView: EditorView) => void;\n};\n\nexport const createTooltip = (buttonMap: ButtonList, utils: ThemeUtils, className: string): Tooltip => {\n    const div = document.createElement('div');\n    utils.themeManager.onFlush(() => {\n        const style = utils.getStyle((emotion) => injectStyle(utils.themeManager, emotion)) || '';\n        if (style) {\n            div.classList.add(style);\n        }\n    });\n\n    div.classList.add(utils.getClassName({}, className));\n\n    return {\n        dom: div,\n        render: (editorView: EditorView) => {\n            buttonMap\n                .filter((item) => item.enable(editorView) && item.$ != null)\n                .forEach(({ $ }) => div.appendChild($));\n\n            editorView.dom.parentNode?.appendChild(div);\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorView } from '@milkdown/prose/view';\n\nimport { ButtonList } from '../item';\n\nexport const noActive = (buttonMap: ButtonList, view: EditorView) => {\n    return Object.values(buttonMap)\n        .filter((item) => item.enable(view) && item.$ != null)\n        .every(({ $ }) => $.classList.contains('hide'));\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorView } from '@milkdown/prose/view';\n\nimport { ButtonList } from '../item';\nimport { noActive } from './no-active';\n\nexport const filterButton = (buttons: ButtonList, view: EditorView) => {\n    buttons\n        .filter((item) => item.enable(view) && item.$ != null)\n        .forEach((item) => {\n            const disable = item.disable?.(view);\n            if (disable) {\n                item.$.classList.add('hide');\n                return;\n            }\n\n            item.$.classList.remove('hide');\n\n            const active = item.active(view);\n            if (active) {\n                item.$.classList.add('active');\n                return;\n            }\n            item.$.classList.remove('active');\n        });\n\n    return noActive(buttons, view);\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose/view';\nimport type { ThemeUtils } from '@milkdown/utils';\n\nimport type { ButtonList } from '../item';\nimport { calcButtonPos } from './calc-button-pos';\nimport { createTooltip } from './create-tooltip';\nimport { filterButton } from './filter-button';\n\nexport const createButtonManager = (\n    buttons: ButtonList,\n    utils: ThemeUtils,\n    bottom: boolean,\n    containerClassName: string,\n) => {\n    const { dom: buttonDOM, render } = createTooltip(buttons, utils, containerClassName);\n\n    const onClick = (e: Event) => {\n        const target = buttons.find(({ $ }) => e.target instanceof Element && $.contains(e.target));\n        if (!target) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        target.command();\n    };\n\n    const hide = () => {\n        buttonDOM.classList.add('hide');\n    };\n\n    buttonDOM.addEventListener('mousedown', onClick);\n\n    return {\n        destroy: () => {\n            buttonDOM.removeEventListener('mousedown', onClick);\n            buttonDOM.remove();\n        },\n        hide,\n        update: (editorView: EditorView) => {\n            const noActive = filterButton(buttons, editorView);\n            if (noActive) {\n                hide();\n                return;\n            }\n            calcButtonPos(buttonDOM, editorView, bottom);\n        },\n        render,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorState } from '@milkdown/prose/state';\nimport type { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport { createButtonManager } from './button-manager';\nimport type { ButtonList } from './item';\n\nexport const createPlugin = (buttonMap: ButtonList, utils: ThemeUtils, bottom: boolean, containerClassName: string) => {\n    let buttonManager = createButtonManager(buttonMap, utils, bottom, containerClassName);\n    let shouldHide = false;\n\n    const hide = () => {\n        buttonManager.hide();\n    };\n\n    const update = (view: EditorView, prevState?: EditorState) => {\n        const { state } = view;\n\n        if (!view.editable || shouldHide) {\n            hide();\n            return;\n        }\n\n        const isEqualSelection = prevState?.doc.eq(state.doc) && prevState.selection.eq(state.selection);\n        if (isEqualSelection) return;\n\n        buttonManager.update(view);\n    };\n\n    return {\n        recreate: (editorView: EditorView) => {\n            buttonManager = createButtonManager(buttonMap, utils, bottom, containerClassName);\n            buttonManager.render(editorView);\n            update(editorView);\n        },\n        update,\n        destroy: () => {\n            buttonManager.destroy();\n        },\n        render: (editorView: EditorView) => {\n            buttonManager.render(editorView);\n            update(editorView);\n        },\n        setHide: (isTyping: boolean) => {\n            shouldHide = isTyping;\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { editorViewOptionsCtx, parserCtx, schemaCtx, serializerCtx } from '@milkdown/core';\nimport { getNodeFromSchema } from '@milkdown/prose';\nimport { DOMParser, Node, Slice } from '@milkdown/prose/model';\nimport { Plugin, PluginKey, TextSelection } from '@milkdown/prose/state';\nimport { createPlugin } from '@milkdown/utils';\n\ntype R = Record<string, unknown>;\nconst isPureText = (content: R | R[] | undefined | null): boolean => {\n    if (!content) return false;\n    if (Array.isArray(content)) {\n        if (content.length > 1) return false;\n        return isPureText(content[0]);\n    }\n\n    const child = content['content'];\n    if (child) {\n        return isPureText(child as R[]);\n    }\n\n    return content['type'] === 'text';\n};\n\nexport const key = new PluginKey('MILKDOWN_CLIPBOARD');\n\nexport const clipboardPlugin = createPlugin(() => {\n    return {\n        prosePlugins: (_, ctx) => {\n            const schema = ctx.get(schemaCtx);\n\n            // Set editable props for https://github.com/Saul-Mirone/milkdown/issues/190\n            ctx.update(editorViewOptionsCtx, (prev) => ({\n                ...prev,\n                editable: prev.editable ?? (() => true),\n            }));\n\n            const plugin = new Plugin({\n                key,\n                props: {\n                    handlePaste: (view, event, originalSlice) => {\n                        const parser = ctx.get(parserCtx);\n                        const serializer = ctx.get(serializerCtx);\n                        const editable = view.props.editable?.(view.state);\n                        const { clipboardData } = event;\n                        if (!editable || !clipboardData) {\n                            return false;\n                        }\n\n                        const currentNode = view.state.selection.$from.node();\n                        if (currentNode.type.spec.code) {\n                            return false;\n                        }\n\n                        let text = clipboardData.getData('text/plain');\n\n                        // if is copied from vscode, try to create a code fence\n                        const vscodeData = clipboardData.getData('vscode-editor-data');\n                        if (vscodeData) {\n                            const data = JSON.parse(vscodeData);\n                            const language = data?.mode;\n                            if (text && language) {\n                                const { tr } = view.state;\n                                const fence = getNodeFromSchema('fence', schema);\n\n                                tr.replaceSelectionWith(fence.create({ language }))\n                                    .setSelection(\n                                        TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))),\n                                    )\n                                    .insertText(text.replace(/\\r\\n?/g, '\\n'));\n\n                                view.dispatch(tr);\n                                return true;\n                            }\n                        }\n\n                        const html = clipboardData.getData('text/html');\n                        if (html.length === 0 && text.length === 0) {\n                            return false;\n                        }\n                        if (html.length > 0 || text.length === 0) {\n                            const dom = document.createElement('template');\n                            dom.innerHTML = html;\n                            const node = DOMParser.fromSchema(schema).parse(dom.content);\n                            dom.remove();\n                            text = serializer(node);\n                        }\n\n                        const slice = parser(text);\n                        if (!slice || typeof slice === 'string') return false;\n\n                        view.dispatch(\n                            view.state.tr.replaceSelection(\n                                new Slice(slice.content, originalSlice.openStart, originalSlice.openEnd),\n                            ),\n                        );\n\n                        return true;\n                    },\n                    clipboardTextSerializer: (slice) => {\n                        const serializer = ctx.get(serializerCtx);\n                        const isText = isPureText(slice.content.toJSON());\n                        if (isText) {\n                            return (slice.content as unknown as Node).textBetween(0, slice.content.size, '\\n\\n');\n                        }\n                        const doc = schema.topNodeType.createAndFill(undefined, slice.content);\n                        if (!doc) return '';\n                        const value = serializer(doc);\n                        return value;\n                    },\n                },\n            });\n\n            return [plugin];\n        },\n    };\n});\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = options.width || 1;\n        this.color = options.color || \"black\";\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos), rect;\n        if (!$pos.parent.inlineContent) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0))\n                    .getBoundingClientRect();\n                let top = before ? nodeRect.bottom : nodeRect.top;\n                if (before && after)\n                    top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color;\n        }\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (target == null)\n                    return this.setCursor(null);\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    storage.onChange(e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') }))\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n}\n\n// Use BroadcastChannel or Polyfill\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = new Set()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => getChannel(room).subs.add(f)\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => getChannel(room).subs.delete(f)\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport const messagePermissionDenied = 0\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (var i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","/**\n * @module provider/websocket\n */\n\n/* eslint-env browser */\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as bc from 'lib0/broadcastchannel'\nimport * as time from 'lib0/time'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport * as authProtocol from 'y-protocols/auth'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport { Observable } from 'lib0/observable'\nimport * as math from 'lib0/math'\nimport * as url from 'lib0/url'\n\nexport const messageSync = 0\nexport const messageQueryAwareness = 3\nexport const messageAwareness = 1\nexport const messageAuth = 2\n\n/**\n *                       encoder,          decoder,          provider,          emitSynced, messageType\n * @type {Array<function(encoding.Encoder, decoding.Decoder, WebsocketProvider, boolean,    number):void>}\n */\nconst messageHandlers = []\n\nmessageHandlers[messageSync] = (\n  encoder,\n  decoder,\n  provider,\n  emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageSync)\n  const syncMessageType = syncProtocol.readSyncMessage(\n    decoder,\n    encoder,\n    provider.doc,\n    provider\n  )\n  if (\n    emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 &&\n    !provider.synced\n  ) {\n    provider.synced = true\n  }\n}\n\nmessageHandlers[messageQueryAwareness] = (\n  encoder,\n  _decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  encoding.writeVarUint(encoder, messageAwareness)\n  encoding.writeVarUint8Array(\n    encoder,\n    awarenessProtocol.encodeAwarenessUpdate(\n      provider.awareness,\n      Array.from(provider.awareness.getStates().keys())\n    )\n  )\n}\n\nmessageHandlers[messageAwareness] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  awarenessProtocol.applyAwarenessUpdate(\n    provider.awareness,\n    decoding.readVarUint8Array(decoder),\n    provider\n  )\n}\n\nmessageHandlers[messageAuth] = (\n  _encoder,\n  decoder,\n  provider,\n  _emitSynced,\n  _messageType\n) => {\n  authProtocol.readAuthMessage(\n    decoder,\n    provider.doc,\n    (_ydoc, reason) => permissionDeniedHandler(provider, reason)\n  )\n}\n\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketProvider} provider\n * @param {string} reason\n */\nconst permissionDeniedHandler = (provider, reason) =>\n  console.warn(`Permission denied to access ${provider.url}.\\n${reason}`)\n\n/**\n * @param {WebsocketProvider} provider\n * @param {Uint8Array} buf\n * @param {boolean} emitSynced\n * @return {encoding.Encoder}\n */\nconst readMessage = (provider, buf, emitSynced) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  const messageHandler = provider.messageHandlers[messageType]\n  if (/** @type {any} */ (messageHandler)) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType)\n  } else {\n    console.error('Unable to compute message')\n  }\n  return encoder\n}\n\n/**\n * @param {WebsocketProvider} provider\n */\nconst setupWS = (provider) => {\n  if (provider.shouldConnect && provider.ws === null) {\n    const websocket = new provider._WS(provider.url)\n    websocket.binaryType = 'arraybuffer'\n    provider.ws = websocket\n    provider.wsconnecting = true\n    provider.wsconnected = false\n    provider.synced = false\n\n    websocket.onmessage = (event) => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      const encoder = readMessage(provider, new Uint8Array(event.data), true)\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder))\n      }\n    }\n    websocket.onerror = (event) => {\n      provider.emit('connection-error', [event, provider])\n    }\n    websocket.onclose = (event) => {\n      provider.emit('connection-close', [event, provider])\n      provider.ws = null\n      provider.wsconnecting = false\n      if (provider.wsconnected) {\n        provider.wsconnected = false\n        provider.synced = false\n        // update awareness (all users except local left)\n        awarenessProtocol.removeAwarenessStates(\n          provider.awareness,\n          Array.from(provider.awareness.getStates().keys()).filter((client) =>\n            client !== provider.doc.clientID\n          ),\n          provider\n        )\n        provider.emit('status', [{\n          status: 'disconnected'\n        }])\n      } else {\n        provider.wsUnsuccessfulReconnects++\n      }\n      // Start with no reconnect timeout and increase timeout by\n      // using exponential backoff starting with 100ms\n      setTimeout(\n        setupWS,\n        math.min(\n          math.pow(2, provider.wsUnsuccessfulReconnects) * 100,\n          provider.maxBackoffTime\n        ),\n        provider\n      )\n    }\n    websocket.onopen = () => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      provider.wsconnecting = false\n      provider.wsconnected = true\n      provider.wsUnsuccessfulReconnects = 0\n      provider.emit('status', [{\n        status: 'connected'\n      }])\n      // always send sync step 1 when connected\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, provider.doc)\n      websocket.send(encoding.toUint8Array(encoder))\n      // broadcast local awareness state\n      if (provider.awareness.getLocalState() !== null) {\n        const encoderAwarenessState = encoding.createEncoder()\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n        encoding.writeVarUint8Array(\n          encoderAwarenessState,\n          awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [\n            provider.doc.clientID\n          ])\n        )\n        websocket.send(encoding.toUint8Array(encoderAwarenessState))\n      }\n    }\n\n    provider.emit('status', [{\n      status: 'connecting'\n    }])\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n * @param {ArrayBuffer} buf\n */\nconst broadcastMessage = (provider, buf) => {\n  if (provider.wsconnected) {\n    /** @type {WebSocket} */ (provider.ws).send(buf)\n  }\n  if (provider.bcconnected) {\n    bc.publish(provider.bcChannel, buf, provider)\n  }\n}\n\n/**\n * Websocket Provider for Yjs. Creates a websocket connection to sync the shared document.\n * The document name is attached to the provided url. I.e. the following example\n * creates a websocket connection to http://localhost:1234/my-document-name\n *\n * @example\n *   import * as Y from 'yjs'\n *   import { WebsocketProvider } from 'y-websocket'\n *   const doc = new Y.Doc()\n *   const provider = new WebsocketProvider('http://localhost:1234', 'my-document-name', doc)\n *\n * @extends {Observable<string>}\n */\nexport class WebsocketProvider extends Observable {\n  /**\n   * @param {string} serverUrl\n   * @param {string} roomname\n   * @param {Y.Doc} doc\n   * @param {object} [opts]\n   * @param {boolean} [opts.connect]\n   * @param {awarenessProtocol.Awareness} [opts.awareness]\n   * @param {Object<string,string>} [opts.params]\n   * @param {typeof WebSocket} [opts.WebSocketPolyfill] Optionall provide a WebSocket polyfill\n   * @param {number} [opts.resyncInterval] Request server state every `resyncInterval` milliseconds\n   * @param {number} [opts.maxBackoffTime] Maximum amount of time to wait before trying to reconnect (we try to reconnect using exponential backoff)\n   * @param {boolean} [opts.disableBc] Disable cross-tab BroadcastChannel communication\n   */\n  constructor (serverUrl, roomname, doc, {\n    connect = true,\n    awareness = new awarenessProtocol.Awareness(doc),\n    params = {},\n    WebSocketPolyfill = WebSocket,\n    resyncInterval = -1,\n    maxBackoffTime = 2500,\n    disableBc = false\n  } = {}) {\n    super()\n    // ensure that url is always ends with /\n    while (serverUrl[serverUrl.length - 1] === '/') {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1)\n    }\n    const encodedParams = url.encodeQueryParams(params)\n    this.maxBackoffTime = maxBackoffTime\n    this.bcChannel = serverUrl + '/' + roomname\n    this.url = serverUrl + '/' + roomname +\n      (encodedParams.length === 0 ? '' : '?' + encodedParams)\n    this.roomname = roomname\n    this.doc = doc\n    this._WS = WebSocketPolyfill\n    this.awareness = awareness\n    this.wsconnected = false\n    this.wsconnecting = false\n    this.bcconnected = false\n    this.disableBc = disableBc\n    this.wsUnsuccessfulReconnects = 0\n    this.messageHandlers = messageHandlers.slice()\n    /**\n     * @type {boolean}\n     */\n    this._synced = false\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.wsLastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = connect\n\n    /**\n     * @type {number}\n     */\n    this._resyncInterval = 0\n    if (resyncInterval > 0) {\n      this._resyncInterval = /** @type {any} */ (setInterval(() => {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n          // resend sync step 1\n          const encoder = encoding.createEncoder()\n          encoding.writeVarUint(encoder, messageSync)\n          syncProtocol.writeSyncStep1(encoder, doc)\n          this.ws.send(encoding.toUint8Array(encoder))\n        }\n      }, resyncInterval))\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     * @param {any} origin\n     */\n    this._bcSubscriber = (data, origin) => {\n      if (origin !== this) {\n        const encoder = readMessage(this, new Uint8Array(data), false)\n        if (encoding.length(encoder) > 1) {\n          bc.publish(this.bcChannel, encoding.toUint8Array(encoder), this)\n        }\n      }\n    }\n    /**\n     * Listens to Yjs updates and sends them to remote peers (ws and broadcastchannel)\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._updateHandler = (update, origin) => {\n      if (origin !== this) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageSync)\n        syncProtocol.writeUpdate(encoder, update)\n        broadcastMessage(this, encoding.toUint8Array(encoder))\n      }\n    }\n    this.doc.on('update', this._updateHandler)\n    /**\n     * @param {any} changed\n     * @param {any} _origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, _origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(\n        encoder,\n        awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients)\n      )\n      broadcastMessage(this, encoding.toUint8Array(encoder))\n    }\n    this._unloadHandler = () => {\n      awarenessProtocol.removeAwarenessStates(\n        this.awareness,\n        [doc.clientID],\n        'window unload'\n      )\n    }\n    if (typeof window !== 'undefined') {\n      window.addEventListener('unload', this._unloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.on('exit', this._unloadHandler)\n    }\n    awareness.on('update', this._awarenessUpdateHandler)\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      if (\n        this.wsconnected &&\n        messageReconnectTimeout <\n          time.getUnixTime() - this.wsLastMessageReceived\n      ) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        /** @type {WebSocket} */ (this.ws).close()\n      }\n    }, messageReconnectTimeout / 10))\n    if (connect) {\n      this.connect()\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get synced () {\n    return this._synced\n  }\n\n  set synced (state) {\n    if (this._synced !== state) {\n      this._synced = state\n      this.emit('synced', [state])\n      this.emit('sync', [state])\n    }\n  }\n\n  destroy () {\n    if (this._resyncInterval !== 0) {\n      clearInterval(this._resyncInterval)\n    }\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('unload', this._unloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.off('exit', this._unloadHandler)\n    }\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.doc.off('update', this._updateHandler)\n    super.destroy()\n  }\n\n  connectBc () {\n    if (this.disableBc) {\n      return\n    }\n    if (!this.bcconnected) {\n      bc.subscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = true\n    }\n    // send sync step1 to bc\n    // write sync step 1\n    const encoderSync = encoding.createEncoder()\n    encoding.writeVarUint(encoderSync, messageSync)\n    syncProtocol.writeSyncStep1(encoderSync, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync), this)\n    // broadcast local state\n    const encoderState = encoding.createEncoder()\n    encoding.writeVarUint(encoderState, messageSync)\n    syncProtocol.writeSyncStep2(encoderState, this.doc)\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderState), this)\n    // write queryAwareness\n    const encoderAwarenessQuery = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessQuery),\n      this\n    )\n    // broadcast local awareness state\n    const encoderAwarenessState = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoderAwarenessState,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ])\n    )\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessState),\n      this\n    )\n  }\n\n  disconnectBc () {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, messageAwareness)\n    encoding.writeVarUint8Array(\n      encoder,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ], new Map())\n    )\n    broadcastMessage(this, encoding.toUint8Array(encoder))\n    if (this.bcconnected) {\n      bc.unsubscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = false\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.disconnectBc()\n    if (this.ws !== null) {\n      this.ws.close()\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.wsconnected && this.ws === null) {\n      setupWS(this)\n      this.connectBc()\n    }\n  }\n}\n","/* eslint-env browser */\n\n/**\n * Helpers to work with IndexedDB.\n *\n * @module indexeddb\n */\n\nimport * as promise from './promise.js'\nimport * as error from './error.js'\n\n/* istanbul ignore next */\n/**\n * IDB Request to Promise transformer\n *\n * @param {IDBRequest} request\n * @return {Promise<any>}\n */\nexport const rtop = request => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onerror = event => reject(new Error(event.target.error))\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onblocked = () => location.reload()\n  // @ts-ignore\n  request.onsuccess = event => resolve(event.target.result)\n})\n\n/* istanbul ignore next */\n/**\n * @param {string} name\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\n * @return {Promise<IDBDatabase>}\n */\nexport const openDB = (name, initDB) => promise.create((resolve, reject) => {\n  const request = indexedDB.open(name)\n  /**\n   * @param {any} event\n   */\n  request.onupgradeneeded = event => initDB(event.target.result)\n  /* istanbul ignore next */\n  /**\n   * @param {any} event\n   */\n  request.onerror = event => reject(error.create(event.target.error))\n  /* istanbul ignore next */\n  request.onblocked = () => location.reload()\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    /**\n     * @type {IDBDatabase}\n     */\n    const db = event.target.result\n    /* istanbul ignore next */\n    db.onversionchange = () => { db.close() }\n    /* istanbul ignore if */\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener('unload', () => db.close())\n    }\n    resolve(db)\n  }\n})\n\n/* istanbul ignore next */\n/**\n * @param {string} name\n */\nexport const deleteDB = name => rtop(indexedDB.deleteDatabase(name))\n\n/* istanbul ignore next */\n/**\n * @param {IDBDatabase} db\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\n */\nexport const createStores = (db, definitions) => definitions.forEach(d =>\n  // @ts-ignore\n  db.createObjectStore.apply(db, d)\n)\n\n/**\n * @param {IDBDatabase} db\n * @param {Array<string>} stores\n * @param {\"readwrite\"|\"readonly\"} [access]\n * @return {Array<IDBObjectStore>}\n */\nexport const transact = (db, stores, access = 'readwrite') => {\n  const transaction = db.transaction(stores, access)\n  return stores.map(store => getStore(transaction, store))\n}\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<number>}\n */\nexport const count = (store, range) =>\n  rtop(store.count(range))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\n */\nexport const get = (store, key) =>\n  rtop(store.get(key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\n */\nexport const del = (store, key) =>\n  rtop(store.delete(key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean} item\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\n */\nexport const put = (store, item, key) =>\n  rtop(store.put(item, key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean}  item\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\n * @return {Promise<any>}\n */\nexport const add = (store, item, key) =>\n  rtop(store.add(item, key))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date}  item\n * @return {Promise<number>} Returns the generated key\n */\nexport const addAutoKey = (store, item) =>\n  rtop(store.add(item))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\nexport const getAll = (store, range) =>\n  rtop(store.getAll(range))\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\nexport const getAllKeys = (store, range) =>\n  rtop(store.getAllKeys(range))\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} query\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n * @return {Promise<any>}\n */\nexport const queryFirst = (store, query, direction) => {\n  /**\n   * @type {any}\n   */\n  let first = null\n  return iterateKeys(store, query, key => {\n    first = key\n    return false\n  }, direction).then(() => first)\n}\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange?} [range]\n * @return {Promise<any>}\n */\nexport const getLastKey = (store, range = null) => queryFirst(store, range, 'prev')\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange?} [range]\n * @return {Promise<any>}\n */\nexport const getFirstKey = (store, range = null) => queryFirst(store, range, 'next')\n\n/**\n * @typedef KeyValuePair\n * @type {Object}\n * @property {any} k key\n * @property {any} v Value\n */\n\n/* istanbul ignore next */\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<KeyValuePair>>}\n */\nexport const getAllKeysValues = (store, range) =>\n  // @ts-ignore\n  promise.all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })))\n\n/* istanbul ignore next */\n/**\n * @param {any} request\n * @param {function(IDBCursorWithValue):void|boolean} f\n * @return {Promise<void>}\n */\nconst iterateOnRequest = (request, f) => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  request.onerror = reject\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    const cursor = event.target.result\n    if (cursor === null || f(cursor) === false) {\n      return resolve()\n    }\n    cursor.continue()\n  }\n})\n\n/* istanbul ignore next */\n/**\n * Iterate on keys and values\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any,any):void|boolean} f Callback that receives (value, key)\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\nexport const iterate = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key))\n\n/* istanbul ignore next */\n/**\n * Iterate on the keys (no values)\n *\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any):void|boolean} f callback that receives the key\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\nexport const iterateKeys = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key))\n\n/* istanbul ignore next */\n/**\n * Open store from transaction\n * @param {IDBTransaction} t\n * @param {String} store\n * @returns {IDBObjectStore}\n */\nexport const getStore = (t, store) => t.objectStore(store)\n\n/* istanbul ignore next */\n/**\n * @param {any} lower\n * @param {any} upper\n * @param {boolean} lowerOpen\n * @param {boolean} upperOpen\n */\nexport const createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\n\n/* istanbul ignore next */\n/**\n * @param {any} upper\n * @param {boolean} upperOpen\n */\nexport const createIDBKeyRangeUpperBound = (upper, upperOpen) => IDBKeyRange.upperBound(upper, upperOpen)\n\n/* istanbul ignore next */\n/**\n * @param {any} lower\n * @param {boolean} lowerOpen\n */\nexport const createIDBKeyRangeLowerBound = (lower, lowerOpen) => IDBKeyRange.lowerBound(lower, lowerOpen)\n","import * as Y from 'yjs'\nimport * as idb from 'lib0/indexeddb.js'\nimport * as mutex from 'lib0/mutex.js'\nimport { Observable } from 'lib0/observable.js'\n\nconst customStoreName = 'custom'\nconst updatesStoreName = 'updates'\n\nexport const PREFERRED_TRIM_SIZE = 500\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n */\nexport const fetchUpdates = idbPersistence => {\n  const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (idbPersistence.db), [updatesStoreName]) // , 'readonly')\n  return idb.getAll(updatesStore, idb.createIDBKeyRangeLowerBound(idbPersistence._dbref, false)).then(updates =>\n    Y.transact(idbPersistence.doc, () => {\n      updates.forEach(val => Y.applyUpdate(idbPersistence.doc, val))\n    }, idbPersistence, false)\n  )\n    .then(() => idb.getLastKey(updatesStore).then(lastKey => { idbPersistence._dbref = lastKey + 1 }))\n    .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\n    .then(() => updatesStore)\n}\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n * @param {boolean} forceStore\n */\nexport const storeState = (idbPersistence, forceStore = true) =>\n  fetchUpdates(idbPersistence)\n    .then(updatesStore => {\n      if (forceStore || idbPersistence._dbsize >= PREFERRED_TRIM_SIZE) {\n        idb.addAutoKey(updatesStore, Y.encodeStateAsUpdate(idbPersistence.doc))\n          .then(() => idb.del(updatesStore, idb.createIDBKeyRangeUpperBound(idbPersistence._dbref, true)))\n          .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\n      }\n    })\n\n/**\n * @param {string} name\n */\nexport const clearDocument = name => idb.deleteDB(name)\n\n/**\n * @extends Observable<string>\n */\nexport class IndexeddbPersistence extends Observable {\n  /**\n   * @param {string} name\n   * @param {Y.Doc} doc\n   */\n  constructor (name, doc) {\n    super()\n    this.doc = doc\n    this.name = name\n    this._mux = mutex.createMutex()\n    this._dbref = 0\n    this._dbsize = 0\n    this._destroyed = false\n    /**\n     * @type {IDBDatabase|null}\n     */\n    this.db = null\n    this.synced = false\n    this._db = idb.openDB(name, db =>\n      idb.createStores(db, [\n        ['updates', { autoIncrement: true }],\n        ['custom']\n      ])\n    )\n    /**\n     * @type {Promise<IndexeddbPersistence>}\n     */\n    this.whenSynced = this._db.then(db => {\n      this.db = db\n      const currState = Y.encodeStateAsUpdate(doc)\n      return fetchUpdates(this).then(updatesStore => idb.addAutoKey(updatesStore, currState)).then(() => {\n        if (this._destroyed) return this\n        this.emit('synced', [this])\n        this.synced = true\n        return this\n      })\n    })\n    /**\n     * Timeout in ms untill data is merged and persisted in idb.\n     */\n    this._storeTimeout = 1000\n    /**\n     * @type {any}\n     */\n    this._storeTimeoutId = null\n    /**\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._storeUpdate = (update, origin) => {\n      if (this.db && origin !== this) {\n        const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (this.db), [updatesStoreName])\n        idb.addAutoKey(updatesStore, update)\n        if (++this._dbsize >= PREFERRED_TRIM_SIZE) {\n          // debounce store call\n          if (this._storeTimeoutId !== null) {\n            clearTimeout(this._storeTimeoutId)\n          }\n          this._storeTimeoutId = setTimeout(() => {\n            storeState(this, false)\n            this._storeTimeoutId = null\n          }, this._storeTimeout)\n        }\n      }\n    }\n    doc.on('update', this._storeUpdate)\n    this.destroy = this.destroy.bind(this)\n    doc.on('destroy', this.destroy)\n  }\n\n  destroy () {\n    if (this._storeTimeoutId) {\n      clearTimeout(this._storeTimeoutId)\n    }\n    this.doc.off('update', this._storeUpdate)\n    this.doc.off('destroy', this.destroy)\n    this._destroyed = true\n    return this._db.then(db => {\n      db.close()\n    })\n  }\n\n  /**\n   * Destroys this instance and removes all data from indexeddb.\n   *\n   * @return {Promise<void>}\n   */\n  clearData () {\n    return this.destroy().then(() => {\n      idb.deleteDB(this.name)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<String | number | ArrayBuffer | Date | any>}\n   */\n  get (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName], 'readonly')\n      return idb.get(custom, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @param {String | number | ArrayBuffer | Date} value\n   * @return {Promise<String | number | ArrayBuffer | Date>}\n   */\n  set (key, value) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName])\n      return idb.put(custom, value, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<undefined>}\n   */\n  del (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName])\n      return idb.del(custom, key)\n    })\n  }\n}\n","// import {Awareness} from 'y-protocols/awareness'\n// import { WebrtcProvider } from 'y-webrtc'\nimport { WebsocketProvider } from 'y-websocket'\nimport { IndexeddbPersistence } from 'y-indexeddb'\nimport { Doc } from 'yjs';\n\nlet autoConnect = true\nconst markdown = `\n# Milkdown Collaborative Example\n\n---\n\nNow you can play!\n`;\n\nconst options = [\n  { color: '#5e81AC', name: 'milkdown user 1' },\n  { color: '#8FBCBB', name: 'milkdown user 2' },\n  { color: '#dbfdbf', name: 'milkdown user 3' },\n  { color: '#D08770', name: 'milkdown user 4' },\n];\nconst rndInt = Math.floor(Math.random() * 4);\n\nexport { CollabManager }\n\nclass CollabManager {\n\n  constructor(collabService) {\n    this.collabService = collabService\n    this.room = 'milkdown';\n    this.doc = null\n    this.wsProvider = null\n    this.indexeddbProvider = null\n    // this.webrtcProvider = null\n    // this.awareness = null\n    this.status = null\n    // if (room) {\n    //   room.textContent = this.room;\n    // }\n  }\n\n  flush(template = markdown) {\n\n    this.doc ? this.doc.destroy(): \"\"\n    this.wsProvider ? this.wsProvider.destroy(): \"\"\n    // this.indexeddbProvider ? this.indexeddbProvider.destroy(): \"\"\n    // this.webrtcProvider ? this.webrtcProvider.destroy(): \"\"\n    // this.awareness ? this.awareness.destroy() : \"\"\n\n    this.doc = new Doc();\n    // let awareness = this.awareness = new Awareness(this.doc)\n    // this.awareness.on('change', ()/*changes*/ => {\n    //   this.awareness.getStates().forEach(state => {\n    //     //  console.log(state)\n    //     if (state.user) {\n    //       console.log('[state.user]',state.user)\n    //       // store.commit('actor/setUserById', state.user)\n    //     }\n    //   })\n    //   // store.commit('actor/setUsersUpdated', Date.now())\n    // })\n\n  //  console.log(this.room)\n\n\n    this.indexeddbProvider = new IndexeddbPersistence(this.room, this.doc)\n\n    //  let syncedData = await indexeddbProvider.whenSynced\n    //  console.log('[indexeddbProvider] loaded data from indexed db', syncedData)\n\n    // this.webrtcProvider = new WebrtcProvider(this.room, this.doc, {awareness,\n    //   signaling: [\n    //     \"wss://y-webrtc-signaling-eu.herokuapp.com\",\n    //     \"wss://y-webrtc-signaling-us.herokuapp.com\",\n    //     \"wss://signaling.yjs.dev\"\n    //   ]})\n\n    // Sync clients with the y-websocket provider\n    // let websocketProvider =\n    // new WebsocketProvider('wss://demos.yjs.dev', channel, this.doc, {awareness })\n    // [\"ws://localhost:1234\",'wss://demos.yjs.dev']\n    this.wsProvider = new WebsocketProvider(\n      // \"ws://localhost:1234\",\n      \"wss://flame-long-base.glitch.me/\",\n      // \"wss://yjs-websocket--1234.local-corp.webcontainer.io\",\n      // 'wss://demos.yjs.dev',\n      this.room, this.doc, { connect: autoConnect });\n\n\n      this.wsProvider.awareness.setLocalStateField('user', options[rndInt]);\n      this.wsProvider.on('status', (payload) => {\n        if (payload.status) {\n          this.status = payload.status;\n        }\n      });\n\n      this.collabService.bindDoc(this.doc).setAwareness(this.wsProvider.awareness);\n\n      this.indexeddbProvider.once('synced', async (synced) => {\n        console.log('indexeddb synced', synced, template)\n      //  this.collabService.applyTemplate(template).connect();\n      })\n\n      this.wsProvider.once('synced', async (isSynced) => {\n        if (isSynced) {\n          console.log('ws synced', isSynced,template)\n          // this.collabService.applyTemplate(template).connect();\n          this.collabService.connect();\n        }\n      });\n      //  await end(user)\n\n    }\n\n    connect() {\n      this.indexeddbProvider.connect();\n      // this.webrtcProvider.connect();\n      this.wsProvider.connect();\n      this.collabService.connect();\n    }\n\n    disconnect() {\n      //  this.indexeddbProvider.disconnect();\n      // this.webrtcProvider.disconnect();\n      this.collabService.disconnect();\n      this.wsProvider.disconnect();\n    }\n\n    applyTemplate(template) {\n      this.collabService\n      .disconnect()\n      .applyTemplate(template, () => true)\n      .connect();\n    }\n    // toggleRoom() {\n    //   this.room = this.room === 'milkdown' ? 'sandbox' : 'milkdown';\n    //   // if (room$) {\n    //   //     room$.textContent = this.room;\n    //   // }\n    //\n    //   const template = this.room === 'milkdown' ? markdown : '# Sandbox Room';\n    //   this.disconnect();\n    //   this.flush(template);\n    // }\n\n    openRoom(roomId) {\n      this.room = roomId\n      console.log(this.room)\n      // if (room$) {\n      //   room$.textContent = this.room;\n      // }\n\n      // const template = this.room === 'milkdown' ? markdown : '# Sandbox Room';\n      const template = '# '+this.room+  \" Room -- click\"\n      this.disconnect();\n      this.flush(template);\n    }\n\n\n  }\n","<template>\n  <div>\n    <b-button @click=\"connect\">Connect</b-button>\n    <b-button @click=\"disconnect\">Disonnect</b-button>\n    <!-- <b-button @click=\"toggle\">Toggle</b-button> -->\n    <b-input v-model=\"room\" placeholder=\"room\" />\n    <b-button @click=\"open\">Open</b-button>\n    status: {{collabManager != null && collabManager.status}}\n    <div ref=\"editor\"></div>\n  </div>\n</template>\n\n<script>\nimport { defaultValueCtx, Editor, rootCtx } from '@milkdown/core';\nimport { nord } from '@milkdown/theme-nord';\nimport { gfm } from '@milkdown/preset-gfm';\n// import { commonmark } from '@milkdown/preset-commonmark';\nimport { collaborative, collabServiceCtx } from '@milkdown/plugin-collaborative';\nimport { menu } from '@milkdown/plugin-menu';\nimport { slash } from '@milkdown/plugin-slash';\nimport { tooltip } from '@milkdown/plugin-tooltip';\nimport { clipboard } from '@milkdown/plugin-clipboard';\nimport { cursor } from '@milkdown/plugin-cursor';\n\n\n// import { WebsocketProvider } from 'y-websocket';\n// import { Doc } from 'yjs';\nimport { CollabManager } from '@/services/collabManager';\n\n\nexport default {\n  name: 'EditorView',\n  props: {\n    msg: String,\n  },\n  data(){\n    return{\n      default: \" # Milkdown Collaborative Example --- Now you can play! \",\n      room: null,\n      collabManager: null\n    }\n  },\n  async mounted() {\n    let app = this\n    const editor = await Editor.make()\n    .config((ctx) => {\n      ctx.set(rootCtx, this.$refs.editor);\n      ctx.set(defaultValueCtx, this.default);\n    })\n    .use(nord)\n    // .use(commonmark)\n    .use(menu)\n    .use(slash)\n    .use(tooltip)\n    .use(cursor)\n    .use(clipboard)\n    .use(gfm)\n    .use(collaborative)\n    .create();\n\n\n    editor.action((ctx) => {\n      const collabService = ctx.get(collabServiceCtx);\n      app.collabManager = new CollabManager(collabService);\n      app.collabManager.flush();\n    });\n\n  },\n  methods:{\n    connect(){\n      this.collabManager.connect();\n    },\n    disconnect(){\n      this.collabManager.disconnect();\n    },\n    toggle(){\n      this.collabManager.toggleRoom();\n    },\n    open(){\n      this.room = this.room.trim()\n      if(this.room.length >0){\n        this.collabManager.openRoom(this.room);\n      }\n\n    }\n  }\n};\n\n</script>\n\n<style lang=\"css\">\n.milkdown-menu {\n  position:fixed;\n  /* top:60px; */\n  right:0;\n  left:0;\n  bottom: 0px;\n  z-index:1040\n\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EditorView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditorView.vue?vue&type=template&id=6e87cc5b&\"\nimport script from \"./EditorView.vue?vue&type=script&lang=js&\"\nexport * from \"./EditorView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./EditorView.vue?vue&type=style&index=0&id=6e87cc5b&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw $TypeError('Incorrect invocation');\n};\n","// eslint-disable-next-line es-x/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineProperty = require('../internals/object-define-property').f;\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = global.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar getTypedArrayConstructor = function (it) {\n  var proto = getPrototypeOf(it);\n  if (!isObject(proto)) return;\n  var state = getInternalState(proto);\n  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  getTypedArrayConstructor: getTypedArrayConstructor,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ findLast, findLastIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_FIND_LAST_INDEX = TYPE == 1;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var index = lengthOfArrayLike(self);\n    var value, result;\n    while (index-- > 0) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (result) switch (TYPE) {\n        case 0: return value; // findLast\n        case 1: return index; // findLastIndex\n      }\n    }\n    return IS_FIND_LAST_INDEX ? -1 : undefined;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.findLast` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLast: createMethod(0),\n  // `Array.prototype.findLastIndex` method\n  // https://github.com/tc39/proposal-array-find-from-last\n  findLastIndex: createMethod(1)\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es-x/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","module.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n","var hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es-x/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return (k < 0 || k >= len) ? undefined : O[k];\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $findLastIndex = require('../internals/array-iteration-from-last').findLastIndex;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.findLastIndex` method\n// https://github.com/tc39/proposal-array-find-from-last\nexportTypedArrayMethod('findLastIndex', function findLastIndex(predicate /* , thisArg */) {\n  return $findLastIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar $findLast = require('../internals/array-iteration-from-last').findLast;\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.findLast` method\n// https://github.com/tc39/proposal-array-find-from-last\nexportTypedArrayMethod('findLast', function findLast(predicate /* , thisArg */) {\n  return $findLast(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(global, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n"],"names":["render","_vm","this","_c","_self","on","connect","_v","disconnect","attrs","model","value","room","callback","$$v","expression","open","_s","collabManager","status","ref","staticRenderFns","e","t","Error","constructor","o","s","super","name","code","l","r","JSON","stringify","p","n","docTypeError","u","contextNotFound","d","timerNotFound","h","ctxCallOutOfScope","g","reduce","a","i","Array","isArray","map","m","c","join","toJSON","spec","toString","createNodeInParserFail","f","stackOverFlow","w","parserMatchError","M","serializerMatchError","S","getAtomFromSchemaFail","y","expectDomTypeError","F","callCommandBeforeEditorView","I","themeMustInstalled","N","missingRootElement","x","missingIcon","v","ctxNotBind","T","missingYjsDoc","z","missingMenuWrapper","Map","getSlice","values","find","get","id","sliceName","E","sliceMap","P","j","Symbol","set","update","_typeInfo","use","timing","wait","done","waitTimers","async","Promise","all","L","inject","record","store","A","C","CustomEvent","detail","removeEventListener","stopImmediatePropagation","setTimeout","addEventListener","dispatchEvent","OrderedMap","content","prototype","key","length","found","undefined","newKey","self","remove","slice","push","splice","addToStart","concat","addToEnd","addBefore","place","without","forEach","prepend","from","size","subtract","append","result","prop","findDiffStart","b","pos","childCount","childA","child","childB","sameMarkup","isText","text","inner","nodeSize","findDiffEnd","posA","posB","iA","iB","same","minSize","Math","min","Fragment","nodesBetween","to","nodeStart","parent","end","start","max","descendants","textBetween","blockSeparator","leafText","separated","node","isLeaf","type","isBlock","other","last","lastChild","first","firstChild","withText","cut","cutByIndex","empty","replaceChild","index","current","copy","eq","RangeError","maybeChild","otherPos","findIndex","round","retIndex","curPos","cur","toStringInner","schema","nodeFromJSON","array","joined","nodes","fromArray","offset","compareDeep","Mark","addToSet","placed","excludes","rank","removeFromSet","isInSet","obj","_","json","marks","create","none","sort","ReplaceError","Slice","openStart","openEnd","insertAt","fragment","insertInto","removeBetween","removeRange","fromJSON","openIsolating","isolating","indexTo","offsetTo","dist","insert","canReplace","replace","$from","$to","depth","replaceOuter","prepareSliceForReplace","close","replaceThreeWay","parentOffset","replaceTwoWay","checkJoin","main","sub","compatibleContent","joinable","$before","$after","addNode","target","addRange","$start","$end","startIndex","endIndex","textOffset","nodeAfter","nodeBefore","validContent","$along","extra","resolveNoCache","ResolvedPos","path","resolveDepth","val","doc","indexAfter","before","after","dOff","posAtIndex","tmp","inclusive","marksAcross","isInline","next","sharedDepth","blockRange","pred","inlineContent","NodeRange","sameParent","str","rem","resolveCache","cached","resolveCachePos","resolve","resolveCacheSize","emptyAttrs","Object","Node","startPos","textContent","hasMarkup","defaultAttrs","sameSet","mark","includeParents","nodeAt","childAfter","childBefore","resolveCached","rangeHasMark","isTextblock","isAtom","toDebugString","wrapMarks","contentMatchAt","match","contentMatch","matchFragment","replacement","one","two","validEnd","allowsMarks","canReplaceWith","matchType","canAppend","check","markFromJSON","nodeType","TextNode","base","ContentMatch","wrapCache","string","nodeTypes","stream","TokenStream","expr","parseExpr","err","dfa","nfa","checkForDeadEnds","frag","defaultType","hasRequiredAttrs","compatible","fillBefore","toEnd","seen","search","types","finished","tp","createAndFill","indexOf","findWrapping","computed","computeWrapping","active","via","shift","reverse","edgeCount","edge","scan","out","inline","tokens","split","pop","eat","tok","SyntaxError","exprs","parseExprSeq","parseExprSubscript","parseExprAtom","parseExprRange","parseNum","test","Number","resolveName","typeName","groups","compile","term","edges","loop","cmp","nullFrom","labeled","explore","states","state","work","dead","defaults","attrName","attr","hasDefault","default","computeAttrs","built","given","initAttrs","Attribute","NodeType","markSet","group","atom","whitespace","isRequired","setFrom","createChecked","matched","allowsMarkType","markType","allowedMarks","topType","topNode","options","hasOwnProperty","call","MarkType","excluded","instance","Schema","contentExprCache","contentExpr","markExpr","parse","gatherMarks","excl","bind","topNodeType","wrappings","ok","DOMParser","rules","tags","styles","rule","tag","style","normalizeLists","some","dom","context","ParseContext","addAll","finish","parseSlice","maxOpen","matchTag","matches","namespace","namespaceURI","matchesContext","getAttrs","matchStyle","charCodeAt","priority","nextPriority","parseDOM","domParser","schemaRules","blockTags","address","article","aside","blockquote","canvas","dd","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","li","noscript","ol","output","pre","section","table","tfoot","ul","ignoreTags","head","object","script","title","listTags","OPT_PRESERVE_WS","OPT_PRESERVE_WS_FULL","OPT_OPEN_LEFT","wsOptionsFor","preserveWhitespace","NodeContext","pendingMarks","solid","activeMarks","stashMarks","fill","wrap","exec","popFromStashMark","applyPending","nextType","pending","markMayApply","inlineContext","parentNode","nodeName","toLowerCase","parser","isOpen","topContext","topOptions","topMatch","findPositions","needsBlock","top","addDOM","addTextNode","getAttribute","readStyles","parseStyles","addPendingMark","addElement","removePendingMark","nodeValue","domNodeBefore","previousSibling","insertNode","findInText","findInside","matchAfter","ruleID","normalizeList","ruleFromNode","ignore","ignoreFallback","skip","closeParent","sync","oldNeedsBlock","leafFallback","addElementByRule","consuming","ownerDocument","createTextNode","findPlace","continueAfter","enter","startIn","getContent","contentDOM","contentElement","querySelector","findAround","childNodes","nextSibling","findAtPoint","route","cx","enterInner","block","textblockFromContext","closeExtra","preserveWS","topOpen","currentPos","contains","compareDocumentPosition","textNode","parts","option","useRoot","minDepth","part","$context","deflt","findSameMarkInSet","upto","level","lastIndexOf","stashMark","prevItem","appendChild","selector","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","re","trim","DOMSerializer","serializeFragment","createDocumentFragment","keep","rendered","spanning","add","markDOM","serializeMark","serializeNodeInner","renderSpec","serializeNode","toDOM","structure","xmlNS","tagName","space","createElementNS","createElement","setAttributeNS","setAttribute","innerContent","domSerializer","nodesFromSchema","marksFromSchema","gatherToDOM","document","window","lower16","factor16","pow","makeRecover","recoverIndex","recoverOffset","DEL_BEFORE","DEL_AFTER","DEL_ACROSS","DEL_SIDE","MapResult","delInfo","recover","deleted","deletedBefore","deletedAfter","deletedAcross","StepMap","ranges","inverted","diff","mapResult","assoc","_map","simple","oldIndex","newIndex","oldSize","newSize","side","del","touches","oldStart","newStart","invert","Mapping","maps","mirror","appendMap","mirrors","setMirror","appendMapping","mapping","startSize","mirr","getMirror","appendMappingInverted","totalSize","inverse","corr","stepsByID","Step","getMap","merge","stepType","stepClass","jsonID","StepResult","failed","message","fail","mapFragment","mapped","AddMarkStep","apply","oldSlice","fromReplace","RemoveMarkStep","AddNodeMarkStep","updated","newSet","RemoveNodeMarkStep","ReplaceStep","contentBetween","ReplaceAroundStep","gapFrom","gapTo","gap","inserted","addMark","tr","removing","adding","removed","added","step","removeMark","toRemove","clearIncompatible","parentType","delSteps","allowed","canCut","liftTarget","range","lift","gapStart","gapEnd","splitting","innerRange","around","findWrappingOutside","findWrappingInside","withAttrs","outer","inside","lastType","innerMatch","wrappers","setBlockType","mapFrom","steps","canChangeType","startM","endM","$pos","setNodeMarkup","newNode","replaceWith","canSplit","typesAfter","innerType","rest","baseType","typeAfter","canJoin","insertPoint","dropPoint","pass","bias","insertPos","fits","wrapping","replaceStep","fitsTrivially","Fitter","fit","unplaced","frontier","findFittable","placeNodes","openMore","dropNode","moveInline","mustMoveInline","placedSize","sliceDepth","contentAt","frontierDepth","openAtEnd","dropFromFragment","closeFrontierNode","openFrontierNode","taken","openEndCount","closeNodeStart","addToFragment","contentAfterFits","findCloseLevel","dropInner","move","count","invalidMarks","definesContent","defining","definingForContent","replaceRange","deleteRange","targetDepths","coveredDepths","preferredTarget","unshift","definingAsContext","preferredTargetIndex","leftNodes","preferredDepth","def","openDepth","targetDepth","expand","closeFragment","startSteps","oldOpen","newOpen","replaceRangeWith","point","covered","delete","AttrStep","TransformError","__proto__","Transform","docs","maybeStep","addStep","docChanged","setNodeAttribute","addNodeMark","removeNodeMark","classesById","Selection","$anchor","$head","SelectionRange","anchor","lastNode","lastParent","selectionToInsertionEnd","dir","textOnly","TextSelection","findSelectionIn","findFrom","AllSelection","cls","selectionClass","getBookmark","between","visible","warnedAboutTextSelection","checkTextSelection","console","$cursor","near","ensureMarks","TextBookmark","dPos","NodeSelection","NodeBookmark","selectable","isSelectable","sel","atStart","selection","setSelection","AllBookmark","startLen","_from","_to","_newFrom","newTo","UPDATED_SEL","UPDATED_MARKS","UPDATED_SCROLL","Transaction","curSelectionFor","meta","time","Date","now","curSelection","storedMarks","selectionSet","setStoredMarks","addStoredMark","removeStoredMark","storedMarksSet","setTime","replaceSelection","replaceSelectionWith","inheritMarks","deleteSelection","insertText","setMeta","getMeta","isGeneric","scrollIntoView","scrolledIntoView","FieldDesc","desc","init","baseFields","config","_marks","_old","prev","Configuration","plugins","pluginsByKey","fields","plugin","EditorState","applyTransaction","filterTransaction","rootTr","transactions","trs","newState","applyInner","haveNew","appendTransaction","oldState","newInstance","field","$config","reconfigure","pluginFields","bindProps","Function","Plugin","props","createKey","getState","keys","PluginKey","nav","navigator","agent","userAgent","ie_edge","ie_upto10","ie_11up","ie","ie_version","documentMode","gecko","_chrome","chrome","chrome_version","safari","vendor","ios","maxTouchPoints","mac","platform","android","webkit","documentElement","webkit_version","domIndex","assignedSlot","host","reusedRange","textRange","createRange","setEnd","setStart","isEquivalentPosition","off","targetNode","targetOff","scanFor","atomElements","hasBlockDesc","contentEditable","isOnEdge","atEnd","pmViewDesc","selectionCollapsed","domSel","collapsed","isCollapsed","rangeCount","getRangeAt","keyEvent","keyCode","event","createEvent","initEvent","windowRect","left","right","clientWidth","bottom","clientHeight","getSide","clientRect","rect","getBoundingClientRect","scaleX","width","offsetWidth","scaleY","height","offsetHeight","scrollRectIntoView","view","startDOM","scrollThreshold","someProp","scrollMargin","elt","atTop","body","bounding","moveX","moveY","defaultView","scrollBy","startX","scrollLeft","startY","scrollTop","dX","dY","storeScrollPos","refDOM","refTop","innerHeight","root","elementFromPoint","localRect","stack","scrollStack","resetScrollPos","newRefTop","restoreScrollStack","dTop","preventScrollSupported","focusPreventScroll","setActive","focus","stored","preventScroll","findOffsetInNode","coords","closest","coordsClosest","dxClosest","rowBot","rowTop","childIndex","rects","getClientRects","dx","findOffsetInText","len","singleRect","inRect","targetKludge","posFromElement","docView","posFromDOM","posFromCaret","outside","nearestDesc","posBefore","posAfter","element","box","startI","floor","posAtCoords","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","startOffset","draggable","posAtStart","border","BIDI","coordsAtPos","domFromPos","supportEmptyRange","takeSide","flattenV","rectBefore","rectAfter","$dom","flattenH","ignoreForCoords","withFlushedState","viewState","activeElement","updateState","endOfTextblockVertical","nearest","boxes","maybeRTL","endOfTextblockHorizontal","domSelection","modify","oldRange","oldNode","focusNode","oldOff","focusOffset","oldBidiLevel","caretBidiLevel","parentDOM","domAfterPos","removeAllRanges","cachedState","cachedDir","cachedResult","endOfTextblock","NOT_DIRTY","CHILD_DIRTY","CONTENT_DIRTY","NODE_DIRTY","ViewDesc","children","dirty","matchesWidget","widget","matchesMark","matchesNode","outerDeco","innerDeco","matchesHack","parseRule","stopEvent","destroy","posBeforeChild","posAtEnd","localPosFromDOM","domBefore","domAfter","onlyNodes","nodeDOM","getDesc","descAt","TrailingHackViewDesc","WidgetViewDesc","domAtom","parseRange","fromOffset","toOffset","childBase","emptyChildAt","force","anchorDOM","headDOM","getSelection","brKludge","anchorNode","anchorOffset","domSelExtended","extend","collapse","DOMException","ignoreMutation","mutation","contentLost","markDirty","startInside","endInside","markParentsDirty","raw","classList","stop","ignoreSelection","CompositionViewDesc","textDOM","mut","oldValue","MarkViewDesc","custom","nodeViews","reparseInView","replaceNodes","NodeViewDesc","updateChildren","descObj","hasAttribute","applyOuterDeco","CustomNodeViewDesc","TextViewDesc","sameOuterDeco","composition","composing","localCompositionInfo","localComposition","compositionInChild","updater","ViewTreeUpdater","iterDeco","insideNode","syncToMarks","placeWidget","compIndex","findNodeMatch","findIndexWithChild","updateNodeAt","updateNextNode","addTextblockHacks","destroyRest","changed","protectLocalComposition","renderDescs","iosHacks","nearbyTextNode","textPos","findTextInFragment","removeChild","input","compositionNodes","updateInner","updateOuterDeco","needsWrap","oldDOM","patchOuterDeco","computeOuterDeco","selectNode","deselectNode","removeAttribute","docViewDesc","pmIsDeco","inParent","trackWrites","descs","written","childDOM","rm","insertBefore","OuterDecoLevel","noDeco","class","outerDOM","prevComputed","curComputed","curDOM","deco","patchAttributes","prevList","filter","Boolean","curList","removeProperty","cssText","lock","preMatch","destroyBetween","maxKeep","markDesc","targetDesc","has","domNode","nextDOM","locked","requiresGeckoHackNode","addHackNode","className","alt","hack","parentDesc","curDesc","descI","fI","compareSide","onWidget","onNode","locals","forChild","decoIndex","restNode","parentIndex","widgets","cutAt","oldCSS","getComputedStyle","listStyle","childStart","selectionFromDOM","origin","inWidget","nearestDescNode","selectionBetween","editorOwnsSelection","editable","hasFocus","hasSelection","selectionToDOM","syncNodeSelection","mouseDown","allowDefault","curSel","domObserver","currentSelection","delayedSelectionSync","setCurSelection","disconnectSelection","cursorWrapper","selectCursorWrapper","resetEditableFrom","resetEditableTo","brokenSelectBetweenUneditable","temporarilyEditableNear","resetEditable","removeClassOnSelectionChange","connectSelection","setEditable","wasDraggable","hideSelectionGuard","img","disabled","lastSelectedViewDesc","clearNodeSelection","hasFocusAndSelection","anchorInRightPlace","moveSelectionBlock","$side","dispatch","selectHorizontally","mods","nodePos","nodeLen","isIgnorable","skipIgnoredNodesLeft","moveNode","moveOffset","isBlockNode","setSelFocus","skipIgnoredNodesRight","selectVertically","beyond","stopNativeHorizontalDelete","nextNode","switchEditable","safariDownArrowBug","getMods","ctrlKey","metaKey","altKey","shiftKey","captureKeyDown","serializeForClipboard","serializer","fromSchema","detachedDoc","wrapMap","wrapper","parseFromClipboard","html","plainText","inCode","asText","parsed","readHTML","restoreReplacedSpaces","contextNode","sliceData","inlineParents","addContext","closeSlice","normalizeSiblings","lastWrap","inLast","addToSibling","closeRight","wrapped","withWrappers","sibling","closeRange","thead","tbody","caption","colgroup","col","td","th","_detachedDoc","implementation","createHTMLDocument","metas","firstTag","innerHTML","querySelectorAll","handlers","editHandlers","passiveHandlers","touchstart","touchmove","InputState","lastKeyCode","lastKeyCodeTime","lastClick","lastSelectionOrigin","lastSelectionTime","lastIOSEnter","lastIOSEnterFallbackTimeout","lastFocus","lastTouch","lastAndroidDelete","composingTimeout","compositionEndedAt","domChangeCount","eventHandlers","initInput","handler","eventBelongsToView","runCustomHandler","passive","ensureListeners","setSelectionOrigin","destroyInput","clearTimeout","currentHandlers","defaultPrevented","bubbles","eventCoords","clientX","clientY","isNear","click","dy","runHandlerOnContext","propName","updateSelection","focused","selectClickedLeaf","selectClickedNode","selectedNode","selectAt","handleSingleClick","handleDoubleClick","handleTripleClick","defaultTripleClick","button","forceDOMFlush","endComposition","keydown","_event","inOrNearComposition","forceFlush","preventDefault","keyup","keypress","charCode","String","fromCharCode","selectNodeModifier","mousedown","flushed","MouseDown","targetPos","mightDrag","startDoc","addAttr","setUneditable","up","updateAllowDefault","abs","buttons","timeStamp","contextmenu","timeoutComposition","scheduleComposeEnd","delay","clearComposition","timestampFromCustomEvent","forceUpdate","flushingSoon","captureCopy","selectNodeContents","blur","compositionstart","compositionupdate","flush","markCursor","compositionend","brokenClipboardAPI","sliceSingleNode","capturePaste","doPaste","singleNode","data","clipboardData","clearData","setData","paste","getData","Dragging","dragCopyModifier","dragstart","dataTransfer","effectAllowed","dragging","dragend","dragover","dragenter","drop","eventPos","$mouse","isNode","beforeInsert","relatedTarget","clear","beforeinput","inputType","flushSoon","compareObjs","WidgetType","noSpec","span","oldOffset","Decoration","valid","InlineType","inclusiveStart","inclusiveEnd","DecorationSet","local","decorations","buildTree","predicate","findInner","childOff","mapInner","newLocal","onRemove","mapChildren","byPos","addInner","childNode","childOffset","baseOffset","takeSpansForNode","moveSpans","withoutNulls","removeInner","dec","localSet","DecorationGroup","removeOverlap","localsInner","is","members","mappedDecos","member","sorted","oldChildren","moved","oldEnd","newEnd","dSize","mustRebuild","fromLocal","toLocal","mapAndGatherRemainingDecorations","spans","gather","hasNulls","localStart","subtree","working","insertAhead","viewDecorations","observeOptions","childList","characterData","characterDataOldValue","attributes","attributeOldValue","useCharData","SelectionState","DOMObserver","handleDOMChange","queue","observer","onCharData","suppressingSelectionUpdates","MutationObserver","mutations","removedNodes","prevValue","onSelectionChange","takeRecords","observe","take","suppressSelectionUpdates","ignoreSelectionChange","container","commonAncestorContainer","newSel","typeOver","registerMutation","brs","readSel","scrollToSelection","checkCSS","attributeName","addedNodes","cssChecked","WeakMap","cssCheckWarned","whiteSpace","parseBetween","from_","to_","readDOMChange","shared","preferredPos","preferredSide","compare","change","findDiff","endA","endB","resolveSelection","nextSel","$fromA","inlineChange","looksLikeJoin","markChange","chFrom","chTo","isMarkChange","parsedSel","curMarks","prevMarks","old","$newStart","$newEnd","skipClosingAndOpening","$next","fromEnd","mayOpen","adjust","EditorView","_root","mounted","prevDirectPlugins","pluginViews","_props","directPlugins","checkStateComponent","mount","getEditable","updateCursorWrapper","buildNodeViews","computeDocDeco","updatePluginViews","handleDOMEvents","prevProps","updateStateInner","setProps","redraw","updateSel","pluginsChanged","changedNodeViews","scroll","updateDoc","oldScrollPos","overflowAnchor","forceSelUpdate","selectionContextChanged","chromeKludge","destroyPluginViews","prevState","pluginView","parentElement","getPrototypeOf","domAtPos","posAtDOM","isDestroyed","dispatchTransaction","contenteditable","translate","sel1","sel2","nA","nB","gecko_version","run","textBefore","transform","customInputRulesKey","customInputRules","isInputRules","handleTextInput","handleKeyDown","calculateNodePosition","Text","HTMLElement","selectedNodeRect","targetNodeRect","parentNodeRect","calculateTextPosition","cloneTr","assign","equalNodeType","getNodeFromSchema","findParentNodeClosestToPos","findParentNode","findSelectedNodeOfType","joinBackward","$cut","findCutBefore","deleteBarrier","textblockAt","delStep","only","selectNodeBackward","joinForward","findCutAfter","selectNodeForward","newlineInCode","defaultBlockAt","exitCode","above","createParagraphNear","liftEmptyBlock","splitBlock","can","$first","selectParentNode","selectAll","joinMaybeClear","conn","canDelAfter","joinAt","selAfter","at","afterText","afterDepth","selectTextblockSide","selectTextblockStart","selectTextblockEnd","wrapIn","applicable","markApplies","toggleMark","spaceStart","spaceEnd","chainCommands","commands","backspace","pcBaseKeymap","macBaseKeymap","os","baseKeymap","brokenModifierNames","keyName","ignoreKey","normalizeKeyName","ctrl","mod","normalize","modifiers","keymap","bindings","keydownHandler","baseName","isChar","direct","fromCode","withShift","includeImageAlt","list","items","parameters","chunkStart","combineExtensions","extensions","syntaxExtension","extension","hook","maybe","constructs","existing","unicodePunctuationRegex","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","limit","POSITIVE_INFINITY","prefix","consume","exit","tokenize","initializeContent","contentStart","attempt","contentInitial","afterContentStartConstruct","paragraphInitial","previous","lineStart","token","contentType","initializeDocument","containerConstruct","tokenizeContainer","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","lazy","line","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","sliceStream","defineSkip","write","entry","nok","disable","null","includes","blankLine","tokenizeBlankLine","partial","afterWhitespace","subtokenize","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","breaks","_gfmTasklistFirstContentOfListItem","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","contentEnd","contentContinue","startLookahead","prefixed","tail","sliceSerialize","initializeFlow","initial","atBlankEnding","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","initializeText","resolveAllLineSuffixes","notText","atBreak","extraResolver","resolveAllText","chunks","tabs","bufferIndex","chunk","column","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","expectedCode","addResult","expandTabs","serializeChunks","sliceChunks","accountForPotentialSkip","chunkIndex","go","construct","info","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","resolveTo","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","startBufferIndex","endBufferIndex","atTab","thematicBreak","tokenizeThematicBreak","marker","sequence","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","onBlank","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","afterPrefix","blockQuote","tokenizeBlockQuoteStart","tokenizeBlockQuoteContinuation","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","toUpperCase","definition","tokenizeDefinition","titleConstruct","tokenizeTitle","identifier","labelAfter","defined","codeIndented","tokenizeCodeIndented","indentedContent","tokenizeIndentedContent","afterStartPrefix","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","fenceOpenInside","headingBreak","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","heading","paragraph","closingSequence","closingSequenceEnd","htmlBlockNames","htmlRawNames","htmlFlow","tokenizeHtmlFlow","resolveToHtmlFlow","nextBlankConstruct","tokenizeNextBlank","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","tokenizeCodeFenced","closingFenceConstruct","tokenizeClosingFence","nonLazyLine","tokenizeNonLazyLine","initialPrefix","sizeOpen","sequenceOpen","infoOpen","openAfter","infoAfter","closingSequenceStart","decodeNamedCharacterReference","characterReference","char","tokenizeCharacterReference","numeric","characterEscape","tokenizeCharacterEscape","lineEnding","tokenizeLineEnding","labelEnd","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","fullReferenceConstruct","tokenizeFullReference","collapsedReferenceConstruct","tokenizeCollapsedReference","media","_inactive","_balanced","insideSpan","labelStart","balanced","afterLabelEnd","destinationAfter","afterLabel","labelStartImage","tokenizeLabelStartImage","classifyCharacter","attention","tokenizeAttention","resolveAllAttention","openingSequence","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","tokenizeHtmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","tokenizeLabelStartLink","hardBreakEscape","tokenizeHardBreakEscape","codeText","tokenizeCodeText","resolveCodeText","tailExitIndex","headEnterIndex","resolveText","defaultConstructs","creator","preprocess","atCarriageReturn","preprocessor","encoding","endPosition","lastIndex","ceil","postprocess","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","hex","stringifyPosition","position","own","fromMarkdown","compiler","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tree","tokenStack","listStack","resume","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","ancestor","lang","url","referenceType","ordered","spread","checked","combined","remarkParse","settings","Parser","zwitch","fn","invalid","unknown","arguments","track","options_","lineShift","containerFlow","safeOptions","indexStack","tracker","results","handle","bulletLastUsed","repeat","eol","indentLines","blank","patternInScope","pattern","listInScope","inConstruct","notInConstruct","_1","safe","unsafe","character","longestStreak","source","expected","formatCodeAsIndented","fences","checkFence","fence","patternCompile","_compiled","RegExp","positions","infos","numerical","escapeBackslashes","charAt","encode","whole","suffix","subexit","association","checkQuote","quote","checkEmphasis","containerPhrasing","peek","emphasisPeek","convert","typeFactory","anyFactory","propsFactory","castFactory","tests","checks","any","assertion","color","CONTINUE","SKIP","EXIT","visitParents","visitor","factory","parents","defineProperty","visit","subresult","grandparents","toResult","overload","formatHeadingAsSetext","literalWithBreak","setext","closeAtx","htmlPeek","imagePeek","imageReference","imageReferencePeek","inlineCode","inlineCodePeek","formatLinkAsAutolink","resourceLink","linkPeek","linkReference","linkReferencePeek","checkBullet","bullet","checkBulletOther","bulletOther","checkBulletOrdered","bulletOrdered","checkBulletOrderedOther","bulletOrderedOther","checkRule","bulletCurrent","useDifferentMarker","firstListItem","checkListItemIndent","listItemIndent","incrementListMarker","checkStrong","strongPeek","checkRuleRepetition","repetition","ruleRepetition","ruleSpaces","break","joinDefaults","fullPhrasingSpans","toMarkdown","tightDefinitions","joinDefinition","remarkStringify","Compiler","bail","error","isPlainObject","toStringTag","iterator","trough","fns","pipeline","middlewareIndex","TypeError","middelware","middleware","fnExpectsCallback","exception","then","VFileMessage","reason","fatal","ruleId","actual","file","note","basename","dirname","extname","sep","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","segments","absolute","normalizeString","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","getPathFromURLPosix","hostname","pathname","third","decodeURIComponent","order","VFile","messages","history","assertNonEmpty","assertPart","stem","unified","freeze","transformers","attachers","frozen","freezeIndex","processor","runSync","process","processSync","destination","assertUnfrozen","attacher","transformer","addPlugin","addList","addPreset","thing","isPlainObj","vfile","assertParser","newable","assertCompiler","assertNode","executor","reject","complete","assertDone","looksLikeAVFileValue","asyncName","looksLikeAVFile","isBuffer","sheetForTag","sheet","styleSheets","ownerNode","createStyleElement","nonce","StyleSheet","_this","_insertTag","insertionPoint","isSpeedy","speedy","ctr","_proto","hydrate","insertRule","cssRules","hash","charat","indexof","substr","begin","strlen","sizeof","combine","characters","return","caret","alloc","dealloc","delimit","delimiter","escaping","commenter","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","IMPORT","KEYFRAMES","serialize","collection","rulesheet","prefixer","rulesets","pseudo","points","declarations","atrule","property","variable","scanning","ampersand","ruleset","post","k","identifierWithPointTracking","toRules","getRules","fixedElements","compat","isImplicitRule","parentRules","removeLabel","defaultStylisPlugins","createCache","ssrStyles","dataEmotionAttribute","stylisPlugins","_insert","nodesToHydrate","attrib","omnipresentPlugins","currentSheet","finalizingPlugins","stylis","serialized","shouldCache","cache","registered","B","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","H","O","V","unitless","__emotion_styles","anim","ne","hashString","te","oe","Y","se","U","G","css","injectGlobal","keyframes","getRegisteredStyles","we","Se","$","W","Set","onFlush","runExecutor","setExecutor","Ne","Ce","ae","ce","fe","le","ue","me","de","he","pe","ge","ve","Ee","Oe","Te","Re","elements","pushElement","popElement","openNode","closeNode","openMark","closeMark","Z","K","build","createStack","addText","State","specMap","flat","runner","yt","toDoc","st","rt","isMark","D","ht","ct","it","ut","pt","dt","nt","lt","kt","mt","withMark","entries","R","every","gt","Ge","ee","Je","Ae","ye","We","X","Rt","$e","override","Fe","je","ke","Qe","Ue","Xe","fromEntries","Ie","q","Ye","parseMarkdown","qe","Ze","Be","et","_e","Le","Ve","tt","Q","createInputRules","createKeymap","De","J","ot","be","markViews","setCtx","St","Ot","Me","Pe","action","ctx","GOOD_LEAF_SIZE","RopeSequence","leafAppend","leafPrepend","appendInner","Append","sliceInner","getInner","forEachInner","forEachInvertedInner","Leaf","prototypeAccessors","configurable","flatten","defineProperties","leftLen","ropeSequence","max_empty_items","Branch","eventCount","popEvent","preserveItems","remap","remapping","remaining","addAfter","Item","addTransform","histOptions","newItems","oldItems","lastItem","merged","overflow","DEPTH_OVERFLOW","cutOffEvents","mirrorPos","mirrorOffset","addMaps","rebased","rebasedTransform","rebasedCount","rebasedItems","newUntil","iRebased","newMaps","branch","emptyItemCount","compress","newItem","cutPoint","HistoryState","undone","prevRanges","prevTime","historyTr","historyKey","historyState","closeHistoryKey","appended","redo","mustPreserveItems","rangesFor","mapRanges","newGroup","newGroupDelay","isAdjacentTo","adjacent","histTransaction","newHist","cachedPreserveItems","cachedPreserveItemsPlugins","historyPreserveItems","hist","command","undo","getStyle","onSelectLanguage","onBlur","onFocus","languageList","spellcheck","stopPropagation","dataset","fold","innerText","onUpdate","language","onDestroy","placeholder","onError","onLoad","src","onerror","onload","loading","codeStyle","hideCodeStyle","previewPanelStyle","isEditing","innerView","openEditor","Backspace","closeEditor","getPos","preview","editor","isBindMode","buttonText","calculatePosition","HTMLInputElement","show","hide","onChange","cursor","icon","divider","brokenImage","bulletList","orderedList","taskList","bold","italic","strikeThrough","leftArrow","rightArrow","upArrow","downArrow","alignLeft","alignRight","alignCenter","select","unchecked","liftList","sinkList","dragHandle","nord0","nord1","nord2","nord3","nord4","nord5","nord6","nord7","nord8","nord9","nord10","nord11","nord12","nord13","nord14","nord15","shadow","primary","secondary","neutral","background","surface","typography","radius","lineWidth","backgroundColor","matchMedia","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","defaultSize","getRandom","mask","log","LN2","customAlphabet","Pt","findThenRun","headless","$t","Vt","wt","getClassName","themeManager","pipelineCtx","flatMap","zt","jt","Lt","remarkPlugins","inputRules","shortcuts","prosePlugins","Nt","Ut","InputRule","stringHandler","cutOff","wrappingInputRule","regexp","joinPredicate","textblockTypeInputRule","splitListItem","itemType","grandParent","depthBefore","depthAfter","liftListItem","liftToOuterList","liftOutOfList","endOfList","indexBefore","sinkListItem","nestedBefore","definitions","clean","remarkInlineLinks","HardBreak","Blockquote","BulletList","OrderedList","CodeFence","H1","H2","H3","H4","H5","H6","DowngradeHeading","CodeInline","Em","Bold","NextListItem","SinkListItem","LiftListItem","xe","requestAnimationFrame","selected","HTMLSelectElement","spellCheck","notIn","Ke","ft","getId","displayHashtag","He","Mt","listType","ze","It","bt","Ct","xt","Ht","Tt","Dt","InputEvent","At","Et","vt","_t","hole","punctuation","placeholderConfig","globalNodes","shouldSyncNode","prevNode","movePlaceholder","Bt","Wt","qt","Kt","Ft","cancelAnimationFrame","lr","cr","ToggleInlineCode","ToggleItalic","ToggleLink","ToggleBold","ModifyLink","ModifyImage","WrapInBlockquote","WrapInBulletList","WrapInOrderedList","TurnIntoCodeFence","TurnIntoHeading","TurnIntoText","InsertHardbreak","InsertHr","InsertImage","SplitListItem","www","tokenizeWww","domain","tokenizeDomain","tokenizePath","tokenizePunctuation","namedCharacterReference","tokenizeNamedCharacterReference","wwwAutolink","tokenizeWwwAutolink","previousWww","httpAutolink","tokenizeHttpAutolink","previousHttp","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","hasDot","hasDigitInLastSegment","gfmAtext","previousUnbalanced","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","t1","t2","colon","slash1","slash2","w2","w3","dot","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","punctuationContinuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","tokenizeTable","resolveTable","nextPrefixedOrBlank","tokenizeNextPrefixedOrBlank","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","cell","align","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","tableBodyClose","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","ccount","escapeStringRegexp","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","matchObject","global","toExpression","toFunction","escape","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","literalAutolink","enterLiteralAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","isCorrectDomain","splitUrl","trailExec","closingParenIndex","openingParens","closingParens","trail","email","gfmFootnoteFromMarkdown","gfmFootnoteDefinition","enterFootnoteDefinition","gfmFootnoteDefinitionLabelString","enterFootnoteDefinitionLabelString","gfmFootnoteCall","enterFootnoteCall","gfmFootnoteCallString","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteReference","footnoteReferencePeek","footnoteDefinition","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","handleDelete","peekDelete","markdownTable","stringLength","defaultStringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","alignDelimiters","toAlignment","lines","delimiterStart","padding","delimiterEnd","codePointAt","gfmTableFromMarkdown","enterTable","tableData","enterCell","tableHeader","tableRow","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","tableCellPadding","tablePipeAlign","handleTable","handleTableRow","tableCell","handleTableCell","inlineCodeWithTable","serializeData","handleTableAsData","handleTableRowAsData","matrix","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","siblings","firstParaghraph","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","remarkGfm","onclick","ondblclick","location","problems","findCell","colCount","nextCell","rectBetween","cellsInRect","positionAt","tableRole","colspan","rowspan","colwidth","$anchorCell","$headCell","isRowSelection","rowSelection","isColSelection","colSelection","forEachCell","getFromDOM","setDOMAttr","cellAttributes","tableGroup","table_row","table_cell","cellContent","table_header","tableNodeTypes","alignment","textAlign","header_cell","tableStart","Xt","Jt","Zt","en","tn","nn","ln","sn","rn","Qt","Gt","Yt","cn","an","dn","Left","Top","Point","un","pn","hn","mn","browser","startsWith","gn","cellMinWidth","minWidth","handleWidth","View","lastColumnResizable","activeHandle","mousemove","bn","mouseleave","Cn","handleMouseDown","xn","setHandle","setDragging","An","kn","Mn","which","Sn","startWidth","Nn","rows","vn","$n","En","fixTables","_n","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Delete","Rn","allowTableNodeSelection","Dn","createSelectionBetween","handlePaste","In","SupportedKeys","NextCell","PrevCell","ExitTable","Bn","Pn","isHeader","wn","Fn","CommonmarkKeys","TableKeys","StrikeThrough","TaskList","Wn","Hn","oo","ySyncPluginKey","yUndoPluginKey","yCursorPluginKey","createMutex","imul","log10","log2","sqrt","isNaN","isNegativeZero","sign","hasProperty","equalFlat","simpleDiffString","simpleDiff","methodUnimplemented","unexpectedCase","setIfUndefined","createT","res","arr","appendTo","dest","Observable","_observers","once","_f","args","observers","emit","fromCodePoint","trimLeftRegex","trimLeft","fromCamelCaseRegex","fromCamelCase","separator","_encodeUtf8Polyfill","encodedString","unescape","encodeURIComponent","buf","utf8TextEncoder","TextEncoder","_encodeUtf8Native","encodeUtf8","utf8TextDecoder","TextDecoder","ignoreBOM","undefinedToNull","VarStoragePolyfill","setItem","newValue","getItem","_localStorage","usePolyfill","localStorage","varStorage","eventHandler","release","isBrowser","params","computeParams","pargs","argv","currParamName","parg","kv","hasParam","getVariable","conditions","storage","hasConf","createUint8ArrayFromLen","createUint8ArrayViewFromArrayBuffer","byteOffset","createUint8ArrayFromArrayBuffer","toBase64Browser","byteLength","btoa","toBase64Node","Buffer","fromBase64Browser","atob","fromBase64Node","toBase64","env","fromBase64","copyUint8Array","uint8Array","newBuf","BIT1","BIT2","BIT3","BIT4","BIT6","BIT7","BIT8","BITS5","BITS6","BITS7","BITS31","MAX_SAFE_INTEGER","isInteger","MIN_SAFE_INTEGER","num","isFinite","math","Encoder","cpos","cbuf","bufs","createEncoder","encoder","toUint8Array","uint8arr","verifyLen","bufferLen","writeUint8","writeVarUint","binary","writeVarInt","isNegative","_strBuffer","_maxStrBSize","_writeVarStringNative","writeVarUint8Array","_writeVarStringPolyfill","writeVarString","writeUint8Array","leftCopyLen","rightCopyLen","subarray","writeOnDataView","dview","DataView","writeFloat32","setFloat32","writeFloat64","setFloat64","writeBigInt64","setBigInt64","floatTestBed","ArrayBuffer","isFloat32","getFloat32","writeAny","number","RleEncoder","writer","flushUintOptRleEncoder","UintOptRleEncoder","flushIntDiffOptRleEncoder","encodedDiff","IntDiffOptRleEncoder","StringEncoder","sarr","lensE","Decoder","createDecoder","hasContent","decoder","readUint8Array","readVarUint8Array","readVarUint","readUint8","mult","readVarInt","_readVarStringPolyfill","remainingLen","nextLen","_readVarStringNative","readVarString","readFromDataView","dv","readFloat32","readFloat64","getFloat64","readBigInt64","getBigInt64","readAnyLookupTable","readAny","RleDecoder","reader","read","UintOptRleDecoder","IntDiffOptRleDecoder","hasCount","StringDecoder","spos","performance","isoCrypto","cryptoRandomBuffer","rand","uint32","Uint32Array","oneOf","uuidv4Template","uuidv4","callAll","fs","equalityStrict","equalityDeep","Pair","mapToStyleString","getUnixTime","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","BOLD","symbol","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","_browserStyleMap","pair","_nodeStyleMap","computeBrowserLoggingArgs","strBuilder","currentStyle","logArgs","arg","computeNodeLoggingArgs","computeLoggingArgs","print","vconsoles","vc","createIterator","iteratorFilter","iteratorMap","fmap","DeleteItem","clock","DeleteSet","clients","iterateDeletedStructs","transaction","ds","deletes","clientid","structs","iterateStructs","findIndexDS","dis","midindex","mid","midclock","isDeleted","client","sortAndMergeDeleteSet","dels","mergeDeleteSets","dss","dssI","delsLeft","addToDeleteSet","createDeleteSet","createDeleteSetFromStructStore","ss","dsitems","struct","writeDeleteSet","restEncoder","resetDsCurVal","writeDsClock","writeDsLen","readDeleteSet","numClients","decoding","restDecoder","numberOfDeletes","dsField","readDsClock","readDsLen","readAndApplyDeleteSet","unappliedDS","clockEnd","findIndexSS","splitItem","UpdateEncoderV2","generateNewClientId","Doc","guid","collectionid","gc","gcFilter","autoLoad","shouldLoad","clientID","share","StructStore","_transaction","_transactionCleanups","subdocs","_item","isLoaded","whenLoaded","promise","load","transact","subdocsLoaded","getSubdocs","getSubdocGuids","TypeConstructor","AbstractType","_integrate","Constr","_start","_length","getArray","YArray","getText","YText","YMap","getXmlFragment","YXmlFragment","subdoc","opts","subdocsAdded","subdocsRemoved","eventName","DSDecoderV1","UpdateDecoderV1","readLeftID","createID","readRightID","readClient","readInfo","readString","readParentInfo","readTypeRef","readLen","readBuf","readJSON","readKey","DSDecoderV2","dsCurrVal","UpdateDecoderV2","keyClockDecoder","clientDecoder","leftClockDecoder","rightClockDecoder","infoDecoder","stringDecoder","parentInfoDecoder","typeRefDecoder","lenDecoder","ID","keyClock","DSEncoderV1","UpdateEncoderV1","writeLeftID","writeRightID","writeClient","writeInfo","writeString","writeParentInfo","isYKey","writeTypeRef","writeLen","writeBuf","writeJSON","embed","writeKey","DSEncoderV2","keyMap","keyClockEncoder","clientEncoder","leftClockEncoder","rightClockEncoder","infoEncoder","stringEncoder","parentInfoEncoder","typeRefEncoder","lenEncoder","writeStructs","startNewStructs","firstStruct","writeClientsStructs","_sm","sm","getStateVector","readClientsStructRefs","clientRefs","numOfStateUpdates","numberOfStructs","refs","GC","Skip","cantCopyParentInfo","readItemContent","integrateStructs","clientsStructRefs","clientsStructRefsIds","getNextStructTarget","nextStructsTarget","curStructsTarget","restStructs","missingSV","updateMissingSv","mclock","stackHead","addStackToRestSS","unapplicableItems","localClock","missing","getMissing","structRefs","integrate","writeStructsFromTransaction","beforeState","readUpdateV2","ydoc","transactionOrigin","structDecoder","retry","pendingStructs","mergeUpdatesV2","dsRest","pendingDs","pendingDSUpdate","dsRest2","applyUpdateV2","YDecoder","applyUpdate","writeStateAsUpdate","targetStateVector","encodeStateAsUpdateV2","encodedTargetStateVector","decodeStateVector","updates","diffUpdateV2","mergeUpdates","convertUpdateFormatV2ToV1","encodeStateAsUpdate","readStateVector","ssLength","decodedState","writeStateVector","sv","writeDocumentStateVector","encodeStateVectorV2","encodeStateVector","EventHandler","createEventHandler","addEventHandlerListener","removeEventHandlerListener","callEventHandlerListeners","arg0","arg1","compareIDs","findRootTypeKey","isParentOf","RelativePosition","tname","createRelativePositionFromJSON","AbsolutePosition","createAbsolutePosition","createRelativePosition","typeid","createRelativePositionFromTypeIndex","countable","lastId","createAbsolutePositionFromRelativePosition","rpos","rightID","typeID","followRedone","ContentType","compareRelativePositions","Snapshot","createSnapshot","snapshot","isVisible","splitSnapshotAffectedStructs","getItemCleanStart","lastStruct","addStruct","findIndexCleanStart","getItemCleanEnd","replaceStruct","newStruct","clockStart","deleteSet","afterState","changedParentTypes","_mergeStructs","writeUpdateMessageFromTransaction","addChangedTypeToTransaction","parentSub","tryToMergeWithLeft","mergeWith","tryGcDeleteSet","deleteItems","di","deleteItem","endDeleteItemClock","si","tryMergeDeleteSet","mostRightIndexToCheck","cleanupTransactions","transactionCleanups","mergeStructs","subs","itemtype","_callObserver","currentTarget","event1","event2","_dEH","beforeClock","firstChangePos","replacedStructPos","logging","loaded","initialCall","StackItem","deletions","insertions","clearUndoManagerStackItem","um","stackItem","scope","keepItem","popStackItem","undoManager","eventType","_tr","itemsToRedo","itemsToDelete","performedChange","redone","redoItem","ignoreRemoteMapChanges","deleteFilter","subProps","_searchMarker","UndoManager","typeScope","captureTimeout","captureTransaction","trackedOrigins","addToScope","undoStack","redoStack","undoing","redoing","lastChange","afterTransactionHandler","stopCapturing","endClock","startClock","didAdd","lastOp","changeEvent","ytypes","ytype","addTrackedOrigin","removeTrackedOrigin","clearUndoStack","clearRedoStack","canUndo","canRedo","undoStackCleared","redoStackCleared","lazyStructReaderGenerator","LazyStructReader","filterSkips","gen","curr","LazyStructWriter","currClient","clientStructs","sliceStruct","leftItem","rightOrigin","YEncoder","updateDecoders","lazyStructDecoders","currWrite","updateEncoder","lazyStructEncoder","dec1","dec2","clockDiff","currDecoder","firstClient","iterated","writeStructToLazyStructWriter","finishLazyStructWriting","lazyStructWriter","svClock","flushLazyStructWriter","lazyWriter","partStructs","convertUpdateFormat","updateDecoder","lazyDecoder","YEvent","_changes","_keys","_delta","getPathTo","adds","delta","changes","packOp","retain","maxSearchMarker","globalSearchMarkerTimestamp","ArraySearchMarker","timestamp","refreshMarkerTimestamp","overwriteMarker","markPosition","searchMarker","pm","findMarker","yarray","pindex","updateMarkerChanges","callTypeObservers","changedType","_eH","_copy","clone","_write","_first","parentSubs","observeDeep","unobserve","unobserveDeep","typeListSlice","cs","typeListToArray","typeListToArraySnapshot","typeListForEach","typeListMap","typeListCreateIterator","currentContent","currentContentIndex","typeListGet","typeListInsertGenericsAfter","referenceItem","ownClientId","jsonContent","packJsonContent","ContentAny","ContentBinary","ContentDoc","lengthExceeded","typeListInsertGenerics","typeListPushGenerics","maxMarker","currMarker","typeListDelete","startLength","typeMapDelete","typeMapSet","typeMapGet","typeMapGetAll","typeMapHas","createMapIterator","YArrayEvent","_prelimContent","toArray","el","YArrayRefID","readYArray","YMapEvent","ymap","keysChanged","YMapRefID","readYMap","equalAttrs","ItemTextListPosition","currentAttributes","forward","ContentFormat","updateCurrentAttributes","findNextPosition","findPosition","insertNegatedAttributes","currPos","negatedAttributes","nextFormat","format","minimizeAttributeChanges","insertAttributes","currentVal","ContentString","ContentEmbed","getLength","formatText","iterationLoop","newlines","cleanupFormattingGap","startAttributes","currAttributes","endAttributes","cleanups","reachedEndOfCurr","cleanupContextlessFormattingGap","cleanupYTextFormatting","deleteText","startAttrs","YTextEvent","ytext","childListChanged","oldAttributes","deleteLen","addOp","op","curVal","_pending","applyDelta","toDelta","foundFormattingItem","afterClock","sanitize","ins","prevSnapshot","computeYChange","ops","packStr","addAttributes","user","insertEmbed","attributeValue","getAttributes","YTextRefID","readYText","YXmlTreeWalker","_filter","_currentNode","_firstCall","YXmlElement","createTreeWalker","query","YXmlEvent","xml","_document","hooks","binding","_createAssociation","xmlType","insertAfter","refItem","pc","YXmlFragmentRefID","readYXmlFragment","_prelimAttrs","prevSibling","stringBuilder","keysLen","toLocaleLowerCase","attrsString","yxml","YXmlElementRefID","readYXmlElement","attributesChanged","YXmlHook","hookName","createDom","YXmlHookRefID","readYXmlHook","YXmlText","nestedNodes","YXmlTextRefID","readYXmlText","AbstractStruct","encodingRef","structGCRefNumber","isCountable","getRef","readContentBinary","ContentDeleted","markDeleted","readContentDeleted","createDocFromOpts","readContentDoc","readContentEmbed","readContentFormat","ContentJSON","readContentJSON","readContentAny","firstCharCode","readContentString","typeRefs","readContentType","nextID","rightItem","redoitems","ownClientID","parentItem","leftTrace","rightTrace","nextClock","nextId","redoneItem","isMarked","doKeep","doDelete","conflictingItems","itemsBeforeOrigin","parentGCd","ykey","contentRefs","structSkipRefNumber","glo","globalThis","importIdentifier","createTimeoutClass","clearFunction","timeoutId","Timeout","timeout","clearInterval","cancelIdleCallback","defaultColors","light","dark","getUserColor","colorMapping","colors","usedColors","ySyncPlugin","yXmlFragment","permanentUserData","onFirstRender","rerenderTimeout","changedInitialContent","syncState","_initargs","_state","isChangeOrigin","addToHistory","pluginState","eventloop","_renderSnapshot","mux","_prosemirrorChanged","prosemirrorView","ProsemirrorBinding","_forceRerender","yUndoPluginState","restoreRelativeSelection","relSel","relativePositionToAbsolutePosition","getRelativeSelection","pmbinding","absolutePositionToRelativePosition","_observeFunction","_typeChanged","beforeTransactionSelection","beforeAllTransactions","afterAllTransactions","_domSelectionInView","_isLocalCursorInView","environment","_isDomSelectionInView","innerWidth","renderSnapshot","unrenderSnapshot","fragmentContent","createNodeFromYElement","PModel","pud","getUserByClientId","getUserByDeletedId","delType","createNodeIfNotExists","updateYFragment","createChildren","ns","createTextNodesFromYText","textchild","ychange","deltas","markName","createTypeFromTextNodes","marksToAttributes","createTypeFromElementNode","normalizePNodeContent","createTypeFromTextOrElementNode","isObject","pattrs","yattrs","pnode","textNodes","tnode","equalYTextPText","ptexts","equalYTypePNode","matchNodeName","normalizedContent","ychild","mappedIdentity","pcontent","computeChildEqualityFactor","yChildren","pChildren","pChildCnt","yChildCnt","minCnt","foundMappedChild","leftY","leftP","rightY","rightP","equalityFactor","ytextTrans","nAttrs","updateYText","yDomFragment","pNode","yDomAttrs","pAttrs","updateLeft","updateRight","equalityLeft","equalityRight","yDelLen","yElement","viewsToUpdate","updateMetas","ups","pNodeSize","documentType","relPos","decodedPos","prosemirrorToYDoc","xmlFragment","prosemirrorToYXmlFragment","yDocToProsemirror","yDocToProsemirrorJSON","yXmlFragmentToProsemirrorJSON","response","defaultProtectedNodes","defaultDeleteFilter","protectedNodes","XmlElement","yUndoPlugin","initargs","ystate","_undoManager","prevSel","hasUndoOps","hasRedoOps","outdatedTimeout","Awareness","_checkInterval","setInterval","getLocalState","lastUpdated","setLocalState","removeAwarenessStates","currLocalMeta","filteredUpdated","setLocalStateField","getStates","awareness","curMeta","encodeAwarenessUpdate","applyAwarenessUpdate","clientMeta","currClock","defaultCursorBuilder","userDiv","nonbreakingSpace1","nonbreakingSpace2","defaultSelectionBuilder","rxValidColor","createDecorations","createCursor","createSelection","aw","clientId","warn","maxsize","yCursorPlugin","cursorBuilder","selectionBuilder","cursorStateField","_oldState","yCursorState","awarenessUpdated","awarenessListener","updateCursorInfo","bindCtx","bindDoc","setOptions","mergeOptions","setAwareness","applyTemplate","ySyncOpts","yUndoOpts","yCursorOpts","yCursorStateField","onSelect","em","strike_through","bullet_list","ordered_list","task_list_item","list_item","toggle","HTMLButtonElement","$create","utils","menu","menuWrapper","milkdownDOM","editorRoot","editorDOM","domHandler","isElement","canOverflow","skipOverflowHiddenElements","isScrollable","scrollHeight","scrollWidth","overflowY","overflowX","frame","frameElement","getFrameElement","isHiddenByFrame","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","windowWithViewport","scrollMode","boundary","checkBoundary","scrollingElement","frames","viewportWidth","visualViewport","viewportHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","targetHeight","targetWidth","targetTop","targetRight","targetBottom","targetLeft","targetBlock","targetInline","computations","frameStyle","borderLeft","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","scrollbarHeight","isOptionsObject","defaultBehavior","actions","behavior","canSmoothScroll","_ref","getOptions","isTargetAttached","isConnected","compute","computeOptions","memoizedNow","elapsed","startTime","duration","ease","currentX","currentY","method","cb","smoothScroll","scrollable","shouldSmoothScroll","overrides","startLeft","startTop","smoothScrollIntoView","textClassName","keyword","isTopLevel","isEmpty","KeyboardEvent","mouseEnter","mouseLeave","isLock","unlock","calcPosition","onClick","isHidden","isActive","canAddToDOM","code_inline","enable","Element","recreate","setHide","handleClick","mode","clipboardTextSerializer","dropCursor","editorView","DropCursorView","cursorPos","setCursor","updateOverlay","nodeRect","parentLeft","parentTop","offsetParent","scheduleRemoval","disableDropCursor","dragleave","GapCursor","GapBookmark","closedBefore","closedAfter","allowGapCursor","mustMove","$cur","findGapCursorFrom","gapCursor","drawGapCursor","_view","arrow","axis","dirStr","$found","clickPos","channels","LocalStoragePolyfill","onmessage","postMessage","BC","BroadcastChannel","getChannel","bc","subscribe","unsubscribe","publish","messageYjsSyncStep1","messageYjsSyncStep2","messageYjsUpdate","writeSyncStep1","writeSyncStep2","encodedStateVector","readSyncStep1","readSyncStep2","writeUpdate","readUpdate","readSyncMessage","messageType","messagePermissionDenied","readAuthMessage","permissionDeniedHandler","encodeQueryParams","messageSync","messageQueryAwareness","messageAwareness","messageAuth","messageHandlers","provider","emitSynced","_messageType","syncMessageType","syncProtocol","synced","_decoder","_emitSynced","awarenessProtocol","_encoder","authProtocol","_ydoc","messageReconnectTimeout","readMessage","messageHandler","setupWS","shouldConnect","ws","websocket","_WS","binaryType","wsconnecting","wsconnected","wsLastMessageReceived","send","onclose","wsUnsuccessfulReconnects","maxBackoffTime","onopen","encoderAwarenessState","broadcastMessage","bcconnected","bcChannel","WebsocketProvider","serverUrl","roomname","WebSocketPolyfill","WebSocket","resyncInterval","disableBc","encodedParams","_synced","_resyncInterval","readyState","OPEN","_bcSubscriber","_updateHandler","_awarenessUpdateHandler","_origin","changedClients","_unloadHandler","connectBc","encoderSync","encoderState","encoderAwarenessQuery","disconnectBc","rtop","request","onblocked","reload","onsuccess","openDB","initDB","indexedDB","onupgradeneeded","db","onversionchange","deleteDB","deleteDatabase","createStores","createObjectStore","stores","access","getStore","put","addAutoKey","getAll","queryFirst","direction","iterateKeys","getLastKey","iterateOnRequest","continue","keyrange","openKeyCursor","objectStore","createIDBKeyRangeUpperBound","upper","upperOpen","IDBKeyRange","upperBound","createIDBKeyRangeLowerBound","lower","lowerOpen","lowerBound","customStoreName","updatesStoreName","PREFERRED_TRIM_SIZE","fetchUpdates","idbPersistence","updatesStore","idb","_dbref","lastKey","cnt","_dbsize","storeState","forceStore","IndexeddbPersistence","_mux","mutex","_destroyed","_db","autoIncrement","whenSynced","currState","_storeTimeout","_storeTimeoutId","_storeUpdate","autoConnect","markdown","rndInt","CollabManager","collabService","wsProvider","indexeddbProvider","template","payload","isSynced","openRoom","roomId","msg","nord","slash","tooltip","clipboard","collaborative","app","methods","component","isPrototypeOf","$TypeError","module","exports","Prototype","NAME","Constructor","NATIVE_ARRAY_BUFFER","DESCRIPTORS","isCallable","hasOwn","classof","tryToString","createNonEnumerableProperty","defineBuiltIn","setPrototypeOf","wellKnownSymbol","uid","InternalStateModule","enforceInternalState","enforce","getInternalState","Int8Array","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","ObjectPrototype","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","NATIVE_ARRAY_BUFFER_VIEWS","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","klass","getTypedArrayConstructor","proto","isTypedArray","aTypedArray","aTypedArrayConstructor","exportTypedArrayMethod","KEY","forced","ARRAY","TypedArrayConstructor","error2","exportTypedArrayStaticMethod","IndexedObject","toObject","lengthOfArrayLike","createMethod","TYPE","IS_FIND_LAST_INDEX","$this","callbackfn","that","boundFunction","findLast","findLastIndex","fails","IndexSizeError","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","sharedKey","CORRECT_PROTOTYPE_GETTER","IE_PROTO","$Object","ArrayBufferViewCore","toIntegerOrInfinity","relativeIndex","$findLastIndex","$findLast","getBuiltIn","createPropertyDescriptor","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","IS_PURE","DOM_EXCEPTION","NativeDOMException","$DOMException","DOMExceptionPrototype","argumentsLength","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","descriptor","getOwnPropertyDescriptor","BUGGY_DESCRIPTOR","writable","FORCED_CONSTRUCTOR","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","constant","constantName","toStr","gOPD","hasOwnConstructor","hasIsPrototypeOf","setProperty","enumerable","getProperty","copyIsArray","deep"],"sourceRoot":""}