"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[786],{3860:function(s,e,t){t.r(e),t.d(e,{default:function(){return d}});var r=function(){var s=this,e=s._self._c;return e("div",[e("div",{ref:"graph",attrs:{id:"graph",width:"100px"}},[s._v("Loading graph...")]),e("div",[s._v(" "+s._s(s.users)+" "),e("hr"),s._v(" "+s._s(s.uploads)+" "),e("hr")])])},a=[],o={name:"GraphView",mounted(){this.$graphInit({domElement:this.$refs.graph})},methods:{update(){if(void 0!=this.graph){let s=this.nodes.map((s=>({...s}))),e=this.links.map((s=>({...s})));this.graph.graphData({nodes:s,links:e}),console.log(this.graph.graphData())}},updateUsers(){for(const[e,t]of Object.entries(this.users)){console.log(`${e}: ${t}`),t.id=t.clientID;var s=this.nodes.findIndex((s=>s.id==t.id));-1===s?this.nodes.push(t):Object.assign(this.nodes[s],t),console.log(this.nodes)}}},watch:{nodes(){this.update()},links(){this.update()},graph(){this.update()},users(){this.updateUsers()},usersUpdateDate(){console.log(this.usersUpdateDate),this.updateUsers(),this.$forceUpdate()}},computed:{nodes(){return this.$store.state.network.nodes},links(){return this.$store.state.network.links},graph(){return this.$store.state.network.graph},users:{cache:!1,get(){return this.$store.state.core.users}},usersUpdateDate(){return this.$store.state.core.usersUpdateDate},uploads(){return this.$store.state.core.uploads}}},h=o,i=t(1001),n=(0,i.Z)(h,r,a,!1,null,"83bb816c",null),d=n.exports}}]);
//# sourceMappingURL=graph.c36d93d5.js.map