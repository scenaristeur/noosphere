"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[557],{2847:function(t,e,o){o.r(e),o.d(e,{default:function(){return m}});var a=function(){var t=this,e=t._self._c;return e("div",{staticClass:"about"},[e("h3",[t._v("Share in the Noosphere")]),e("b-container",{attrs:{fluid:""}},[t._l(t.query,(function(o,a){return e("b-row",{key:a,staticClass:"my-1"},[e("b-col",{attrs:{sm:"3"}},[e("label",{attrs:{for:`share-field-${a}`}},[e("code",[t._v(t._s(a))]),t._v(":")])]),e("b-col",{attrs:{sm:"9"}},[e("b-form-input",{attrs:{id:`share-field-${a}`,placeholder:a,value:o}})],1)],1)})),e("hr"),e("b-row",{staticClass:"my-1"},[e("b-col",{attrs:{sm:"3"}},[e("label",{attrs:{for:"roomId"}},[e("code",[t._v("roomId")]),t._v(":")])]),e("b-col",{attrs:{sm:"9"}},[e("b-form-input",{attrs:{id:"roomId",placeHolder:"roomId"},on:{input:t.changeRoomId},model:{value:t.roomId,callback:function(e){t.roomId=e},expression:"roomId"}})],1)],1),e("hr"),e("hr"),void 0!=t.dataTemp?e("div",[t._v(" Room with id "+t._s(t.roomId)+" exist -> "),e("b-button",{attrs:{size:"sm",variant:"info"},on:{click:t.append}},[t._v("Append to room")]),t._v(" or change roomId above. ")],1):e("div",[t._v(" Room with id "+t._s(t.roomId)+" does not exist -> "),e("b-button",{attrs:{size:"sm",variant:"info"},on:{click:t.create}},[t._v("Create a new Room ")]),t._v(" or change roomId to append to an existing room. ")],1)],2),void 0!=t.dataTemp?e("div",[e("hr"),e("hr"),t._v(" Found in room "),e("b",[t._v(t._s(t.roomId))]),t._v(" :"),e("br"),t._v(t._s(t.dataTemp.blocks)+" ")]):t._e()],1)},r=[],s={name:"ShareView",data(){return{query:null,fields:[],dataTemp:void 0,roomId:null}},created(){console.log(this.$route.query),this.query=this.$route.query,void 0==this.query["more comment"]&&(this.query["more comment"]=""),this.roomId=this.$route.query.title,this.getDataTemp()},methods:{async getDataTemp(){this.dataTemp=await this.$getEditorMap(this.roomId),console.log("{dataTemp}",this.dataTemp)},async append(){let t=[{type:"header",data:{text:this.query.title,level:2}},{type:"paragraph",data:{text:this.query.text}},{type:"paragraph",data:{text:"<a href='"+this.query.url+"'>"+this.query.url+"</a>"}},{type:"paragraph",data:{text:this.query["more_comment"]}}],e=this.dataTemp.blocks.concat(t);this.dataTemp.blocks=e;let o=this.dataTemp;console.log("append",this.query,o,this.roomId),this.user.roomId=this.roomId,await this.$store.commit("actor/setUser",this.user),await this.$connect("share view append"),this.$store.commit("editor/setEditorData",o)},async create(){let t={blocks:[{type:"header",data:{text:this.query.title,level:2}},{type:"paragraph",data:{text:this.query.text}},{type:"paragraph",data:{text:"<a href='"+this.query.url+"'>"+this.query.url+"</a>"}},{type:"paragraph",data:{text:this.query["more_comment"]}}]};console.log("create",this.query,t,this.roomId),this.user.roomId=this.roomId,await this.$store.commit("actor/setUser",this.user),await this.$connect("share view create"),this.$store.commit("editor/setEditorData",t)},changeRoomId(){this.getDataTemp()}},watch:{user(){this.getDataTemp()}},computed:{user(){return this.$store.state.actor.user}}},i=s,d=o(1001),h=(0,d.Z)(i,a,r,!1,null,null,null),m=h.exports}}]);
//# sourceMappingURL=share.081c65c2.js.map