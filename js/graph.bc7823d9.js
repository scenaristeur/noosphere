"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[786],{5098:function(s,e,t){t.r(e),t.d(e,{default:function(){return d}});var r=function(){var s=this,e=s._self._c;return e("div",[e("div",{ref:"graph",attrs:{id:"graph",width:"100px"}},[s._v("Loading graph...")]),e("div",[s._v(" "+s._s(s.users)+" "),e("hr"),s._v(" "+s._s(s.uploads)+" "),e("hr")])])},o=[],i={name:"GraphView",mounted(){this.$graphInit({domElement:this.$refs.graph})},methods:{update(){if(void 0!=this.graph){let s=this.nodes.map((s=>({...s}))),e=this.links.map((s=>({...s})));this.graph.graphData({nodes:s,links:e}),console.log(this.graph.graphData())}},updateUsers(){for(const[t,r]of Object.entries(this.users)){console.log("[user]",t,r),r.id=r.clientID,r.group="user";var s=this.nodes.findIndex((s=>s.id==r.id));-1===s?this.nodes.push(r):Object.assign(this.nodes[s],r),console.log(this.nodes);for(const[s,t]of Object.entries(r.rooms)){t.id=s,t.name=s;var e=this.nodes.findIndex((s=>s.id==t.id));-1===e?this.nodes.push(t):Object.assign(this.nodes[e],t),console.log(this.nodes);let o={source:r.id,target:t.id};t.id==r.roomId?(o.group="current",o.label="current",o.color="red"):o.label="room"}}}},watch:{nodes(){this.update()},links(){this.update()},graph(){this.update()},users(){this.updateUsers()},usersUpdateDate(){console.log(this.usersUpdateDate),this.updateUsers(),this.$forceUpdate()}},computed:{nodes(){return this.$store.state.network.nodes},links(){return this.$store.state.network.links},graph(){return this.$store.state.network.graph},users:{cache:!1,get(){return this.$store.state.core.users}},usersUpdateDate(){return this.$store.state.core.usersUpdateDate},uploads(){return this.$store.state.core.uploads}}},n=i,a=t(1001),h=(0,a.Z)(n,r,o,!1,null,"9ccb66bc",null),d=h.exports}}]);
//# sourceMappingURL=graph.bc7823d9.js.map