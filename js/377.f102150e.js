"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[377],{4377:function(e,o,t){t.r(o),t.d(o,{default:function(){return c}});var r=function(){var e=this,o=e._self._c;return o("div",{staticClass:"room-card",attrs:{id:"room-card"}},[null!=e.user?o("b-card",{staticClass:"mb-2",staticStyle:{"max-width":"20rem"},attrs:{title:"Open a room",tag:"article"}},[o("b-card-text",[o("b-input-group",{staticClass:"mt-3"},[o("b-input",{attrs:{placeholder:"roomId | random | QR"},on:{keyup:function(o){return!o.type.indexOf("key")&&e._k(o.keyCode,"enter",13,o.key,"Enter")?null:e.openRoom.apply(null,arguments)}},model:{value:e.user.roomId,callback:function(o){e.$set(e.user,"roomId",o)},expression:"user.roomId"}}),o("b-input-group-append",[o("b-button",{staticClass:"text-warning",attrs:{variant:"outline-warning",size:"sm"},on:{click:function(o){e.user.roomId=""}}},[e._v("X")])],1)],1),o("b-form-checkbox",{attrs:{disabled:"",id:"checkbox-isPublic",name:"checkbox-isPublic"},model:{value:e.isPublic,callback:function(o){e.isPublic=o},expression:"isPublic"}},[e._v(" is a public room ")]),0!=e.user.roomId.length?o("b-button",{attrs:{size:"sm",variant:"info"},on:{click:e.openRoom}},[e._v("Go")]):e._e(),0==e.user.roomId.length?o("span",[o("b-button",{attrs:{size:"sm",variant:"outline-info"},on:{click:e.generateId}},[e._v("Randomize roomId")]),e._v(" or "),o("b-button",{attrs:{size:"sm",variant:"outline-info"},on:{click:e.nowId}},[e._v("Now roomId")]),e._v(" or ")],1):e._e(),o("QrView",{on:{roomIdChanged:e.onRoomIdChanged}})],1)],1):e._e()],1)},s=[],n=t(3029),i={name:"RoomCard",components:{QrView:()=>Promise.all([t.e(558),t.e(135)]).then(t.bind(t,6135))},data(){return{isPublic:!0,users:{},fields:[{key:"name",sortable:!0},{key:"roomId",label:"room",sortable:!0}],yarray:null,newVal:3,ymap:null,newStuff:"c4",nodes:[],newName:"",url:null,scanner:null}},methods:{randomUser(){this.$randomUser()},generateId(){this.user.roomId=(0,n.Z)(),this.$store.commit("core/setUser",this.user),this.openRoom()},nowId(){this.user.roomId=Date.now(),this.$store.commit("core/setUser",this.user),this.openRoom()},async openRoom(){this.$store.commit("core/setUser",this.user),this.$openRoom()},onRoomIdChanged(e){console.log("[roomId changed]",e),this.user.roomId=e,this.$store.commit("core/setUser",this.user),this.openRoom(),this.$forceUpdate()}},computed:{user(){return this.$store.state.core.user}}},a=i,l=t(1001),u=(0,l.Z)(a,r,s,!1,null,"c3dfceb6",null),c=u.exports}}]);
//# sourceMappingURL=377.f102150e.js.map