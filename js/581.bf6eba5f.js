"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[581],{9581:function(o,e,t){t.r(e),t.d(e,{default:function(){return c}});var r=function(){var o=this,e=o._self._c;return e("div",{staticClass:"room-card",attrs:{id:"room-card"}},[null!=o.user?e("b-card",{staticClass:"mb-2",staticStyle:{"max-width":"20rem"},attrs:{title:"Open a room",tag:"article"}},[e("b-card-text",[e("b-input",{attrs:{placeholder:"roomId | random | QR"},on:{keyup:function(e){return!e.type.indexOf("key")&&o._k(e.keyCode,"enter",13,e.key,"Enter")?null:o.openRoom.apply(null,arguments)}},model:{value:o.user.roomId,callback:function(e){o.$set(o.user,"roomId",e)},expression:"user.roomId"}}),e("b-form-checkbox",{attrs:{disabled:"",id:"checkbox-isPublic",name:"checkbox-isPublic"},model:{value:o.isPublic,callback:function(e){o.isPublic=e},expression:"isPublic"}},[o._v(" is a public room ")]),0!=o.user.roomId.length?e("b-button",{attrs:{size:"sm",variant:"info"},on:{click:o.openRoom}},[o._v("Go")]):o._e(),0==o.user.roomId.length?e("span",[e("b-button",{attrs:{size:"sm",variant:"outline-info"},on:{click:o.generateId}},[o._v("Randomize roomId")]),o._v(" or "),e("b-button",{attrs:{size:"sm",variant:"outline-info"},on:{click:o.nowId}},[o._v("Now roomId")]),o._v(" or ")],1):e("b-button",{attrs:{size:"sm",variant:"outline-info"},on:{click:function(e){o.user.roomId=""}}},[o._v("Reset roomId")]),e("QrView",{attrs:{roomId:o.user.roomId},on:{roomIdChanged:o.onRoomIdChanged}})],1)],1):o._e()],1)},s=[],n=t(3029),i={name:"RoomCard",components:{QrView:()=>t.e(997).then(t.bind(t,9997))},data(){return{isPublic:!0,users:{},fields:[{key:"name",sortable:!0},{key:"roomId",label:"room",sortable:!0}],yarray:null,newVal:3,ymap:null,newStuff:"c4",nodes:[],newName:"",url:null,scanner:null}},methods:{randomUser(){this.$randomUser()},generateId(){this.user.roomId=(0,n.Z)(),this.$store.commit("core/setUser",this.user),this.openRoom()},nowId(){this.user.roomId=Date.now(),this.$store.commit("core/setUser",this.user),this.openRoom()},async openRoom(){this.$store.commit("core/setUser",this.user),this.$openRoom()},onRoomIdChanged(o){console.log("[roomId changed]",o),this.user.roomId=o,this.$store.commit("core/setUser",this.user),this.openRoom(),this.$forceUpdate()}},computed:{user(){return this.$store.state.core.user}}},a=i,u=t(1001),l=(0,u.Z)(a,r,s,!1,null,"0c93e4f0",null),c=l.exports}}]);
//# sourceMappingURL=581.bf6eba5f.js.map