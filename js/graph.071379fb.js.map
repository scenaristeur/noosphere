{"version":3,"file":"js/graph.071379fb.js","mappings":"+JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,IAAI,QAAQC,MAAM,CAAC,GAAK,UAAU,CAACL,EAAIM,GAAG,qBACvH,EACIC,EAAkB,GCKtB,G,SAAA,CACAC,KAAAA,YACAC,OACA,OACAC,MAAAA,GACAC,MAAAA,GAEA,EACAC,UACA,iBAAAC,WAAAA,KAAAA,MAAAA,QACA,kBAEA,EACAC,QAAAA,CACAC,SACA,uBACA,oCACA,gCACA,sBAAAL,MAAAA,EAAAC,MAAAA,IACAK,QAAAA,IAAAA,KAAAA,MAAAA,YACA,CACA,EACAC,cAEA,6CACAD,QAAAA,IAAAA,SAAAA,EAAAA,GAEAE,EAAAA,GAAAA,EAAAA,SACAA,EAAAA,MAAAA,OACA,6CACAC,IAAAA,EAAAA,KAAAA,MAAAA,KAAAA,GAAAA,OAAAA,OAAAA,KAAAA,MAAAA,GAAAA,GAGAH,QAAAA,IAAAA,EAAAA,OACA,0CACAI,EAAAA,GAAAA,EACAA,EAAAA,KAAAA,EACAA,EAAAA,MAAAA,OACA,6CACAC,IAAAA,EAAAA,KAAAA,MAAAA,KAAAA,GAAAA,OAAAA,OAAAA,KAAAA,MAAAA,GAAAA,GAEA,OAAAC,OAAAA,EAAAA,GAAAC,OAAAA,EAAAA,GAAAC,MAAAA,UAAAC,MAAAA,UAAAC,MAAAA,QACA,iBACAC,EAAAA,MAAAA,UACAA,EAAAA,MAAAA,UACAA,EAAAA,MAAAA,MACAX,QAAAA,IAAAA,QAAAA,IASA,yEACAY,IAAAA,EAAAA,KAAAA,MAAAA,KAAAA,GAAAA,OAAAA,OAAAA,KAAAA,MAAAA,GAAAA,EAGA,CAEA,CACA,aACA,GAEAC,MAAAA,CACAnB,QACA,aACA,EACAC,QACA,aACA,EACAmB,QACA,aACA,EACAC,QACA,kBAEA,EACAC,eACAhB,QAAAA,IAAAA,KAAAA,cACA,mBACA,mBACA,EACAiB,cAGA,OAFAjB,QAAAA,IAAAA,KAAAA,aAEA,wBACA,WAKA,gBAAAkB,GAAAA,KAAAA,YAAAA,KACA,MACA,WAEA,MACA,QACAlB,QAAAA,IAAAA,2BAGA,GAEAmB,SAAAA,CAOAL,QACA,sCACA,EACAC,MAAAA,CACAK,OAAAA,EACAC,MACA,oCACA,GAEAL,eACA,2CACA,EACAM,UACA,qCACA,EACAL,cACA,4CACA,KCvIyP,I,UCQrPM,GAAY,OACd,EACAxC,EACAQ,GACA,EACA,KACA,WACA,MAIF,EAAegC,EAAiB,O","sources":["webpack://noosphere/./src/views/GraphView.vue","webpack://noosphere/src/views/GraphView.vue","webpack://noosphere/./src/views/GraphView.vue?2e07","webpack://noosphere/./src/views/GraphView.vue?bd9c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"graph\",attrs:{\"id\":\"graph\"}},[_vm._v(\"Loading graph...\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n  <div id=\"graph\"  ref=\"graph\">Loading graph...</div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'GraphView',\r\n  data(){\r\n    return{\r\n      nodes: [],\r\n      links: []\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$graphInit({domElement: this.$refs.graph})\r\n    this.updateUsers()\r\n    // this.users = this.$store.state.actor.users\r\n  },\r\n  methods:{\r\n    update(){\r\n      if (this.graph != undefined){\r\n        let nodes = this.nodes.map(a => {return {...a}})\r\n        let links = this.links.map(a => {return {...a}})\r\n        this.graph.graphData({nodes: nodes, links: links})\r\n        console.log(this.graph.graphData())\r\n      }\r\n    },\r\n    updateUsers(){\r\n      //  this.links = []\r\n      for (const [clientID, user] of Object.entries(this.users)) {\r\n        console.log('[user]',clientID,user);\r\n        // user\r\n        user.id = user.clientID\r\n        user.group = \"user\"\r\n        var indexU = this.nodes.findIndex(x => x.id==user.id);\r\n        indexU === -1 ? this.nodes.push(user) : Object.assign(this.nodes[indexU], user)\r\n        //  console.log(this.nodes)\r\n        // rooms\r\n        console.log(user.rooms)\r\n        for (const [id, room] of Object.entries(user.rooms)) {\r\n          room.id = id\r\n          room.name = id\r\n          room.group = \"room\"\r\n          var indexR = this.nodes.findIndex(x => x.id==room.id);\r\n          indexR === -1 ? this.nodes.push(room) : Object.assign(this.nodes[indexR], room)\r\n          // console.log(this.nodes)\r\n          let link = {source: user.id, target: room.id, group: \"visited\", label: \"visited\", color: 'blue'}\r\n          if (room.id == user.roomID){\r\n            link.group = \"current\"\r\n            link.label = \"current\"\r\n            link.color = \"red\"\r\n            console.log('#link',link)\r\n            //  Object.assign(this.nodes[user.roomID], {color: 'red', group: 'occuped'})\r\n          }\r\n          // else{\r\n          //   link.label = \"room\"\r\n          // }\r\n          //  console.log(link)\r\n          //  console.log('links before', this.links)\r\n          // this.links = this.links.filter(l => {return l.source == link.source && l.target == link.target})\r\n          var indexL = this.links.findIndex(l => l.source == link.source && l.target == link.target);\r\n          indexL === -1 ? this.links.push(link) : Object.assign(this.links[indexL], link)\r\n          // console.log('links after', this.links)\r\n          // this.links.push(link)\r\n        }\r\n\r\n      }\r\n      this.update()\r\n    }\r\n  },\r\n  watch:{\r\n    nodes(){\r\n      this.update()\r\n    },\r\n    links(){\r\n      this.update()\r\n    },\r\n    graph(){\r\n      this.update()\r\n    },\r\n    users(){\r\n      this.updateUsers()\r\n\r\n    },\r\n    usersUpdated(){\r\n      console.log(this.usersUpdated)\r\n      this.updateUsers()\r\n      this.$forceUpdate()\r\n    },\r\n    currentNode(){\r\n      console.log(this.currentNode)\r\n      // let user = this.$store.state.actor.user\r\n      switch (this.currentNode.group) {\r\n        case \"room\":\r\n\r\n        // user.roomID = this.currentNode.id\r\n        // this.$store.commit('actor/setUser', user)\r\n        // this.$connect('graphview')\r\n        this.$openRoom({id: this.currentNode.id})\r\n        break;\r\n        case \"user\":\r\n\r\n        break;\r\n        default:\r\n        console.log(\"i don't know what to do\")\r\n\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    // nodes() {\r\n    //   return this.$store.state.network.nodes\r\n    // },\r\n    // links() {\r\n    //   return this.$store.state.network.links\r\n    // },\r\n    graph() {\r\n      return this.$store.state.network.graph\r\n    },\r\n    users: {\r\n      cache: false,\r\n      get() {\r\n        return this.$store.state.actor.users;\r\n      },\r\n    },\r\n    usersUpdated() {\r\n      return this.$store.state.actor.usersUpdated\r\n    },\r\n    uploads() {\r\n      return this.$store.state.web3.uploads\r\n    },\r\n    currentNode(){\r\n      return this.$store.state.network.currentNode\r\n    }\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.graph-view {\r\n\r\n}\r\n.node-label {\r\n  font-size: 12px;\r\n  padding: 1px 4px;\r\n  border-radius: 4px;\r\n  background-color: rgba(0,0,0,0.5);\r\n  user-select: none;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GraphView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GraphView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GraphView.vue?vue&type=template&id=341b3c35&scoped=true&\"\nimport script from \"./GraphView.vue?vue&type=script&lang=js&\"\nexport * from \"./GraphView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GraphView.vue?vue&type=style&index=0&id=341b3c35&prod&lang=css&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"341b3c35\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","attrs","_v","staticRenderFns","name","data","nodes","links","mounted","domElement","methods","update","console","updateUsers","user","indexU","room","indexR","source","target","group","label","color","link","indexL","watch","graph","users","usersUpdated","currentNode","id","computed","cache","get","uploads","component"],"sourceRoot":""}