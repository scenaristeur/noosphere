{"version":3,"file":"js/135.3548c2cb.js","mappings":"8JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,WAAW,CAACG,MAAM,CAAC,KAAO,KAAK,QAAU,gBAAgBC,GAAG,CAAC,MAAQN,EAAIO,oBAAoB,CAACP,EAAIQ,GAAG,aAAaN,EAAG,MAAM,CAACO,IAAI,SAASJ,MAAM,CAAC,GAAK,SAAS,MAAQ,YAAY,EACzR,EACGK,EAAkB,G,UCctB,GACAC,KAAAA,SAEAC,OACA,QAGA,EACAC,QAAAA,CAEAN,oBACA,iCACA,sBACA,SACA,CAAAO,IAAAA,GAAAC,MAAAA,CAAAC,MAAAA,IAAAC,OAAAA,OACA,GACA,6DAGAC,QAAAA,IAAAA,KAAAA,SACA,kBAGA,+BACA,2BAEA,EACAC,cAAAA,EAAAA,GAEAD,QAAAA,IAAAA,kBAAAA,IAAAA,GACA,mBACA,uDACA,iCAEAA,QAAAA,IAAAA,+BAAAA,EAEA,EAEAE,cAAAA,GAGAF,QAAAA,KAAAA,qBAAAA,IAEA,EACAG,SACAH,QAAAA,IAAAA,OAAAA,KAAAA,MACA,IC9DsP,I,UCQlPI,GAAY,OACd,EACAvB,EACAW,GACA,EACA,KACA,WACA,MAIF,EAAeY,EAAiB,O","sources":["webpack://noosphere/./src/views/QrView.vue","webpack://noosphere/src/views/QrView.vue","webpack://noosphere/./src/views/QrView.vue?eae8","webpack://noosphere/./src/views/QrView.vue?3fc4"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"qr-view\"},[_c('b-button',{attrs:{\"size\":\"sm\",\"variant\":\"outline-info\"},on:{\"click\":_vm.toggle_qr_scanner}},[_vm._v(\"Qr scan\")]),_c('div',{ref:\"reader\",attrs:{\"id\":\"reader\",\"width\":\"600px\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"qr-view\">\n    <!-- <span v-if=\"roomId.length !=0\">\n      <b-button size=\"sm\" variant=\"outline-info\" @click=\"generateQR\">Qr Share</b-button> or\n    </span> -->\n    <b-button size=\"sm\" variant=\"outline-info\" @click=\"toggle_qr_scanner\">Qr scan</b-button>\n\n\n    <div id=\"reader\" ref=\"reader\" width=\"600px\"></div>\n  </div>\n</template>\n\n<script>\n\nimport {Html5QrcodeScanner} from \"html5-qrcode\"\n\nexport default {\n  name: 'QrView',\n  // props:['roomId'],\n  data(){\n    return{\n\n    }\n  },\n  methods:{\n\n    toggle_qr_scanner(){\n      if(this.$refs.reader.innerHTML == \"\"){\n        this.scanner = new Html5QrcodeScanner(\n          \"reader\",\n          { fps: 10, qrbox: {width: 250, height: 250} },\n          /* verbose= */ false);\n          this.scanner.render(this.onScanSuccess, this.onScanFailure);\n        }\n        else{\n          console.log(this.scanner)\n          this.scanner = null\n          // this.scanner.stop().then(() => {\n          //   // QR Code scanning is stopped.\n          this.$refs.reader.innerHTML = \"\"\n          this.$refs.reader.style = \"\"\n        }\n      },\n      onScanSuccess(decodedText, decodedResult) {\n        // handle the scanned code as you like, for example:\n        console.log(`Code matched = ${decodedText}`, decodedResult);\n        let eq_splitted = decodedText.split('=')\n        if(eq_splitted[0] == 'https://scenaristeur.github.io/noosphere/?room'){\n          this.$emit('roomIdChanged', eq_splitted[1])\n        }else{\n          console.log(\"i don't know what to do with\", eq_splitted)\n        }\n      },\n\n      onScanFailure(error) {\n        // handle scan failure, usually better to ignore and keep scanning.\n        // for example:\n        console.warn(`Code scan error = ${error}`);\n        //this.scanner = error\n      },\n      saveQR(){\n        console.log('todo', this.QRsrc)\n      },\n    }\n\n\n  }\n  </script>\n\n  <style lang=\"css\" scoped>\n  .qr-view {\n\n  }\n  </style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QrView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./QrView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QrView.vue?vue&type=template&id=c904cf98&scoped=true&\"\nimport script from \"./QrView.vue?vue&type=script&lang=js&\"\nexport * from \"./QrView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./QrView.vue?vue&type=style&index=0&id=c904cf98&prod&lang=css&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c904cf98\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","toggle_qr_scanner","_v","ref","staticRenderFns","name","data","methods","fps","qrbox","width","height","console","onScanSuccess","onScanFailure","saveQR","component"],"sourceRoot":""}