"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[765],{5765:function(o,e,n){n.r(e),n.d(e,{default:function(){return l}});var s=function(){var o=this,e=o._self._c;return e("b-modal",{attrs:{id:"modal-qrscan",title:"QR scan","ok-only":""},on:{shown:o.onShown,hidden:o.onHidden}},[e("div",{ref:"reader",staticClass:"my-4",attrs:{id:"reader",width:"600px"}})])},t=[],r=n(8558),i={name:"QrModal",methods:{onShown(){console.log("onshown"),this.scanner=new r.wF("reader",{fps:10,qrbox:{width:250,height:250}},!1),this.scanner.render(this.onScanSuccess,this.onScanFailure)},onScanSuccess(o,e){console.log(`Code matched = ${o}`,e);let n=o.split("=");"https://scenaristeur.github.io/noosphere/?room"==n[0]?this.openRoom(n[1]):console.log("i don't know what to do with",n)},onScanFailure(o){console.warn(`Code scan error = ${o}`)},openRoom(o){console.log(o,this.scanner);let e=this.user;e.roomId=o,this.$store.commit("core/setUser",e),this.$nextTick((()=>{this.$bvModal.hide("modal-qrscan")})),this.$openRoom()},onHidden(){console.log("onHidden",this.scanner.html5Qrcode),this.scanner.html5Qrcode.isScanning&&this.scanner.html5Qrcode.stop(),this.scanner=null},saveQR(){console.log("todo",this.QRsrc)}},computed:{user(){return this.$store.state.core.user}}},c=i,h=n(1001),a=(0,h.Z)(c,s,t,!1,null,null,null),l=a.exports}}]);
//# sourceMappingURL=765.d7761546.js.map