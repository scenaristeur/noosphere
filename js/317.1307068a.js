"use strict";(self["webpackChunknoosphere"]=self["webpackChunknoosphere"]||[]).push([[317],{9317:function(e,t,s){s.r(t),s.d(t,{default:function(){return c}});var r=function(){var e=this,t=e._self._c;return t("b-container",{staticClass:"users-view",attrs:{fluid:""}},[null!=e.user?t("b-table",{staticClass:"table",attrs:{small:"",hover:"",selectable:"","sticky-header":"","max-height":"800px","select-mode":"single",responsive:"sm","table-variant":"info",items:Object.values(e.users),fields:e.fields,"caption-top":""},on:{"row-selected":e.onRowSelected},scopedSlots:e._u([{key:"cell(name)",fn:function(s){return[s.item.clientID==e.user.clientID?[t("b-button",{attrs:{size:"sm",variant:"outline-primary"},on:{click:e.openProfile}},[t("span",{style:"color:"+s.item.color},[t("b",[e._v(e._s(s.item.name))])])])]:[t("small",{style:"color:"+s.item.color},[t("i",[t("b",[e._v(e._s(s.item.name))])])])]]}},{key:"cell(rooms)",fn:function(s){return[t("b-button",{attrs:{size:"sm"},on:{click:function(t){return e.openUserModal(s.item)}}},[e._v(e._s(Object.keys(s.item.rooms).length))])]}},{key:"table-caption",fn:function(){return[e._v(e._s(Object.values(e.users).length)+" users")]},proxy:!0}],null,!1,379100722)}):e._e(),t("b-modal",{attrs:{id:"modal-currentUser","ok-only":"",size:"lg"},scopedSlots:e._u([{key:"modal-title",fn:function(){return[e._v(" User "),t("b",[e._v(e._s(e.currentUser.name))])]},proxy:!0}])},[void 0!=e.currentUser.rooms?t("ul",e._l(Object.values(e.currentUser.rooms),(function(s){return t("li",{key:s.roomId},[t("b-button",{attrs:{size:"sm"},on:{click:function(t){return e.changeRoom(s.roomId)}}},[e._v(e._s(s.roomId))])],1)})),0):e._e()])],1)},o=[],n={name:"UsersView",data(){return{fields:[{key:"name",sortable:!0},{key:"roomId",label:"room",sortable:!0},{key:"rooms",label:"rooms",sortable:!0}],currentUser:{}}},methods:{onRowSelected(e){void 0!=e[0]&&(this.user.roomId=e[0].roomId,this.$connect("user view row selected"),this.$emit("hide"))},userChanged(){this.$store.commit("actor/setUser",this.user),this.$userChanged()},async randomUser(){this.currentUser=await this.$randomUser(),this.$store.commit("actor/setUser",this.currentUser)},openUserModal(e){this.currentUser=e,this.$bvModal.show("modal-currentUser")},changeRoom(e){this.user.roomId=e,this.$connect("user view change room"),this.$emit("hide"),this.$bvModal.hide("modal-currentUser")},openProfile(){this.$router.push("/profile")}},watch:{usersUpdated(){this.$forceUpdate()}},computed:{users:{cache:!1,get(){return this.$store.state.actor.users}},user(){return this.$store.state.actor.user},usersUpdated(){return this.$store.state.actor.usersUpdated}}},i=n,a=s(1001),l=(0,a.Z)(i,r,o,!1,null,"210fc7d4",null),c=l.exports}}]);
//# sourceMappingURL=317.1307068a.js.map